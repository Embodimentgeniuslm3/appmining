<android.hardware.Camera: android.hardware.Camera open()>
<android.hardware.Camera: android.hardware.Camera open(int)>
<android.hardware.Camera: void native_setup(java.lang.Object)>
<android.hardware.camera2.CameraManager: void openCamera(java.lang.String,android.hardware.camera2.CameraDevice$StateCallback,android.os.Handler)>
<com.android.camera.ActivityBase$MyAppBridge: void onPreviewTextureCopied()>
<com.android.camera.ActivityBase: void doOnResume()>
<com.android.camera.ActivityBase: void onBackPressed()>
<com.android.camera.ActivityBase: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.camera.ActivityBase: void onCreate(android.os.Bundle)>
<com.android.camera.ActivityBase: void onPause()>
<com.android.camera.ActivityBase: void onPreviewTextureCopied()>
<com.android.camera.ActivityBase: void onResume()>
<com.android.camera.ActivityBase: void onWindowFocusChanged(boolean)>
<com.android.camera.Camera: void onBackPressed()>
<com.android.camera.Camera: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.camera.Camera: void onCreate(android.os.Bundle)>
<com.android.camera.Camera: void onPause()>
<com.android.camera.Camera: void onResume()>
<com.android.camera.Camera: void onWindowFocusChanged(boolean)>
<com.android.camera.CameraModule: boolean onKeyDown(int,android.view.KeyEvent)>
<com.android.camera.CameraPreference$OnPreferenceChangedListener: void onSharedPreferenceChanged()>
<com.android.camera.CameraScreenNail$Listener: void onPreviewTextureCopied()>
<com.android.camera.CameraScreenNail: void directDraw(com.android.gallery3d.ui.GLCanvas,int,int,int,int)>
<com.android.camera.CameraScreenNail: void draw(com.android.gallery3d.ui.GLCanvas,int,int,int,int)>
<com.android.camera.CaptureAnimManager: boolean drawAnimation(com.android.gallery3d.ui.GLCanvas,com.android.camera.CameraScreenNail,com.android.gallery3d.ui.RawTexture)>
<com.android.camera.EffectsRecorder$4: void onRunnerDone(int)>
<com.android.camera.EffectsRecorder$5: void run()>
<com.android.camera.EffectsRecorder$EffectsListener: void onEffectsUpdate(int,int)>
<com.android.camera.EffectsRecorder: void setPreviewDisplay(android.view.SurfaceHolder,int,int)>
<com.android.camera.EffectsRecorder: void setPreviewSurfaceTexture(android.graphics.SurfaceTexture,int,int)>
<com.android.camera.EffectsRecorder: void startPreview()>
<com.android.camera.EffectsRecorder: void startRecording()>
<com.android.camera.PanoramaActivity: void onBackPressed()>
<com.android.camera.PanoramaActivity: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.camera.PanoramaActivity: void onCreate(android.os.Bundle)>
<com.android.camera.PanoramaActivity: void onPause()>
<com.android.camera.PanoramaActivity: void onPreviewTextureCopied()>
<com.android.camera.PanoramaActivity: void onResume()>
<com.android.camera.ShutterButton$OnShutterButtonListener: void onShutterButtonClick()>
<com.android.camera.ShutterButton$OnShutterButtonListener: void onShutterButtonClick(com.android.camera.ShutterButton)>
<com.android.camera.ShutterButton: boolean performClick()>
<com.android.camera.SwitchAnimManager: boolean drawAnimation(com.android.gallery3d.ui.GLCanvas,int,int,int,int,com.android.camera.CameraScreenNail,com.android.gallery3d.ui.RawTexture)>
<com.android.camera.VideoCamera$1: void run()>
<com.android.camera.VideoCamera$3: void run()>
<com.android.camera.VideoCamera$5: boolean onMenuItemClick(android.view.MenuItem)>
<com.android.camera.VideoCamera$6: void run()>
<com.android.camera.VideoCamera$MyBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.camera.VideoCamera: boolean onKeyDown(int,android.view.KeyEvent)>
<com.android.camera.VideoCamera: boolean stopVideoRecording()>
<com.android.camera.VideoCamera: boolean updateEffectSelection()>
<com.android.camera.VideoCamera: void checkQualityAndStartPreview()>
<com.android.camera.VideoCamera: void doOnResume()>
<com.android.camera.VideoCamera: void finishRecorderAndCloseCamera()>
<com.android.camera.VideoCamera: void initializeEffectsPreview()>
<com.android.camera.VideoCamera: void initializeRecorder()>
<com.android.camera.VideoCamera: void initializeVideoSnapshot()>
<com.android.camera.VideoCamera: void keepScreenOnAwhile()>
<com.android.camera.VideoCamera: void onBackPressed()>
<com.android.camera.VideoCamera: void onCancelBgTraining(android.view.View)>
<com.android.camera.VideoCamera: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.camera.VideoCamera: void onCreate(android.os.Bundle)>
<com.android.camera.VideoCamera: void onEffectsUpdate(int,int)>
<com.android.camera.VideoCamera: void onError(android.media.MediaRecorder,int,int)>
<com.android.camera.VideoCamera: void onInfo(android.media.MediaRecorder,int,int)>
<com.android.camera.VideoCamera: void onPause()>
<com.android.camera.VideoCamera: void onPreviewTextureCopied()>
<com.android.camera.VideoCamera: void onResume()>
<com.android.camera.VideoCamera: void onReviewCancelClicked(android.view.View)>
<com.android.camera.VideoCamera: void onSharedPreferenceChanged()>
<com.android.camera.VideoCamera: void onShutterButtonClick()>
<com.android.camera.VideoCamera: void onShutterButtonClick(com.android.camera.ShutterButton)>
<com.android.camera.VideoCamera: void onStopVideoRecording()>
<com.android.camera.VideoCamera: void onStopVideoRecording(boolean)>
<com.android.camera.VideoCamera: void onUserInteraction()>
<com.android.camera.VideoCamera: void onWindowFocusChanged(boolean)>
<com.android.camera.VideoCamera: void restorePreferences()>
<com.android.camera.VideoCamera: void setPreviewDisplay(android.view.SurfaceHolder)>
<com.android.camera.VideoCamera: void setPreviewTexture()>
<com.android.camera.VideoCamera: void startPreview()>
<com.android.camera.VideoCamera: void startVideoRecording()>
<com.android.camera.VideoCamera: void stopVideoRecording()>
<com.android.camera.VideoCamera: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>
<com.android.camera.VideoCamera: void switchCamera()>
<com.android.camera.VideoCamera: void updateRecordingTime()>
<com.android.camera.VideoModule: boolean onKeyDown(int,android.view.KeyEvent)>
<com.android.camera.VideoModule: void initializeRecorder()>
<com.android.camera.VideoModule: void onShutterButtonClick()>
<com.android.camera.VideoModule: void startVideoRecording()>
<com.android.camera.VideoUI: void clickShutter()>
<com.android.camera.panorama.PanoramaActivity: void onPause()>
<com.android.camera.panorama.PanoramaActivity: void onResume()>
<com.android.camera.panorama.PanoramaActivity: void onWindowFocusChanged(boolean)>
<com.android.camera.ui.BasicSettingPopup$Listener: void onSettingChanged()>
<com.android.camera.ui.BasicSettingPopup: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<com.android.camera.ui.CameraPicker: void onClick(android.view.View)>
<com.android.camera.ui.EffectSettingPopup$Listener: void onSettingChanged()>
<com.android.camera.ui.EffectSettingPopup: void onClick(android.view.View)>
<com.android.camera.ui.EffectSettingPopup: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<com.android.camera.ui.InLineSettingItem$Listener: void onSettingChanged()>
<com.android.camera.ui.InLineSettingItem: boolean changeIndex(int)>
<com.android.camera.ui.InLineSettingKnob$1: void run()>
<com.android.camera.ui.InLineSettingKnob$2: boolean onTouch(android.view.View,android.view.MotionEvent)>
<com.android.camera.ui.InLineSettingKnob$3: boolean onTouch(android.view.View,android.view.MotionEvent)>
<com.android.camera.ui.InLineSettingKnob: boolean changeIndex(int)>
<com.android.camera.ui.InLineSettingRestore: boolean changeIndex(int)>
<com.android.camera.ui.InLineSettingSwitch$1: void onCheckedChanged(android.widget.CompoundButton,boolean)>
<com.android.camera.ui.InLineSettingSwitch: boolean changeIndex(int)>
<com.android.camera.ui.IndicatorButton$Listener: void onSettingChanged()>
<com.android.camera.ui.IndicatorButton: void onSettingChanged()>
<com.android.camera.ui.IndicatorControl: void onSettingChanged()>
<com.android.camera.ui.IndicatorControlBar: void onSettingChanged()>
<com.android.camera.ui.IndicatorControlBarContainer: void onSettingChanged()>
<com.android.camera.ui.IndicatorControlContainer: void onSettingChanged()>
<com.android.camera.ui.IndicatorControlWheel: void onSettingChanged()>
<com.android.camera.ui.IndicatorControlWheelContainer: void onSettingChanged()>
<com.android.camera.ui.OtherSettingsPopup$Listener: void onSettingChanged()>
<com.android.camera.ui.OtherSettingsPopup: void onSettingChanged()>
<com.android.camera.ui.SecondLevelIndicatorControlBar: void onSettingChanged()>

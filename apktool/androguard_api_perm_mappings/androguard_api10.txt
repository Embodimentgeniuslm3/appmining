{
 "<com.android.settings.bluetooth.BluetoothEnabler: void resume()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.calendar.AlertReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.IWindowManager: void prepareAppTransition(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.internal.telephony.gsm.GsmConnection: void acquireWakeLock()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.LockPatternKeyguardView$1: void takeEmergencyCallAction()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.contacts.ui.ContactsPreferencesActivity: void onClick(android.view.View)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onResetDone(android.os.AsyncResult)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.BluetoothHeadset: android.bluetooth.BluetoothDevice getCurrentHeadset()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.nfc.INfcTag$Stub$Proxy: void setIsoDepTimeout(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.systemui.usb.UsbAccessoryUriActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.calendar.EventInfoActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.commands.am.Am: void runInstrument()>": [
  "android.permission.SET_ANIMATION_SCALE"
 ], 
 "<android.widget.DateTimeView: void registerReceivers()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.exchange.EasSyncService: void runPingLoop()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.SecuritySettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.certinstaller.CertFileList: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.activity.setup.AccountSettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.cooliris.media.GridDrawManager: void drawThumbnails(com.cooliris.media.RenderView,javax.microedition.khronos.opengles.GL11,int)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.phone.CallLogAsync$AddCallTask: android.net.Uri[] doInBackground(com.android.phone.CallLogAsync$AddCallArgs[])>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.accounts.GrantCredentialsPermissionActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.inputmethod.latin.LatinIME: void reallyStartListening(boolean)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.server.vpn.L2tpService: boolean checkConnectivity()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.email.activity.setup.AccountSetupIncoming: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.EditEvent: void access$700(com.android.calendar.EditEvent)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.development.ProcessInfo: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.EditEvent: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.activity.setup.AccountSetupOutgoing: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.data.WorkingMessage: void preSendSmsWorker(com.android.mms.data.Conversation,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.mms.MmsApp: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.AttachImage: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: void clearPassword(android.accounts.Account)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setNetworkSelectionModeAutomatic(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void separateConnection(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.SMSDispatcher: void sendSms(com.android.internal.telephony.SMSDispatcher$SmsTracker)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.UsageStats: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: android.net.Uri getContactUri(int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: int getWifiApEnabledState()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.policy.impl.SimUnlockScreen: void updateConfiguration()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.calendar.AgendaWindowAdapter: void access$1400(com.android.calendar.AgendaWindowAdapter,com.android.calendar.AgendaWindowAdapter$QuerySpec)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void hangup(com.android.internal.telephony.cdma.CdmaConnection)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.InCallScreen: void updateMenuItems()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.usb.UsbDeviceSettingsManager$MyPackageMonitor: void onSomePackagesChanged()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.exchange.EasOutboxService: org.apache.http.HttpResponse sendHttpClientPost(java.lang.String,org.apache.http.HttpEntity,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.browser.BrowserSettings$RlzUpdateTask: java.lang.Object doInBackground(java.lang.Object[])>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void exitEmergencyCallbackMode()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.DefaultPhoneNotifier: void notifyServiceState(com.android.internal.telephony.Phone)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.EmergencyDialer: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.bluetooth.LocalBluetoothProfileManager$A2dpProfileManager: void setPreferred(android.bluetooth.BluetoothDevice,boolean)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.nfc.INfcTag: android.nfc.TransceiveResult transceive(int,byte[],boolean)>": [
  "android.permission.NFC"
 ], 
 "<android.nfc.tech.BasicTagTechnology: void close()>": [
  "android.permission.NFC"
 ], 
 "<com.android.settings.TestingSettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.ChooseLockGeneric: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.InCallScreen: void requestUpdateTouchUi()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.bluetooth.IBluetooth: boolean setDiscoverableTimeout(int)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$SyncStateTracker$1: java.lang.Object doInBackground(java.lang.Object[])>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.deskclock.SetAlarm: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.WirelessSettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.ui.DeliveryReportActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.music.IMediaPlaybackService$Stub: void play()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.data.Contact$ContactsCache: void access$500(com.android.mms.data.Contact$ContactsCache,com.android.mms.data.Contact)>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.net.sip.ISipService$Stub$Proxy: android.net.sip.SipProfile[] getListOfProfiles()>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getGPRSRegistrationState(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.svox.pico.DownloadVoiceData: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.InCallScreen: void endInCallScreenSession(boolean)>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.email.activity.setup.AccountSetupCheckSettings: void onCreate(android.os.Bundle)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.DateTimeSettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.cooliris.media.PhotoAppWidgetConfigure: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.cooliris.picasa.PicasaContentProvider$SyncContext: boolean login(java.lang.String)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.LocationManagerService$ProximityListener: void onLocationChanged(android.location.Location)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.BluetoothHandsfree$15: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.email.activity.setup.AccountSetupNames: void onClick(android.view.View)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.nfc.TechListChooserActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.MutableContextWrapper: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.nfc.TechListChooserActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.INTERNET", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.mms.data.WorkingMessage: java.lang.String readDraftSmsMessage(com.android.mms.data.Conversation)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<android.bluetooth.IBluetooth: boolean setScanMode(int,int)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.inputmethodservice.InputMethodService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.ISms: boolean copyMessageToIccEf(int,byte[],byte[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.phone.PhoneUtils: void startNewCall(com.android.internal.telephony.CallManager)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.settings.bluetooth.BluetoothSettings: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.RI: void getBasebandVersion(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.NfcService$6: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.NFC"
 ], 
 "<android.net.IConnectivityManager: int getLastTetherError(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.term.TermPreferences: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.BackupManagerService: void setBackupProvisioned(boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.browser.TabControl: boolean removeTab(com.android.browser.Tab)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.nfc.NfcAdapter: void enableForegroundDispatch(android.app.Activity,android.app.PendingIntent,android.content.IntentFilter[],java.lang.String[][])>": [
  "android.permission.NFC"
 ], 
 "<com.android.mms.ui.SearchActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.activity.setup.AccountSetupNames: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.inputmethod.latin.LatinIMEDebugSettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.ui.ContactsPreferencesActivity$UpdateTask: java.lang.Object doInBackground(java.lang.Object[])>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.providers.downloads.Helpers: java.lang.String generateSaveFile(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,long,boolean)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean processPendingRadioPowerOffAfterDataOff()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.activity.MessageList$FindMailboxTask: java.lang.Long doInBackground(java.lang.Void[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.browser.Tab: void destroy()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.AddAccountSettings: void onSyncStateUpdated()>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.server.NotificationPlayer: void access$700(com.android.server.NotificationPlayer)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.exchange.EasOutboxService: void runAccountMailbox()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.settings.vpn.VpnTypeSelection: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.browser.BrowserBookmarksAdapter: void updateRow(android.os.Bundle)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.email.Email: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.nfc.ILlcpSocket: int close(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.phone.BluetoothHandsfree$10: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.os.storage.StorageManager: void enableUsbMassStorage()>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
 ], 
 "<com.android.deskclock.Alarms: long setAlarm(android.content.Context,com.android.deskclock.Alarm)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.calendar.WeekActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.activity.MessageView: void onClickSender()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.email.service.IEmailService: android.os.Bundle autoDiscover(java.lang.String,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.stk.RilMessageDecoder: boolean decodeMessageParams(com.android.internal.telephony.gsm.stk.RilMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.DeliveryReportActivity: java.util.List getReportItems()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.browser.BrowserActivity: void onPause()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onEnableApn(int,int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.TetherSettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.deskclock.AlarmAlertFullScreen: void snooze()>": [
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.development.AppHwConfigList: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.activity.MessageView$LoadAttachmentsTask: void onPostExecute(java.lang.Object)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.gsm.stk.RilMessageDecoder: boolean access$200(com.android.internal.telephony.gsm.stk.RilMessageDecoder,com.android.internal.telephony.gsm.stk.RilMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void explicitCallTransfer(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.LoadListener: void data(byte[],int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.nfc.NfcService$5: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.contacts.ContactsListActivity: void onRestart()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_SYNC_STATS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.settings.RingerVolumePreference: void onDialogClosed(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.AppPicker: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.ViewContactActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void startQuery()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_SYNC_STATS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.phone.EmergencyCallbackModeService: void showNotification(long)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.DataConnectionTracker: void onRoamingOn()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_APN_SETTINGS"
 ], 
 "<android.media.AudioManager: void setSpeakerphoneOn(boolean)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.internal.widget.LockPatternView: boolean onTouchEvent(android.view.MotionEvent)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.VIBRATE", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.SMSDispatcher: void sendMultipartSms(com.android.internal.telephony.SMSDispatcher$SmsTracker)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.commands.bmgr.Bmgr: void doWipe()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.activity.setup.AccountSetupBasics: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.model.GoogleSource: void createMyContactsIfNotExist(android.accounts.Account,android.content.Context)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppIncomingFileConfirmActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.INTERNET", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.net.wifi.IWifiManager: boolean reassociate()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.phone.FdnSetting: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.location.LocationManager: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_LOCATION_EXTRA_COMMANDS", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: void access$1600(com.android.internal.policy.impl.KeyguardViewMediator,boolean)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.settings.applications.InstalledAppDetails: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.development.PointerLocation: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.activity.setup.AccountSetupExchange: void doActivityResultValidateExistingAccount(int,android.content.Intent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.net.wifi.WifiManager: boolean disconnect()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.calendar.WeekActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void queryTTYMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: void access$000(com.android.mms.ui.ComposeMessageActivity)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.util.HierarchicalStateMachine$HsmHandler: void performTransitions()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void enableEnhancedVoicePrivacy(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.bluetooth.BluetoothPairingDialog: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.server.BluetoothA2dpService: boolean connectSink(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.browser.WebDialog: boolean dispatchKeyEventPreIme(android.view.KeyEvent)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.bluetooth.IBluetoothPbap: int getState()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<java.net.Socket: void <init>(int)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void setRadioPower(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.InCallTouchUi: void onTrigger(android.view.View,int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.contacts.ContactsListActivity: android.net.Uri getUriToQuery()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.am.ActivityManagerService: void killApplicationWithUid(java.lang.String,int)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<android.nfc.NfcAdapter: void disableForegroundNdefPushInternal(android.app.Activity,boolean)>": [
  "android.permission.NFC"
 ], 
 "<com.android.voicedialer.PhoneTypeChoiceRecognizerEngine: void recognize(com.android.voicedialer.RecognizerClient,android.app.Activity,java.io.File,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.phone.EmergencyCallbackModeService: void onCreate()>": [
  "android.permission.VIBRATE"
 ], 
 "<java.net.ServerSocket: void <init>(int)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.music.MediaPlaybackActivity: boolean onKeyUp(int,android.view.KeyEvent)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.deskclock.SetAlarm: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.providers.downloads.SystemFacade: boolean isNetworkRoaming()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.nfc.ILlcpConnectionlessSocket$Stub$Proxy: int sendTo(int,android.nfc.LlcpPacket)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void notifyServiceStateChangedP(android.telephony.ServiceState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void disableLocationUpdates()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.ConnectivityService: void setMobileDataEnabled(boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<android.os.INetworkManagementService$Stub: void tetherInterface(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.calendar.AlertService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.EmergencyCallbackModeExitDialog: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.os.INetworkManagementService: java.lang.String[] listInterfaces()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.BluetoothHandsfree$9: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.Settings$MyHandler: void handleGetPreferredNetworkTypeResponse(android.os.Message)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.certinstaller.CertFile: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.IContentService$Stub: boolean isSyncPending(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.providers.contacts.LegacyApiSupport: int delete(android.net.Uri,java.lang.String,java.lang.String[])>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.phone.InCallMenuView: boolean dispatchKeyEvent(android.view.KeyEvent)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.development.AppPicker: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.nfc.ILlcpConnectionlessSocket$Stub$Proxy: android.nfc.LlcpPacket receiveFrom(int)>": [
  "android.permission.NFC"
 ], 
 "<android.content.IContentService$Stub: android.content.SyncInfo getCurrentSync()>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.mms.ui.ManageSimMessages: void access$600(com.android.mms.ui.ManageSimMessages)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.phone.sip.SipSettings: void onActivityResult(int,int,android.content.Intent)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppTransfer$2: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: void processNextPostDialChar()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.LockPatternKeyguardView$1: void pokeWakelock(int)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.browser.Browser: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.RecognitionManagerService$MyPackageMonitor: void onSomePackagesChanged()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.RI: void writeSmsToRuim(int,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.activity.MessageView: void onDestroy()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: boolean haveEmailContact(java.lang.String)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.exchange.EasSyncService: int parsePingResult(java.io.InputStream,android.content.ContentResolver,java.util.HashMap)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.sip.SipService$MyExecutor: void executeInternal(java.lang.Runnable)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.transaction.TransactionService$ServiceHandler: boolean processTransaction(com.android.mms.transaction.Transaction)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SMS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.settings.AccountSyncSettingsInAddAccount: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onPollPdp()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_APN_SETTINGS"
 ], 
 "<com.android.calendar.CalendarApplication: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.tech.NfcV: void connect()>": [
  "android.permission.NFC"
 ], 
 "<android.content.ContentResolver: void setIsSyncable(android.accounts.Account,java.lang.String,int)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.calendar.EventInfoActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.BluetoothDeviceProfileState$IncomingHandsfree: boolean processMessage(android.os.Message)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.browser.BookmarkSearch: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.tech.NfcF: void reconnect()>": [
  "android.permission.NFC"
 ], 
 "<com.android.settings.AccountSyncSettings: void updateAuthDescriptions()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.music.TrackBrowserActivity: android.database.Cursor getTrackCursor(com.android.music.TrackBrowserActivity$TrackListAdapter$TrackQueryHandler,java.lang.String,boolean)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.INfcTag$Stub: void resetIsoDepTimeout()>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.am.ActivityManagerService: void killServicesLocked(com.android.server.am.ProcessRecord,boolean)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.settings.ZoneList: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.ContactsListActivity: void handleImportRequest(int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.mms.transaction.SmsReceiverService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.providers.telephony.MmsSmsProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.mms.ui.ManageSimMessages: void deleteAllFromSim()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<android.provider.Browser: void requestAllIcons(android.content.ContentResolver,java.lang.String,android.webkit.WebIconDatabase$IconListener)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.mms.transaction.SendTransaction: byte[] getPdu(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.browser.BrowserActivity: void dismissSubWindow(com.android.browser.Tab)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.bluetooth.BluetoothHeadset: boolean connectHeadset(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onEnableNewApn()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.IMediaPlaybackService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.DayActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.cooliris.media.RootLayer: void onSurfaceCreated(com.cooliris.media.RenderView,javax.microedition.khronos.opengles.GL11)>": [
  "android.permission.INTERNET"
 ], 
 "<android.nfc.ILlcpSocket: int getLocalSap(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.launcher2.AllApps2D: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.am.BatteryStatsService: void setBatteryState(int,int,int,int,int,int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void simulateDataConnection(com.android.internal.telephony.Phone$DataState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.cooliris.media.ReverseGeocoder: void run()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.mms.ui.SlideshowEditActivity: void initSlideList()>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.nfc.LlcpConnectionlessSocket: void sendTo(android.nfc.LlcpPacket)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void restartRadio()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.cooliris.media.AdaptiveBackgroundTexture: android.graphics.Bitmap load(com.cooliris.media.RenderView)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.os.storage.ExternalStorageFormatter: void onCancel(android.content.DialogInterface)>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
 ], 
 "<com.android.nfc.NfcService: void executeSeReset()>": [
  "android.permission.NFC"
 ], 
 "<com.cooliris.picasa.PicasaService: boolean getIsSyncable(android.content.Context,android.accounts.Account)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.app.HeavyWeightSwitcherActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.activity.setup.AccountSetupNames: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.BluetoothA2dp: boolean connectSink(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.RuimRecords: void onAllRecordsLoaded()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.wifi.IWifiManager$Stub: android.net.DhcpInfo getDhcpInfo()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity$18: void run()>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.phone.SipCallOptionHandler$1: void run()>": [
  "android.permission.USE_SIP", 
  "android.permission.CHANGE_CONFIGURATION", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<android.widget.VideoView: void setVideoPath(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.AccountManager: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void sendEnvelope(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.ShutdownThread: void rebootOrShutdown(boolean,java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.providers.media.MediaScannerService: void scan(java.lang.String[],java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.cooliris.media.GridLayer: void endSlideshow()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.GrantCredentialsPermissionActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.google.common.io.ByteStreams$5: java.io.InputStream getInput()>": [
  "android.permission.INTERNET"
 ], 
 "<android.telephony.TelephonyManager: java.lang.String getLine1AlphaTag()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.mms.transaction.ReadRecTransaction: byte[] sendPdu(long,byte[])>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.app.Application: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.Service: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.ui.WarnOfStorageLimitsActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: void <init>(android.content.Context,com.android.internal.telephony.cdma.CdmaCallWaitingNotification,com.android.internal.telephony.cdma.CdmaCallTracker,com.android.internal.telephony.cdma.CdmaCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.exchange.adapter.ContactsSyncAdapter$EasContactsSyncParser: boolean parse()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.cooliris.picasa.GDataClient: void post(java.lang.String,byte[],java.lang.String,com.cooliris.picasa.GDataClient$Operation)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDeviceManager: void onProfileStateChanged(android.bluetooth.BluetoothDevice,com.android.settings.bluetooth.LocalBluetoothProfileManager$Profile,int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.calendar.CalendarView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void getEnhancedVoicePrivacy(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.InCallScreen: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.calendar.LaunchActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.AccountManager$3: void doWork()>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<android.location.ILocationManager: boolean isProviderEnabled(java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.systemui.usb.UsbResolverActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.music.WeekSelector: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.nfc.INfcAdapter$Stub$Proxy: java.lang.String getProperties(java.lang.String)>": [
  "android.permission.NFC"
 ], 
 "<com.android.phone.InCallScreen: void dontAddVoiceMailNumber()>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.BrightnessPreference: void setMode(int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.calendar.EventLoader$LoadRequest: void processRequest(com.android.calendar.EventLoader)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.calendar.AlertActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.PhoneBase: void enableEnhancedVoicePrivacy(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: void handleTimeout(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void onSignalStrengthResult(android.os.AsyncResult)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.usb.UsbDeviceSettingsManager$MyPackageMonitor: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.settings.bluetooth.ConnectSpecificProfilesActivity: int getProfileSummary(com.android.settings.bluetooth.LocalBluetoothProfileManager,com.android.settings.bluetooth.LocalBluetoothProfileManager$Profile,android.bluetooth.BluetoothDevice,int,boolean)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.app.RingtonePickerActivity: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.data.WorkingMessage: void readStateFromBundle(android.os.Bundle)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.exchange.SyncManager: int onStartCommand(android.content.Intent,int,int)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.provider.Contacts$People: android.net.Uri addToMyContactsGroup(android.content.ContentResolver,long)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.contacts.model.EntitySet: android.content.ContentProviderOperation$Builder beginKeepTogether()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.browser.BrowserActivity: void loadUrl(android.webkit.WebView,java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.content.ISyncContext$Stub$Proxy: void onFinished(android.content.SyncResult)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.phone.PhoneApp: void access$1300(com.android.phone.PhoneApp,android.content.Intent)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.os.IPowerManager: void setStayOnSetting(int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.content.Context: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.VibratorService: void vibrate(long,android.os.IBinder)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.settings.RadioInfo: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.cooliris.media.MovieViewControl: void onResume()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.music.MediaPlaybackService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.browser.BrowserBookmarksPage: void deleteBookmark(int)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.music.MediaPlaybackActivity: void toggleShuffle()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.KeyguardManager$KeyguardLock: void reenableKeyguard()>": [
  "android.permission.DISABLE_KEYGUARD"
 ], 
 "<com.android.nfc.NfcService$6: int[] getTechList(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.exchange.SyncManager$CalendarObserver: void <init>(com.android.exchange.SyncManager,android.os.Handler,com.android.email.provider.EmailContent$Account)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void setDataOnRoamingEnabled(boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.webkit.WebView: void doTrackball(long)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.InCallScreen: void onStop()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void selectNetworkManually(com.android.internal.telephony.gsm.NetworkInfo,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.AudioService: void setSpeakerphoneOn(boolean)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.phone.InCallScreen: void updateManageConferencePanelIfNecessary()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.accounts.IAccountManager: void addAcount(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.contacts.ContactsListActivity$QueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: void confirmDeleteThread(long)>": [
  "android.permission.READ_SMS"
 ], 
 "<android.widget.VideoView: void resume()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityStack: void activityIdleInternal(android.os.IBinder,boolean,android.content.res.Configuration)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.email.EmailAddressAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.phone.Use2GOnlyCheckBoxPreference: void onClick()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.transaction.SmsMessageSender: java.lang.String getOutgoingServiceCenter(long)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.contacts.SearchResultsActivity: boolean isSyncActive()>": [
  "android.permission.READ_SYNC_STATS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.PhoneBase: void invokeOemRilRequestStrings(java.lang.String[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.util.Recycler$MmsRecycler: boolean checkForThreadsOverLimit(android.content.Context)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.settings.RingerVolumePreference: void onCheckedChanged(android.widget.CompoundButton,boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.BackupManagerService$PerformRestoreTask: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.music.MediaPlaybackActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.google.common.io.MultiReader: void <init>(java.util.Iterator)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.calendar.WeekView: int getEventAccessLevel(android.content.Context,com.android.calendar.Event)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.mms.transaction.RetrieveTransaction: byte[] sendPdu(long,byte[],java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.phone.PhoneUtils: void hangup(com.android.internal.telephony.Connection)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IntRangeManager: boolean enableRange(int,int,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.IBluetoothA2dp: boolean connectSink(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.os.IHardwareService$Stub: void setFlashlightEnabled(boolean)>": [
  "android.permission.FLASHLIGHT"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$BluetoothStateTracker: void setCurrentState(android.content.Context,int)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.exchange.adapter.AccountSyncAdapter: void <init>(com.android.email.provider.EmailContent$Mailbox,com.android.exchange.EasSyncService)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.nfc.NfcService$2: android.nfc.IP2pTarget getP2pTargetInterface()>": [
  "android.permission.NFC"
 ], 
 "<com.android.settings.deviceinfo.Status: void setBtStatus()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.inputmethod.latin.LatinIMEBackupAgent: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.ui.SlideEditorActivity$6: void onClick(android.view.View)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.DeliveryReportActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.service.IEmailService$Stub: void stopSync(long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.INfcAdapter: void enableForegroundDispatch(android.content.ComponentName,android.app.PendingIntent,android.content.IntentFilter[],android.nfc.TechListParcel)>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.LocationManagerService: void _loadProvidersLocked()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.IBluetoothA2dp$Stub: int getSinkPriority(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone getCdmaPhone()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_APN_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.CHANGE_CONFIGURATION", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.accounts.IAccountManager$Stub: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.deskclock.AlarmKlaxon: void stop()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.phone.CallFeaturesSetting: void handleTTYChange(android.preference.Preference,java.lang.Object)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: void pokeWakelock()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.am.ActivityManagerService: void broadcastStickyIntent(android.content.Intent,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.OtaUtils: void onClickOtaSpeakerButton()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.ConnectivityService: void handleSetBackgroundData(boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.nfc.IP2pTarget$Stub: int connect(int)>": [
  "android.permission.NFC"
 ], 
 "<android.os.IPowerManager$Stub$Proxy: void setStayOnSetting(int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.nfc.tech.NfcV: void reconnect()>": [
  "android.permission.NFC"
 ], 
 "<android.bluetooth.IBluetooth: boolean getTrustState(java.lang.String)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: boolean onWakeKeyWhenKeyguardShowingTq(int)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.app.backup.IBackupManager$Stub: void setBackupProvisioned(boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.phone.OtaUtils: void onOtaCloseFailureNotice()>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.contacts.SearchResultsActivity: void onClick(android.view.View)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: boolean isBusy()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.media.AudioManager: void setBluetoothScoOn(boolean)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: boolean getMasterSyncAutomatically()>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.development.PackageSummary: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.PhoneApp: void handleQueryTTYModeResponse(android.os.Message)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: android.net.Uri getPeopleFilterUri(java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.fuelgauge.PowerUsageDetail: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.sip.SipEditor: void access$600(com.android.phone.sip.SipEditor,android.net.sip.SipProfile)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_SIP"
 ], 
 "<com.android.internal.telephony.gsm.GsmConnection: void separate()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.PackageManagerService: void unloadMediaPackages(java.util.HashMap,int[],boolean)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.RI: void sendTerminalResponse(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.LoadAverageService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.deskclock.AlarmAlert: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipConnection$1: void onError(android.net.sip.SipAudioCall,int,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.IBluetoothA2dp: boolean suspendSink(android.bluetooth.BluetoothDevice)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$WifiStateTracker: int getActualState(android.content.Context)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.mms.ui.SlideView: void pauseAudio()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.IActivityManager: boolean handleApplicationWtf(android.os.IBinder,java.lang.String,android.app.ApplicationErrorReport$CrashInfo)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.mms.ui.SlideEditorActivity: void access$400(com.android.mms.ui.SlideEditorActivity)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.INetworkManagementService$Stub$Proxy: void stopUsbRNDIS()>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.server.WifiService: boolean setWifiApEnabledBlocking(boolean,int,android.net.wifi.WifiConfiguration)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void setSystemLocale(java.lang.String,java.lang.String)>": [
  "android.permission.CHANGE_CONFIGURATION"
 ], 
 "<android.app.backup.IRestoreSession: int restorePackage(java.lang.String,android.app.backup.IRestoreObserver)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.email.SecurityPolicy: void policiesRequired(long)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.RI: void hangupConnection(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.server.BluetoothA2dpService: void access$100(android.server.BluetoothA2dpService)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.exchange.SyncManager: void stopAccountSyncs(long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.SecuritySettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.server.BluetoothService: boolean cancelDiscovery()>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.provider.ContactsContract$SyncState: void set(android.content.ContentProviderClient,android.accounts.Account,byte[])>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.UsageStats: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.telephony.SmsManager: void sendDataMessage(java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS"
 ], 
 "<com.android.defcontainer.DefaultContainerService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.transaction.Transaction: byte[] sendPdu(long,byte[],java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.settings.wifi.WifiApEnabler: void <init>(android.content.Context,android.preference.CheckBoxPreference)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.calculator2.Calculator: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapObexServer: int pullPhonebook(byte[],com.android.bluetooth.pbap.BluetoothPbapObexServer$AppParamValue,javax.obex.HeaderSet,javax.obex.Operation,java.lang.String)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.nfc.ILlcpSocket$Stub: int getLocalSap(int)>": [
  "android.permission.NFC"
 ], 
 "<android.content.ContentService: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.internal.telephony.gsm.GsmMmiCode: java.lang.CharSequence makeCFQueryResultMessage(com.android.internal.telephony.CallForwardInfo,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.GlobalActions$3: void onPress()>": [
  "android.permission.VIBRATE", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.packageinstaller.UninstallerActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.ConnectivityManager: java.lang.String[] getTetherableWifiRegexs()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: void onMessageSent()>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.email.service.EasAuthenticatorService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.RepeatingImageButton: boolean onKeyUp(int,android.view.KeyEvent)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ActivityGroup: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.quicklaunch.QuickLaunchSettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.PhoneInterfaceManager: boolean supplyPin(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.server.BluetoothEventLoop: boolean onAgentOutOfBandDataAvailable(java.lang.String)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.ServiceStateTracker: void updateSpnDisplay()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.vpn.L2tpService: boolean access$400(com.android.server.vpn.VpnService)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.settings.wifi.WifiSettings: void forget(int)>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.mms.ui.EditSlideDurationActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.MonthActivity: android.view.View makeView()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppObexClientSession$ClientThread: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.storage.IMountService$Stub: void setUsbMassStorageEnabled(boolean)>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
 ], 
 "<com.android.server.ConnectivityService: void access$1400(com.android.server.ConnectivityService,boolean)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.HeadsetObserver: void <init>(android.content.Context)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.InstrumentationList: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.MonthActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.RI: void stopDtmf(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.wifi.WifiApEnabler: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.WindowManagerService: void performLayoutAndPlaceSurfacesLocked()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<android.content.IContentService$Stub$Proxy: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.content.SyncManager$SyncHandler: java.lang.Long scheduleReadyPeriodicSyncs()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.email.MessagingListener: void loadAttachmentFailed(long,long,long,java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.bluetooth.IBluetoothA2dp$Stub$Proxy: int getSinkState(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.server.BluetoothService$BondState: void setBondState(java.lang.String,int,int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.webkit.WebTextView: void onTextChanged(java.lang.CharSequence,int,int,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.contacts.ContactsLiveFolders$PhoneContacts: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.ProxySelector: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.development.RunningProcesses: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.preference.VolumePreference$SeekBarVolumizer: void onStopTrackingTouch(android.widget.SeekBar)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.WebView: void setFindIsUp(boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.deskclock.AlarmAlertFullScreen: boolean dispatchKeyEvent(android.view.KeyEvent)>": [
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.cooliris.media.ImageButton: boolean update(com.cooliris.media.RenderView,float)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.MountService: void shutdown(android.os.storage.IMountShutdownObserver)>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
 ], 
 "<android.util.CalendarUtils$TimeZoneUtils: void forceDBRequery(android.content.Context,java.lang.Runnable)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.settings.bluetooth.BluetoothPairingDialog: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.INetworkManagementEventObserver$Stub$Proxy: void interfaceLinkStatusChanged(java.lang.String,boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.svox.pico.EngineSettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.music.MediaPlaybackService: void reloadQueue()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.ContextWrapper: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.activity.AccountFolderList: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void setMute(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.browser.Tab: boolean createSubWindow()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.bluetooth.ScoSocket: void finalize()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: void run(android.accounts.AccountManagerFuture)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.calendar.CalendarView$ContextMenuHandler: boolean onMenuItemClick(android.view.MenuItem)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.internal.telephony.ITelephony$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CALL_PHONE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.sip.SipCallBase: void hangupIfAlive()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.BluetoothHeadset: boolean stopVoiceRecognition()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.IIccPhoneBook$Stub: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.wifi.WifiSettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.exchange.adapter.AbstractSyncAdapter: boolean sendLocalChanges(com.android.exchange.adapter.Serializer)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.bluetooth.ConnectSpecificProfilesActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.IccCard: void getIccCardStatusDone(android.os.AsyncResult)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onRadioAvailable()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.ConnectivityManager: boolean requestRouteToHost(int,int)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.mms.ui.ConversationList: void createNewMessage()>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void <init>(com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface)>": [
  "android.permission.CHANGE_CONFIGURATION", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.net.Downloads$ByUri: android.database.Cursor getProgressCursor(android.content.Context,long)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.deskclock.AlarmKlaxon: void onDestroy()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.calendar.MonthView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.phone.BluetoothAtPhonebook$1: android.bluetooth.AtCommandResult handleActionCommand()>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.am.ActivityManagerService: void realStartServiceLocked(com.android.server.am.ServiceRecord,com.android.server.am.ProcessRecord)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<android.app.ActivityManagerNative: java.util.List getTasks(int,int,android.app.IThumbnailReceiver)>": [
  "android.permission.GET_TASKS"
 ], 
 "<com.android.development.DevelopmentSettings: void access$1700(com.android.development.DevelopmentSettings)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.email.Controller$LegacyListener: void loadAttachmentFailed(long,long,long,java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity$14: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.SyncAdapterDriver: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: void access$300(com.android.contacts.ContactsListActivity,int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.calendar.GoogleCalendarUriIntentFilter: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.browser.SystemAllowGeolocationOrigins: void start()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.nfc.IP2pTarget: boolean disconnect(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.music.TrackBrowserActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.VibratorService: void access$300(com.android.server.VibratorService)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.ProcessInfo: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.backup.BackupAgentHelper: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.MediaFormat: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.providers.calendar.CalendarProvider2: void scheduleNextAlarmLocked(android.database.sqlite.SQLiteDatabase)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.mms.ui.SlideshowPresenter$4: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ISms$Stub$Proxy: java.util.List getAllMessagesFromIccEf()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.server.am.ActivityManagerService: void cleanUpApplicationRecordLocked(com.android.server.am.ProcessRecord,boolean,int)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.phone.GsmUmtsCallOptions: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.WifiService: void updateTetherState(java.util.ArrayList,java.util.ArrayList)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.IIccPhoneBook$Stub: int[] getAdnRecordsSize(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.music.MediaPlaybackActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.cooliris.media.GridLayer: boolean update(com.cooliris.media.RenderView,float)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.data.Conversation: void cacheAllThreads(android.content.Context)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.browser.BrowserActivity: void addPackageNames(java.util.Set)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void iccIO(int,int,java.lang.String,int,int,int,java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.transaction.TransactionService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void queryFacilityLock(java.lang.String,java.lang.String,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactItemListAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.test.TestListActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.policy.impl.GlobalActions: void <init>(android.content.Context)>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.accounts.IAccountManager: void hasFeatures(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String[])>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.gsm.GsmConnection: void processNextPostDialChar()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void setAndBroadcastNetworkSetTime(long)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.Ringer$VibratorThread: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.mms.ui.EditSlideDurationActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.SyncActivityTooManyDeletes: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.bluetooth.RequestPermissionHelperActivity: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.music.MediaPlaybackService: void onDestroy()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.util.AccountSelectionUtil: android.app.Dialog getSelectAccountDialog(android.content.Context,int)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.phone.BluetoothHeadsetService$6: boolean createIncomingConnect(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.net.ThrottleManager: long getByteCount(java.lang.String,int,int,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.inputmethod.latin.UserBigramDictionary: void addWord(java.lang.String,int)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.providers.telephony.SmsProvider: android.database.Cursor getSingleMessageFromIcc(java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.inputmethod.voice.VoiceInput: void onClick(android.view.View)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<android.os.INetworkManagementService$Stub: void disableNat(java.lang.String,java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.internal.statusbar.IStatusBarService$Stub: void collapse()>": [
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<android.webkit.WebIconDatabase: void close()>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.phone.ADNList: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccount(android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.deskclock.HandleSetAlarm: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.server.BluetoothService: int getDiscoverableTimeout()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.phone.ChangeIccPinScreen$2: void onClick(android.view.View)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityManagerService: void startRunning(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.settings.bluetooth.DockService: void applyBtSettings(android.bluetooth.BluetoothDevice,int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.contacts.SearchResultsActivity: android.graphics.Bitmap loadContactPhoto(android.net.Uri,android.graphics.BitmapFactory$Options)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.calendar.DayView: void access$300(com.android.calendar.CalendarView)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.nfc.ILlcpSocket$Stub$Proxy: int connect(int,int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.email.Controller$LegacyListener: void loadMessageForViewStarted(long)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.widget.LockPatternUtils: void setLong(java.lang.String,long)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.sip.SipService$ConnectivityReceiver: android.net.NetworkInfo getActiveNetworkInfo()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.content.ContextWrapper: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry$Stub: void listen(java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.app.backup.IBackupManager$Stub$Proxy: void setBackupEnabled(boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.settings.bluetooth.RequestPermissionHelperActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.view.ContextThemeWrapper: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.NetworkManagementService: void startUsbRNDIS()>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.inputmethod.latin.LatinKeyboardBaseView: void onDownEvent(com.android.inputmethod.latin.PointerTracker,int,int,long)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<android.content.ContentService: void addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.server.sip.SipWakeLock: void release(java.lang.Object)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.browser.Tab$3$3: java.lang.Object doInBackground(java.lang.Object[])>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.internal.telephony.IIccPhoneBook$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.spare_parts.SpareParts: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>": [
  "android.permission.SET_ANIMATION_SCALE", 
  "android.permission.CHANGE_CONFIGURATION", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.settings.bluetooth.RequestPermissionActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: void setVisible(boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.test.TestListActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.development.AppHwConfigList: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.exchange.adapter.CalendarSyncAdapter: boolean parse(java.io.InputStream)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: boolean acquireWifiLock(android.os.IBinder,int,java.lang.String,android.os.WorkSource)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.ChooseLockPattern: void onClick(android.view.View)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.settings.ChooseLockPassword: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.ui.SlideEditorActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.BluetoothDeviceProfileState$BondedDevice: boolean processMessage(android.os.Message)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.phone.InCallScreen: void onDisconnect(android.os.AsyncResult)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.browser.BookmarkSearch: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.ChooseLockPassword: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.webkit.WebView: void switchOutDrawHistory()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.location.LocationManager: void clearTestProviderLocation(java.lang.String)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.development.BadBehaviorActivity$BadService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.deskclock.AlarmAlertFullScreen: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.IccLockSettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: void showConnectingError()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.settings.ApnSettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.EnableIccPinScreen: void enableIccPin()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.activity.setup.AccountSetupIncoming: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.CallNotifier: void onNewRingingConnection(android.os.AsyncResult)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.email.activity.setup.AccountSecurity: void onActivityResult(int,int,android.content.Intent)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.music.MediaPlaybackService: void next(boolean)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.inputmethod.latin.PointerTracker: void onTouchEvent(int,int,int,long)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<android.bluetooth.IBluetooth: boolean setName(java.lang.String)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.app.NetInitiatedActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.IActivityManager: void killBackgroundProcesses(java.lang.String)>": [
  "android.permission.RESTART_PACKAGES", 
  "android.permission.KILL_BACKGROUND_PROCESSES"
 ], 
 "<com.android.server.WindowManagerService$Session: int addWithoutInputChannel(android.view.IWindow,android.view.WindowManager$LayoutParams,int,android.graphics.Rect)>": [
  "android.permission.SYSTEM_ALERT_WINDOW"
 ], 
 "<com.android.server.BackupManagerService: java.lang.String selectBackupTransport(java.lang.String)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.exchange.SyncManager$2: void stopSync(long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmConnection: void access$100(com.android.internal.telephony.gsm.GsmConnection)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.InputMethodManagerService: void buildInputMethodListLocked(java.util.ArrayList,java.util.HashMap)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.calendar.AlertService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.INfcAdapter: boolean disable()>": [
  "android.permission.NFC"
 ], 
 "<com.android.speechrecorder.SpeechRecorderActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.policy.impl.GlobalActions$ToggleAction: void onToggle(boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean enableCellBroadcastRange(int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void simulateDataConnection(com.android.internal.telephony.Phone$DataState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onSetDataEnabled(boolean)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_APN_SETTINGS"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$GpsStateTracker$1: void onPostExecute(java.lang.Object)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.mms.data.Conversation: void access$1000(android.content.Context)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.speech.RecognitionService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.CallDetailActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.sip.SipService$AutoRegistrationProcess: void onRegistrationDone(android.net.sip.ISipSession,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.activity.setup.AccountSetupAccountType: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.http.RequestHandle: void setupDigestAuthResponse(boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$ErrorState: void enter()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setCdmaBroadcastConfig(int[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ContextImpl: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.music.MediaPlaybackActivity: void doPauseResume()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.wifi.WifiEnabler: void access$100(com.android.settings.wifi.WifiEnabler,android.net.NetworkInfo$DetailedState)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.gsm.SimCard: void setIccLockEnabled(boolean,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.exchange.SyncManager: void runAwake(long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.activity.MessageView: void onViewAttachment(com.android.email.activity.MessageView$AttachmentInfo)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.nfc.tech.TagTechnology: void reconnect()>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.policy.impl.LockPatternKeyguardView: void wakeWhenReadyTq(int)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.phone.PhoneInterfaceManager: java.util.List getNeighboringCellInfo()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void setSystemLocale(java.lang.String,java.lang.String)>": [
  "android.permission.CHANGE_CONFIGURATION"
 ], 
 "<com.android.providers.downloads.DownloadThread: void notifyDownloadCompleted(int,boolean,int,boolean,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: void initializeMulticastFiltering()>": [
  "android.permission.CHANGE_WIFI_MULTICAST_STATE"
 ], 
 "<com.android.settings.deviceinfo.Memory: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calculator2.Calculator: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.packageinstaller.UninstallerActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.os.BatteryStatsImpl: int getBluetoothPingCount()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.contacts.ContactsListActivity: void doContactDelete(android.net.Uri)>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.settings.bluetooth.ConnectSpecificProfilesActivity: void refreshProfilePreference(android.preference.CheckBoxPreference,com.android.settings.bluetooth.LocalBluetoothProfileManager$Profile)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.nfc.ILlcpConnectionlessSocket$Stub$Proxy: int getSap(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.browser.FindDialog: boolean dispatchKeyEventPreIme(android.view.KeyEvent)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.cdma.RuimCard: void changeIccLockPassword(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.BluetoothHeadsetService: void adjustPriorities()>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.app.ChooserActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void startDtmf(char)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IccFileHandler: void updateEFLinearFixed(int,int,byte[],java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.IAudioService: void startBluetoothSco(android.os.IBinder)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.nfc.P2pTarget: byte[] getGeneralBytes()>": [
  "android.permission.NFC"
 ], 
 "<com.android.settings.bluetooth.RequestPermissionActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.WindowManagerService: void requestAnimationLocked(long)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.phone.BluetoothHandsfree: void access$2700(com.android.phone.BluetoothHandsfree)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.Connectivity$13: void onClick(android.view.View)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean access$500(com.android.internal.telephony.gsm.SimSmsInterfaceManager,com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.ResolverActivity: void onCreate(android.os.Bundle,android.content.Intent,java.lang.CharSequence,android.content.Intent[],java.util.List,boolean,boolean)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.INTERNET", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.content.SyncManager: void access$800(android.content.SyncManager)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<android.nfc.tech.BasicTagTechnology: void connect()>": [
  "android.permission.NFC"
 ], 
 "<android.webkit.FrameLoader: boolean handleCache()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.webkit.LoadListener: void endData()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.RI: void getNeighboringCids(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.IWifiManager: void releaseMulticastLock()>": [
  "android.permission.CHANGE_WIFI_MULTICAST_STATE"
 ], 
 "<com.android.internal.telephony.gsm.stk.CommandParamsFactory: boolean processEventNotify(com.android.internal.telephony.gsm.stk.CommandDetails,java.util.List)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.BatteryInfo: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.CallerInfoAsyncQuery$OnQueryCompleteListener: void onQueryComplete(int,java.lang.Object,com.android.internal.telephony.CallerInfo)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.VIBRATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.accessibilityservice.AccessibilityService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.IBluetoothHeadset$Stub: int getState(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.settings.AccountPreferenceBase: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.fuelgauge.PowerUsageSummary: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.settings.bluetooth.RequestPermissionActivity: void access$200(com.android.settings.bluetooth.RequestPermissionActivity)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppLauncherActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.test.ActivityUnitTestCase$MockParent: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.speech.SpeechRecognizer: void cancel()>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.deskclock.AlarmKlaxon: void onCreate()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void dispose()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.IWindowSession$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SYSTEM_ALERT_WINDOW"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: com.android.mms.ui.MessageItem getMessageItem(java.lang.String,long,boolean)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.email.mail.Store: void checkSettings()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.http.RequestHandle: void setupBasicAuthResponse(boolean,java.lang.String,java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.soundrecorder.Recorder: boolean onError(android.media.MediaPlayer,int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.InCallScreen: void access$1400(com.android.phone.InCallScreen)>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.google.common.io.Files: void copy(com.google.common.io.InputSupplier,java.io.File,java.nio.charset.Charset)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.providers.telephony.TelephonyProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>": [
  "android.permission.WRITE_APN_SETTINGS"
 ], 
 "<com.android.contacts.ui.ContactsPreferencesActivity$UpdateTask: void onPostExecute(java.lang.Object)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppObexServerSession: void releaseWakeLocks()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IccProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ContactsListActivity: android.net.Uri getContactFilterUri(java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.exchange.SyncManager: void checkPIMSyncSettings()>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.nfc.tech.MifareClassic: boolean authenticateSectorWithKeyB(int,byte[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.exchange.adapter.AbstractSyncAdapter: java.lang.String getSyncKey()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.email.activity.setup.AccountSettings: void saveSettings()>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.app.backup.IRestoreSession$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.server.vpn.VpnService: boolean checkConnectivity()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.mms.ui.ManageSimMessages: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.google.common.io.MultiReader: int read(char[],int,int)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.widget.SlidingTab$OnTriggerListener: void onTrigger(android.view.View,int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.music.TouchInterceptor$1: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.providers.calendar.CalendarProvider2: void modifyCalendarSubscription(long,boolean)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.email.activity.setup.AccountSetupOptions: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.NetworkManagementService: void setAccessPoint(android.net.wifi.WifiConfiguration,java.lang.String,java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.preference.VolumePreference$SeekBarVolumizer: void <init>(android.preference.VolumePreference,android.content.Context,android.widget.SeekBar,int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.accounts.AccountManagerService: void setPassword(android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<android.view.WindowManagerPolicy: void notifyLidSwitchChanged(long,boolean)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.exchange.adapter.ContactsSyncAdapter: java.lang.String getSyncKey()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.gsm.GsmConnection: void onDisconnect(com.android.internal.telephony.Connection$DisconnectCause)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmConnection: boolean update(com.android.internal.telephony.DriverCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.speech.tts.ITts$Stub: int playSilence(java.lang.String,long,int,java.lang.String[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.music.PlaylistBrowserActivity: void playPodcasts()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.SipCallOptionHandler: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.inputmethod.pinyin.SettingsActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.ProxySelector: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.sip.SipAudioCall: void access$1000(android.net.sip.SipAudioCall,int,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.EmergencyCallHandler: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.sip.SipAudioCall: boolean isWifiOn()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.content.IContentService$Stub$Proxy: boolean getMasterSyncAutomatically()>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.settings.bluetooth.BluetoothPermissionActivity: void showConnectionDialog()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: boolean checkProviderState(boolean)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_SYNC_STATS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.settings.ManageAccountsSettings$1: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void invokeOemRilRequestStrings(java.lang.String[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.provider.ContactsContract$Contacts: android.net.Uri getLookupUri(android.content.ContentResolver,android.net.Uri)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.mms.ui.SlideView: void pauseVideo()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: boolean disconnect()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: java.lang.String getContactDisplayName(long)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.cooliris.media.Gallery: void onPause()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.AccountPreferenceBase: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.InCallScreen: void requestUpdateBluetoothIndication()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.ShutdownActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.providers.downloads.SystemFacade: void postNotification(long,android.app.Notification)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.bluetooth.IBluetoothA2dp$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.systemui.statusbar.policy.StatusBarPolicy: void updateCallState(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.PermissionDetails: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.RI: void invokeOemRilRequestStrings(java.lang.String[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.quicksearchbox.google.GoogleSource: com.android.quicksearchbox.SourceResult queryInternal(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.accounts.AccountManagerService: void getAuthToken(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle)>": [
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.cooliris.media.RenderView: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.INTERNET"
 ], 
 "<com.android.packageinstaller.UninstallerActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.CallNotifier: void onCustomRingQueryComplete()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.webkit.WebView: void freeMemory()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.OutgoingCallBroadcaster: void onCreate(android.os.Bundle)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.PROCESS_OUTGOING_CALLS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.gsm.GsmMmiCode: void sendUssd(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: boolean enableNetwork(int,boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.exchange.provider.GalEmailAddressAdapter$1: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: void onRestart()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.LocationManagerService: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_LOCATION_EXTRA_COMMANDS", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.camera.Camera: void startReceivingLocationUpdates()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.nfc.NfcService$6: int ndefMakeReadOnly(int)>": [
  "android.permission.NFC"
 ], 
 "<android.app.backup.IRestoreSession$Stub$Proxy: int getAvailableRestoreSets(android.app.backup.IRestoreObserver)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.WebView: void updateDefaultZoomDensity(int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.SipCallOptionHandler: void onCreate(android.os.Bundle)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.TelephonyRegistry: void broadcastDataConnectionStateChanged(int,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.stk.RilMessageDecoder$StateStart: void enter()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.service.wallpaper.ImageWallpaper: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.am.ActivityManagerService: void scheduleBroadcastsLocked()>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppManager: boolean isEnabled()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.browser.BrowserActivity: void stopLoading()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.speech.RecognitionService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.activity.MailboxList: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.DataConnectionTracker: void onRoamingOff()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_APN_SETTINGS"
 ], 
 "<com.android.systemui.statusbar.StatusBarService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IccPhoneBookInterfaceManager: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.inputmethod.latin.CandidateView: void access$200(com.android.inputmethod.latin.CandidateView)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<android.location.ILocationManager: void clearTestProviderStatus(java.lang.String)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.internal.telephony.RI: void sendScreenState(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.stk.StkService: void handleCmdResponse(com.android.internal.telephony.gsm.stk.StkResponseMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.tts.TtsService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.LocationManagerService$Receiver: boolean callStatusChangedLocked(java.lang.String,int,android.os.Bundle)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.nfc.LlcpSocket: int getLocalSap()>": [
  "android.permission.NFC"
 ], 
 "<com.android.exchange.adapter.AbstractSyncParser: boolean parse()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.location.ILocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.net.ConnectivityManager: int startUsingNetworkFeature(int,java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.music.MusicBrowserActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.ui.ClassZeroActivity: android.net.Uri storeMessage(android.telephony.SmsMessage)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.exchange.EasSyncService: boolean hasConnectivity()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.bluetooth.IBluetooth$Stub: boolean disable(boolean)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager: boolean updateMessageOnIccEf(int,int,byte[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void updateServiceLocation()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.music.DeleteItems$2: void onClick(android.view.View)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: void addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.bluetooth.IBluetoothA2dp: boolean connectSinkInternal(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.phone.DTMFTwelveKeyDialer: boolean onDialerKeyDown(android.view.KeyEvent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.IWifiManager: java.util.List getConfiguredNetworks()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.ConnectivityService: void handleDisconnect(android.net.NetworkInfo)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.os.Vibrator: void cancel()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.svox.pico.GetSampleText: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.development.Connectivity$4: void onClick(android.view.View)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.ContactHeaderWidget: void bindFromPhoneNumber(java.lang.String)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.deskclock.AlarmAlertFullScreen: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.RI: void dial(java.lang.String,int,com.android.internal.telephony.UUSInfo,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.providers.downloads.DownloadService$1: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<android.bluetooth.IBluetooth: int getBondState(java.lang.String)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.google.common.io.ByteStreams: long copy(com.google.common.io.InputSupplier,java.io.OutputStream)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onDisconnectDone(android.os.AsyncResult)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.exchange.adapter.ContactsSyncAdapter$EasContactsSyncParser: void changeParser(com.android.exchange.adapter.ContactsSyncAdapter$ContactOperations)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.vpn.VpnEditor: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void setBandMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void hangup(com.android.internal.telephony.cdma.CdmaCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppTransferAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.webkit.WebView: android.webkit.WebBackForwardList restoreState(android.os.Bundle)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.app.ActivityManager: java.util.List getRunningTasks(int,int,android.app.IThumbnailReceiver)>": [
  "android.permission.GET_TASKS"
 ], 
 "<com.android.internal.telephony.CallManager: void hangupForegroundResumeBackground(com.android.internal.telephony.Call)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.location.GpsLocationProvider: void handleUpdateNetworkState(int,android.net.NetworkInfo)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.cooliris.media.GridLayer: void startSlideshow()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.BluetoothHeadsetService$6: int getPriority(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.bluetooth.BluetoothPermissionActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.speech.IRecognitionService$Stub: void stopListening(android.speech.IRecognitionListener)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.settings.SyncActivityTooManyDeletes: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IccPhoneBookInterfaceManager: int[] getAdnRecordsSize(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothSocket createInsecureRfcommSocketToServiceRecord(java.util.UUID)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void explicitCallTransfer()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.providers.calendar.CalendarAppWidgetService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.Controller: void loadMessageForView(long,com.android.email.Controller$Result)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: void handleRadioAvailable()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.transaction.SmsReceiverService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.os.PowerManager$WakeLock: void release(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.music.MediaPlaybackService$MultiPlayer: void setDataSource(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.ContentService: void <init>(android.content.Context,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.inputmethod.latin.LatinIME: void launchSettings(java.lang.Class)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<android.location.ILocationManager$Stub$Proxy: void clearTestProviderStatus(java.lang.String)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.phone.SipCallOptionHandler: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: boolean ensurePaired()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.contacts.SearchResultsActivity: android.net.Uri getPeopleFilterUri(java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: void saveDraft()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.exchange.EasOutboxService: void getAttachment(com.android.exchange.PartRequest)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.mms.ui.ConversationList$6: boolean onKey(android.view.View,int,android.view.KeyEvent)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.phone.BluetoothHeadsetService$2: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.settings.wifi.WifiAPITest: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.PhoneApp: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$InitialState: boolean turnOffMasterTetherSettings()>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.server.ThrottleService$MyHandler: void clearThrottleAndNotification()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.inputmethod.pinyin.SettingsActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.Phone: void setBandMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.music.DeleteItems: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.service.MailService: void notifyNewMessages(long)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.location.LocationManager: void requestLocationUpdates(long,float,android.location.Criteria,android.location.LocationListener,android.os.Looper)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.development.DevelopmentSettings: void access$700(com.android.development.DevelopmentSettings)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.provider.Calendar$CalendarAlerts: void rescheduleMissedAlarms(android.content.ContentResolver,android.content.Context,android.app.AlarmManager)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.inputmethod.latin.LatinIME: void onKey(int,int[],int,int)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<android.os.storage.IMountService$Stub: int mountVolume(java.lang.String)>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
 ], 
 "<com.google.common.io.ByteStreams: long getChecksum(com.google.common.io.InputSupplier,java.util.zip.Checksum)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.exchange.adapter.CalendarSyncAdapter: boolean isSyncable()>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.server.WindowManagerService: void reenableKeyguard(android.os.IBinder)>": [
  "android.permission.DISABLE_KEYGUARD"
 ], 
 "<com.android.email.activity.MessageView: boolean onOptionsItemSelected(android.view.MenuItem)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.music.MediaPlaybackService$ServiceStub: void next()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.music.TrackBrowserActivity$NowPlayingCursor: void makeNowPlayingCursor()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.activity.AccountShortcutPicker: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.provider.Browser: android.database.Cursor getVisitedLike(android.content.ContentResolver,java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.contacts.ViewContactActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.google.android.mms.util.AbstractCache: boolean put(java.lang.Object,java.lang.Object)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.accounts.AccountManager$6: android.accounts.AccountManagerFuture start()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.calendar.CalendarActivity: android.view.View switchViews(boolean,float,float)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.svox.pico.CheckVoiceData: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.NotificationManagerService: void access$2100(com.android.server.NotificationManagerService,com.android.server.NotificationManagerService$ToastRecord)>": [
  "android.permission.SET_PROCESS_LIMIT"
 ], 
 "<com.android.contacts.ContactsLiveFolders$AllContacts: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.development.RunningProcesses: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.policy.impl.LockPatternKeyguardView: void <init>(android.content.Context,com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.widget.LockPatternUtils,com.android.internal.policy.impl.KeyguardWindowController)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.nfc.NfcService: boolean _disable(boolean,boolean)>": [
  "android.permission.NFC"
 ], 
 "<com.android.providers.downloads.DownloadService: com.android.providers.downloads.DownloadInfo insertDownload(com.android.providers.downloads.DownloadInfo$Reader,long)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.email.activity.setup.AccountSetupNames: void onNext()>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.net.wifi.WifiManager: boolean setWifiEnabled(boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.content.IContentService$Stub$Proxy: android.content.SyncInfo getCurrentSync()>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$StateTracker: int getActualState(android.content.Context)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.net.IConnectivityManager$Stub: int getLastTetherError(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.wifi.WifiStatusTest: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.SMSDispatcher: void acknowledgeLastIncomingSms(boolean,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.NativeActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.content.PackageMonitor: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void queryAvailableBandMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.IBluetooth$Stub$Proxy: boolean isDiscovering()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.mms.ui.ClassZeroActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry$Stub: void notifyServiceState(android.telephony.ServiceState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.Controller$LegacyListener: void synchronizeMailboxFailed(long,long,java.lang.Exception)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.inputmethod.latin.LatinKeyboardBaseView$OnKeyboardActionListener: void onText(java.lang.CharSequence)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.server.connectivity.Tethering: void <init>(android.content.Context,android.os.Looper)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void setTTYMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: boolean deleteSelection()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.calendar.EditEvent: void onBackPressed()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.exchange.CalendarSyncAdapterService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.gsm.SimCard: void getIccCardStatusDone(android.os.AsyncResult)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.DevelopmentSettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.NetworkQueryService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.IWallpaperManager$Stub$Proxy: void setDimensionHints(int,int)>": [
  "android.permission.SET_WALLPAPER_HINTS"
 ], 
 "<java.net.NetworkInterface: void <init>(int)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.settings.wifi.AdvancedSettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.IThrottleManager: long getResetTime(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.contacts.SearchResultsActivity: boolean smsContact(android.database.Cursor)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.LocationManagerService: void access$600(com.android.server.LocationManagerService)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.DownloadManager: long enqueue(android.app.DownloadManager$Request)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.svox.pico.CheckVoiceData: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.am.ActivityManagerService: boolean makeAppCrashingLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.settings.bluetooth.ConnectSpecificProfilesActivity: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.email.service.MailService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.inputmethod.latin.UserDictionary: void loadDictionaryAsync()>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.inputmethod.latin.LatinKeyboardBaseView$OnKeyboardActionListener: void onKey(int,int[],int,int)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: void doKeyguardTimeout()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.bluetooth.opp.TestActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.cooliris.media.Wallpaper: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.transaction.SmsReceiverService: void access$200(com.android.mms.transaction.SmsReceiverService)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.svox.pico.GetSampleText: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.activity.AccountShortcutPicker: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.ui.EditContactActivity$AddContactTask: java.lang.Object doInBackground(java.lang.Object[])>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.app.KeyguardManager: void exitKeyguardSecurely(android.app.KeyguardManager$OnKeyguardExitResult)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.DISABLE_KEYGUARD", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.am.ActivityManagerService: void makeAppNotRespondingLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.settings.bluetooth.RequestPermissionActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.commands.am.Am: void run(java.lang.String[])>": [
  "android.permission.SET_ANIMATION_SCALE"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void queryAvailableBandMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.LocationManagerService: void checkPermissionsSafe(java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.browser.BrowserSettings: void clearHistory(android.content.Context)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.contacts.AttachImage: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker: java.util.ArrayList buildWaitingApns()>": [
  "android.permission.WRITE_APN_SETTINGS"
 ], 
 "<android.net.sip.SipManager: void open(android.net.sip.SipProfile)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.music.TrackBrowserActivity$NowPlayingCursor: void <init>(com.android.music.TrackBrowserActivity,com.android.music.IMediaPlaybackService,java.lang.String[])>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.ExternalMediaFormatActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.ui.SlideshowActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.svox.pico.GetSampleText: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.provision.DefaultActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.am.ActivityManagerService: void updateConfiguration(android.content.res.Configuration)>": [
  "android.permission.CHANGE_CONFIGURATION"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppLiveFolder: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.nfc.INfcTag$Stub: int ndefWrite(int,android.nfc.NdefMessage)>": [
  "android.permission.NFC"
 ], 
 "<com.android.inputmethod.latin.LatinIME: void checkAddToDictionary(java.lang.CharSequence,int,boolean)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<android.app.ActivityManagerNative: void unbroadcastIntent(android.app.IApplicationThread,android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.development.DevelopmentSettings: void access$400(com.android.development.DevelopmentSettings)>": [
  "android.permission.SET_ALWAYS_FINISH", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry: void notifySignalStrength(android.telephony.SignalStrength)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.vpn.L2tpService: void waitUntilConnectedOrTimedout()>": [
  "android.permission.VIBRATE"
 ], 
 "<android.view.WindowManagerPolicy: boolean performHapticFeedbackLw(android.view.WindowManagerPolicy$WindowState,int,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewCallback: void keyguardDone(boolean)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.net.IConnectivityManager: boolean setRadio(int,boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.RI: void sendDtmf(char,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.ConfirmLockPattern$2: void onPatternDetected(java.util.List)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.providers.media.MediaScannerService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.bluetooth.BluetoothEventRedirector$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.cooliris.media.MovieView$1: void <init>(com.cooliris.media.MovieView,android.view.View,android.content.Context,android.net.Uri)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ContactOptionsActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.nfc.TechListChooserActivity: void onCreate(android.os.Bundle,android.content.Intent,java.lang.CharSequence,android.content.Intent[],java.util.List,boolean,boolean)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.INTERNET", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.BandMode: void loadBandList()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.transaction.SmsReceiver: void onReceiveWithPrivilege(android.content.Context,android.content.Intent,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.google.android.mms.pdu.PduPersister: android.database.Cursor getPendingMessages(long)>": [
  "android.permission.READ_SMS"
 ], 
 "<android.nfc.ILlcpServiceSocket$Stub: int accept(int)>": [
  "android.permission.NFC"
 ], 
 "<android.bluetooth.IBluetoothPbap$Stub: boolean connect(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.webkit.FrameLoader: boolean handleLocalFile(java.lang.String,android.webkit.LoadListener,android.webkit.WebSettings)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.BluetoothHandsfree$11: android.bluetooth.AtCommandResult handleActionCommand()>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.mms.transaction.SmsReceiverService: android.net.Uri replaceMessage(android.content.Context,android.telephony.SmsMessage[],int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.nfc.NfcService$8: byte[] getGeneralBytes(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.phone.BluetoothAtPhonebook$3: android.bluetooth.AtCommandResult handleActionCommand()>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.music.IMediaPlaybackService$Stub: void openFile(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.music.IMediaPlaybackService$Stub: void moveQueueItem(int,int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.ILlcpSocket$Stub: int connect(int,int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.phone.InCallScreen: void onPhoneStateChanged(android.os.AsyncResult)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.music.TouchInterceptor$RemoveListener: void remove(int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.WirelessSettings: void onActivityResult(int,int,android.content.Intent)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.launcher2.Workspace: void startDrag(com.android.launcher2.CellLayout$CellInfo)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<android.webkit.LoadListener: void sendMessageInternal(android.os.Message)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.app.ContextImpl: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.ConnectivityService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.am.ActivityManagerService: void appDiedLocked(com.android.server.am.ProcessRecord,int,android.app.IApplicationThread)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.internal.widget.LockPatternUtils: void setTactileFeedbackEnabled(boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.am.ActivityManagerService: void startAppProblemLocked(com.android.server.am.ProcessRecord)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.settings.ConfirmLockPassword: void onClick(android.view.View)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.music.DeleteItems: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.am.ActivityManagerService: void moveTaskToBack(int)>": [
  "android.permission.REORDER_TASKS"
 ], 
 "<com.android.settings.bluetooth.RequestPermissionHelperActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.activity.Debug: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.Application: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.providers.downloads.Helpers: java.lang.String chooseFullPath(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,long)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.telephony.IccPhoneBookInterfaceManager: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.sip.ISipService$Stub: android.net.sip.ISipSession createSession(android.net.sip.SipProfile,android.net.sip.ISipSessionListener)>": [
  "android.permission.USE_SIP"
 ], 
 "<android.view.IWindowSession$Stub: int addWithoutInputChannel(android.view.IWindow,android.view.WindowManager$LayoutParams,int,android.graphics.Rect)>": [
  "android.permission.SYSTEM_ALERT_WINDOW"
 ], 
 "<com.android.music.TrackBrowserActivity: void access$700(com.android.music.TrackBrowserActivity,int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.ConnectivityService: void setNetworkPreference(int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.calendar.CalendarActivity$1: void run()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.view.IApplicationToken$Stub$Proxy: void windowsVisible()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: void onClick(android.view.View)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.net.sip.ISipService: android.net.sip.ISipSession createSession(android.net.sip.SipProfile,android.net.sip.ISipSessionListener)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState: java.lang.String findActiveUpstreamIface()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.net.IThrottleManager: long getByteCount(java.lang.String,int,int,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.applications.ManageApplications: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.music.MusicBrowserActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.backup.IBackupManager: java.lang.String selectBackupTransport(java.lang.String)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.ConnectivityService: android.net.NetworkInfo getActiveNetworkInfo()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.app.ActivityManagerNative: boolean bindBackupAgent(android.content.pm.ApplicationInfo,int)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.music.MediaPlaybackService$ServiceStub: void open(long[],int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.vpn.VpnService: void access$600(com.android.server.vpn.VpnService,java.lang.Throwable)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.mms.transaction.MessagingNotification$1: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.cooliris.media.Gallery: void checkStorage()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.mms.ui.SlideViewInterface: void pauseAudio()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.LoadListener: void status(int,int,int,java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.browser.BrowserBookmarksAdapter: void deleteAllRows()>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.phone.BluetoothHandsfree$8: android.bluetooth.AtCommandResult handleActionCommand()>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.RI: void getCDMASubscription(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getAvailableNetworks(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.camera.NoSearchActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.NativeDaemonConnector: void listenToSocket()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.webkit.StreamLoader: void sendHeaders()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.inputmethod.latin.LatinIME: void handleVoiceResults()>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<android.app.backup.IRestoreSession$Stub: int getAvailableRestoreSets(android.app.backup.IRestoreObserver)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.INfcAdapter$Stub$Proxy: boolean disable()>": [
  "android.permission.NFC"
 ], 
 "<android.net.ConnectivityManager: int stopUsingNetworkFeature(int,java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.cooliris.media.UriTexture: android.graphics.Bitmap load(com.cooliris.media.RenderView)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.email.activity.Debug: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.provider.Browser: android.database.Cursor getAllBookmarks(android.content.ContentResolver)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.phone.OtaUtils: void otaShowSpcErrorNotice(int)>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.location.ILocationManager: void requestLocationUpdatesPI(java.lang.String,android.location.Criteria,long,float,boolean,android.app.PendingIntent)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.ConnectivityService: com.android.server.ConnectivityService getInstance(android.content.Context)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.contacts.ViewContactActivity$2: void onPostExecute(java.util.ArrayList)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.phone.ChangeIccPinScreen: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.connectivity.Tethering$TetherInterfaceSM: void start()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.UsageStats: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.accounts.AccountManager$AmsTask$Response: void onResult(android.os.Bundle)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaMmiCode: void processCode()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.voicedialer.BluetoothVoiceDialerActivity: int playSound(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.mms.model.MediaModelFactory: com.android.mms.model.MediaModel getGenericMediaModel(android.content.Context,java.lang.String,java.lang.String,org.w3c.dom.smil.SMILMediaElement,com.google.android.mms.pdu.PduPart,com.android.mms.model.RegionModel)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.email.service.IEmailService$Stub: void updateFolderList(long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.SyncManager: void onAccountsUpdated(android.accounts.Account[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$InitialState: boolean turnOnMasterTetherSettings()>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.certinstaller.CertFileList: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.bluetooth.ConnectSpecificProfilesActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.util.WeakAsyncTask: void onPostExecute(java.lang.Object)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.phone.InCallScreen: void internalHangup()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.calendar.LaunchActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.packageinstaller.PackageInstallerActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.deskclock.SetAlarm: long access$1000(com.android.deskclock.SetAlarm)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.contacts.SearchResultsActivity: boolean callOrSmsContact(android.database.Cursor,boolean)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean setCellBroadcastConfig(com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.sip.SipAudioCall$1: void onError(android.net.sip.SipSession,int,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.WindowManagerService$Session: int add(android.view.IWindow,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.view.InputChannel)>": [
  "android.permission.SYSTEM_ALERT_WINDOW"
 ], 
 "<com.android.internal.telephony.RI: void getRegistrationState(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.bluetooth.BluetoothDiscoverableEnabler: void setEnabled(boolean)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.nfc.tech.TagTechnology: void connect()>": [
  "android.permission.NFC"
 ], 
 "<android.net.wifi.IWifiManager: boolean isMulticastEnabled()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.bluetooth.BluetoothDeviceProfileState$OutgoingA2dp: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void setNetworkSelectionModeAutomatic(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void setDataOnRoamingEnabled(boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.providers.contacts.LegacyContactImporter: boolean importContacts()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.provider.Browser: void truncateHistory(android.content.ContentResolver)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.phone.BluetoothHeadsetService: void setState(android.bluetooth.BluetoothDevice,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.settings.deviceinfo.Status: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.bluetooth.BluetoothDiscoverableEnabler: void resume()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.inputmethod.voice.VoiceInput$ImeRecognitionListener: void onResults(android.os.Bundle)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.mms.ui.ConversationList: void access$000(com.android.mms.ui.ConversationList)>": [
  "android.permission.READ_SMS"
 ], 
 "<android.provider.CallLog$Calls: void removeExpiredEntries(android.content.Context)>": [
  "android.permission.WRITE_CONTACTS"
 ], 
 "<com.android.phone.PhoneUtils: boolean hangup(com.android.internal.telephony.CallManager)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.accounts.AccountManager$7: void doWork()>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.phone.GsmUmtsCallForwardOptions: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.ISms: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS"
 ], 
 "<android.net.wifi.WifiManager: int[] getValidChannelCounts()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.am.ActivityStack: void startPausingLocked(boolean,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<android.provider.ContactsContract$Groups$EntityIteratorImpl: java.lang.Object next()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: android.net.Uri getContactUri(int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.music.AudioPreview$2: void onAudioFocusChange(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.connectivity.Tethering: boolean enableUsbRndis(boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.ApplicationSettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.development.PermissionDetails: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.ConnectivityManager: int tether(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.wifi.WifiSettings: void updateConnectionState(android.net.NetworkInfo$DetailedState)>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.app.PlatLogoActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.BluetoothHandsfree$22: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.ChooseLockPattern: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.speech.IRecognitionService$Stub$Proxy: void stopListening(android.speech.IRecognitionListener)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppTransferHistory: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.google.common.io.Files: void copy(java.io.File,java.io.OutputStream)>": [
  "android.permission.INTERNET"
 ], 
 "<android.net.wifi.WifiManager: int getNumAllowedChannels()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.htmlviewer.HTMLViewerActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingInsecureRfcommWithServiceRecord(java.lang.String,java.util.UUID)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.inputmethodservice.AbstractInputMethodService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void cleanUpConnection(boolean,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.ui.MessageItem: void <init>(android.content.Context,java.lang.String,android.database.Cursor,com.android.mms.ui.MessageListAdapter$ColumnsMap,java.util.regex.Pattern)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.webkit.WebViewCore: void sendMessage(int,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.os.storage.ExternalStorageFormatter: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: void separate(com.android.internal.telephony.gsm.GsmConnection)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.PatternUnlockScreen$UnlockPatternListener: void onPatternDetected(java.util.List)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.browser.BrowserPreferencesPage: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.calendar.CalendarView: int getEventAccessLevel(android.content.Context,com.android.calendar.Event)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.settings.TextToSpeechSettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.BluetoothHandsfree$28: android.bluetooth.AtCommandResult handleTestCommand()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.contacts.ui.ContactsPreferencesActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.WifiService: void setWifiApConfiguration(android.net.wifi.WifiConfiguration)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.sip.SipService$AutoRegistrationProcess: void start(com.android.server.sip.SipSessionGroup)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.systemui.usb.UsbStorageActivity$8: void run()>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
 ], 
 "<com.android.server.LocationManagerService: boolean addGpsStatusListener(android.location.IGpsStatusListener)>": [
  "android.permission.ACCESS_FINE_LOCATION"
 ], 
 "<com.android.phone.PhoneApp: void initForNewRadioTechnology()>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker$1: void onChange(boolean)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.accounts.AccountManager: android.accounts.AccountManagerFuture editProperties(java.lang.String,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.server.BluetoothA2dpService: boolean disconnectSinkInternal(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.net.IThrottleManager$Stub: int getThrottle(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.nfc.ILlcpSocket: int receive(int,byte[])>": [
  "android.permission.NFC"
 ], 
 "<android.nfc.INfcTag: int close(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.contacts.ui.ContactsPreferencesActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.speech.tts.ITts$Stub: int playEarcon(java.lang.String,java.lang.String,int,java.lang.String[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.StatusBarManagerService$2: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void queryTTYMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.WebIconDatabase$EventHandler: void postMessage(android.os.Message)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.cooliris.media.MenuBar: void drawHighlight(com.cooliris.media.RenderView,javax.microedition.khronos.opengles.GL11,int)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.server.INativeDaemonConnectorCallbacks: boolean onEvent(int,java.lang.String,java.lang.String[])>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.browser.BrowserActivity: void onCreate(android.os.Bundle)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.google.common.io.Files: java.lang.Object readLines(java.io.File,java.nio.charset.Charset,com.google.common.io.LineProcessor)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.contacts.TwelveKeyDialer: void onCreate(android.os.Bundle)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.music.MediaPlaybackService: void stop(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ui.QuickContactWindow: void show(android.net.Uri,android.graphics.Rect,int,java.lang.String[])>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.music.PlaylistBrowserActivity: boolean onOptionsItemSelected(android.view.MenuItem)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.tech.MifareClassic: byte[] readBlock(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.os.IDropBoxManagerService: android.os.DropBoxManager$Entry getNextEntry(java.lang.String,long)>": [
  "android.permission.READ_LOGS"
 ], 
 "<android.webkit.WebViewCore$EventHub: void sendMessageDelayed(android.os.Message,long)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.cooliris.wallpaper.Slideshow: void drawFrame()>": [
  "android.permission.INTERNET"
 ], 
 "<android.app.IActivityManager: boolean shutdown(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.music.QueryBrowserActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.cooliris.picasa.PicasaService$2: void run()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.inputmethodservice.AbstractInputMethodService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.content.ContentResolver: boolean isSyncPending(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.contacts.ContactPhotoLoader$LoaderThread: void loadPhotosFromDatabase()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.providers.downloads.DownloadThread: void writeDataToDestination(com.android.providers.downloads.DownloadThread$State,byte[],int)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.cooliris.picasa.PicasaService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.inputmethod.voice.VoiceInput: void cancel()>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void startDelayedRetry(com.android.internal.telephony.DataConnection$FailCause,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityManagerService: void trimApplications()>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<android.nfc.INfcAdapter$Stub: android.nfc.IP2pTarget getP2pTargetInterface()>": [
  "android.permission.NFC"
 ], 
 "<com.android.phone.Use2GOnlyCheckBoxPreference: void <init>(android.content.Context)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.provision.DefaultActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.WeekActivity: void eventsChanged()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.settings.bluetooth.BluetoothDiscoverableEnabler$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.calendar.DismissAllAlarmsService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.os.IVibratorService: void vibrate(long,android.os.IBinder)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void sendSMS(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendMultipartText(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.providers.downloads.SizeLimitActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.SearchResultsActivity: void startQuery()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_SYNC_STATS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.browser.BrowserActivity: void removeTabFromContentView(com.android.browser.Tab)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.google.common.io.Files: byte[] getDigest(java.io.File,java.security.MessageDigest)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.statusbar.IStatusBarService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.contacts.ContactsListActivity: java.lang.String getContactDisplayName(long)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.cooliris.media.PhotoAppWidgetConfigure: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.development.DataList: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.INetworkManagementEventObserver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.webkit.WebView: void clearTextEntry(boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.cooliris.media.MovieView: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.providers.downloads.DownloadService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.exchange.provider.ExchangeProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManagerProxy: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS"
 ], 
 "<com.android.settings.ConfirmLockPassword: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.ui.ContactsPreferencesActivity$QueryGroupsTask: java.lang.Object doInBackground(java.lang.Object,java.lang.Object[])>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.LocationManagerService: void decrementPendingBroadcasts()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.transaction.NotificationTransaction: void ensureRouteToHost(java.lang.String,com.android.mms.transaction.TransactionSettings)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.music.MediaPlaybackService: void closeExternalStorageFiles(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.LaunchActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.os.INetworkManagementService$Stub: void setDnsForwarders(java.lang.String[])>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<android.bluetooth.IBluetooth$Stub: boolean setPasskey(java.lang.String,int)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: void disconnectConnected(com.android.settings.bluetooth.CachedBluetoothDevice,com.android.settings.bluetooth.LocalBluetoothProfileManager$Profile)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.bluetooth.IBluetooth$Stub$Proxy: boolean getTrustState(java.lang.String)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.gsm.GsmSMSDispatcher: void dispatchPdus(byte[][])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.bluetooth.LocalBluetoothManager$Callback: void onDeviceAdded(com.android.settings.bluetooth.CachedBluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.email.service.IEmailService$Stub$Proxy: int validate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,boolean,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.providers.downloads.DownloadInfo: void sendIntentIfRequested()>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.contacts.ui.EditContactActivity: void createContact(android.accounts.Account)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.net.http.HttpConnection: boolean openHttpConnection(android.net.http.Request)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.app.IWallpaperManager$Stub: void setDimensionHints(int,int)>": [
  "android.permission.SET_WALLPAPER_HINTS"
 ], 
 "<com.android.browser.WebsiteSettingsActivity$SiteAdapter$2: void onReceiveValue(java.util.Set)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.phone.InCallScreen: void addVoiceMailNumberPanel()>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.webkit.PluginFullScreenHolder: void onStop()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.mms.data.Conversation$3: void run()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.mms.transaction.TransactionService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.browser.TabControl: boolean setCurrentTab(com.android.browser.Tab)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.phone.BluetoothHandsfree$14: android.bluetooth.AtCommandResult handleReadCommand()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.bluetooth.BluetoothPairingDialog: void createConsentDialog()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.calendar.AgendaByDayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.exchange.adapter.CalendarSyncAdapter$EasCalendarSyncParser: void commit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.mms.util.Recycler: void deleteOldMessages(android.content.Context)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.nfc.LlcpSocket: void connect(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.deskclock.AlarmClock: void access$100(com.android.deskclock.AlarmClock,boolean,android.widget.ImageView,com.android.deskclock.Alarm)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.calendar.WeekView: void <init>(com.android.calendar.CalendarActivity)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.settings.wifi.WifiInfo: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.DeleteItems: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.media.AsyncPlayer: void stop()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.VoiceInputOutputSettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.transaction.RetrieveTransaction: byte[] sendPdu(byte[])>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.settings.ChooseLockGeneric: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.wifi.IWifiManager$Stub: int getWifiEnabledState()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.browser.TabControl: com.android.browser.Tab createNewTab()>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.server.VibratorService$Vibration: void binderDied()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.DataList: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void listen(java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.settings.BatteryInfo: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.HeadsetObserver: void access$000(com.android.server.HeadsetObserver,int,int,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GsmMmiCode: void processCode()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.cooliris.media.ActiveWallpaper: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.IBluetoothHeadset$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.email.MessagingController: void loadMessageForView(long,com.android.email.MessagingListener)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.browser.FetchUrlMimeType: void onPostExecute(java.lang.Object)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<android.inputmethodservice.AbstractInputMethodService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppTransferActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.INTERNET", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getDeviceId()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.app.StatusBarManager: void collapse()>": [
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.providers.downloads.DownloadInfo: android.net.Uri getAllDownloadsUri()>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.server.connectivity.Tethering$TetherInterfaceSM$StartingState: boolean processMessage(android.os.Message)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.exchange.CalendarSyncAdapterService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.deskclock.Alarms: void enableAlarm(android.content.Context,int,boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.PhoneNotifier: void notifySignalStrength(com.android.internal.telephony.Phone)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.ui.SlideView: void setVideo(java.lang.String,android.net.Uri)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: android.net.Uri getContactFilterUri(java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean endCall()>": [
  "android.permission.CALL_PHONE"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void getPreferredNetworkType(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.music.MediaPlaybackActivity: void access$900(com.android.music.MediaPlaybackActivity,int,long)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.bluetooth.opp.TestActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.bluetooth.LocalBluetoothProfileManager$A2dpProfileManager: boolean isPreferred(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.net.http.EventHandler: void endData()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.NetworkManagementService: int getInterfaceRxThrottle(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.location.GpsLocationProvider: void xtraDownloadRequest()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.LogViewer: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.wifi.WifiConfigInfo: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.provider.Calendar$Instances: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],long,long,java.lang.String,java.lang.String)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.internal.telephony.gsm.stk.StkService: void eventDownload(int,int,int,byte[],boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.sip.SipEditor: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void enableLocationUpdates()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.AirplaneModeEnabler: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.bluetooth.IBluetooth: java.lang.String[] listBonds()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.email.activity.MessageCompose: void processSourceMessageGuarded(com.android.email.provider.EmailContent$Message,com.android.email.provider.EmailContent$Account)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker$2$1: void run()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_APN_SETTINGS"
 ], 
 "<com.android.internal.widget.SlidingTab$OnTriggerListener: void onGrabbedStateChange(android.view.View,int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.email.activity.setup.AccountSetupOutgoing: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.ActivityManagerNative: boolean shutdown(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.quicksearchbox.google.GoogleSearch: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.ExportVCardActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.media.AudioService$ScoClient: void decCount()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.contacts.ExportVCardActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.ui.ContactsPreferencesActivity: void onBackPressed()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.contacts.ContactsListActivity: void startQuery()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_SYNC_STATS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.net.http.HttpsConnection: boolean httpFailure(android.net.http.Request,int,java.lang.Exception)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.webkit.Network: boolean requestURL(java.lang.String,java.util.Map,byte[],android.webkit.LoadListener)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppService: void startListenerDelayed()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.calendar.AlertActivity$2: void onClick(android.view.View)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.browser.BrowserActivity$4: java.lang.Object doInBackground(java.lang.Object[])>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.settings.bluetooth.BluetoothNamePreference: void onClick()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.am.ActivityManagerService: void serviceTimeout(com.android.server.am.ProcessRecord)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<android.provider.Contacts$People: android.net.Uri addToGroup(android.content.ContentResolver,long,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.phone.sip.SipEditor: void unregisterOldPrimaryAccount()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_SIP"
 ], 
 "<android.nfc.IP2pInitiator$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.contacts.ContactsListActivity: android.net.Uri access$1000(com.android.contacts.ContactsListActivity,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void writeSmsToRuim(int,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.SyncManager$InitializerServiceConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.inputmethod.latin.LatinIME: boolean pickDefaultSuggestion()>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.internal.telephony.PhoneBase: void restoreSavedNetworkSelection(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.ChooseLockPatternExample: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManagerProxy: boolean enableCellBroadcast(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.location.ILocationManager$Stub$Proxy: android.location.Location getLastKnownLocation(java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void rejectCall()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.WirelessSettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.quicksearchbox.SearchableItemsSettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: void releaseWakeLock()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.NfcService$6: android.nfc.TransceiveResult transceive(int,byte[],boolean)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.app.HeavyWeightSwitcherActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.ContentService: void removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.phone.sip.SipSettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void onSearchTextChanged()>": [
  "android.permission.READ_SYNC_STATS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.bluetooth.BluetoothDeviceProfileState$BondedDevice: void exit()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.google.common.io.Resources: java.util.List readLines(java.net.UR,java.nio.charset.Charset)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.settings.vpn.VpnTypeSelection: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.google.common.io.Files: java.util.List readLines(java.io.File,java.nio.charset.Charset)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: boolean onPrepareOptionsMenu(android.view.Menu)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.mms.data.WorkingMessage$2: void run()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<android.webkit.WebView: void centerFitRect(int,int,int,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.calendar.AgendaAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.telephony.TelephonyManager: void listen(android.telephony.PhoneStateListener,int)>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.exchange.EmailSyncAlarmReceiver: void handleReceive(android.content.Context)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.ProcessInfo: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.ChooseAccountActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.cooliris.media.MonitoredActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.CdmaVoicePrivacyCheckBoxPreference$MyHandler: void handleGetVPResponse(android.os.Message)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.am.ActivityManagerService: android.content.Context main(int)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.browser.widget.BookmarkWidgetService: void access$100(com.android.browser.widget.BookmarkWidgetService)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.providers.calendar.CalendarProvider2: int deleteFromTable(java.lang.String,android.net.Uri,java.lang.String,java.lang.String[])>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.inputmethod.latin.PointerTracker: void onMoveEvent(int,int,long)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean connectSink(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.settings.quicklaunch.BookmarkPicker: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.providers.userdictionary.DictionaryBackupAgent: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.SearchResultsActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.cooliris.media.MovieView$1: void onResume()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.wifi.WifiConfigInfo: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.browser.CombinedBookmarkHistoryActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.Controller: void updateMailboxList(long,com.android.email.Controller$Result)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.WindowManagerService: void setWindowWallpaperPositionLocked(com.android.server.WindowManagerService$WindowState,float,float,float,float)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.email.service.EasAuthenticatorService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.ui.ClassZeroActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.nfc.NfcService$3: int getLocalSocketMiu(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void switchWaitingOrHoldingAndActive()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.BluetoothHeadsetService: void onDestroy()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.net.wifi.IWifiManager$Stub: boolean reassociate()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.calendar.DayView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.net.wifi.WifiManager: boolean setWifiApConfiguration(android.net.wifi.WifiConfiguration)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.phone.BluetoothAtPhonebook$2: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.mms.model.TextModel: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,com.android.mms.drm.DrmWrapper)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.AdnRecordLoader: void loadAllFromEF(int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ITelephony$Stub: void call(java.lang.String)>": [
  "android.permission.CALL_PHONE"
 ], 
 "<android.media.IMediaScannerListener$Stub$Proxy: void scanCompleted(java.lang.String,android.net.Uri)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.browser.CombinedBookmarkHistoryActivity$1: java.lang.Void doInBackground(java.lang.Void[])>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.voicedialer.RecognizerEngine: void onRecognitionSuccess(com.android.voicedialer.RecognizerClient)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.calendar.MonthView: void <init>(com.android.calendar.MonthActivity,com.android.calendar.Navigator)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.internal.policy.impl.LockScreen$1: void onClick(android.view.View)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.content.SyncManager: void sendCheckAlarmsMessage()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.camera.VideoCamera: void onShutterButtonClick(com.android.camera.ShutterButton)>": [
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.WallpaperManagerService: android.os.ParcelFileDescriptor setWallpaper(java.lang.String)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.webkit.FileLoader: void closeStreamAndSendEndData()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.providers.downloads.DownloadInfo: android.net.Uri getMyDownloadsUri()>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.cooliris.media.Photographs: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.location.ILocationManager$Stub$Proxy: void clearTestProviderLocation(java.lang.String)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<android.bluetooth.IBluetoothHeadset$Stub: int getBatteryUsageHint()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.soundrecorder.SoundRecorder: void onClick(android.view.View)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.phone.BluetoothHeadsetService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.webkit.GeolocationService: void start()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.net.ConnectivityManager: int untether(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void acknowledgeLastIncomingSms(boolean,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.DeviceInfoSettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.launcher2.LauncherApplication: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: boolean access$000(com.android.contacts.ContactsListActivity,boolean)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_SYNC_STATS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.inputmethod.latin.LatinIME: void startListening(boolean)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.exchange.SyncManager: void stopServiceThreads()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.bluetooth.BluetoothNamePreference: void access$000(com.android.settings.bluetooth.BluetoothNamePreference)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setCdmaSubscription(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.EmailAddressAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.VoiceInputOutputSettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: int compareTo(com.android.settings.bluetooth.CachedBluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.bluetooth.IBluetooth$Stub: int getRemoteClass(java.lang.String)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.mms.ui.MessageListAdapter: void onContentChanged()>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void pollState()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.VIBRATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.music.IMediaPlaybackService: void openFile(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppNotification: void updateIncomingFileConfirmNotification()>": [
  "android.permission.VIBRATE"
 ], 
 "<android.media.IAudioService$Stub: void setMode(int,android.os.IBinder)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.test.mock.MockApplication: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.DockSettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.NetworkManagementService: int getInterfaceThrottle(java.lang.String,boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.os.INetworkManagementService: void attachPppd(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.exchange.SyncManager: void access$100(long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.transaction.SmsReceiverService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.ui.ContactsPreferencesActivity: void doSaveAction()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.bluetooth.IBluetooth: int getBluetoothState()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.systemui.usb.UsbAccessoryUriActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.sip.SipService: boolean isRegistered(java.lang.String)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.server.WifiService: boolean disconnect()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.nfc.NfcService$2: boolean disable()>": [
  "android.permission.NFC"
 ], 
 "<com.android.development.AppPicker: void onListItemClick(android.widget.ListView,android.view.View,int,long)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.SET_DEBUG_APP"
 ], 
 "<com.android.calendar.DayView: void init(android.content.Context)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.server.ConnectivityService: boolean setRadio(int,boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.test.mock.MockContentResolver: int getIsSyncable(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.DataConnectionTracker: void onVoiceCallEnded()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_APN_SETTINGS"
 ], 
 "<com.android.settings.SettingsLicenseActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothSocket createScoSocket()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.widget.RotarySelector: void dispatchTriggerEvent(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.ISms: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS"
 ], 
 "<com.android.quicksearchbox.google.GoogleSuggestClient: com.android.quicksearchbox.SourceResult getSuggestionsExternal(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$BluetoothStateTracker$1: java.lang.Void doInBackground(java.lang.Void[])>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.nfc.ILlcpServiceSocket$Stub: void close(int)>": [
  "android.permission.NFC"
 ], 
 "<android.webkit.WebView: void externalRepresentation(android.os.Message)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.ConnectivityService: void enforceTetherChangePermission()>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.browser.BrowserActivity: void packageChanged(java.lang.String,boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.WifiService: boolean setWifiEnabled(boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.policy.impl.LockScreen: void onGrabbedStateChange(android.view.View,int)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.calendar.AlertService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.music.AudioPreview: void onDestroy()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.IccLockSettings: void onPinEntered(com.android.settings.EditPinPreference,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.pim.vcard.VCardComposer: java.lang.String access$300(android.pim.vcard.VCardComposer,java.lang.String,java.lang.reflect.Method)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.bluetooth.IBluetoothA2dp$Stub: boolean resumeSink(android.bluetooth.BluetoothDevice)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.IBluetoothPbap: android.bluetooth.BluetoothDevice getClient()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.camera.NoSearchActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.FullBackupAgent: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.tts.TtsService$1: int playEarcon(java.lang.String,java.lang.String,int,java.lang.String[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.TelephonyRegistry: void listen(java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.contacts.DialtactsActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.MessagingController: void synchronizeMailbox(com.android.email.provider.EmailContent$Account,com.android.email.provider.EmailContent$Mailbox,com.android.email.MessagingListener)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.mms.transaction.MessagingNotification: com.android.mms.transaction.MessagingNotification$MmsSmsDeliveryInfo getSmsNewDeliveryInfo(android.content.Context)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.content.ContentService: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.server.ShutdownActivity$1: void run()>": [
  "android.permission.VIBRATE", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.os.storage.ExternalStorageFormatter: void onDestroy()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.BandMode: void onCreate(android.os.Bundle)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.KeyguardUpdateMonitor: void handleSimStateChange(com.android.internal.policy.impl.KeyguardUpdateMonitor$SimArgs)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.settings.wifi.WifiAPITest: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.ui.ContactsPreferences: void registerChangeListener(com.android.contacts.ui.ContactsPreferences$ChangeListener)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.mms.transaction.MessagingNotification: void updateNotification(android.content.Context,android.content.Intent,java.lang.String,int,boolean,java.lang.CharSequence,long,java.lang.String,int,int)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.phone.BluetoothHeadsetService$6: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.net.http.Connection: void processRequests(android.net.http.Request)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.contacts.SearchResultsActivity: android.net.Uri getSelectedUri(int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.AccountSyncSettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.media.AudioService: void startBluetoothSco(android.os.IBinder)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.wifi.WifiSettings: void connect(int)>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.server.BluetoothA2dpService: void onConnectSinkResult(java.lang.String,boolean)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.bluetooth.IBluetoothPbap$Stub$Proxy: boolean isConnected(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.contacts.AttachImage: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.BluetoothHandsfree$16: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.IccFileHandler: void loadEFImgTransparent(int,int,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.usb.UsbService: void systemReady()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setSmscAddress(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.HTML5VideoViewProxy$VideoPlayer: void pause(android.webkit.HTML5VideoViewProxy)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ui.ContactsPreferences: void setSortOrder(int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.accounts.AccountManagerService: boolean addAccount(android.accounts.Account,java.lang.String,android.os.Bundle)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.calendar.DismissAllAlarmsService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.camera.Camera: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.quicksearchbox.QsbApplicationWrapper: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.util.DownloadManager: java.lang.String getMessage(android.net.Uri)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppBtEnableActivity: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.providers.contacts.ContactsProvider2: java.lang.String getType(android.net.Uri)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: void fetchName()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.settings.PhysicalKeyboardSettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.IAccountManager: void clearPassword(android.accounts.Account)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.email.activity.MessageView: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.nfc.INfcAdapter$Stub$Proxy: int createLlcpSocket(int,int,int,int)>": [
  "android.permission.NFC"
 ], 
 "<android.test.SyncBaseInstrumentation: void cancelSyncsandDisableAutoSync()>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.music.MediaPlaybackActivity: void startPlayback()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.fuelgauge.PowerUsageSummary: void onResume()>": [
  "android.permission.BATTERY_STATS", 
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.phone.PhoneUtils: void setAudioMode()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.net.wifi.IWifiManager: boolean enableNetwork(int,boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.nfc.ILlcpConnectionlessSocket$Stub$Proxy: void close(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.mms.ui.ManageSimMessages: void startQuery()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.bluetooth.IBluetoothA2dp$Stub: boolean disconnectSinkInternal(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.camera.Camera: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.MediaPlaybackService: int removeTracks(int,int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.AgendaWindowAdapter: boolean queueQuery(com.android.calendar.AgendaWindowAdapter$QuerySpec)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.exchange.SyncManager$2: android.os.Bundle autoDiscover(java.lang.String,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.DataUsage: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.am.ActivityStack: void activityPaused(android.os.IBinder,android.os.Bundle,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDeviceManager: void onDeviceAppeared(android.bluetooth.BluetoothDevice,short,android.bluetooth.BluetoothClass,java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppLiveFolder: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.webkit.WebView: void doDoubleTap()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.wifi.AdvancedSettings: boolean onKeyDown(int,android.view.KeyEvent)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.bluetooth.IBluetooth$Stub: int getDiscoverableTimeout()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.phone.OutgoingCallBroadcaster$OutgoingCallReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.service.wallpaper.WallpaperSettingsActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.inputmethod.latin.LatinIME: void onOptionKeyPressed()>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.settings.AccountPreferenceBase: void onSyncStateUpdated()>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.mms.data.WorkingMessage: void updateDraftMmsMessage(android.net.Uri,com.google.android.mms.pdu.PduPersister,com.android.mms.model.SlideshowModel,com.google.android.mms.pdu.SendReq)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.NotificationManagerService: void updateAdbNotification(boolean)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.exchange.CalendarSyncAdapterService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getCLIR(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_APN_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.CHANGE_CONFIGURATION", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.server.usb.UsbDeviceSettingsManager$MyPackageMonitor: boolean onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.spare_parts.SpareParts: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.IAccountManager: boolean addAccount(android.accounts.Account,java.lang.String,android.os.Bundle)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.server.NetworkManagementService: long getInterfaceRxCounter(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.media.AudioService$AudioHandler: void persistRingerMode()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.phone.BluetoothHandsfree$19: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager: java.util.List getAdnRecordsInEf(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.packageinstaller.InstallAppProgress: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void conference(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.tts.TtsService: int access$2000(android.tts.TtsService,java.lang.String,java.lang.String,int,java.util.ArrayList)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.DataUsage: void onResume()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void <init>(com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface)>": [
  "android.permission.CHANGE_CONFIGURATION", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.phone.CallNotifier: void access$000(com.android.phone.CallNotifier,boolean)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.exchange.SyncManager: void reloadFolderList(android.content.Context,long,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.EventInfoActivity: void access$000(com.android.calendar.EventInfoActivity)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.settings.ApplicationSettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.ContentService: int getIsSyncable(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.telephony.gsm.SmsManager: void sendDataMessage(java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: boolean updateProfiles()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.email.activity.Welcome: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.bluetooth.LocalBluetoothProfileManager$HeadsetProfileManager: boolean isPreferred(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.app.IBatteryStats: long getAwakeTimePlugged()>": [
  "android.permission.BATTERY_STATS"
 ], 
 "<android.bluetooth.BluetoothDevice: boolean createBond()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.DTMFTwelveKeyDialer: void onDialerOpen()>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.net.IThrottleManager: java.lang.String getHelpUri()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.app.ActivityGroup: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.SettingsLicenseActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppService: int onStartCommand(android.content.Intent,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.NetworkManagementService: void setIpForwardingEnabled(boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.server.LocationManagerService$2: void onSomePackagesChanged()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.google.common.io.Files: void copy(java.io.File,com.google.common.io.OutputSupplier)>": [
  "android.permission.INTERNET"
 ], 
 "<android.app.TabActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ISms$Stub: boolean disableCellBroadcast(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.service.urlrenderer.UrlRendererService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.quicksearchbox.google.GoogleSuggestClient: com.android.quicksearchbox.SourceResult queryExternal(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.Display: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IccCard: void supplyPuk2(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.browser.BrowserActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: void access$1300(com.android.internal.policy.impl.KeyguardViewMediator,int)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.mms.transaction.SmsReceiverService: void handleServiceStateChanged(android.content.Intent)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<android.content.CursorEntityIterator: android.content.Entity next()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.bluetooth.IBluetooth: java.lang.String getRemoteName(java.lang.String)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.settings.bluetooth.DockService: void connectIfEnabled(android.bluetooth.BluetoothDevice)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.exchange.EasSyncService: com.android.exchange.adapter.ProvisionParser canProvision()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.NfcAdapter: android.nfc.INfcTag getTagService()>": [
  "android.permission.NFC"
 ], 
 "<com.android.email.GroupMessagingListener: void loadAttachmentStarted(long,long,long,boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.InCallScreen: boolean initOtaState()>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.calendar.AlertService: boolean updateAlertNotification(android.content.Context)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void getPreferredNetworkType(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.AccountManager$8: android.accounts.AccountManagerFuture start()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.nfc.ndefpush.NdefPushServer: void stop()>": [
  "android.permission.NFC"
 ], 
 "<android.tts.TtsService: void cleanUpPlayer()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.MessageListAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS", 
  "android.permission.WRITE_SMS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.contacts.ui.ContactsPreferencesActivity$QueryGroupsTask: void onPostExecute(java.lang.Object)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.accounts.AccountManager: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.email.activity.MessageView: void access$2200(com.android.email.activity.MessageView,java.lang.String,java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.webkit.WebViewCore: void drawContentPicture(android.graphics.Canvas,int,boolean,boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.bluetooth.HeadsetBase: void finalize()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.EditEvent: boolean saveReminders(java.util.ArrayList,long,java.util.ArrayList,java.util.ArrayList,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: boolean handleInCallMmiCommands(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void setLine1Number(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.tech.MifareClassic: boolean authenticateSectorWithKeyA(int,byte[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.calendar.WeekActivity: void onNewIntent(android.content.Intent)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.voicedialer.CommandRecognizerEngine: void setupGrammar()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.LanguageSettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.activity.setup.AccountSetupOptions: void access$000(com.android.email.activity.setup.AccountSetupOptions)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.media.AudioService$ScoClient: void incCount()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.email.activity.MessageCompose$LoadMessageTask: void onPostExecute(java.lang.Object[])>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.BluetoothHeadsetService$6: int getState(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.launcher2.WallpaperChooser: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.google.common.io.ByteStreams: byte[] getDigest(com.google.common.io.InputSupplier,java.security.MessageDigest)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.settings.AccountSyncSettingsInAddAccount: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.sip.SipService$ConnectivityReceiver: void onReceiveInternal(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.calendar.WeekActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.IActivityManager: void setProcessLimit(int)>": [
  "android.permission.SET_PROCESS_LIMIT"
 ], 
 "<com.android.settings.fuelgauge.BatteryHistoryDetail: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.location.LocationProviderInterface: void addListener(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.WebView: void loadUrl(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.development.ConfigurationViewer: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.music.MediaPlaybackService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.NotificationPlayer: void stop()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.NetworkManagementService: void disableNat(java.lang.String,java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<android.webkit.DataLoader: void load()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void queryCdmaRoamingPreference(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.ProcessInfo: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.calendar.AgendaWindowAdapter: void updateHeaderFooter(int,int)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.cooliris.picasa.PicasaService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.BluetoothHeadsetService$6: boolean stopVoiceRecognition()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.bluetooth.IBluetoothHeadset: int getPriority(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.InCallScreen: void onBackPressed()>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.contacts.model.Sources: com.android.contacts.model.Sources getInstance(android.content.Context)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.bluetooth.BluetoothPbap: android.bluetooth.BluetoothDevice getClient()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.app.ActivityManagerNative: void setProcessLimit(int)>": [
  "android.permission.SET_PROCESS_LIMIT"
 ], 
 "<android.app.Activity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.util.EmptyService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.providers.media.MediaScannerService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ISms$Stub: boolean disableCellBroadcastRange(int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.bluetooth.IBluetooth: boolean setPasskey(java.lang.String,int)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.media.MediaPlayer: void stop()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.activity.setup.AccountSecurity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.GsmUmtsAdditionalCallOptions: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.cooliris.media.BackgroundLayer: boolean onTouchEvent(android.view.MotionEvent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.vpn.L2tpIpsecService: boolean access$400(com.android.server.vpn.VpnService)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.quicksearchbox.google.GoogleSearch: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.NetworkManagementService: void stopAccessPoint()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.ThrottleService$DataRecorder: void <init>(android.content.Context,com.android.server.ThrottleService)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.webkit.WebView: void setBackgroundColor(int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.server.BluetoothEventLoop: void addDevice(java.lang.String,java.lang.String[])>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: void acquireWakeLock()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.IActivityManager: void handleApplicationCrash(android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.internal.policy.impl.GlobalActions$1: void onPress()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.WifiService: boolean access$300(com.android.server.WifiService)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.development.BadBehaviorActivity$BadService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.DTMFTwelveKeyDialer: void sendShortDtmfToNetwork(char)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.pim.ContactsAsyncHelper$ImageTracker: android.net.Uri getPhotoUri()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.providers.downloads.DownloadService: void access$700(com.android.providers.downloads.DownloadService,com.android.providers.downloads.DownloadInfo$Reader,com.android.providers.downloads.DownloadInfo,long)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.mms.ui.WarnOfStorageLimitsActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.os.INetworkManagementService$Stub: void detachPppd(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<android.net.IConnectivityManager$Stub: java.lang.String[] getTetheringErroredIfaces()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.deskclock.AlarmClock: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.content.ISyncAdapter$Stub$Proxy: void startSync(android.content.ISyncContext,java.lang.String,android.accounts.Account,android.os.Bundle)>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.calendar.DeleteEventHelper: void access$700(com.android.calendar.DeleteEventHelper,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: void <init>(android.content.Context,com.android.internal.telephony.DriverCall,com.android.internal.telephony.cdma.CdmaCallTracker,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.music.TouchInterceptor$DropListener: void drop(int,int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.location.LocationManager: boolean addGpsStatusListener(android.location.GpsStatus$Listener)>": [
  "android.permission.ACCESS_FINE_LOCATION"
 ], 
 "<com.android.internal.telephony.gsm.SIMRecords: void setVoiceMessageWaiting(int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.WifiManager: boolean setNumAllowedChannels(int,boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.view.ContextThemeWrapper: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.location.GpsLocationProvider: void updateNetworkState(int,android.net.NetworkInfo)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void getAvailableNetworks(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.INfcAdapter: android.nfc.IP2pInitiator getP2pInitiatorInterface()>": [
  "android.permission.NFC"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppService$UpdateThread: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.quicksearchbox.google.GoogleSuggestionProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.contacts.ui.ContactsPreferencesActivity$UpdateTask: java.lang.Object doInBackground(java.lang.Object,java.lang.Object[])>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.browser.BrowserProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<android.app.ActivityManagerNative: void updateConfiguration(android.content.res.Configuration)>": [
  "android.permission.CHANGE_CONFIGURATION"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: android.net.Uri access$1000(com.android.contacts.ContactsListActivity,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.cooliris.picasa.GDataClient: void putStream(java.lang.String,java.io.InputStream,java.lang.String,com.cooliris.picasa.GDataClient$Operation)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.term.Term: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.ContactsListActivity: void doShareVisibleContacts()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.nfc.tech.MifareClassic: void decrement(int,int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.phone.BluetoothHandsfree: void access$4700(com.android.phone.BluetoothHandsfree)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.browser.Tab: void removeTabFromContentView(android.view.ViewGroup)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.net.http.Request: void readResponse(android.net.http.AndroidHttpClientConnection)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.accounts.GrantCredentialsPermissionActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.gsm.GsmSMSDispatcher: void sendMultipartTextWithPermit(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.BluetoothHandsfree$2: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.mms.data.Conversation$2: void run()>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.AlarmManagerService$ResultReceiver: void onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void setCdmaRoamingPreference(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.PackageSummary$1: void onClick(android.view.View)>": [
  "android.permission.RESTART_PACKAGES", 
  "android.permission.KILL_BACKGROUND_PROCESSES"
 ], 
 "<com.android.calendar.CalendarApplication: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.RI: void getLastDataCallFailCause(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.activity.setup.AccountSetupOptions: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.quicksearchbox.SearchActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.providers.downloads.DownloadService$1: void scanCompleted(java.lang.String,android.net.Uri)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.mms.transaction.MessagingNotification: int getUndeliveredMessageCount(android.content.Context,long[])>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$InitialState: boolean turnOffMobileConnection()>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.phone.SimContacts: void access$100(android.database.Cursor,android.content.ContentResolver,android.accounts.Account)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.mms.ui.AttachmentEditor: void update(com.android.mms.data.WorkingMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.music.MusicPicker: void onListItemClick(android.widget.ListView,android.view.View,int,long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.INfcAdapter: android.nfc.INfcTag getNfcTagInterface()>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: void handleVerifyUnlock()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.app.backup.IBackupManager$Stub: void setBackupEnabled(boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.test.SimulatedCommands: void shutdown()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.InCallScreen: void onMMICancel()>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$SyncStateTracker$1: java.lang.Boolean doInBackground(java.lang.Void[])>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.app.ExpandableListActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.SyncManager$7: void onStatusChanged(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.browser.widget.BookmarkWidgetService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.TrackBrowserActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.ThrottleService$MyHandler: void onIfaceUp()>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.RI: void access$000(com.android.internal.telephony.RI,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.SearchResultsActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.deskclock.AlarmAlertFullScreen: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.app.NetInitiatedActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.activity.Welcome: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.IConnectivityManager$Stub: boolean setRadio(int,boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.phone.OutgoingCallBroadcaster: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.widget.LockPatternUtils: void setLockPatternEnabled(boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.email.service.IEmailService$Stub$Proxy: void updateFolderList(long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ITelephony$Stub: boolean endCall()>": [
  "android.permission.CALL_PHONE"
 ], 
 "<android.nfc.INfcAdapter: void disableForegroundNdefPush(android.content.ComponentName)>": [
  "android.permission.NFC"
 ], 
 "<android.content.IContentService: void setMasterSyncAutomatically(boolean)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.settings.ConfirmLockPattern: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.data.Conversation: com.android.mms.data.Conversation get(android.content.Context,long,boolean)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.mms.ui.SlideshowActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.development.ConfigurationViewer: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.quicklaunch.QuickLaunchSettings: void clearShortcut(char)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.os.BatteryStatsImpl: void setBatteryState(int,int,int,int,int,int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.settings.TextToSpeechSettings: void initDefaultLang()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.settings.WirelessSettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.packageinstaller.PackageInstallerActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.RI: void sendSMS(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.InCallScreen: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.cooliris.media.GridLayer: boolean onKeyDown(int,android.view.KeyEvent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.INfcAdapter: android.nfc.IP2pTarget getP2pTargetInterface()>": [
  "android.permission.NFC"
 ], 
 "<android.nfc.ILlcpServiceSocket: void close(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void notifyDefaultData(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.tts.TtsService: boolean access$3100(android.tts.TtsService,java.lang.String,java.lang.String,java.util.ArrayList,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ui.ContactsPreferencesActivity$AccountSet: java.util.ArrayList buildDiff()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.music.IMediaPlaybackService$Stub: void setShuffleMode(int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ui.ContactsPreferences: void setDisplayOrder(int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void invokeOemRilRequestRaw(byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.cooliris.media.MenuBar: void renderBlended(com.cooliris.media.RenderView,javax.microedition.khronos.opengles.GL11)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManagerProxy: boolean disableCellBroadcast(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: void keyguardDone(boolean,boolean)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppService: void access$000(com.android.bluetooth.opp.BluetoothOppService)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void setPreferredNetworkType(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.AccountManager: void invalidateAuthToken(java.lang.String,java.lang.String)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<android.os.INetworkManagementService: int getInterfaceTxThrottle(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.RI: void sendUSSD(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.NetworkManagementService: void notifyInterfaceAdded(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void <init>(android.content.Context,com.android.internal.telephony.PhoneNotifier,android.net.sip.SipProfile)>": [
  "android.permission.CHANGE_CONFIGURATION", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.accounts.GrantCredentialsPermissionActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.nfc.LlcpConnectionlessSocket: int getSap()>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.policy.impl.SimUnlockScreen$CheckSimPin: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.OtaUtils: void onClickOtaActivateButton()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.calendar.AgendaListView: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.internal.telephony.ISms: boolean updateMessageOnIccEf(int,int,byte[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.contacts.util.EmptyService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.activity.setup.AccountSetupExchange: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.vpn.VpnSettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.BluetoothDeviceProfileState: void sendConnectionAccessIntent()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.mms.transaction.Transaction: byte[] sendPdu(byte[])>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.voicedialer.BluetoothVoiceDialerActivity: int access$500(com.android.voicedialer.BluetoothVoiceDialerActivity,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.settings.fuelgauge.PowerUsageDetail: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: java.lang.String findActiveUpstreamIface()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.connectivity.Tethering: void showTetheredNotification(int)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.phone.BluetoothHandsfree$25: android.bluetooth.AtCommandResult handleTestCommand()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.UUSInfo)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.sip.SipService: void grabWifiLock()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.systemui.usb.StorageNotification: void updateUsbMassStorageNotification(boolean)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void setCdmaSubscription(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.WebView: void loadData(java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.vpn.VpnService$1: void run()>": [
  "android.permission.VIBRATE"
 ], 
 "<android.net.sip.SipManager: android.net.sip.SipAudioCall makeAudioCall(android.net.sip.SipProfile,android.net.sip.SipProfile,android.net.sip.SipAudioCall$Listener,int)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.quicksearchbox.SearchSettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.service.IEmailService: void sendMeetingResponse(long,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.browser.BrowserBackupAgent: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.IContentService: boolean isSyncActive(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void disableLocationUpdates()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.soundrecorder.SoundRecorder: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void setCdmaRoamingPreference(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.WebView: boolean onTrackballEvent(android.view.MotionEvent)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.browser.BrowserActivity$5: void handleMessage(android.os.Message)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.cooliris.media.DetailMode: java.lang.CharSequence[] populateDetailModeStrings(android.content.Context,java.util.ArrayList)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.webkit.WebView: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.providers.calendar.CalendarAppWidgetService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.deviceinfo.Status: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.BluetoothSocket: void initSocketFromFdNative(int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.settings.bluetooth.LocalBluetoothManager: void startScanning(boolean)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.bluetooth.BluetoothAdapter: boolean disable()>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.service.wallpaper.WallpaperService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.cooliris.media.GridDrawManager: void drawDisplayItem(com.cooliris.media.RenderView,javax.microedition.khronos.opengles.GL11,com.cooliris.media.DisplayItem,com.cooliris.media.Texture,int,com.cooliris.media.Texture,float)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.mms.ui.WarnOfStorageLimitsActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager: boolean disableCellBroadcastRange(int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.server.TelephonyRegistry: void notifyServiceState(android.telephony.ServiceState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.server.BluetoothService: boolean updateRemoteDevicePropertiesCache(java.lang.String)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.music.MediaPlaybackService: void notifyChange(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.MediaPickerActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.camera.VideoCamera: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.WifiService$4: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.nfc.ndefpush.NdefPushClient$SendAsync: java.lang.Void doInBackground(android.nfc.NdefMessage[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: boolean callContact(android.database.Cursor)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.phone.BluetoothHeadsetService: void access$2300(com.android.phone.BluetoothHeadsetService,android.bluetooth.BluetoothDevice,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.music.MediaPlaybackService$ServiceStub: void setQueuePosition(int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.INfcTag: android.nfc.NdefMessage ndefRead(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.PhoneSubInfo: java.lang.String getLine1Number()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.cooliris.wallpaper.Slideshow$1: void run()>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: void setBtClass(android.bluetooth.BluetoothClass)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: void editSmsMessageItem(com.android.mms.ui.MessageItem)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.providers.calendar.EmptyService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ISms$Stub$Proxy: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS"
 ], 
 "<com.android.internal.policy.impl.LockPatternKeyguardView$1: void keyguardDone(boolean)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.speech.tts.ITts$Stub: int speak(java.lang.String,java.lang.String,int,java.lang.String[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.DayActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.IThrottleManager: long getPeriodStartTime(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.mms.ui.SlideViewInterface: void startVideo()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.Email: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.NetworkManagementService: java.lang.String[] getDnsForwarders()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.soundrecorder.Recorder: void startPlayback()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.SlideViewInterface: void pauseVideo()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.NfcAdapter: void <init>(android.content.Context)>": [
  "android.permission.NFC"
 ], 
 "<com.android.development.PackageBrowser: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.os.storage.IMountService$Stub: void finishMediaUpdate()>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
 ], 
 "<com.android.camera.ui.HeadUpDisplay: void restorePreferences(android.hardware.Camera$Parameters)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.phone.BluetoothHandsfree$4: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.net.sip.ISipService: void open(android.net.sip.SipProfile)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.phone.BluetoothHandsfree$16: android.bluetooth.AtCommandResult handleTestCommand()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.nfc.IP2pInitiator: byte[] receive(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$InitialState: java.lang.String findActiveUpstreamIface()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.calendar.AgendaWindowAdapter: android.net.Uri buildQueryUri(int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.google.common.io.Files: void copy(java.io.File,java.io.File)>": [
  "android.permission.INTERNET"
 ], 
 "<android.tts.TtsService$2SynthThread: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.backup.IBackupManager: void setBackupEnabled(boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapVcardManager: int composeAndSendPhonebookVcards(javax.obex.Operation,int,int,boolean,java.lang.String)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnection: void tearDownData(java.lang.Object)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.AccountManagerService: void createNoCredentialsPermissionNotification(android.accounts.Account,android.content.Intent)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.phone.PhoneUtils: void mergeCalls()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.providers.telephony.SmsProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<android.webkit.WebView: void documentAsText(android.os.Message)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.nfc.NfcAdapter: boolean disable()>": [
  "android.permission.NFC"
 ], 
 "<com.android.mms.data.WorkingMessage: void asyncDeleteDraftMmsMessage(long)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.server.BluetoothService: boolean isDiscovering()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.systemui.usb.UsbConfirmActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.INTERNET", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.email.service.IEmailServiceCallback: void loadAttachmentStatus(long,long,int,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.wifi.AdvancedSettings: void refreshWifiInfo()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.ConnectivityService: void tryFailover(int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.providers.settings.SettingsBackupAgent: int enableWifi(boolean)>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.DockObserver: void onUEvent(android.os.UEventObserver$UEvent)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.transaction.NotificationTransaction: byte[] sendPdu(byte[])>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.mms.ui.MessageListAdapter$AvatarCache$ContactData: boolean access$900(com.android.mms.ui.MessageListAdapter$AvatarCache$ContactData)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.webkit.WebView: void doFling()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.providers.calendar.CalendarAppWidgetService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.gsm.stk.CommandParamsFactory: boolean processDisplayText(com.android.internal.telephony.gsm.stk.CommandDetails,java.util.List)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.providers.calendar.EmptyService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.policy.impl.GlobalActions$Action: void onPress()>": [
  "android.permission.VIBRATE", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.widget.LockPatternUtils: void saveLockPassword(java.lang.String,int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.WifiService: boolean acquireWifiLock(android.os.IBinder,int,java.lang.String,android.os.WorkSource)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.google.common.io.MultiReader: long skip(long)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.telephony.CallerInfoAsyncQuery$CallerInfoAsyncQueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.VIBRATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.pim.vcard.VCardEntryCommitter: void onEntryCreated(android.pim.vcard.VCardEntry)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.net.wifi.WifiStateTracker: void notifySupplicantConnection()>": [
  "android.permission.CHANGE_WIFI_MULTICAST_STATE", 
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.email.Controller$LegacyListener: void synchronizeMailboxFinished(long,long,int,int)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.calendar.EditEvent: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.IBluetooth$Stub$Proxy: boolean cancelBondProcess(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.SettingsLicenseActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.mail.store.ImapStore: android.os.Bundle autoDiscover(android.content.Context,java.lang.String,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.model.EntityDelta: android.content.ContentProviderOperation$Builder buildSetAggregationMode(java.lang.Long,int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.am.ActivityManagerService: void finishInstrumentationLocked(com.android.server.am.ProcessRecord,int,android.os.Bundle)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.server.BackupManagerService: void setBackupEnabled(boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.phone.InCallScreen$13: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.mms.ui.ConversationListItem$1: void run()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.content.IContentService$Stub: void setIsSyncable(android.accounts.Account,java.lang.String,int)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: android.accounts.Account[] getAccountsByType(java.lang.String)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.mms.ui.MessageUtils: java.lang.String getLocalNumber()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: void onDisconnect(com.android.internal.telephony.Connection$DisconnectCause)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void setSmscAddress(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppService: void createServerSession(javax.obex.ObexTransport)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.SlideshowPresenter: void presentAudio(com.android.mms.ui.SlideViewInterface,com.android.mms.model.AudioModel,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.exchange.SyncManager: void waitForConnectivity()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.bluetooth.BluetoothPermissionActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppBtErrorActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.IBluetooth$Stub: java.lang.String getAddress()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.browser.WebsiteSettingsActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.webkit.LoadListener: void makeAuthResponse(java.lang.String,java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.MmiCode: void cancel()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.cooliris.media.Gallery: void access$100(com.cooliris.media.Gallery)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppBtEnablingActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.INTERNET", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.email.activity.setup.AccountSetupNames: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.InCallScreenShowActivation: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.AirplaneModeEnabler: void setAirplaneModeInECM(boolean,boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.cooliris.media.MenuBar: void onSurfaceCreated(com.cooliris.media.RenderView,javax.microedition.khronos.opengles.GL11)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.phone.PhoneUtils: void sendEmptyFlash(com.android.internal.telephony.Phone)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void onClick(android.view.View)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.mms.ui.MessageListItem: void bindCommonMessage(com.android.mms.ui.MessageListAdapter$AvatarCache,com.android.mms.ui.MessageItem)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.google.common.io.Resources: java.lang.Object readLines(java.net.UR,java.nio.charset.Charset,com.google.common.io.LineProcessor)>": [
  "android.permission.INTERNET"
 ], 
 "<android.webkit.FrameLoader: void startCacheLoad(android.webkit.CacheManager$CacheResult)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.systemui.statusbar.policy.StatusBarPolicy: void onBatteryLow(android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.activity.MessageList: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: java.lang.String getPassword(android.accounts.Account)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppBtEnablingActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.providers.downloads.DownloadProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.server.WifiWatchdogService: void handleApAlive(com.android.server.WifiWatchdogService$AccessPoint)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.contacts.util.NotifyingAsyncQueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.calendar.MonthView: void doDraw(android.graphics.Canvas)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.server.BluetoothEventLoop: void onDisplayPasskey(java.lang.String,int,int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.bluetooth.IBluetoothA2dp$Stub$Proxy: int getSinkPriority(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.google.common.io.CharStreams: java.util.List readLines(com.google.common.io.InputSupplier)>": [
  "android.permission.INTERNET"
 ], 
 "<android.server.BluetoothA2dpService: void adjustOtherSinkPriorities(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.EditPinPreference$OnPinEnteredListener: void onPinEntered(com.android.settings.EditPinPreference,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.EmergencyCallbackModeService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.SimContacts: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.ISms$Stub$Proxy: boolean updateMessageOnIccEf(int,int,byte[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.view.WindowManagerPolicy: int finishAnimationLw()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.settings.RingerVolumePreference: void cleanup()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.RuimCard: void changeIccFdnPassword(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.deviceinfo.Memory: void access$100(com.android.settings.deviceinfo.Memory,boolean)>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void powerOffRadioSafely()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.AccountManager$Future2Task: android.accounts.AccountManager$Future2Task start()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.server.BluetoothService: void initProfileState()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.nfc.tech.NfcA: byte[] transceive(byte[],boolean)>": [
  "android.permission.NFC"
 ], 
 "<com.android.calendar.WeekActivity: android.view.View makeView()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.webkit.WebView: boolean performLongClick()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.providers.downloads.DownloadThread: void checkConnectivity(com.android.providers.downloads.DownloadThread$State)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.email.activity.AccountFolderList$DeleteAccountTask: java.lang.Object doInBackground(java.lang.Object[])>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onCleanUpConnection(boolean,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.commands.svc.DataCommand: void run(java.lang.String[])>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.inputmethod.latin.LatinKeyboardBaseView$PointerQueue: void releaseAllPointersOlderThan(com.android.inputmethod.latin.PointerTracker,long)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.packageinstaller.PackageInstallerActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.nfc.NfcService$3: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.NFC"
 ], 
 "<android.bluetooth.ScoSocket: void close()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.IContentService: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.RI: void setRadioStateFromRILInt(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<java.net.UR: java.net.URLConnection openConnection()>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.contacts.SearchResultsActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.ui.EditContactActivity$AddContactTask: void onPostExecute(java.lang.Object)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.nfc.NfcService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$StopTetheringErrorState: void exit()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.email.service.IEmailService$Stub$Proxy: android.os.Bundle autoDiscover(java.lang.String,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.cooliris.media.MonitoredActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.browser.Tab$SubWindowClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.InCallScreen: void internalSwapCalls()>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.bluetooth.BluetoothDiscoverableEnabler: void handleModeChanged(int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.svox.pico.Pico: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.ConnectivityService: void sendConnectedBroadcast(android.net.NetworkInfo)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.nfc.NfcService$5: void close(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.mms.transaction.SmsReceiverService: void handleSmsReceived(android.content.Intent,int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.am.ActivityManagerService: void bumpServiceExecutingLocked(com.android.server.am.ServiceRecord,java.lang.String)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<android.server.BluetoothA2dpService: android.bluetooth.BluetoothDevice[] getNonDisconnectedSinks()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.app.AlertActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.DeviceStorageMonitorService: void checkMemory(boolean)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CLEAR_APP_CACHE", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.widget.SlidingTab: void dispatchTriggerEvent(int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.mms.ui.SlideEditorActivity$7: void onClick(android.view.View)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.INetworkManagementService: void setAccessPoint(android.net.wifi.WifiConfiguration,java.lang.String,java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.app.backup.BackupAgent: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.systemui.statusbar.StatusBarService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.AccountSyncSettingsInAddAccount: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.policy.impl.GlobalActions$SinglePressAction: void onPress()>": [
  "android.permission.VIBRATE", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.providers.downloads.DownloadNotification: void updateCompletedNotification(java.util.Collection)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.gsm.GsmSMSDispatcher: void notifyAndAcknowledgeLastIncomingSms(boolean,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: void invalidateAuthToken(java.lang.String,java.lang.String)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<android.webkit.WebViewCore: void contentSpawnScrollTo(int,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.inputmethod.latin.ContactsDictionary: void addWords(android.database.Cursor)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.mms.transaction.RetryScheduler: boolean isConnected()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.exchange.utility.CalendarUtilities: com.android.email.provider.EmailContent$Message createMessageForEventId(android.content.Context,long,int,java.lang.String,com.android.email.provider.EmailContent$Account,java.lang.String)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.music.AudioPreview: void access$700(com.android.music.AudioPreview)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.IConnectivityManager: boolean requestRouteToHost(int,int)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<android.bluetooth.BluetoothDeviceProfileState: void start()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.mms.transaction.PushReceiver: boolean access$100(android.content.Context,com.google.android.mms.pdu.NotificationInd)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.browser.DownloadTouchIcon: void storeIcon(android.graphics.Bitmap)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.phone.DataUsageListener: void access$100(com.android.phone.DataUsageListener)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapService$SocketAcceptThread: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.ConnectivityService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.BluetoothHeadset: boolean disconnectHeadsetInternal(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.development.Connectivity$3: void onClick(android.view.View)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppObexServerSession: void preStart()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.DateTimeSettingsSetupWizard: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.IActivityManager: void setAlwaysFinish(boolean)>": [
  "android.permission.SET_ALWAYS_FINISH", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.development.EnterUR: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onRadioAvailable()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.MmsApp: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.PhoneInterfaceManager: void answerRingingCallInternal()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.server.BluetoothA2dpService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.exchange.ContactsSyncAdapterService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.ISyncAdapter: void startSync(android.content.ISyncContext,java.lang.String,android.accounts.Account,android.os.Bundle)>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.settings.deviceinfo.Memory: boolean hasAppsAccessingStorage()>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
 ], 
 "<android.net.wifi.IWifiManager$Stub: java.util.List getScanResults()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.settings.AccountPreferenceBase: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.backup.IBackupManager$Stub$Proxy: java.lang.String selectBackupTransport(java.lang.String)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.phone.DTMFTwelveKeyDialer: boolean onKey(android.view.View,int,android.view.KeyEvent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$GpsStateTracker: void setCurrentState(android.content.Context,int)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.net.Downloads$ById: void deleteDownload(android.content.Context,long)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.quicksearchbox.google.GoogleSource: com.android.quicksearchbox.SourceResult getSuggestions(java.lang.String,int,boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.os.IVibratorService: void vibratePattern(long[],int,android.os.IBinder)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.voicedialer.BluetoothVoiceDialerActivity$1: void onServiceConnected()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.webkit.WebView: void setNetworkAvailable(boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.widget.VideoView: void setVideoURI(android.net.Uri)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.MessageUtils: java.lang.String getNotificationIndDetails(android.content.Context,android.database.Cursor)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.browser.BrowserActivity: void loadUrlDataIn(com.android.browser.Tab,com.android.browser.BrowserActivity$UrlData)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.phone.CallNotifier: void onPhoneStateChanged(android.os.AsyncResult)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.music.IMediaPlaybackService$Stub$Proxy: void prev()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.AgendaActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void gotoIdleAndNotifyDataConnection(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.ChooseLockGeneric: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.deskclock.AlarmReceiver: void updateNotification(android.content.Context,com.android.deskclock.Alarm,int)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.exchange.SyncManager$2: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.IContentService: void setIsSyncable(android.accounts.Account,java.lang.String,int)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.test.SimulatedCommands: void setRadioState(com.android.internal.telephony.CommandsInterface$RadioState)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.SlideViewInterface: void reset()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.ChangeIccPinScreen: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.EditEvent$TimeListener: void onTimeSet(android.widget.TimePicker,int,int)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.net.ThrottleManager: java.lang.String getHelpUri()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.calendar.DayActivity: void onResume()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.os.Vibrator: void vibrate(long[],int)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.mms.ui.ManageSimMessages$2: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.BootReceiver: void removeOldUpdatePackages(android.content.Context)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<android.nfc.NfcAdapter: android.nfc.INfcAdapter setupService()>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.nfc.LlcpSocket: int receive(byte[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.voicedialer.BluetoothVoiceDialerActivity: void acquireWakeLock(android.content.Context)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.cooliris.media.PhotoAppWidgetBind: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.BluetoothAtPhonebook$3: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.MountService: int formatVolume(java.lang.String)>": [
  "android.permission.MOUNT_FORMAT_FILESYSTEMS"
 ], 
 "<com.android.settings.wifi.WifiAPITest: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.BluetoothHandsfree$3: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: void onRestart()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_SYNC_STATS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.phone.InCallScreen: void onDialerClose()>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.GsmUmtsCallForwardOptions: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.backup.IBackupManager$Stub: void restoreAtInstall(java.lang.String,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<android.bluetooth.IBluetoothPbap$Stub: boolean isConnected(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.net.wifi.WifiManager: boolean isWifiApEnabled()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.contacts.ContactsLiveFolders$AllContacts: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.InCallScreen: void onDialerOpen()>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.bluetooth.BluetoothDeviceProfileState$IncomingA2dp: void exit()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.music.MediaPlaybackActivity$6: void onClick(android.view.View)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.server.BluetoothService: byte[] readOutOfBandData()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.cooliris.media.ImageButton: void renderBlended(com.cooliris.media.RenderView,javax.microedition.khronos.opengles.GL11)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.phone.BluetoothHandsfree$18: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.net.sip.SipManager: void setRegistrationListener(java.lang.String,android.net.sip.SipRegistrationListener)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.music.AudioPreview: void onUserLeaveHint()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.GlobalActions$ToggleAction: void onPress()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.webkit.Network: android.webkit.Network getInstance(android.content.Context)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.am.ActivityManagerService: boolean bringUpServiceLocked(com.android.server.am.ServiceRecord,int,boolean)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.inputmethod.latin.CandidateView: boolean onTouchEvent(android.view.MotionEvent)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.internal.telephony.cdma.CdmaSMSDispatcher: int dispatchMessage(com.android.internal.telephony.SmsMessageBase)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.transaction.RetrieveTransaction: void run()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SMS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_SMS"
 ], 
 "<android.net.Downloads$ById: java.lang.String getMimeTypeForId(android.content.Context,long)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.certinstaller.CertInstaller: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetherableWifiRegexs()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.NetworkManagementService: void detachPppd(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.soundrecorder.SoundRecorder: void access$000(com.android.soundrecorder.SoundRecorder)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.Connection: void cancelPostDial()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.cooliris.picasa.PicasaContentProvider: void syncAlbumPhotos(long,boolean,android.content.SyncResult)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.INTERNET"
 ], 
 "<com.android.settings.LocalePicker: void onListItemClick(android.widget.ListView,android.view.View,int,long)>": [
  "android.permission.CHANGE_CONFIGURATION"
 ], 
 "<android.os.INetworkManagementService$Stub: void setAccessPoint(android.net.wifi.WifiConfiguration,java.lang.String,java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.cooliris.media.PhotoAppWidgetConfigure: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.AccountPreferenceBase: void updateAuthDescriptions()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.cooliris.media.PhotoAppWidgetConfigure: void onCreate(android.os.Bundle)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.settings.quicklaunch.QuickLaunchSettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.MediaFormat: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.activity.setup.AccountSetupExchange: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void sendDtmf(char)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.stk.StkService: void <init>(com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.gsm.SIMRecords,android.content.Context,com.android.internal.telephony.gsm.SIMFileHandler,com.android.internal.telephony.gsm.SimCard)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.music.PlaylistBrowserActivity: void access$000(com.android.music.PlaylistBrowserActivity)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.IWifiManager$Stub: void acquireMulticastLock(android.os.IBinder,java.lang.String)>": [
  "android.permission.CHANGE_WIFI_MULTICAST_STATE"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: boolean smsContact(android.database.Cursor)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.webkit.WebViewCore: void destroy()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.DropBoxManagerService: android.os.DropBoxManager$Entry getNextEntry(java.lang.String,long)>": [
  "android.permission.READ_LOGS"
 ], 
 "<com.android.exchange.SyncManager$AccountObserver: void onAccountChanged()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: void handleHide()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDeviceManager: java.lang.String getName(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void exitEmergencyCallbackMode()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.cooliris.picasa.PicasaService: void performSyncImpl(android.content.Context,android.accounts.Account,android.os.Bundle,android.content.SyncResult)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo markAsVoiceMail()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.browser.BrowserActivity: java.lang.String smartUrlFilter(android.net.Uri)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.internal.util.HierarchicalStateMachine$HsmHandler$QuittingState: void exit()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.BluetoothHandsfree$17: android.bluetooth.AtCommandResult handleActionCommand()>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.providers.userdictionary.DictionaryBackupAgent: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.voicedialer.BluetoothVoiceDialerActivity: void access$2200(com.android.voicedialer.BluetoothVoiceDialerActivity)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.provider.Telephony$Sms$Sent: android.net.Uri addMessage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.cooliris.media.Layer: void renderOpaque(com.cooliris.media.RenderView,javax.microedition.khronos.opengles.GL11)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.email.Controller$ServiceCallback: void loadAttachmentStatus(long,long,int,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.policy.impl.AccountUnlockScreen$2: void run(android.accounts.AccountManagerFuture)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.mms.ui.SlideshowEditActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.content.pm.IPackageManager$Stub: void freeStorageAndNotify(long,android.content.pm.IPackageDataObserver)>": [
  "android.permission.CLEAR_APP_CACHE"
 ], 
 "<com.android.server.NetworkManagementService: void untetherInterface(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.term.TermPreferences: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.ui.EditSlideDurationActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.ContextImpl: android.nfc.NfcManager getNfcManager()>": [
  "android.permission.NFC"
 ], 
 "<com.android.phone.NetworkQueryService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.backup.RestoreSession: int getAvailableRestoreSets(android.app.backup.RestoreObserver)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityManagerService$AppNotResponding: void run()>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<android.pim.vcard.VCardComposer$HandlerForOutputStream: boolean onInit(android.content.Context)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.email.MessagingController$7: void run()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.WindowManagerService: void setAnimationScale(int,float)>": [
  "android.permission.SET_ANIMATION_SCALE"
 ], 
 "<com.android.phone.PhoneInterfaceManager: boolean isSimPinEnabled()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.phone.SipCallOptionHandler: void createSipPhoneIfNeeded(android.net.sip.SipProfile)>": [
  "android.permission.USE_SIP", 
  "android.permission.CHANGE_CONFIGURATION", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.contacts.TwelveKeyDialer: void setFormattedDigits(java.lang.String)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.email.activity.MessageCompose$LoadMessageTask: void onPostExecute(java.lang.Object)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.EmergencyCallbackModeService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.MessagingListener: void loadMessageForViewFailed(long,java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.BluetoothHeadsetService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.wifi.WifiManager: boolean isWifiEnabled()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.mms.transaction.SmsReceiverService: void handleSendMessage()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<android.bluetooth.IBluetooth$Stub: boolean getTrustState(java.lang.String)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.providers.settings.SettingsBackupAgent: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.SMSDispatcher$2: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.LockPatternUtils: void setBoolean(java.lang.String,boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.backup.IBackupManager$Stub: java.lang.String selectBackupTransport(java.lang.String)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getLine1AlphaTag()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.app.IBatteryStats: void setBatteryState(int,int,int,int,int,int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: boolean deleteSelection()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.mms.transaction.SendTransaction: byte[] sendPdu(long,byte[],java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.AccessibilityManagerService: void <init>(android.content.Context)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.vpn.PptpService: void access$600(com.android.server.vpn.VpnService,java.lang.Throwable)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.email.activity.AccountFolderList: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppIncomingFileConfirmActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.AccessibilitySettings: void onPause()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.media.AudioService$SettingsObserver: void <init>(android.media.AudioService)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: android.net.Uri getPeopleFilterUri(java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.browser.Tab$SubWindowChromeClient: void onSelectionStart(android.webkit.WebView)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.camera.Camera$8: void run()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.server.BluetoothService: java.lang.String getAddressFromObjectPath(java.lang.String)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.am.ActivityManagerService: void bringDownServiceLocked(com.android.server.am.ServiceRecord,boolean)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.email.service.EasAuthenticatorServiceAlternate: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.EventInfoActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.cooliris.media.MovieView: void onPause()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.exchange.SyncManager$1: void syncMailboxStatus(long,int,int)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.development.DevelopmentSettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void syncClirSetting()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.InCallScreen$9: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ContactsListActivity: void onStart()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.camera.ui.CamcorderHeadUpDisplay: void restorePreferences(android.hardware.Camera$Parameters)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isSimPinEnabled()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.bluetooth.BluetoothDevice: boolean setRemoteOutOfBandData()>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.BluetoothHandsfree$BluetoothPhoneState: void <init>(com.android.phone.BluetoothHandsfree,com.android.phone.BluetoothHandsfree$1)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.OtaUtils: void onClickHandler(int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.WindowManagerService: void systemReady()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.app.ActivityManagerNative: void startRunning(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.camera.NoSearchActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.IBluetoothHeadset$Stub: boolean isConnected(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.email.activity.MessageView: void onShowPictures()>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET"
 ], 
 "<android.nfc.INfcAdapter$Stub: java.lang.String getProperties(java.lang.String)>": [
  "android.permission.NFC"
 ], 
 "<android.nfc.tech.MifareClassic: void reconnect()>": [
  "android.permission.NFC"
 ], 
 "<android.webkit.LoadListener: void handleSslError(android.net.http.SslError)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.mms.ui.ManageSimMessages: boolean onContextItemSelected(android.view.MenuItem)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<android.media.MediaScannerClient: void scanFile(java.lang.String,long,long)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.webkit.WebView: void sendMoveMouse(int,int,int,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.systemui.statusbar.StatusBarService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipConnection$1: void onCallEnded(android.net.sip.SipAudioCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.htmlviewer.HTMLViewerActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.Downloads$ById: java.io.InputStream openDownloadStream(android.content.Context,long)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.nfc.NfcService$3: int connect(int,int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.camera.Camera: void access$900(com.android.camera.Camera)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.phone.sip.SipSharedPreferences: void setSipCallOption(java.lang.String)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.service.EasAuthenticatorService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.cooliris.cache.CacheService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.calendar.WeekActivity: void goToToday()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.app.IActivityManager: void updateConfiguration(android.content.res.Configuration)>": [
  "android.permission.CHANGE_CONFIGURATION"
 ], 
 "<com.android.server.WindowManagerService: void disableKeyguard(android.os.IBinder,java.lang.String)>": [
  "android.permission.DISABLE_KEYGUARD"
 ], 
 "<android.app.IntentService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.PackageManagerService$5: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void notifyServiceStateChanged(android.telephony.ServiceState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.development.AccountsTester$2: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.IntRangeManager: boolean updateRanges()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.bluetooth.DockService: void access$100(com.android.settings.bluetooth.DockService,android.bluetooth.BluetoothDevice,int,int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.GetPin2Screen: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void sendDtmf(char)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.TwelveKeyDialer: void afterTextChanged(android.text.Editable)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.phone.BluetoothHandsfree: void connectHeadset(android.bluetooth.HeadsetBase,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.wifi.WifiInfo: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.PhoneApp: void handleOtaEvents(android.os.Message)>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.provider.Contacts$People: long tryGetMyContactsGroupId(android.content.ContentResolver)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.webkit.WebViewCore: void sendNotifyProgressFinished()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.WifiWatchdogService$2: void handleNetworkStateChanged(android.net.NetworkInfo)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.phone.DTMFTwelveKeyDialer: void onDialerClose()>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.content.IContentService: android.content.SyncInfo getCurrentSync()>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.email.service.IEmailService: void updateFolderList(long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.CallNotifier: void onDisconnect(android.os.AsyncResult)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.contacts.RecentCallsListActivity$RecentCallsAdapter: void run()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.test.TestBrowserActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.EmergencyDialer: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.MediaPlaybackActivity: void access$800(com.android.music.MediaPlaybackActivity)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.ClassZeroActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.IThrottleManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.DeviceStorageMonitorService: void <init>(android.content.Context)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CLEAR_APP_CACHE", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.calendar.CalendarView$3: void run()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.bluetooth.BluetoothDevice: int getBondState()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$SyncStateTracker$1: void onPostExecute(java.lang.Object)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getSmscAddress(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.cooliris.media.ImageButton: void renderOpaque(com.cooliris.media.RenderView,javax.microedition.khronos.opengles.GL11)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.development.DevelopmentSettings: void writeCompatibilityOptions()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.Connection dial(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.DisableCarModeActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.deviceinfo.Memory: void doUnmount(boolean)>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppObexClientSession: void start(android.os.Handler)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.IBluetooth$Stub: boolean startDiscovery()>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.DataConnection$DcDisconnectingState: void exit()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.nfc.INfcAdapter$Stub$Proxy: android.nfc.ILlcpSocket getLlcpInterface()>": [
  "android.permission.NFC"
 ], 
 "<android.os.storage.IMountService$Stub: void unmountVolume(java.lang.String,boolean)>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
 ], 
 "<com.android.internal.app.ChooserActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.ChooseLockPassword: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.WindowManagerService$1: void acquired()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.email.activity.MessageList: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.IContentService$Stub$Proxy: void removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.exchange.adapter.AccountSyncAdapter: void setSyncKey(java.lang.String,boolean)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.WindowManagerService$InputMonitor: int interceptKeyBeforeQueueing(long,int,int,int,int,int,boolean)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.VIBRATE", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CALL_PHONE", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.WifiWatchdogService: void handleCheckAp(com.android.server.WifiWatchdogService$AccessPoint)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.inputmethod.latin.LatinIME: void access$500(com.android.inputmethod.latin.LatinIME)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.music.IMediaPlaybackService$Stub$Proxy: int removeTrack(long)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void setGsmBroadcastActivation(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.DayActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.inputmethod.latin.LatinIME: void promoteToUserDictionary(java.lang.String,int)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.development.MediaScannerActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.BluetoothHandsfree$25: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.email.activity.setup.AccountSetupOptions: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.wifi.WifiSettings: void handleEvent(android.content.Intent)>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void separateConnection(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ui.QuickContactActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.WeekActivity: void onRestoreInstanceState(android.os.Bundle)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.email.activity.FolderMessageList: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: void confirmCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,android.os.Bundle,boolean)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.phone.AccelerometerListener$1: void onSensorChanged(android.hardware.SensorEvent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ui.EditContactActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.AddAccountSettings: void onCreate(android.os.Bundle)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.READ_SYNC_STATS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.providers.downloads.ui.DownloadList: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.transaction.TransactionService: int onStartCommand(android.content.Intent,int,int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SMS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.contacts.ui.ShowOrCreateActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.browser.BrowserActivity$18: void onPostExecute(java.util.Set)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.development.EnterUR: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.browser.BrowserActivity: com.android.browser.Tab openTab(java.lang.String)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.systemui.usb.UsbPermissionActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.camera.VideoCamera: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.tech.NfcB: void close()>": [
  "android.permission.NFC"
 ], 
 "<android.location.ILocationManager$Stub$Proxy: android.os.Bundle getProviderInfo(java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.music.VideoBrowserActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.providers.contacts.LegacyApiSupport: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.exchange.adapter.AbstractSyncAdapter: void <init>(com.android.email.provider.EmailContent$Mailbox,com.android.exchange.EasSyncService)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<android.webkit.WebView: void documentHasImages(android.os.Message)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.Use2GOnlyCheckBoxPreference$MyHandler: void handleSetPreferredNetworkTypeResponse(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.cooliris.media.Photographs: void onCreate(android.os.Bundle)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.app.AliasActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void setSystemLocale(java.lang.String,java.lang.String)>": [
  "android.permission.CHANGE_CONFIGURATION"
 ], 
 "<com.android.calendar.AlertActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.pm.IPackageManager: boolean setInstallLocation(int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.calendar.DayActivity: void onRestoreInstanceState(android.os.Bundle)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.server.ThrottleService$InterfaceObserver: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.development.Connectivity$12: void onClick(android.view.View)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.settings.vpn.VpnSettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setRadioPower(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.WifiManager: int addOrUpdateNetwork(android.net.wifi.WifiConfiguration)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.phone.BluetoothHandsfree: void expectCallStart()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.IAudioService$Stub: void startBluetoothSco(android.os.IBinder)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.providers.applications.ApplicationLauncher: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.widget.VideoView: boolean onKeyDown(int,android.view.KeyEvent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.AccountSyncSettings: void updateAccountCheckboxes(android.accounts.Account[])>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.deskclock.AlarmClock: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.data.WorkingMessage: com.android.mms.data.WorkingMessage loadDraft(com.android.mms.ui.ComposeMessageActivity,com.android.mms.data.Conversation)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: void onRemoteDisconnect(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.LocalePickerInSetupWizard: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.os.IHardwareService: void setFlashlightEnabled(boolean)>": [
  "android.permission.FLASHLIGHT"
 ], 
 "<com.android.deskclock.SettingsActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.IBluetoothHeadset: boolean createIncomingConnect(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.telephony.gsm.SmsManager: boolean copyMessageToSim(byte[],byte[],int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.mms.ui.ConversationListItem: void bind(android.content.Context,com.android.mms.ui.ConversationListItemData)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.mms.transaction.MmsMessageSender: boolean sendMessage(long)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.settings.LanguageSettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.providers.downloads.Helpers: boolean isNetworkAvailable(com.android.providers.downloads.SystemFacade)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.mms.data.Conversation: void asyncDeleteObsoleteThreads(android.content.AsyncQueryHandler,int)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.BackupManagerService$PerformClearTask: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.HeadsetBase: void acquireWakeLock()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.transaction.MessagingNotification: com.android.mms.transaction.MessagingNotification$MmsSmsNotificationInfo getNewMessageNotificationInfo(java.lang.String,java.lang.String,android.content.Context,int,java.lang.String,long,long,int)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.bluetooth.BluetoothHeadset: boolean createIncomingConnect(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.browser.BrowserActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.exchange.SyncManager: java.lang.String getDeviceIdInternal(android.content.Context)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.mms.util.DraftCache: void rebuildCache()>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.providers.contacts.ContactsProvider2: int deleteData(long,java.lang.String[])>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.sip.SipService$ConnectivityReceiver$MyTimerTask$1: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.TelephonyRegistry: void broadcastSignalStrengthChanged(android.telephony.SignalStrength)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.IContentService$Stub: void addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.music.MediaPlaybackService$MultiPlayer: void start()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.connectivity.Tethering$TetherInterfaceSM$UnavailableState: void enter()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.development.Development: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void setCdmaSubscription(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.AccountAuthenticatorActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.os.INetworkManagementService$Stub$Proxy: java.lang.String[] getDnsForwarders()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.AddAccountSettings: void onAccountsUpdated(android.accounts.Account[])>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.email.service.IEmailService$Stub: void loadAttachment(long,java.lang.String,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.BluetoothA2dp: int getSinkState(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.phone.Settings: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.systemui.usb.UsbStorageActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.CallManager: boolean sendBurstDtmf(java.lang.String,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.quicksearchbox.QsbApplicationWrapper: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.sip.SipSettings$8: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_SIP"
 ], 
 "<com.android.settings.bluetooth.RequestPermissionHelperActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: java.lang.String getPassword(android.accounts.Account)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.phone.PhoneUtils: void setMute(boolean)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.internal.app.ChooserActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.RuimFileHandler: void loadEFLinearFixed(int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.SlideshowEditActivity$SlideListAdapter: android.view.View createViewFromResource(int,android.view.View,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.WeekView: void initView(com.android.calendar.CalendarView)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.settings.AccountSyncSettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.IThrottleManager$Stub$Proxy: int getCliffLevel(java.lang.String,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.providers.downloads.DownloadThread: java.io.InputStream openResponseEntity(com.android.providers.downloads.DownloadThread$State,org.apache.http.HttpResponse)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.nfc.IP2pTarget$Stub: int getMode(int)>": [
  "android.permission.NFC"
 ], 
 "<com.cooliris.media.Layer: boolean onTouchEvent(android.view.MotionEvent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.storage.IMountService: int[] getStorageUsers(java.lang.String)>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
 ], 
 "<com.android.browser.BrowserHistoryPage: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.packageinstaller.UninstallAppProgress: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.CalendarPreferenceActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.ui.EditContactActivity$QueryEntitiesTask: void onPostExecute(java.lang.Object,java.lang.Object)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider: void updateButtons(android.widget.RemoteViews,android.content.Context)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.bluetooth.IBluetoothA2dp: android.bluetooth.BluetoothDevice[] getNonDisconnectedSinks()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.os.INetworkManagementService$Stub$Proxy: void detachPppd(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.phone.CdmaVoicePrivacyCheckBoxPreference: void <init>(android.content.Context,android.util.AttributeSet)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.quicksearchbox.google.GoogleSuggestClient: boolean isNetworkConnected()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.calendar.CalendarActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.calendar.DayView: void onDraw(android.graphics.Canvas)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.server.WifiWatchdogService: void access$900(com.android.server.WifiWatchdogService,com.android.server.WifiWatchdogService$AccessPoint)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.ShutdownActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void disableSingleLocationUpdate()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.CellBroadcastSms: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.providers.calendar.CalendarProvider2: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteQueryBuilder,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.accounts.IAccountManagerResponse$Stub$Proxy: void onResult(android.os.Bundle)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.IccCard: void setIccFdnEnabled(boolean,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: void handleKeyguardDone(boolean)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.speech.RecognitionService$RecognitionServiceBinder: void startListening(android.content.Intent,android.speech.IRecognitionListener)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: android.accounts.Account[] getAccounts(java.lang.String)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void getSmscAddress(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.VideoView: void pause()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneBase: void queryCdmaRoamingPreference(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.launcher2.LauncherApplication: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.svox.pico.CheckVoiceData: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.browser.BookmarkSearch: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.test.mock.MockContentResolver: boolean isSyncPending(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.browser.BrowserBookmarksAdapter: void deleteRow(int)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<android.app.AliasActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.applications.ManageApplications: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.bluetooth.RequestPermissionHelperActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void setCdmaSubscription(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.sip.SipManager: boolean isOpened(java.lang.String)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.mms.ui.ConversationList: boolean onOptionsItemSelected(android.view.MenuItem)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.bluetooth.IBluetooth: void removeServiceRecord(int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.bluetooth.IBluetoothA2dp$Stub: int getSinkState(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.exchange.adapter.CalendarSyncAdapter$EasCalendarSyncParser: void commandsParser()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.net.sip.ISipService$Stub$Proxy: void setRegistrationListener(java.lang.String,android.net.sip.ISipSessionListener)>": [
  "android.permission.USE_SIP"
 ], 
 "<android.net.sip.ISipService: void close(java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_SIP"
 ], 
 "<com.android.settings.Display: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.exchange.SyncManager$5: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.os.BatteryStatsImpl: int getCurrentBluetoothPingCount()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.providers.contacts.LegacyApiSupport: int updateOrganizations(long,android.content.ContentValues)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.preference.YesNoPreference: void onDialogClosed(boolean)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.calendar.CalendarActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.IConnectivityManager: int getNetworkPreference()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.music.MusicUtils: void playAll(android.content.Context,android.database.Cursor,int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.browser.WebsiteSettingsActivity$SiteAdapter$2: void onReceiveValue(java.lang.Object)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.systemui.usb.StorageNotification: void setUsbStorageNotification(int,int,int,boolean,boolean,android.app.PendingIntent)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.sip.SipService: void access$400(com.android.server.sip.SipService)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void handleExitEmergencyCallbackMode(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.INfcTag: int ndefMakeReadOnly(int)>": [
  "android.permission.NFC"
 ], 
 "<android.net.http.RequestQueue: void setProxyConfig()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.bluetooth.DockService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.exchange.EasOutboxService: com.android.exchange.provider.GalResult searchGal(android.content.Context,long,java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.settings.bluetooth.LocalBluetoothProfileManager: boolean connect(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.mms.data.Contact$ContactsCache: com.android.mms.data.Contact getContactInfo(java.lang.String)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.nfc.NfcService$6: int connect(int,int)>": [
  "android.permission.NFC"
 ], 
 "<com.google.common.io.ByteStreams: boolean equal(com.google.common.io.InputSupplier,com.google.common.io.InputSupplier)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.browser.BrowserActivity$2: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.PhoneBase: void <init>(com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean)>": [
  "android.permission.CHANGE_CONFIGURATION", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.widget.VideoView: void suspend()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.bluetooth.DockService: void handleBtStateChange(android.content.Intent,int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.os.INetworkManagementService$Stub$Proxy: void startAccessPoint(android.net.wifi.WifiConfiguration,java.lang.String,java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.accounts.IAccountManager: void removeAccount(android.accounts.IAccountManagerResponse,android.accounts.Account)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.music.WeekSelector: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.cooliris.media.MovieView: void onDestroy()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.NotificationMgr: void notifyMissedCall(java.lang.String,java.lang.String,java.lang.String,long)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.deskclock.SetAlarm$6: void run()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.RI: void iccIO(int,int,java.lang.String,int,int,int,java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.provision.DefaultActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.settings.bluetooth.BluetoothPairingRequest: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.VIBRATE", 
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.os.storage.ExternalStorageFormatter: int onStartCommand(android.content.Intent,int,int)>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS", 
  "android.permission.MOUNT_FORMAT_FILESYSTEMS"
 ], 
 "<com.android.mms.ui.ConfirmRateLimitActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void doShareVisibleContacts()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.systemui.statusbar.policy.StatusBarPolicy: void access$2000(com.android.systemui.statusbar.policy.StatusBarPolicy,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.quicksearchbox.SearchWidgetConfigActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.RI: void getLastCallFailCause(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.connectivity.Tethering: void sendTetherStateChangedBroadcast()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.location.LocationManager: void setTestProviderLocation(java.lang.String,android.location.Location)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.internal.telephony.RI: void deleteSmsOnSim(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void sendTerminalResponse(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: void setWifiApConfiguration(android.net.wifi.WifiConfiguration)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.contacts.SearchResultsActivity: android.net.Uri getJoinSuggestionsUri(java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.LocalePickerInSetupWizard: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.webkit.StreamLoader: void load()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.email.service.EmailServiceProxy$9: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.music.IMediaPlaybackService$Stub$Proxy: void openFile(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.camera.Camera: void access$6500(com.android.camera.Camera)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.mms.data.Contact$ContactsCache: void updateContact(com.android.mms.data.Contact)>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.settings.bluetooth.LocalBluetoothProfileManager$HeadsetProfileManager: int getConnectionStatus(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.net.IConnectivityManager$Stub: java.lang.String[] getTetherableUsbRegexs()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.am.BatteryStatsService: void noteBluetoothOn()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void setSmscAddress(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.svox.pico.Pico: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.gsm.GsmSMSDispatcher: void sendSms(com.android.internal.telephony.SMSDispatcher$SmsTracker)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.NetworkManagementService: void startAccessPoint(android.net.wifi.WifiConfiguration,java.lang.String,java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.bluetooth.opp.TestActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.ConnectivityService: void enforceTetherAccessPermission()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.quicksearchbox.ui.ContactBadge: void assignContactFromEmail(java.lang.String,boolean)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.calendar.WeekView: void doFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.exchange.EasSyncService: org.apache.http.HttpResponse sendHttpClientPost(java.lang.String,org.apache.http.HttpEntity)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.transaction.SendTransaction: void notifyObservers()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SMS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_SMS"
 ], 
 "<android.tts.TtsService: int access$2200(android.tts.TtsService,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.exchange.adapter.AbstractSyncAdapter: boolean parse(java.io.InputStream)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.app.ActivityManager: java.util.List getRunningTasks(int)>": [
  "android.permission.GET_TASKS"
 ], 
 "<android.nfc.INfcAdapter: android.nfc.ILlcpSocket getLlcpInterface()>": [
  "android.permission.NFC"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppManager: void disableBluetooth()>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: void adjustUserActivityLocked()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.telephony.TelephonyManager: java.lang.String getLine1Number()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.sip.SipService: void releaseWifiLock()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ui.ContactsPreferencesActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.calendar.AgendaByDayAdapter: void calculateDays(com.android.calendar.AgendaWindowAdapter$DayAdapterInfo)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.phone.Ringer: void ring()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<android.tts.TtsService$1SynthThread: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.MonthActivity: void onNewIntent(android.content.Intent)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.server.BackupManagerService$RunBackupReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.NotificationManagerService: void keepProcessAliveLocked(int)>": [
  "android.permission.SET_PROCESS_LIMIT"
 ], 
 "<com.android.internal.telephony.RI: void setCLIR(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.LocationManager: void _requestLocationUpdates(java.lang.String,android.location.Criteria,long,float,boolean,android.app.PendingIntent)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipConnection$1: void onCallEnded(com.android.internal.telephony.Connection$DisconnectCause)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setPreferredNetworkType(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapService$2: int getState()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.app.AlertActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.INTERNET", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.MediaFormat: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.soundrecorder.Recorder$OnStateChangedListener: void onStateChanged(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.google.common.io.ByteStreams$4: java.io.InputStream getInput()>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.telephony.RI: void getGPRSRegistrationState(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: java.lang.String getDrmMimeType(long)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.mms.model.SlideshowModel: com.android.mms.model.SlideshowModel createFromPduBody(android.content.Context,com.google.android.mms.pdu.PduBody)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager$SettingsObserver: void observe()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.providers.telephony.TelephonyProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>": [
  "android.permission.WRITE_APN_SETTINGS"
 ], 
 "<com.android.phone.EmergencyCallbackModeService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.NotificationPlayer: void play(android.content.Context,android.net.Uri,boolean,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.bluetooth.LocalBluetoothProfileManager$HeadsetProfileManager: java.util.Set getConnectedDevices()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.nfc.IP2pInitiator: int getMode(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.browser.BrowserPreferencesPage: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.server.BluetoothService: boolean disable()>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: void <init>(android.content.Context,java.lang.String,com.android.internal.telephony.cdma.CdmaCallTracker,com.android.internal.telephony.cdma.CdmaCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.tech.NfcF: void close()>": [
  "android.permission.NFC"
 ], 
 "<android.webkit.HTML5Audio: void setDataSource(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.providers.downloads.DownloadService$UpdateThread: void run()>": [
  "android.permission.VIBRATE", 
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET"
 ], 
 "<android.nfc.tech.MifareUltralight: byte[] transceive(byte[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.exchange.EasOutboxService: java.lang.String acknowledgeProvision(java.lang.String,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.SIMRecords: void fetchSimRecords()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void setSystemLocale(java.lang.String,java.lang.String)>": [
  "android.permission.CHANGE_CONFIGURATION"
 ], 
 "<com.android.email.activity.setup.AccountSetupOptions: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.app.NetInitiatedActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.browser.BrowserActivity: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: void conference()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.tech.TagTechnology: void close()>": [
  "android.permission.NFC"
 ], 
 "<com.android.providers.telephony.SmsProvider: android.database.Cursor getAllMessagesFromIcc()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.server.NetworkManagementService: void access$200(com.android.server.NetworkManagementService,java.lang.String,boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.DataUsageListener: void updatePolicy()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.am.ActivityRecord: boolean keyDispatchingTimedOut()>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.settings.AccessibilitySettings: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.launcher2.LauncherApplication: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: void refreshBtClass()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.contacts.ViewContactActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: void connect(com.android.settings.bluetooth.LocalBluetoothProfileManager$Profile)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.exchange.SyncManager: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.DTMFTwelveKeyDialer$DTMFKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.activity.setup.AccountSetupExchange: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.CallNotifier: void onCdmaCallWaitingReject()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.email.Controller: void updateMailbox(long,long,com.android.email.Controller$Result)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.cooliris.media.TimeBar: void renderOpaque(com.cooliris.media.RenderView,javax.microedition.khronos.opengles.GL11)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.music.MusicPicker: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.development.BadBehaviorActivity$BadService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.AgendaActivity: void onResume()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingInsecureRfcommOn(int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.os.INetworkManagementService: long getInterfaceTxCounter(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.widget.LockPatternView: com.android.internal.widget.LockPatternView$Cell detectAndAddHit(float,float)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.VIBRATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.ThrottleService$DataRecorder: boolean setNextPeriod(java.util.Calendar,java.util.Calendar)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice$Callback: void onDeviceAttributesChanged(com.android.settings.bluetooth.CachedBluetoothDevice)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.policy.impl.AccountUnlockScreen: void onTextChanged(java.lang.CharSequence,int,int,int)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.phone.PhoneApp: void onConfigurationChanged(android.content.res.Configuration)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.browser.Tab$3$4: java.lang.String[] doInBackground(java.lang.Void[])>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: void addAcount(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<android.tts.TtsService$1: int playSilence(java.lang.String,long,int,java.lang.String[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.browser.WebsiteSettingsActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.exchange.adapter.CalendarSyncAdapter$CalendarOperations: void updatedExtendedProperty(java.lang.String,java.lang.String,long)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.provider.Calendar$Calendars: int deleteCalendarsForAccount(android.content.ContentResolver,android.accounts.Account)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.internal.telephony.ISms$Stub$Proxy: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS"
 ], 
 "<com.android.settings.wifi.WifiConfigInfo: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.BluetoothHandsfree$22: android.bluetooth.AtCommandResult handleTestCommand()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.svox.pico.EngineSettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.RI: void getDataCallList(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.AccountSyncSettings: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.DefaultPhoneNotifier: void notifyDataConnectionFailed(com.android.internal.telephony.Phone,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.tech.MifareClassic: void transfer(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.inputmethod.latin.PointerTracker: void onUpEvent(int,int,long)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.contacts.ContactsListActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.IAccountManager$Stub: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.providers.contacts.ContactsProvider2: boolean initialize()>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.email.activity.MailboxList: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.model.EntityDelta: void buildDiff(java.util.ArrayList)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.quicksearchbox.google.GoogleSettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.activity.setup.AccountSecurity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.model.MediaModel: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,com.android.mms.drm.DrmWrapper)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.email.service.IEmailService$Stub: int validate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,boolean,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.activity.MessageList: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.IBluetooth$Stub: boolean cancelDiscovery()>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.sip.SipService$AutoRegistrationProcess: void onRegistering(android.net.sip.ISipSession)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.WebViewCore: void sendMessage(int,java.lang.Object)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.email.activity.MessageCompose: void displayQuotedText(java.lang.String,java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.accounts.IAccountManager: java.lang.String getPassword(android.accounts.Account)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.settings.fuelgauge.PowerUsageSummary: void addBluetoothUsage(long)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.speech.tts.ITts: boolean synthesizeToFile(java.lang.String,java.lang.String,java.lang.String[],java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void supplyIccPin(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.WebTextView: void onScrollChanged(int,int,int,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.app.ActivityManagerNative: void moveTaskToFront(int)>": [
  "android.permission.REORDER_TASKS"
 ], 
 "<com.android.internal.telephony.WapPushOverSms: void dispatchWapPdu_default(byte[],int,int,java.lang.String,int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.PhoneApp: void updateWakeState()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.app.PendingIntent)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.gsm.SimSmsInterfaceManager$CellBroadcastRangeManager: boolean tryAddSingleRange(int,int,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.IAudioService$Stub$Proxy: void stopBluetoothSco(android.os.IBinder)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.net.wifi.IWifiManager: boolean reconnect()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$StopTetheringErrorState: void enter()>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.contacts.ViewContactActivity: boolean makeItemDefault(android.view.MenuItem)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.ITelephony$Stub$Proxy: void call(java.lang.String)>": [
  "android.permission.CALL_PHONE"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$WifiStateTracker: void setImageViewResources(android.content.Context,android.widget.RemoteViews)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppTransferActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.data.Conversation: long ensureThreadId()>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.browser.BrowserHistoryPage: void onCreate(android.os.Bundle)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.internal.os.BatteryStatsImpl: void writeToParcel(android.os.Parcel,int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.WifiService: int getNumAllowedChannels()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.email.activity.MessageView$LoadMessageTask: void onPostExecute(com.android.email.provider.EmailContent$Message)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.cooliris.media.MovieView: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.activity.Welcome: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.ThrottleService$DataRecorder: void record()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.inputmethodservice.AbstractInputMethodService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.LocationManagerService: void access$2000(com.android.server.LocationManagerService,android.location.Location,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.providers.telephony.SmsProvider: int deleteMessageFromIcc(java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.quicksearchbox.google.GoogleSearch: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.sip.SipEditor$3: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_SIP"
 ], 
 "<com.android.internal.app.HeavyWeightSwitcherActivity$1: void onClick(android.view.View)>": [
  "android.permission.REORDER_TASKS"
 ], 
 "<com.android.phone.BluetoothHandsfree$24: android.bluetooth.AtCommandResult handleTestCommand()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_APN_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.CHANGE_CONFIGURATION", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.webkit.WebView: void deleteSelection(int,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.DeviceAdminAdd: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.IConnectivityManager$Stub: int stopUsingNetworkFeature(int,java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.ui.SlideshowAttachmentView: void setVideo(java.lang.String,android.net.Uri)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.packageinstaller.PackageInstallerActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.calendar.MonthView: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.bluetooth.IBluetooth$Stub: boolean setDiscoverableTimeout(int)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.accounts.AccountManagerService: void checkManageAccountsPermission()>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.mms.transaction.MessagingNotification: void updateSendFailedNotification(android.content.Context)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_SMS"
 ], 
 "<com.cooliris.media.Photographs: void onActivityResult(int,int,android.content.Intent)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.view.ContextThemeWrapper: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.activity.setup.AccountSetupOutgoing: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppTransfer: void doOpushSdp()>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppBtErrorActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.INTERNET", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.music.MediaPlaybackService$ServiceStub: void moveQueueItem(int,int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.webkit.FrameLoader: boolean handleHTTPLoad()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.ApnSettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.am.ActivityManagerService: void forceStopPackageLocked(java.lang.String,int)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.mms.transaction.Transaction: byte[] getPdu(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.phone.FdnList: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.InCallTouchUi: void onClick(android.view.View)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.exchange.CalendarSyncEnabler: void enableEasCalendarSync()>": [
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.ISms: void sendMultipartText(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS"
 ], 
 "<com.android.exchange.SyncManager: void updatePIMSyncSettings(com.android.email.provider.EmailContent$Account,int,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void reportSmsMemoryStatus(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.exchange.SyncManager: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.bluetooth.DockService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.systemui.statusbar.policy.StatusBarPolicy: void access$400(com.android.systemui.statusbar.policy.StatusBarPolicy,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.bluetooth.RequestPermissionHelperActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.INTERNET", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.inputmethod.latin.LatinIMESettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.EnableFdnScreen: void access$300(com.android.phone.EnableFdnScreen)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.tech.IsoDep: void connect()>": [
  "android.permission.NFC"
 ], 
 "<com.android.music.AlbumBrowserActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.SimContacts: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.ui.SlideshowActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.test.ActivityUnitTestCase$MockParent: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.quicksearchbox.SearchWidgetConfigActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.os.INetworkManagementService$Stub: void stopUsbRNDIS()>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.phone.SimContacts: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.webkit.WebTextView: boolean onTrackballEvent(android.view.MotionEvent)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.InCallMenu: boolean updateItems(com.android.internal.telephony.CallManager)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.AlarmManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.inputmethod.latin.UserDictionary: void addWords(android.database.Cursor)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.exchange.CalendarSyncAdapterService: void access$000(android.content.Context,android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.calendar.MonthView: void onDraw(android.graphics.Canvas)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.internal.policy.impl.LockScreen: void updateConfiguration()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.settings.UsageStats: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.CalendarApplication: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.WifiService: boolean setNumAllowedChannels(int,boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.contacts.CallDetailActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.IP2pInitiator: boolean send(int,byte[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.nfc.NfcService$7: boolean send(int,byte[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.NotificationManagerService: void showNextToastLocked()>": [
  "android.permission.SET_PROCESS_LIMIT"
 ], 
 "<android.webkit.WebView$10: void onClick(android.view.View)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.bluetooth.BluetoothDeviceProfileState: void handleConnectionOfOtherProfiles(int)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.email.activity.MessageCompose: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.CallCard: void updatePhotoForCallState(com.android.internal.telephony.Call)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.voicedialer.VoiceDialerActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.ContactsLiveFolders$StarredContacts: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.FullBackupAgent: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.exchange.SyncManager: void registerCalendarObserver(com.android.email.provider.EmailContent$Account)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.webkit.WebView: void addPackageNames(java.util.Set)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.app.ListActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.media.MediaScanner$MyMediaScannerClient: android.net.Uri endFile(android.media.MediaScanner$FileCacheEntry,boolean,boolean,boolean,boolean,boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.Activity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.IccLockSettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.INfcAdapter$Stub: android.nfc.IP2pInitiator getP2pInitiatorInterface()>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.RI: void setNetworkSelectionModeAutomatic(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.GlobalActions: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.VIBRATE", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.app.backup.IBackupManager: void setBackupProvisioned(boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.sip.ISipService$Stub$Proxy: android.net.sip.ISipSession createSession(android.net.sip.SipProfile,android.net.sip.ISipSessionListener)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.settings.deviceinfo.Memory: void unmount()>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
 ], 
 "<com.android.email.activity.MessageCompose: void onDestroy()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.webkit.WebView: void finalize()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.inputmethod.latin.LatinKeyboardView: boolean openPopupIfRequired(int,com.android.inputmethod.latin.PointerTracker)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.email.GroupMessagingListener: void loadMessageForViewFinished(long)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.exchange.adapter.AbstractSyncParser: void wipe()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.internal.telephony.gsm.GsmSMSDispatcher: int processMessagePart(com.android.internal.telephony.SmsMessageBase,com.android.internal.telephony.SmsHeader$ConcatRef,com.android.internal.telephony.SmsHeader$PortAddrs)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.GlobalActions: void access$300(com.android.internal.policy.impl.GlobalActions,boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.AliasActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.IBluetoothHeadset$Stub: boolean setPriority(android.bluetooth.BluetoothDevice,int)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.tts.TtsService$1: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.WebView: void removePackageName(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.sip.SipSharedPreferences: void setReceivingCallsEnabled(boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.tts.TtsService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.DateTimeSettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.backup.IBackupManager$Stub: void clearBackupData(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.activity.setup.AccountSecurity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.browser.BookmarkSearch: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.Display: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.vpn.VpnSettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.EmergencyCallbackModeExitDialog: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.CalendarView: void <init>(com.android.calendar.CalendarActivity)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.server.ConnectivityService: boolean requestRouteToHost(int,int)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.server.WifiService: boolean enableNetwork(int,boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.BootReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: boolean handleMultipartyIncallSupplementaryService(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.BackupManagerService: void setAutoRestore(boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppLauncherActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.calendar.CalendarView: boolean onKeyDown(int,android.view.KeyEvent)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.server.VibratorService: void startNextVibrationLocked()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.browser.BrowserActivity: com.android.browser.Tab openTabAndShow(com.android.browser.BrowserActivity$UrlData,boolean,java.lang.String)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.browser.BrowserActivity: void access$000(com.android.browser.BrowserActivity,java.lang.String,java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.speech.SpeechRecognizer: void setRecognitionListener(android.speech.RecognitionListener)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.browser.Tab$3$1: void onClick(android.content.DialogInterface,int)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.internal.app.ShutdownThread: void access$000(android.content.Context)>": [
  "android.permission.VIBRATE", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.RI: void queryCallWaiting(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ITelephony: boolean supplyPin(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.MmsThumbnailPresenter: void presentAudioThumbnail(com.android.mms.ui.SlideViewInterface,com.android.mms.model.AudioModel)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.music.TrackBrowserActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.policy.impl.SimUnlockScreen: void onAttachedToWindow()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.email.ExchangeUtils: void enableEasCalendarSync(android.content.Context)>": [
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.speech.IRecognitionService: void startListening(android.content.Intent,android.speech.IRecognitionListener)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<android.bluetooth.IBluetoothHeadset: android.bluetooth.BluetoothDevice getCurrentHeadset()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.util.HierarchicalState: boolean processMessage(android.os.Message)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnection: com.android.internal.telephony.gsm.GsmDataConnection makeDataConnection(com.android.internal.telephony.gsm.GSMPhone)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.net.IConnectivityManager: java.lang.String[] getTetheredIfaces()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.provider.Contacts$People: void markAsContacted(android.content.ContentResolver,long)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.mms.transaction.SmsMessageSender: void <init>(android.content.Context,java.lang.String[],java.lang.String,long)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager: java.util.List getAllMessagesFromIccEf()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.browser.Tab: void pause()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppTransferHistory: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.location.GpsLocationProvider: void requestSetID(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.MccTable: void setLocaleFromMccIfNeeded(com.android.internal.telephony.PhoneBase,int)>": [
  "android.permission.CHANGE_CONFIGURATION"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void setTTYMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.provider.Settings$System: boolean putFloat(android.content.ContentResolver,java.lang.String,float)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.bluetooth.IBluetooth: boolean disable(boolean)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.StatusBarManagerService: void collapse()>": [
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.packageinstaller.PackageInstallerActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.ViewContactActivity: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.telephony.SmsManager: boolean disableCellBroadcastRange(int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.internal.telephony.AdnRecordCache: void updateAdnByIndex(int,com.android.internal.telephony.AdnRecord,int,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.browser.BrowserSettings: void updateBookmarksRlzParameter(android.content.Context)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.server.connectivity.Tethering: void interfaceLinkStatusChanged(java.lang.String,boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.wifi.WifiSettings: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.gsm.stk.IconLoader: void postIcon()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.Network: void handleAuthRequest(android.webkit.LoadListener)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.os.BatteryStatsImpl: void setOnBattery(boolean,int,int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.nfc.NfcService: void access$300(com.android.nfc.NfcService)>": [
  "android.permission.NFC"
 ], 
 "<com.android.music.MediaPlaybackActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.INfcAdapter$Stub: android.nfc.ILlcpServiceSocket getLlcpServiceInterface()>": [
  "android.permission.NFC"
 ], 
 "<android.provider.Settings$System: boolean putLong(android.content.ContentResolver,java.lang.String,long)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.accounts.AccountManager: void clearPassword(android.accounts.Account)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<android.view.ContextThemeWrapper: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.nfc.INfcAdapter: int createLlcpServiceSocket(int,java.lang.String,int,int,int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.settings.wifi.AdvancedSettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: boolean callOrSmsContact(android.database.Cursor,boolean)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.accounts.AccountAuthenticatorActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.connectivity.Tethering$TetherInterfaceSM$TetheredState: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.defcontainer.DefaultContainerService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.content.Context: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.cooliris.media.PhotoAppWidgetBind: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.BluetoothDevice: boolean removeBond()>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.bluetooth.IBluetoothA2dp: int getSinkPriority(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.exchange.EasSyncService: org.apache.http.HttpResponse sendPing(byte[],int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.cooliris.media.Photographs: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.ManageConferenceUtils: void separateConferenceConnection(int,com.android.internal.telephony.Connection)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.cdma.RuimFileHandler: void getEFLinearRecordSize(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.PrivacySettings: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.browser.Browser: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.widget.QuickContactBadge$QueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.net.wifi.IWifiManager: boolean removeNetwork(int)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.test.ActivityUnitTestCase$MockParent: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.connectivity.Tethering$TetherInterfaceSM$StartingState: void enter()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.SecuritySettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.browser.TabControl: boolean setCurrentTab(com.android.browser.Tab,boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.mms.ui.DeliveryReportActivity: java.util.List getSmsReportItems()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.calendar.LaunchActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.cooliris.picasa.PicasaContentProvider$SyncContext: void reloadAccounts()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.settings.UserDictionarySettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.Controller$ServiceCallback: void syncMailboxStatus(long,int,int)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.bluetooth.BluetoothA2dp: boolean disconnectSink(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.mms.transaction.MessagingNotification: void notifySendFailed(android.content.Context,boolean)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.nfc.NfcService$8: int connect(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onRoamingOff()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_APN_SETTINGS"
 ], 
 "<android.bluetooth.IBluetoothPbap$Stub: android.bluetooth.BluetoothDevice getClient()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.settings.AccessibilitySettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.cooliris.media.Texture: android.graphics.Bitmap load(com.cooliris.media.RenderView)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.phone.BluetoothHeadsetService$6: boolean connectHeadset(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.net.wifi.IWifiManager: int addOrUpdateNetwork(android.net.wifi.WifiConfiguration)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: void doWork()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.nfc.ILlcpSocket$Stub: int connectByName(int,java.lang.String)>": [
  "android.permission.NFC"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: boolean isSyncActive()>": [
  "android.permission.READ_SYNC_STATS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.camera.Camera: void onResume()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.bluetooth.BluetoothHeadset: int getState(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.mms.transaction.Transaction: void process()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SMS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void changeIccPin(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.cooliris.media.MediaFeed: void loadMediaSets()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.phone.PhoneInterfaceManager: android.os.Bundle getCellLocation()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.bluetooth.BluetoothAdapter: boolean enable()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.bluetooth.IBluetoothHeadset: boolean stopVoiceRecognition()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.mms.ui.ConversationListItem: void updateAvatarView()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.browser.WebDialog$1: void onClick(android.view.View)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.launcher2.DragController: void startDrag(android.view.View,com.android.launcher2.DragSource,java.lang.Object,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.browser.BrowserBackupAgent: long buildBookmarkFile(java.io.FileOutputStream)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.settings.vpn.VpnEditor: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.PackageManagerService: boolean deletePackageLI(java.lang.String,boolean,int,com.android.server.PackageManagerService$PackageRemovedInfo,boolean)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: boolean turnOffMobileConnection()>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.settings.MasterClear: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calculator2.Calculator: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.gsm.SIMFileHandler: void updateEFLinearFixed(int,int,byte[],java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: void access$5400(com.android.mms.ui.ComposeMessageActivity)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.development.AppHwConfigList: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.AccountManager$2: android.accounts.AccountManager$Future2Task start()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean disconnectHeadsetInternal(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getVoiceMailNumber()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.settings.DockSettings: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onVoiceCallEnded()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.RI: void exitEmergencyCallbackMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.AccountManagerService: java.lang.String getPassword(android.accounts.Account)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.internal.policy.impl.LockPatternKeyguardView: boolean dispatchKeyEvent(android.view.KeyEvent)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.nfc.tech.NfcF: void connect()>": [
  "android.permission.NFC"
 ], 
 "<com.android.settings.DeviceAdminSettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.gsm.UsimPhoneBookManager: java.util.ArrayList loadEfFilesFromUsim()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.BluetoothHeadset: int getBatteryUsageHint()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.music.MediaPlaybackService$ServiceStub: void stop()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.IBluetoothPbap$Stub$Proxy: int getState()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.speech.RecognitionService$RecognitionServiceBinder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.contacts.SearchResultsActivity: boolean checkProviderState(boolean)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_SYNC_STATS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.mms.util.DraftCache: void access$000(com.android.mms.util.DraftCache)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.calendar.DayView: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.content.SyncManager$4: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.settings.ZonePicker: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ServiceStateTracker: void handlePollStateResult(int,android.os.AsyncResult)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.VIBRATE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.packageinstaller.InstallAppProgress: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.service.EmailServiceProxy$4: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.PhoneUtils: int placeCallVia(android.content.Context,com.android.internal.telephony.Phone,java.lang.String,android.net.Uri,android.net.Uri)>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: void sendMultipartText(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS"
 ], 
 "<com.android.music.DeleteItems: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.ScoSocket: void releaseWakeLockNow()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.tech.IsoDep: void setTimeout(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.phone.CallNotifier: void onMwiChanged(boolean)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.os.INetworkManagementService$Stub$Proxy: java.lang.String[] listTtys()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.nfc.ILlcpServiceSocket$Stub$Proxy: void close(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.commands.bmgr.Bmgr: void doRestore()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.quicksearchbox.google.GoogleSettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.Phone: void queryTTYMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.tech.NfcB: void connect()>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.am.ActivityManagerService$8$1: void run()>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean connectHeadsetInternal(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.net.IConnectivityManager$Stub: int tether(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.provider.ContactsContract$Contacts: void markAsContacted(android.content.ContentResolver,long)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.mms.transaction.NotificationTransaction: void sendNotifyRespInd(int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.phone.EmergencyDialer: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.Controller$LegacyListener: void loadMessageForViewFinished(long)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.server.BluetoothService: boolean getTrustState(java.lang.String)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.phone.OtaUtils: void cleanOtaScreen(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.providers.settings.SettingsBackupAgent: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.content.CursorEntityIterator: java.lang.Object next()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.app.FullBackupAgent: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getLine1Number()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.settings.PrivacySettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.List getNeighboringCellInfo()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.email.Controller$Result: void updateMailboxCallback(com.android.email.mail.MessagingException,long,long,int,int)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.cooliris.media.CropImage: void performReturn(android.content.Context,android.os.Bundle,java.lang.String)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.telephony.gsm.SIMRecords: void getSpnFsm(boolean,android.os.AsyncResult)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.inputmethod.latin.LatinKeyboardView: boolean onLongPress(android.inputmethodservice.Keyboard$Key)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.music.TrackBrowserActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: int[] getAdnRecordsSize(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.http.EventHandler: void data(byte[],int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$InitialState: void chooseUpstreamType(boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.contacts.RecentCallsListActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.inputmethod.latin.ContactsDictionary: void loadDictionaryAsync()>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.READ_CONTACTS", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.server.ConnectivityService: void access$1000(com.android.server.ConnectivityService,int,int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.MediaPlaybackService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.NotificationMgr: void updateInCallNotification()>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.calendar.EditEvent: void updateHomeTime()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.inputmethod.latin.LatinIME: void addToBigramDictionary(java.lang.CharSequence,int)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.settings.applications.ManageApplications: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.tts.TtsService: int access$2100(android.tts.TtsService,java.lang.String,long,int,java.util.ArrayList)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.packageinstaller.PackageInstallerActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.location.GpsLocationProvider: void access$1000(com.android.server.location.GpsLocationProvider,int,android.net.NetworkInfo)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$BluetoothStateTracker: int getTriState(android.content.Context)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: boolean saveConfiguration()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.phone.BluetoothHeadsetService: int getPriority(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.development.Connectivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.BluetoothDeviceProfileState$OutgoingA2dp: void exit()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.net.wifi.WifiStateTracker: void access$1400(android.net.wifi.WifiStateTracker)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.browser.TabControl: void destroy()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.net.IConnectivityManager$Stub: android.net.NetworkInfo getActiveNetworkInfo()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.inputmethod.latin.LatinKeyboardBaseView: boolean access$300(com.android.inputmethod.latin.LatinKeyboardBaseView,int,com.android.inputmethod.latin.PointerTracker)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.calendar.EditEvent: boolean save()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.internal.os.RuntimeInit: void wtf(java.lang.String,java.lang.Throwable)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.net.IConnectivityManager$Stub: int startUsingNetworkFeature(int,java.lang.String,android.os.IBinder)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.exchange.EasSyncService: void runAccountMailbox()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.phone.NetworkQueryService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.AccountSyncSettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.util.EmptyService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.test.mock.MockApplication: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.activity.setup.AccountSetupBasics: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.AlertService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.ZoneList: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.browser.WebStorageSizeManager: void onReachedMaxAppCacheSize(long,long,android.webkit.WebStorage$QuotaUpdater)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: void askDisconnect()>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.app.DisableCarModeActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.cooliris.app.App: void <init>(android.content.Context)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.bluetooth.IBluetoothHeadset: int getBatteryUsageHint()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.browser.BrowserBackupAgent: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.browser.TabControl: void resumeCurrentTab()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.email.activity.MessageList: boolean onOptionsItemSelected(android.view.MenuItem)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.mms.model.TextModel: void <init>(android.content.Context,java.lang.String,java.lang.String,int,com.android.mms.drm.DrmWrapper,com.android.mms.model.RegionModel)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_SYNC_STATS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.settings.bluetooth.BluetoothPairingDialog: void onCreate(android.os.Bundle)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.INTERNET", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.RIL$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.browser.BrowserYesNoPreference: void onDialogClosed(boolean)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.email.activity.setup.AccountSecurity$1: void run()>": [
  "android.permission.VIBRATE"
 ], 
 "<android.location.ILocationManager$Stub$Proxy: void removeTestProvider(java.lang.String)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.phone.ManageConferenceUtils: void endConferenceConnection(int,com.android.internal.telephony.Connection)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity$DiscardDraftListener: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.email.AccountBackupRestore: boolean doRestoreAccounts(android.content.Context,com.android.email.Preferences)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.widget.LockPatternUtils: void setVisiblePatternEnabled(boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.IConnectivityManager$Stub: java.lang.String[] getTetherableIfaces()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: android.content.Intent createIntent(android.content.Context,long)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.settings.AccountSyncSettingsInAddAccount: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.bluetooth.BluetoothSettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.ui.ClassZeroActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.voicedialer.VoiceDialerActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.ui.QuickContactWindow: android.net.Uri getDataUri(android.net.Uri)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.music.IMediaPlaybackService$Stub: void next()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.ILocationManager$Stub$Proxy: java.lang.String getBestProvider(android.location.Criteria,boolean)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.RI: void setCallWaiting(boolean,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.tech.MifareClassic: void close()>": [
  "android.permission.NFC"
 ], 
 "<com.android.mms.transaction.TransactionService: boolean isNetworkAvailable()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.bluetooth.IBluetoothPbap$Stub$Proxy: android.bluetooth.BluetoothDevice getClient()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setCdmaBroadcastActivation(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.INfcAdapter$Stub$Proxy: boolean enable()>": [
  "android.permission.NFC"
 ], 
 "<com.android.contacts.SearchResultsActivity: void onSearchTextChanged()>": [
  "android.permission.READ_SYNC_STATS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.WifiWatchdogService: void onConnected(java.lang.String,java.lang.String)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.settings.SettingsSafetyLegalActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.CalendarPreferenceActivity: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.contacts.ContactsListActivity: void access$400(com.android.contacts.ContactsListActivity)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.IccLockSettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.AccountPreferenceBase$1$1: void run()>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.READ_SYNC_STATS"
 ], 
 "<android.media.MediaScannerConnection$1: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<android.webkit.WebView: void recordNewContentSize(int,int,boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.mms.transaction.MessagingNotification: void blockingUpdateNewMessageIndicator(android.content.Context,boolean,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.internal.telephony.RI: void onRadioAvailable()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IntRangeManager: boolean disableRange(int,int,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.BluetoothHeadset: boolean connectHeadsetInternal(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.providers.userdictionary.DictionaryBackupAgent: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.CdmaVoicePrivacyCheckBoxPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.IBatteryStats$Stub: void noteBluetoothOn()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getVoiceMailAlphaTag()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.statusbar.IStatusBarService: void collapse()>": [
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.providers.media.MediaScannerService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.ContextImpl: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.inputmethodservice.AbstractInputMethodService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.policy.impl.AccountUnlockScreen: android.accounts.Account findIntendedAccount(java.lang.String)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.mms.ui.ManageSimMessages: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.WindowManagerService: boolean setRotationUncheckedLocked(int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.development.DataList: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ISms$Stub: boolean copyMessageToIccEf(int,byte[],byte[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.settings.SoundSettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.development.DevelopmentSettings$AnimationScaleSelectedListener: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>": [
  "android.permission.SET_ANIMATION_SCALE"
 ], 
 "<com.android.mms.model.VideoModel: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,com.android.mms.drm.DrmWrapper)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.phone.SimContacts: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.calendar.AgendaListView: long getSelectedTime()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.webkit.HTML5VideoViewProxy: void play(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.exchange.adapter.EmailSyncAdapter: void setSyncKey(java.lang.String,boolean)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.DeviceInfoSettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.BluetoothHandsfree$21: android.bluetooth.AtCommandResult handleActionCommand()>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.deskclock.AlarmKlaxon: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: void setMute(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.service.EmailBroadcastProcessorService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.IBluetooth$Stub: boolean setDeviceOutOfBandData(java.lang.String,byte[],byte[])>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.contacts.SearchResultsActivity: android.graphics.Bitmap generatePhoneNumberIcon(android.net.Uri,int,int)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.applications.InstalledAppDetails: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.DTMFTwelveKeyDialer: void closeDialer(boolean)>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.email.service.IEmailService$Stub$Proxy: void stopSync(long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ISms$Stub: boolean enableCellBroadcast(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: boolean onContextItemSelected(android.view.MenuItem)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.RI: void setFacilityLock(java.lang.String,boolean,java.lang.String,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.exchange.SyncManager$2: void hostChanged(long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityManagerService: void setAlwaysFinish(boolean)>": [
  "android.permission.SET_ALWAYS_FINISH", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.sip.ISipService$Stub$Proxy: boolean isOpened(java.lang.String)>": [
  "android.permission.USE_SIP"
 ], 
 "<android.server.BluetoothA2dpService: void onBluetoothDisable()>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.phone.EnableFdnScreen: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IccCard: void supplyPin(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.INetworkManagementService$Stub: void startAccessPoint(android.net.wifi.WifiConfiguration,java.lang.String,java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.music.QueryBrowserActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.WebView: void enablePlatformNotifications()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.os.IPowerManager: void releaseWakeLock(android.os.IBinder,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.browser.Tab$2: void doUpdateVisitedHistory(android.webkit.WebView,java.lang.String,boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.development.PackageBrowser: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.TimeConsumingPreferenceActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.inputmethod.latin.LatinIME: void swipeDown()>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.inputmethod.latin.LatinKeyboardBaseView: void swipeDown()>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.mms.model.ImageModel: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,com.android.mms.drm.DrmWrapper,com.android.mms.model.RegionModel)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.development.Details: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: boolean handlePinMmi(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.AccountManagerService: void checkAuthenticateAccountsPermission(android.accounts.Account)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<android.bluetooth.IBluetoothA2dp$Stub: boolean connectSink(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.internal.telephony.ITelephony$Stub: boolean isSimPinEnabled()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.mms.model.RegionMediaModel: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,com.android.mms.drm.DrmWrapper,com.android.mms.model.RegionModel)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void queryAvailableBandMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.music.IMediaPlaybackService$Stub: void prev()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.transaction.PushReceiver$ReceivePushTask: java.lang.Object doInBackground(java.lang.Object[])>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.settings.applications.ManageApplications: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.ui.MessageUtils: void viewMmsMessageAttachment(android.content.Context,com.android.mms.data.WorkingMessage)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.app.IntentService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.htmlviewer.HTMLViewerActivity: void onDestroy()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.os.INetworkManagementService: long getInterfaceRxCounter(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.deskclock.Alarms: long addAlarm(android.content.Context,com.android.deskclock.Alarm)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.contacts.model.EntitySet: void buildSplitContactDiff(java.util.ArrayList,int[])>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.phone.InCallScreen: void connectBluetoothAudio()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.contacts.ContactOptionsActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.IBluetooth$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.ConnectivityService: int getLastTetherError(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture editProperties(java.lang.String,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.ServiceStateTracker: void reRegisterNetwork(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.InputManager$Callbacks: int interceptKeyBeforeQueueing(long,int,int,int,int,int,boolean)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.VIBRATE", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CALL_PHONE", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppTransfer: void startConnectSession()>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.RI: void cancelPendingUssd(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.providers.calendar.EmptyService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.SipBroadcastReceiver: void takeCall(android.content.Intent)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.settings.wifi.AdvancedSettings: void updateSettingsProvider()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.webkit.WebViewCore: void setupViewport(boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.email.Controller$4: void run()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.RI: void setupDataCall(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.BluetoothDeviceProfileState: boolean handleIncomingConnection(int,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void handleCallWaitingInfo(com.android.internal.telephony.cdma.CdmaCallWaitingNotification)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.IConnectivityManager: boolean setRadios(boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.view.IWindowManager: void disableKeyguard(android.os.IBinder,java.lang.String)>": [
  "android.permission.DISABLE_KEYGUARD"
 ], 
 "<com.android.settings.TextToSpeechSettings$3: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.voicedialer.BluetoothVoiceDialerActivity$2: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void getCallWaiting(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.WifiService: boolean releaseWifiLock(android.os.IBinder)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.provider.UserDictionary$Words: void addWord(android.content.Context,java.lang.String,int,int)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<android.nfc.INfcAdapter$Stub$Proxy: android.nfc.ILlcpServiceSocket getLlcpServiceInterface()>": [
  "android.permission.NFC"
 ], 
 "<android.net.sip.ISipService: android.net.sip.SipProfile[] getListOfProfiles()>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.contacts.CallDetailActivity: void onResume()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.email.activity.MailboxList: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.voicedialer.BluetoothVoiceDialerActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.os.INetworkManagementService: boolean isTetheringStarted()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture updateCredentials(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.bluetooth.IBluetoothHeadset$Stub$Proxy: void disconnectHeadset(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.PhoneUtils: com.android.phone.PhoneUtils$CallerInfoToken startGetCallerInfo(android.content.Context,com.android.internal.telephony.Connection,com.android.internal.telephony.CallerInfoAsyncQuery$OnQueryCompleteListener,java.lang.Object)>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.cdma.RuimCard: void getIccCardStatusDone(android.os.AsyncResult)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.ConnectivityService: void <init>(android.content.Context,com.android.server.ConnectivityService$1)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.nfc.INfcAdapter$Stub: boolean enable()>": [
  "android.permission.NFC"
 ], 
 "<android.net.wifi.IWifiManager$Stub: int[] getValidChannelCounts()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.os.BatteryStatsImpl: void writeToParcelWithoutUids(android.os.Parcel,int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.systemui.statusbar.StatusBarService$6: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<android.webkit.HTML5Audio: void play()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.Connection dial(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.InCallControlState: void update()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.net.wifi.IWifiManager: boolean releaseWifiLock(android.os.IBinder)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.DebugIntentSender: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.DateTimeSettingsSetupWizard: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.webkit.WebView: void access$1700(android.webkit.WebView)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.ITelephony$Stub: java.util.List getNeighboringCellInfo()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.os.storage.IMountService$Stub$Proxy: int formatVolume(java.lang.String)>": [
  "android.permission.MOUNT_FORMAT_FILESYSTEMS"
 ], 
 "<android.net.IConnectivityManager$Stub: int untether(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.calendar.CalendarView: void recalc()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.nfc.ILlcpConnectionlessSocket: android.nfc.LlcpPacket receiveFrom(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.phone.BluetoothHandsfree$3: android.bluetooth.AtCommandResult handleReadCommand()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.AlarmManagerService$AlarmThread: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.service.urlrenderer.UrlRendererService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.activity.MessageCompose: void processSourceMessage(com.android.email.provider.EmailContent$Message,com.android.email.provider.EmailContent$Account)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: void onScreenTurnedOff(int)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.phone.BluetoothHandsfree$3: android.bluetooth.AtCommandResult handleActionCommand()>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.email.activity.Welcome: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.VibratorService: void vibratePattern(long[],int,android.os.IBinder)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.accounts.AccountManagerService: java.lang.String getUserData(android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.server.location.GpsLocationProvider: void enableLocationTracking(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.ProxySelector$1: void onClick(android.view.View)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.server.search.SearchManagerService: void <init>(android.content.Context)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.music.MediaPickerActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void queryTTYMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.model.EntityDelta: void buildAssert(java.util.ArrayList)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.gsm.SimSmsInterfaceManager$CellBroadcastRangeManager: boolean disableRange(int,int,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.IBluetoothA2dp$Stub: boolean allowIncomingConnect(android.bluetooth.BluetoothDevice,boolean)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.contacts.SearchResultsActivity: void onRestart()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_SYNC_STATS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.contacts.ExportVCardActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.webkit.StreamLoader: void closeStreamAndSendEndData()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.SipCallOptionHandler: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: boolean processPostDialChar(char)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.CallNotifier$EmergencyTonePlayerVibrator: void stop()>": [
  "android.permission.VIBRATE"
 ], 
 "<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet)>": [
  "android.permission.INTERNET"
 ], 
 "<android.webkit.WebViewCore: void contentDraw()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.mms.transaction.SendTransaction: void run()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SMS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState: void exit()>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.settings.SyncActivityTooManyDeletes: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.mail.store.ExchangeStore: android.os.Bundle autoDiscover(android.content.Context,java.lang.String,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.MessagingPreferenceActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.development.InstrumentationList: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.svox.pico.EngineSettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.ui.EditSlideDurationActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.calendar.AlertService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.activity.MessageList: void autoRefreshStaleMailbox()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.usb.UsbService: void update(boolean)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.FdnList: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.cooliris.media.RenderView: void processKeyEvent()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.model.GoogleSource: void attemptMyContactsMembership(com.android.contacts.model.EntityDelta,java.lang.String,java.lang.String,android.content.Context,boolean)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.exchange.EasOutboxService: org.apache.http.HttpResponse executePostWithTimeout(org.apache.http.client.HttpClient,org.apache.http.client.methods.HttpPost,int,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.EventInfoActivity: void createExceptionResponse(android.content.ContentResolver,long,long,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.phone.EmergencyCallbackModeExitDialog: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.webkit.WebView: void access$10400(android.webkit.WebView,int,int,int,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.AppWidgetPickActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.RecentCallsListActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.nfc.NfcService: boolean _enable(boolean,boolean)>": [
  "android.permission.NFC"
 ], 
 "<android.bluetooth.IBluetooth: int getScanMode()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.cooliris.media.DataSource: void loadMediaSets(com.cooliris.media.MediaFeed)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.phone.EnableFdnScreen: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.widget.LockPatternUtils: long setLockoutAttemptDeadline()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.exchange.adapter.CalendarSyncAdapter$EasCalendarSyncParser: boolean parse()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.browser.BrowserActivity: void access$2300(com.android.browser.BrowserActivity,java.util.Set)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewProperties: com.android.internal.policy.impl.KeyguardViewBase createKeyguardView(android.content.Context,com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.policy.impl.KeyguardWindowController)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.app.ResolverActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.RecentCallsListActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.phone.TimeConsumingPreferenceActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.calendar.CalendarActivity$3: void onChange(boolean)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.email.activity.setup.AccountSetupAccountType: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.IBluetoothA2dp$Stub$Proxy: android.bluetooth.BluetoothDevice[] getConnectedSinks()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.contacts.ContactsListActivity$1: void onChange(boolean)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_SYNC_STATS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.PackageManagerService: android.content.pm.IPackageManager main(android.content.Context,boolean)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.cooliris.media.Gallery: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.DevelopmentSettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.DataConnectionTracker: void onRadioOffOrNotAvailable()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.EventInfoActivity: void addAttendee(android.content.ContentValues,java.util.ArrayList,int,com.android.calendar.EventInfoActivity$Attendee,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.server.WindowManagerService: void stopFreezingDisplayLocked()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.quicksearchbox.google.GoogleSuggestClient: android.net.NetworkInfo getActiveNetworkInfo()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.music.MediaPlaybackService$ServiceStub: int removeTracks(int,int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void enableLocationUpdates()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.GsmUmtsCallOptions: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.nfc.NfcService$2: android.nfc.IP2pInitiator getP2pInitiatorInterface()>": [
  "android.permission.NFC"
 ], 
 "<com.android.music.IMediaPlaybackService$Stub: void open(long[],int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.sip.SipService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_SIP"
 ], 
 "<com.android.contacts.RecentCallsListActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void supplyIccPin(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.WebView: void onAttachedToWindow()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.BandMode: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.webkit.WebView$InvokeListBox$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.InCallScreen: void updateScreen()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.calendar.CalendarActivity$CalendarGestureListener: boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.preference.VolumePreference$SeekBarVolumizer: void stop()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.ndefpush.NdefPushServer$ConnectionThread: void run()>": [
  "android.permission.NFC"
 ], 
 "<com.android.settings.deviceinfo.Status: void setWifiStatus()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.email.service.EmailServiceProxy$1: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.InCallScreen: com.android.phone.InCallScreen$InCallInitStatus placeCall(android.content.Intent)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: int getOneOffSummary()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetherableIfaces()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.test.mock.MockContentResolver: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS"
 ], 
 "<com.android.internal.telephony.IccFileHandler: void getEFLinearRecordSize(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.BluetoothPbap: boolean disconnect()>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.contacts.ContactsLiveFolders$StarredContacts: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.InCallScreen: void onMuteClick()>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.webkit.HttpAuthHandler: void processNextLoader()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.app.IActivityManager: java.util.List getRecentTasks(int,int)>": [
  "android.permission.GET_TASKS"
 ], 
 "<com.android.calendar.WeekActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void stopDtmf()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.MountService: void unmountVolume(java.lang.String,boolean)>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
 ], 
 "<com.android.browser.BrowserActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.ContactsListActivity: boolean smsContact(android.database.Cursor)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.contacts.ui.EditContactActivity$4: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.cooliris.media.Gallery: void onCreate(android.os.Bundle)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.INTERNET", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.email.GroupMessagingListener: void synchronizeMailboxFailed(long,long,java.lang.Exception)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.settings.LocalePickerInSetupWizard: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.DeviceAdminAdd: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDeviceManager: void onScanningStateChanged(boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.exchange.SyncManager: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.IBluetooth$Stub: boolean setPin(java.lang.String,byte[])>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.os.storage.IMountService: void finishMediaUpdate()>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
 ], 
 "<com.android.phone.BluetoothHandsfree$26: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.AccountSyncSettingsInAddAccount: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.transaction.TransactionService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.ui.ConversationList: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.INfcAdapter$Stub: boolean disable()>": [
  "android.permission.NFC"
 ], 
 "<android.accessibilityservice.AccessibilityService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.BluetoothHandsfree$14: android.bluetooth.AtCommandResult handleTestCommand()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDeviceManager: void onBluetoothStateChanged(boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.systemui.usb.UsbResolverActivity: void onCreate(android.os.Bundle,android.content.Intent,java.lang.CharSequence,android.content.Intent[],java.util.List,boolean)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.INTERNET", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void setTTYMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.SimUnlockScreen: void onClick(android.view.View)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: void connectWithoutResettingTimer()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.webkit.LoadListener: void handleAuthResponse(java.lang.String,java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.InCallScreen: void setInCallScreenMode(com.android.phone.InCallScreen$InCallScreenMode)>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.music.TrackBrowserActivity: void removeItem()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.SlideEditorActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.soundrecorder.Recorder: void stopRecording()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.IBluetoothHeadset$Stub: boolean stopVoiceRecognition()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.inputmethod.latin.LatinIME: void launchSettings()>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.server.WindowManagerService: void moveAppWindowsLocked(java.util.List,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.settings.RingerVolumePreference: void onBindDialogView(android.view.View)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.browser.TabControl: void stopAllLoading()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.contacts.ContactsListActivity: boolean callContact(android.database.Cursor)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.browser.Bookmarks: void addBookmark(android.content.Context,android.content.ContentResolver,java.lang.String,java.lang.String,android.graphics.Bitmap,boolean)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.quicksearchbox.SearchActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.RadioInfo: void onPause()>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.voicedialer.BluetoothVoiceDialerActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.LocalePicker: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.fuelgauge.PowerUsageSummary: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.server.BluetoothService: int getRemoteServiceChannel(java.lang.String,android.os.ParcelUuid)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.settings.bluetooth.LocalBluetoothManager: void syncBluetoothState()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.development.DevelopmentSettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.vpn.L2tpIpsecPskService: void onError(java.lang.Throwable)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.DevicePolicyManagerService$MyPackageMonitor: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.wifi.WifiStateTracker$SettingsObserver: void <init>(android.net.wifi.WifiStateTracker,android.os.Handler)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.IccRecords: void onRecordLoaded()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.bluetooth.LocalBluetoothProfileManager: boolean isConnected(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.ContactsLiveFolders$AllContacts: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.cooliris.media.RenderView: void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.mms.transaction.PushReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.transaction.SmsSingleRecipientSender: java.lang.String getOutgoingServiceCenter(long)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: boolean isSyncPending(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.internal.app.DisableCarModeActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: android.net.Uri getJoinSuggestionsUri(java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.bluetooth.ConnectSpecificProfilesActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.ManageAccountsSettings: void onResume()>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: int access$2700(com.android.mms.ui.ComposeMessageActivity,long)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.app.NativeActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.vpn.PptpService: void onError(int)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.mms.ui.SearchActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.webkit.HTML5Audio: void resetMediaPlayer()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.ApplicationSettings: void handleUpdateAppInstallLocation(java.lang.String)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppBtEnableActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.os.INetworkManagementService$Stub$Proxy: long getInterfaceTxCounter(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.DateTimeSettingsSetupWizard: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.WifiService: int getWifiEnabledState()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.TelephonyRegistry: void broadcastDataConnectionFailed(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.IBluetoothA2dp$Stub: android.bluetooth.BluetoothDevice[] getNonDisconnectedSinks()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.bluetooth.IBluetooth$Stub: boolean setTrust(java.lang.String,boolean)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.mms.transaction.MessagingNotification: void updateDownloadFailedNotification(android.content.Context)>": [
  "android.permission.READ_SMS"
 ], 
 "<android.webkit.DataLoader: boolean sendData()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.accounts.AccountManager$6: void doWork()>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.settings.wifi.WifiSettings: void onPause()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.speech.SpeechRecognizer: void putMessage(android.os.Message)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.internal.telephony.PhoneSubInfo: java.lang.String getVoiceMailAlphaTag()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.music.MusicPicker: void setSelected(android.database.Cursor)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.cooliris.media.LoadingLayer: void renderOpaque(com.cooliris.media.RenderView,javax.microedition.khronos.opengles.GL11)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.server.am.ActivityManagerService: void requestServiceBindingsLocked(com.android.server.am.ServiceRecord)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.phone.sip.SipSettings: void addProfile(android.net.sip.SipProfile)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: void hideLocked()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.settings.TetherSettings: void access$000(com.android.settings.TetherSettings,java.lang.Object[],java.lang.Object[],java.lang.Object[])>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void invokeOemRilRequestStrings(java.lang.String[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.DockSettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.nfc.INfcTag$Stub$Proxy: int reconnect(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: void access$1000(com.android.internal.policy.impl.KeyguardViewMediator)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.exchange.SyncManager$2: int validate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,boolean,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.InCallScreen: void bailOutAfterErrorDialog()>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.speech.tts.TextToSpeech: int synthesizeToFile(java.lang.String,java.util.HashMap,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.EditPinPreference$OnPinEnteredListener: void onPinEntered(com.android.phone.EditPinPreference,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.HttpAuthHandler: void handleAuthRequest(android.webkit.LoadListener)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.RI: void setSuppServiceNotifications(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.provider.Contacts$Settings: java.lang.String getSetting(android.content.ContentResolver,java.lang.String,java.lang.String)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.systemui.statusbar.StatusBarService: void vibrate()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.certinstaller.CertFile: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.InCallScreen: void resetInCallScreenMode()>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.media.RingtoneManager: android.media.Ringtone getRingtone(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.CredentialInstaller: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.systemui.usb.UsbPermissionActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.INTERNET", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.nfc.LlcpServiceSocket: com.android.internal.nfc.LlcpSocket accept()>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.cdma.CdmaSMSDispatcher: int processCdmaWapPdu(byte[],int,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager$9: void run()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.gsm.SIMRecords: void setVoiceCallForwardingFlag(int,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.AccountManagerService: void hasFeatures(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String[])>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.settings.TextToSpeechSettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.BluetoothHandsfree$16: android.bluetooth.AtCommandResult handleActionCommand()>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.development.PackageBrowser: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.Phone: void setSmscAddress(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.provider.Telephony$Sms$Draft: android.net.Uri addMessage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.google.common.io.Files: java.lang.Object readBytes(java.io.File,com.google.common.io.ByteProcessor)>": [
  "android.permission.INTERNET"
 ], 
 "<android.bluetooth.IBluetooth$Stub: boolean setRemoteOutOfBandData(java.lang.String)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.music.ArtistAlbumBrowserActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.data.Conversation: void <init>(android.content.Context,long,boolean)>": [
  "android.permission.READ_SMS"
 ], 
 "<android.bluetooth.BluetoothDeviceProfileState$OutgoingHandsfree: void exit()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getDeviceSvn()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.settings.LanguageSettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.TetherSettings: void onCreate(android.os.Bundle)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.server.WifiService$2: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.phone.SimContacts: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.widget.PasswordEntryKeyboardHelper: void onPress(int)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapService$2: void disconnect()>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.providers.applications.ApplicationLauncher: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.server.BluetoothA2dpService: boolean allowIncomingConnect(android.bluetooth.BluetoothDevice,boolean)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.server.BluetoothService: java.lang.String getProperty(java.lang.String)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.deskclock.AlarmAlert: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.am.ActivityManagerService: java.util.List getRecentTasks(int,int)>": [
  "android.permission.GET_TASKS"
 ], 
 "<com.android.mms.transaction.SmsReceiver: void beginStartingService(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.DataConnectionTracker: void onCleanUpConnection(boolean,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.IBluetooth$Stub$Proxy: boolean createBondOutOfBand(java.lang.String,byte[],byte[])>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: void access$1400(com.android.internal.policy.impl.KeyguardViewMediator,boolean)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.calendar.WeekView: void doScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.phone.BluetoothHandsfree: android.bluetooth.AtCommandResult redial()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.SystemBackupAgent: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: java.lang.String getUserData(android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.providers.contacts.ContactsProvider2: boolean onCreate()>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.contacts.ContactsListActivity: boolean checkProviderState(boolean)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_SYNC_STATS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onPdpStateChanged(android.os.AsyncResult,boolean)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.IBluetoothA2dp: boolean setSinkPriority(android.bluetooth.BluetoothDevice,int)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.cooliris.picasa.PicasaService: void requestSync(android.content.Context,int,long)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: boolean trySetupData(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.speech.RecognitionService: boolean access$700(android.speech.RecognitionService,android.speech.IRecognitionListener)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.internal.telephony.gsm.SimCard: void supplyPin(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.DayView: void drawAfterScroll(android.graphics.Canvas)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.inputmethod.latin.LatinIME: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.activity.setup.AccountSetupCheckSettings$1: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.google.common.io.CharStreams: long copy(com.google.common.io.InputSupplier,java.lang.Appendable)>": [
  "android.permission.INTERNET"
 ], 
 "<android.app.TabActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.IConnectivityManager: boolean getMobileDataEnabled()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.PhysicalKeyboardSettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.LoadAverageService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.wifi.IWifiManager$Stub: boolean setNumAllowedChannels(int,boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.app.backup.BackupAgentHelper: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.FakePhoneActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.wifi.IWifiManager$Stub: boolean disableNetwork(int)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.app.HeavyWeightSwitcherActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.EnableIccPinScreen: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.connectivity.Tethering: boolean access$2200(com.android.server.connectivity.Tethering,boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.ISms$Stub: boolean updateMessageOnIccEf(int,int,byte[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.phone.Settings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.stk.CommandParamsFactory: boolean processGetInkey(com.android.internal.telephony.gsm.stk.CommandDetails,java.util.List)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.htmlviewer.HTMLViewerActivity: void onStop()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.provider.Browser: void deleteFromHistory(android.content.ContentResolver,java.lang.String)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<android.webkit.WebView: void displaySoftKeyboard(boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.DockSettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.os.storage.ExternalStorageFormatter: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.RuimCard: void supplyPin2(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.browser.BrowserPreferencesPage: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.accounts.AccountManager: android.accounts.AccountManagerFuture confirmCredentials(android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.app.IAlarmManager$Stub: void setTimeZone(java.lang.String)>": [
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.mms.transaction.MessagingNotification: void updateSendFailedNotificationForThread(android.content.Context,long)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean access$400(com.android.internal.telephony.gsm.SimSmsInterfaceManager,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.sip.SipAudioCall: void startAudio()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.bluetooth.IBluetoothPbap$Stub$Proxy: void disconnect()>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getPreferredVoicePrivacy(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.SoundSettings: void setPhoneVibrateSettingValue(java.lang.String)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.settings.wifi.AdvancedSettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.IBluetooth: boolean cancelPairingUserInput(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.PrivacySettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.provider.ContactsContract$SyncState: android.content.ContentProviderOperation newSetOperation(android.accounts.Account,byte[])>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.content.pm.IPackageStatsObserver$Stub$Proxy: void onGetStatsCompleted(android.content.pm.PackageStats,boolean)>": [
  "android.permission.GET_PACKAGE_SIZE"
 ], 
 "<com.android.phone.PhoneApp: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.browser.BrowserActivity: void closeDialogs()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.music.MediaPlaybackService: void onCreate()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.MmsThumbnailPresenter: void presentVideoThumbnail(com.android.mms.ui.SlideViewInterface,com.android.mms.model.VideoModel)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.SoundSettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.RI: void getIccCardStatus(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.systemui.usb.StorageNotification: void setMediaStorageNotification(int,int,int,boolean,boolean,android.app.PendingIntent)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.vpn.VpnService: void onError(int)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.os.PowerManager$WakeLock: void finalize()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.EmergencyCallbackModeService: void startTimerNotification()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.development.DevelopmentSettings: void writeProcessLimitOptions()>": [
  "android.permission.SET_PROCESS_LIMIT"
 ], 
 "<com.android.server.ConnectivityService: java.lang.String[] getTetheredIfaces()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.email.GroupMessagingListener: void synchronizeMailboxFinished(long,long,int,int)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.inputmethod.latin.PointerTracker: void detectAndSendKey(int,int,int,long)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.phone.BluetoothHandsfree$20: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.webkit.WebView: void access$6100(android.webkit.WebView,int,int,boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.bluetooth.BluetoothDeviceProfileState: void sendConnectionAccessRemovalIntent()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.connectivity.Tethering: void updateUsbStatus()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.BluetoothHandsfree$5: android.bluetooth.AtCommandResult handleTestCommand()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.applications.ManageApplications: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.ScoSocket: void acquireWakeLock()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.AudioService$ScoClient: void requestScoState(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.bluetooth.BluetoothDevice: boolean getTrustState()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.contacts.ContactsLiveFolders$AllContacts: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.speech.SpeechRecognizer: void startListening(android.content.Intent)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.phone.PhoneUtils: boolean hangupHoldingCall(com.android.internal.telephony.Call)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.CacheLoader: void closeStreamAndSendEndData()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.PhoneApp: void updatePhoneState(com.android.internal.telephony.Phone$State)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.pm.IPackageManager$Stub$Proxy: boolean setInstallLocation(int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.IConnectivityManager$Stub$Proxy: int untether(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.bluetooth.BluetoothSocket: void initSocketNative()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.phone.PhoneUtils: void activateSpeakerIfDocked(com.android.internal.telephony.Phone)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.webkit.WebView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.PhoneApp: void updateInCallScreenTouchUi()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.systemui.usb.UsbStorageActivity: void access$900(com.android.systemui.usb.UsbStorageActivity)>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
 ], 
 "<com.android.nfc.NfcService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.ApnSettings: boolean restoreDefaultApn()>": [
  "android.permission.WRITE_APN_SETTINGS"
 ], 
 "<com.android.mms.transaction.NotificationTransaction: void run()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SMS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_SMS"
 ], 
 "<android.accounts.ChooseAccountActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.IContentService$Stub$Proxy: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.server.WindowManagerService: void <init>(android.content.Context,com.android.server.PowerManagerService,boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.content.pm.IPackageManager: void getPackageSizeInfo(java.lang.String,android.content.pm.IPackageStatsObserver)>": [
  "android.permission.GET_PACKAGE_SIZE"
 ], 
 "<android.net.sip.SipAudioCall: void grabWifiHighPerfLock()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.util.Recycler$MmsRecycler: void deleteMessagesForThread(android.content.Context,long,int)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.webkit.LoadListener: void headers(android.net.http.Headers)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.browser.TabControl: com.android.browser.Tab createNewTab(boolean,java.lang.String,java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.email.activity.UpgradeAccounts: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.app.ResolverActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.ui.SlideshowPresenter: void presentSlide(com.android.mms.ui.SlideViewInterface,com.android.mms.model.SlideModel)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.IContentService$Stub: boolean isSyncActive(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.development.PermissionDetails: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.preference.VolumePreference: void onDialogClosed(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.quicksearchbox.SearchableItemsSettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.nfc.IP2pInitiator$Stub: boolean send(int,byte[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.TelephonyRegistry: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.quicksearchbox.SearchActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.BluetoothHandsfree$5: android.bluetooth.AtCommandResult handleReadCommand()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.os.INetworkManagementService: void setInterfaceThrottle(java.lang.String,int,int)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.RI: void acknowledgeLastIncomingGsmSms(boolean,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.bluetooth.BluetoothSettings$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.nfc.NfcService$10: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.NFC"
 ], 
 "<com.android.inputmethod.latin.InputLanguageSelection: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.ChooseLockPatternExample: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.commands.svc.Svc: void main(java.lang.String[])>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.development.PackageBrowser: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.sip.ISipService: void open3(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_SIP"
 ], 
 "<com.android.email.service.IEmailService$Stub$Proxy: void loadAttachment(long,java.lang.String,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.INetworkManagementService: void setIpForwardingEnabled(boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.email.activity.MailboxList: void onRefresh(long)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.voicedialer.RecognizerClient: void onMicrophoneStart(java.io.InputStream)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.phone.FakePhoneActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapObexServer: int sendVcardListingXml(int,javax.obex.Operation,int,int,java.lang.String,java.lang.String)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.provider.Contacts$People: android.net.Uri addToGroup(android.content.ContentResolver,long,long)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.app.NotificationManager: void notify(int,android.app.Notification)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.phone.BluetoothHandsfree: boolean stopVoiceRecognition()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.providers.downloads.DownloadThread: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.development.AppPicker: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.cooliris.media.Layer: void generate(com.cooliris.media.RenderView,com.cooliris.media.RenderView$Lists)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onRadioOffOrNotAvailable()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.MediaPlaybackService: void access$1500(com.android.music.MediaPlaybackService)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.AccountUnlockScreen: void onClick(android.view.View)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.commands.bmgr.Bmgr: void doList()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.INetworkManagementService$Stub: void untetherInterface(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.mms.ui.ConversationList: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.voicedialer.BluetoothVoiceDialerActivity$3: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.preference.PreferenceActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.NotificationManagerService: void handleTimeout(com.android.server.NotificationManagerService$ToastRecord)>": [
  "android.permission.SET_PROCESS_LIMIT"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onGprsAttached()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_APN_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GsmSMSDispatcher: void handleBroadcastSms(android.os.AsyncResult)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.deskclock.AlarmClock: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.InCallScreenShowActivation: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.EnableIccPinScreen$3: void onClick(android.view.View)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.os.storage.ExternalStorageFormatter$2: void run()>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS", 
  "android.permission.MOUNT_FORMAT_FILESYSTEMS"
 ], 
 "<com.android.server.PackageManagerBackupAgent: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.wifi.WifiApSettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.IActivityManager: void setProcessForeground(android.os.IBinder,int,boolean)>": [
  "android.permission.SET_PROCESS_LIMIT"
 ], 
 "<com.android.phone.BluetoothHandsfree$20: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.defcontainer.DefaultContainerService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.PhoneNotifier: void notifyServiceState(com.android.internal.telephony.Phone)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.browser.BrowserBackupAgent: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCall: void hangup()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.SearchResultsActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.RI: void acknowledgeLastIncomingCdmaSms(boolean,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.sip.SipService$WakeupTimer: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.music.IMediaPlaybackService: void enqueue(long[],int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void createAllDataConnectionList()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.providers.calendar.CalendarDebug: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void supplyNetworkDepersonalization(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.GroupMessagingListener: void loadAttachmentFinished(long,long,long)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.webkit.WebTextView: void onEditorAction(int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.bluetooth.IBluetooth: boolean createBondOutOfBand(java.lang.String,byte[],byte[])>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.am.ActivityManagerService: void moveTaskToFront(int)>": [
  "android.permission.REORDER_TASKS"
 ], 
 "<com.android.server.TelephonyRegistry: void notifyDataConnectionFailed(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.ui.EditContactActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapService$2: android.bluetooth.BluetoothDevice getClient()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.PackageManagerService: boolean deleteSystemPackageLI(android.content.pm.PackageParser$Package,int,com.android.server.PackageManagerService$PackageRemovedInfo,boolean)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.internal.telephony.ITelephony: boolean isSimPinEnabled()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.app.WallpaperManager: void clear()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.IBluetoothA2dp: boolean allowIncomingConnect(android.bluetooth.BluetoothDevice,boolean)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.content.CursorEntityIterator: android.content.Entity getEntityAndIncrementCursor(android.database.Cursor)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppTransferActivity: void access$100(com.android.bluetooth.opp.BluetoothOppTransferActivity)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.phone.PhoneUtils: boolean hangupActiveCall(com.android.internal.telephony.Call)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.InCallScreen$4: void onCancel(android.content.DialogInterface)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.BluetoothHandsfree$16: android.bluetooth.AtCommandResult handleReadCommand()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.preference.VolumePreference$SeekBarVolumizer: void stopSample()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.server.BluetoothService: boolean setName(java.lang.String)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.LocationManagerService: java.util.List getProviders(android.location.Criteria,boolean)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.phone.NotificationMgr: void updateMwi(boolean)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.bluetooth.IBluetooth$Stub$Proxy: java.lang.String[] listBonds()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setCallForward(int,int,int,java.lang.String,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.INfcAdapter$Stub: android.nfc.ILlcpSocket getLlcpInterface()>": [
  "android.permission.NFC"
 ], 
 "<com.google.common.io.MultiInputStream: long skip(long)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getCdmaBroadcastConfig(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CallTracker: void pollCallsWhenSafe()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.Phone: void queryCdmaRoamingPreference(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.SIMRecords: void handleSmses(java.util.ArrayList)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.LocationManagerService: java.util.List _getProvidersLocked(android.location.Criteria,boolean)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.email.service.MailService: int onStartCommand(android.content.Intent,int,int)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.VIBRATE", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.browser.widget.BookmarkWidgetService: int onStartCommand(android.content.Intent,int,int)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<android.net.http.RequestQueue$ActivePool: void startup()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.webkit.WebView: boolean onTouchEvent(android.view.MotionEvent)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.AccountSyncSettings: void onSyncStateUpdated()>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.inputmethod.latin.LatinIMESettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.inputmethod.latin.LatinIME: void onOptionKeyLongPressed()>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.internal.app.ChooserActivity: void onCreate(android.os.Bundle,android.content.Intent,java.lang.CharSequence,android.content.Intent[],java.util.List,boolean,boolean)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.INTERNET", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.os.IVibratorService: void cancelVibrate(android.os.IBinder)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.phone.InCallScreen$15: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.bluetooth.BluetoothSettings: void onResume()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.development.AppHwPref: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.os.storage.ExternalStorageFormatter: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.WirelessSettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.speech.tts.TextToSpeech: int speak(java.lang.String,int,java.util.HashMap)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.CellBroadcastSms: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.provider.Telephony$Sms$Outbox: android.net.Uri addMessage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean,long)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.settings.AddAccountSettings: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.exchange.SyncManager: void runAsleep(long,long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.IActivityManager: void signalPersistentProcesses(int)>": [
  "android.permission.SIGNAL_PERSISTENT_PROCESSES"
 ], 
 "<com.android.internal.telephony.gsm.SimCard: void changeIccFdnPassword(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.voicedialer.BluetoothVoiceDialerActivity$GreetingRunnable: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.Display: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.exchange.SyncManager: void acquireWakeLock(long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.CdmaSystemSelectListPreference$MyHandler: void handleSetCdmaRoamingPreference(android.os.Message)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.webkit.WebView: void access$9400(android.webkit.WebView)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: void onBondingStateChanged(int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.email.activity.AccountFolderList: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.PhoneApp: void orientationChanged(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: boolean detectSafeMode()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.mms.util.DownloadManager$4: void run()>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.media.AudioService$AudioHandler: void cleanupPlayer(android.media.MediaPlayer)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.CdmaSystemSelectListPreference: void <init>(android.content.Context)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.voicedialer.BluetoothVoiceDialerActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.webkit.WebView: boolean zoomWithPreview(float,boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.cooliris.media.BackgroundLayer: void renderBlended(com.cooliris.media.RenderView,javax.microedition.khronos.opengles.GL11)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.music.MusicBrowserActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.transaction.MessagingNotification: void notifyFailed(android.content.Context,boolean,long,boolean)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_SMS"
 ], 
 "<android.content.Context: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.EditEvent: boolean access$1600(com.android.calendar.EditEvent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<android.content.MutableContextWrapper: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.Display: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.InCallScreen$6: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.SlidingTab: boolean onTouchEvent(android.view.MotionEvent)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.phone.CallLogAsync$AddCallTask: java.lang.Object doInBackground(java.lang.Object[])>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.test.TestListActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.browser.BrowserActivity: void onNewIntent(android.content.Intent)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.calendar.AgendaActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.CalendarApplication: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void setPowerStateToDesired()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.launcher2.WallpaperChooser: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.browser.BrowserHistoryPage: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.SipCallOptionHandler: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.backup.IBackupManager: void clearBackupData(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.providers.applications.ApplicationLauncher: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.accounts.AccountManager: android.accounts.AccountManagerFuture updateCredentials(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.am.ActivityManagerService: void appNotResponding(com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,java.lang.String)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.packageinstaller.UninstallAppProgress: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.RuimCard: void access$000(com.android.internal.telephony.IccCard,android.os.AsyncResult)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppTransfer: void start()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.bluetooth.BluetoothDiscoverableEnabler: void access$000(com.android.settings.bluetooth.BluetoothDiscoverableEnabler,int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.deskclock.Alarms: void deleteAlarm(android.content.Context,int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.NfcService$2: void enableForegroundNdefPush(android.content.ComponentName,android.nfc.NdefMessage)>": [
  "android.permission.NFC"
 ], 
 "<android.net.sip.ISipService$Stub$Proxy: android.net.sip.ISipSession getPendingSession(java.lang.String)>": [
  "android.permission.USE_SIP"
 ], 
 "<android.nfc.INfcAdapter: android.nfc.ILlcpServiceSocket getLlcpServiceInterface()>": [
  "android.permission.NFC"
 ], 
 "<android.server.BluetoothService: java.lang.String getRemoteDeviceProperty(java.lang.String,java.lang.String)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.phone.BluetoothHandsfree$24: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: void verifyUnlock(android.view.WindowManagerPolicy$OnKeyguardExitResult)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.exchange.EasSyncService: void doStatusCallback(long,long,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.exchange.AbstractSyncService: boolean hasConnectivity()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.contacts.SearchResultsActivity: android.net.Uri access$1000(com.android.contacts.ContactsListActivity,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.phone.ManageConferenceUtils: void updateManageConferencePanel(java.util.List)>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.NetworkManagementService: void startTethering(java.lang.String[])>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.phone.BluetoothHeadsetService: void access$1100(com.android.phone.BluetoothHeadsetService)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.EnableIccPinScreen: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.server.BluetoothA2dpService: boolean resumeSink(android.bluetooth.BluetoothDevice)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.net.IConnectivityManager$Stub$Proxy: int startUsingNetworkFeature(int,java.lang.String,android.os.IBinder)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppBtEnableActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.INTERNET", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void queryCdmaRoamingPreference(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.BluetoothHandsfree$2: android.bluetooth.AtCommandResult handleTestCommand()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: void access$3100(com.android.mms.ui.ComposeMessageActivity,com.android.mms.ui.MessageItem)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.exchange.SyncManager: void shutdown()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void simulateDataConnection(com.android.internal.telephony.Phone$DataState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.development.ConfigurationViewer: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IccProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.TechListChooserActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.sip.SipService$WifiScanProcess: void run()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.app.NetInitiatedActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.INTERNET", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.os.INetworkManagementService: java.lang.String[] listTtys()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.app.ActivityManagerNative: boolean handleApplicationWtf(android.os.IBinder,java.lang.String,android.app.ApplicationErrorReport$CrashInfo)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.server.am.ActivityManagerService: boolean requestServiceBindingLocked(com.android.server.am.ServiceRecord,com.android.server.am.IntentBindRecord,boolean)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<android.net.IConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.providers.downloads.DownloadService: com.android.providers.downloads.DownloadInfo access$800(com.android.providers.downloads.DownloadService,com.android.providers.downloads.DownloadInfo$Reader,long)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.mms.util.DownloadManager: java.lang.String access$400(com.android.mms.util.DownloadManager,android.net.Uri)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.nfc.INfcAdapter: int createLlcpConnectionlessSocket(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.phone.OtaUtils: void otaShowActivateScreen()>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.DateTimeSettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.InCallScreen: void handleOtaCallEnd()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.calendar.AgendaWindowAdapter: void refresh(android.text.format.Time,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.server.TelephonyRegistry: void checkListenerPermission(int)>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: android.accounts.AccountManagerFuture start()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.webkit.WebSettings: void verifyNetworkAccess()>": [
  "android.permission.INTERNET"
 ], 
 "<android.view.IWindowSession$Stub$Proxy: int add(android.view.IWindow,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.view.InputChannel)>": [
  "android.permission.SYSTEM_ALERT_WINDOW"
 ], 
 "<com.android.settings.LanguageSettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.development.MediaScannerActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.development.LogViewer: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.wifi.IWifiManager$Stub: boolean reconnect()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.phone.BluetoothAtPhonebook$2: android.bluetooth.AtCommandResult handleActionCommand()>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.webkit.FileLoader: boolean setupStreamAndSendStatus()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.CdmaCallOptions: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.systemui.usb.UsbResolverActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.IBluetoothPbap: void disconnect()>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.telephony.TelephonyManager: java.lang.String getDeviceId()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void getEnhancedVoicePrivacy(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.IAccountManager: java.lang.String getUserData(android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<android.app.ActivityManagerNative: void setProcessForeground(android.os.IBinder,int,boolean)>": [
  "android.permission.SET_PROCESS_LIMIT"
 ], 
 "<com.android.calendar.Navigator: void goTo(android.text.format.Time,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.calendar.DeleteEventHelper: void delete(long,long,long,int)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.phone.FakePhoneActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.IActivityManager: void killApplicationWithUid(java.lang.String,int)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.server.WifiWatchdogService: boolean backgroundCheckDnsConnectivity()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.provider.Telephony$Sms$Inbox: android.net.Uri addMessage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: int[] getValidChannelCounts()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.settings.bluetooth.DockService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.server.BluetoothA2dpService: android.bluetooth.BluetoothDevice[] getConnectedSinks()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.email.activity.Welcome: void onCreate(android.os.Bundle)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.location.LocationManager: void removeTestProvider(java.lang.String)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.calendar.MonthActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.transaction.ReadRecTransaction: void process()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SMS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.phone.InCallScreen: void access$2200(com.android.phone.InCallScreen)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.IccCard: void access$000(com.android.internal.telephony.IccCard,android.os.AsyncResult)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.data.Conversation: void access$900(android.content.Context)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.LocationManagerService: void handleLocationChangedLocked(android.location.Location,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.AudioAttachmentView: void access$000(com.android.mms.ui.AudioAttachmentView)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.ILlcpServiceSocket$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.NFC"
 ], 
 "<android.net.wifi.WifiManager: boolean reassociate()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void cancelPendingUssd(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.inputmethod.latin.LatinKeyboardBaseView$UIHandler: void startLongPressTimer(long,int,com.android.inputmethod.latin.PointerTracker)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: android.net.Uri getSelectedUri(int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.contacts.ContactsListActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.SMSDispatcher: void dispatch(android.content.Intent,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.PhysicalKeyboardSettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.pm.IPackageManager: void freeStorage(long,android.content.IntentSender)>": [
  "android.permission.CLEAR_APP_CACHE"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void restoreSavedNetworkSelection(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.exchange.EasSyncService: org.apache.http.HttpResponse executePostWithTimeout(org.apache.http.client.HttpClient,org.apache.http.client.methods.HttpPost,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.IAudioService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.util.HierarchicalStateMachine$HsmHandler: void processMsg(android.os.Message)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.DataConnectionTracker: void onSetDataEnabled(boolean)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_APN_SETTINGS"
 ], 
 "<com.android.development.SyncAdapterDriver: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.data.Conversation: void startDelete(android.content.AsyncQueryHandler,int,boolean,long)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.app.ChooserActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.activity.MessageView: void reloadUiFromMessage(com.android.email.provider.EmailContent$Message,boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.mms.ui.ConversationList: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.vpn.VpnServiceBinder: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.inputmethodservice.InputMethodService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.CalendarPreferenceActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.os.IVibratorService$Stub: void vibratePattern(long[],int,android.os.IBinder)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.cooliris.picasa.PicasaService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.google.common.io.ByteStreams: long length(com.google.common.io.InputSupplier)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.telephony.RI: void queryCLIP(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ViewContactActivity: android.database.Cursor setupContactCursor(android.content.ContentResolver,android.net.Uri)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean copyMessageToIccEf(int,byte[],byte[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.settings.RingerVolumePreference: void onSampleStarting(android.preference.VolumePreference$SeekBarVolumizer)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.stk.IconLoader: void readIconData()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.IP2pInitiator$Stub$Proxy: byte[] getGeneralBytes(int)>": [
  "android.permission.NFC"
 ], 
 "<android.media.MediaScanner: android.net.Uri scanSingleFile(java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.providers.downloads.DownloadService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.ui.EditContactActivity: boolean onOptionsItemSelected(android.view.MenuItem)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.music.PlaylistBrowserActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.sip.ISipService$Stub: android.net.sip.ISipSession getPendingSession(java.lang.String)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.google.common.io.ByteStreams$5: java.lang.Object getInput()>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.mms.model.TextModel: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,com.android.mms.drm.DrmWrapper,com.android.mms.model.RegionModel)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.LightsService$1: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.FLASHLIGHT"
 ], 
 "<android.nfc.INfcTag$Stub$Proxy: int ndefMakeReadOnly(int)>": [
  "android.permission.NFC"
 ], 
 "<android.server.BluetoothService: int getBluetoothState()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.quicksearchbox.ui.ContactBadge: void onClick(android.view.View)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.MountService: int mountVolume(java.lang.String)>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
 ], 
 "<android.pim.vcard.VCardComposer: boolean createOneEntry(java.lang.reflect.Method)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.server.BluetoothService: void <init>(android.content.Context)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.view.IWindowManager$Stub$Proxy: void setAnimationScale(int,float)>": [
  "android.permission.SET_ANIMATION_SCALE"
 ], 
 "<com.android.internal.app.IBatteryStats: byte[] getStatistics()>": [
  "android.permission.BATTERY_STATS", 
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.NetworkManagementService$NetdCallbackReceiver: boolean onEvent(int,java.lang.String,java.lang.String[])>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.mms.ui.SlideshowPresenter: void presentRegionMedia(com.android.mms.ui.SlideViewInterface,com.android.mms.model.RegionMediaModel,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.providers.downloads.SystemFacade: java.lang.Integer getActiveNetworkType()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.wifi.AdvancedSettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.InCallScreen: void onHoldClick()>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.bluetooth.IBluetooth$Stub$Proxy: boolean enable()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.net.IConnectivityManager$Stub: void setMobileDataEnabled(boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<android.webkit.WebView: void access$1600(android.webkit.WebView,android.graphics.Canvas)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.mms.transaction.SmsReceiverService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.IP2pInitiator$Stub$Proxy: int getMode(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.Bundle getCellLocation()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.phone.InCallScreen: boolean handleDialerKeyDown(int,android.view.KeyEvent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setGsmBroadcastActivation(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.InCallScreen$8: void onCancel(android.content.DialogInterface)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.exchange.SyncManager: java.lang.String getDeviceId(android.content.Context)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.webkit.BrowserFrame: void loadFinished(java.lang.String,int,boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.WindowManagerService: void setAnimationScales(float[])>": [
  "android.permission.SET_ANIMATION_SCALE"
 ], 
 "<com.android.settings.deviceinfo.Memory: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getIccSerialNumber()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getDeviceSvn()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.mms.ui.MessageListAdapter$AvatarCache$ContactData: boolean access$400(com.android.mms.ui.MessageListAdapter$AvatarCache$ContactData,android.database.Cursor,int,int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.view.IWindowManager$Stub$Proxy: void exitKeyguardSecurely(android.view.IOnKeyguardExitResult)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.DISABLE_KEYGUARD", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.email.service.IEmailService: int validate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,boolean,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.service.IEmailService$Stub: void sendMeetingResponse(long,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.EnableIccPinScreen: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.WeekActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.speechrecorder.SpeechRecorderActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.inputmethod.latin.LatinKeyboardBaseView$1: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.settings.ZonePicker: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.os.INetworkManagementService: void startUsbRNDIS()>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.server.BackupManagerService$ActiveRestoreSession: int getAvailableRestoreSets(android.app.backup.IRestoreObserver)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.service.wallpaper.ImageWallpaper: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ISms$Stub$Proxy: boolean enableCellBroadcast(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.settings.RingerVolumePreference: void onActivityStop()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.RecentCallsListActivity: boolean onContextItemSelected(android.view.MenuItem)>": [
  "android.permission.WRITE_CONTACTS"
 ], 
 "<com.android.settings.bluetooth.BluetoothPermissionActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.BluetoothA2dp: boolean resumeSink(android.bluetooth.BluetoothDevice)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.nfc.NfcService$3: int connectByName(int,java.lang.String)>": [
  "android.permission.NFC"
 ], 
 "<com.android.settings.bluetooth.BluetoothPairingDialog: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.browser.BrowserActivity: void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.server.WifiService: void access$400(com.android.server.WifiService,boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.mms.ui.ConversationListAdapter$OnContentChangedListener: void onContentChanged(com.android.mms.ui.ConversationListAdapter)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.calendar.LaunchActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.NetworkManagementService: long getInterfaceCounter(java.lang.String,boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipConnection: void separate()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.email.MessagingController: void synchronizeMailboxSynchronous(com.android.email.provider.EmailContent$Account,com.android.email.provider.EmailContent$Mailbox)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.content.ContentResolver: boolean isSyncActive(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.contacts.ExportVCardActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.webkit.FrameLoader: boolean executeLoad()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.voicedialer.RecognizerClient: void onRecognitionSuccess(android.content.Intent[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: void checkPendingNotification()>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.phone.NetworkSetting: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.deviceinfo.Memory$3: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry: void notifyDataConnectionFailed(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.applications.InstalledAppDetails: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void gotoIdleAndNotifyDataConnection(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.DeviceStorageMonitorService: void cancelNotification()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.SettingsLicenseActivity$1: void onReceivedHttpAuthRequest(android.webkit.WebView,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.net.Downloads$ByUri: android.database.Cursor getCurrentOtaDownloads(android.content.Context,java.lang.String)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.mms.ui.Presenter: void present()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.provider.Settings$Secure: boolean putInt(android.content.ContentResolver,java.lang.String,int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.nfc.INfcAdapter$Stub$Proxy: void disableForegroundDispatch(android.content.ComponentName)>": [
  "android.permission.NFC"
 ], 
 "<com.android.exchange.adapter.CalendarSyncAdapter$EasCalendarSyncParser: void addEvent(com.android.exchange.adapter.CalendarSyncAdapter$CalendarOperations,java.lang.String,boolean)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.content.IContentService: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.app.AliasActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone$1: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.server.BluetoothService: void restart()>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.cooliris.media.PicasaDataSource: void loadMediaSets(com.cooliris.media.MediaFeed)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.DataConnection$DcActivatingState: void exit()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: boolean addAccount(android.accounts.Account,java.lang.String,android.os.Bundle)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<android.app.ExpandableListActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.development.Details: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.activity.MessageView: void reloadUiFromBody(java.lang.String,java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.cooliris.media.MonitoredActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.provider.ContactsContract$RawContacts$EntityIteratorImpl: android.content.Entity next()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry$Stub: void notifySignalStrength(android.telephony.SignalStrength)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onResetDone(android.os.AsyncResult)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.SimSmsInterfaceManager$CellBroadcastRangeManager: boolean enableRange(int,int,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.AudioManager: void stopBluetoothSco()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.providers.calendar.TimeChangeReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppService: void access$700(com.android.bluetooth.opp.BluetoothOppService,javax.obex.ObexTransport)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.DayView: boolean initNextView(int)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.cooliris.media.Photographs: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.LocationManagerService: void access$800(com.android.server.LocationManagerService)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.PhoneUtils$2: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.http.HttpsConnection: android.net.http.AndroidHttpClientConnection openConnection(android.net.http.Request)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.sip.SipSettings$3$1: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.USE_SIP"
 ], 
 "<android.provider.Contacts$People: android.net.Uri createPersonInMyContactsGroup(android.content.ContentResolver,android.content.ContentValues)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.WallpaperManagerService$MyPackageMonitor: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.IConnectivityManager$Stub: android.net.NetworkInfo getNetworkInfo(int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.LocationManagerService: void addProximityAlertLocked(double,double,float,long,android.app.PendingIntent)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.contacts.ViewContactActivity: void setAggregationException(long,int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<java.net.URLConnection: java.io.InputStream getInputStream()>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.browser.Tab$3: void createWindow(boolean,android.os.Message)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.calendar.EventInfoActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.RI: void supplyNetworkDepersonalization(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.deskclock.AlarmAlert: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.RuimCard: void setIccLockEnabled(boolean,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.music.MediaPlaybackService$MultiPlayer$1: void onCompletion(android.media.MediaPlayer)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.AccountSyncSettings: void onAccountsUpdated(android.accounts.Account[])>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.settings.ChooseLockPassword: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.provider.ContactsContract$Data: android.net.Uri getContactLookupUri(android.content.ContentResolver,android.net.Uri)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.accounts.AccountManager: boolean addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void systemReady()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.certinstaller.CertInstaller: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManagerProxy: boolean copyMessageToIccEf(int,byte[],byte[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.server.vpn.VpnService: void waitUntilConnectedOrTimedout()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getVoiceMailNumber()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.settings.ManageAccountsSettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.systemui.usb.UsbPermissionActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.os.storage.ExternalStorageFormatter: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.browser.Tab$2$4: java.lang.Void doInBackground(java.lang.Void[])>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.internal.telephony.DataConnection: void start()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.calendar.AlertAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.nfc.ILlcpConnectionlessSocket: void close(int)>": [
  "android.permission.NFC"
 ], 
 "<android.media.IAudioService$Stub$Proxy: void setMode(int,android.os.IBinder)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.accounts.AccountManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.cooliris.media.RenderView: void processTouchEvent()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.ConversationList: void confirmDeleteThread(long,android.content.AsyncQueryHandler)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.settings.wifi.WifiStatusTest: void access$100(com.android.settings.wifi.WifiStatusTest,android.net.NetworkInfo)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.phone.BluetoothHeadsetService$6: int getBatteryUsageHint()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void handlePollCalls(android.os.AsyncResult)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.ConnectivityManager: java.lang.String[] getTetherableUsbRegexs()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$StateTracker: void toggleState(android.content.Context)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.os.INetworkManagementService$Stub: java.lang.String[] listTetheredInterfaces()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.calendar.CalendarActivity$CalendarGestureListener: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.settings.ApplicationSettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.server.BluetoothService: boolean enable(boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.browser.CombinedBookmarkHistoryActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.inputmethod.latin.LatinKeyboardView: void onUpEvent(com.android.inputmethod.latin.PointerTracker,int,int,long)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.mms.ui.DeliveryReportActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.CallManager: com.android.internal.telephony.Connection dial(com.android.internal.telephony.Phone,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.tts.TtsService: void processSpeechQueue()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.cooliris.media.PathBarLayer: void renderOpaque(com.cooliris.media.RenderView,javax.microedition.khronos.opengles.GL11)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.server.LocationManagerService$Receiver: void incrementPendingBroadcastsLocked()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.google.common.io.CharStreams$2: java.io.InputStreamReader getInput()>": [
  "android.permission.INTERNET"
 ], 
 "<android.os.INetworkManagementService$Stub: java.lang.String[] getDnsForwarders()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.content.ISyncAdapter: void initialize(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.systemui.statusbar.policy.StatusBarPolicy$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.browser.BrowserActivity: void onLowMemory()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.nfc.P2pInitiator: void send(byte[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.LocationManagerService: void access$500(com.android.server.LocationManagerService)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setCLIR(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.Details: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.provider.Calendar$EventsEntity$EntityIteratorImpl: android.content.Entity getEntityAndIncrementCursor(android.database.Cursor)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.providers.telephony.MmsSmsProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.net.wifi.IWifiManager$Stub: boolean saveConfiguration()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.mms.transaction.SmsReceiverService: void access$400(com.android.mms.transaction.SmsReceiverService)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: boolean copyToDrmProvider(long)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.google.common.io.Resources: java.lang.String toString(java.net.UR,java.nio.charset.Charset)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.server.PowerManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.development.ConfigurationViewer: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry: void notifyServiceState(android.telephony.ServiceState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.tts.TtsService: void access$100(android.tts.TtsService)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.BluetoothHeadsetService$6: boolean connectHeadsetInternal(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.phone.InCallScreen: void disconnectBluetoothAudio()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.accounts.AccountManager$AmsTask: android.accounts.AccountManagerFuture start()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.content.ContextWrapper: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.SearchResultsActivity: void returnPickerResult(android.database.Cursor,java.lang.String,android.net.Uri,int)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.providers.downloads.DownloadNotification: void updateNotification(java.util.Collection)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.packageinstaller.InstallAppProgress: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.providers.calendar.AppWidgetShared: void clearLocked()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.SettingsLicenseActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.ContactsListActivity: void access$300(com.android.contacts.ContactsListActivity,int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState: boolean turnOffMobileConnection()>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.server.vpn.PptpService: void onError(java.lang.Throwable)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppTransferActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.wifi.AdvancedSettings: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.settings.Settings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.wifi.WifiManager: java.util.List getConfiguredNetworks()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.settings.LocalePicker: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.activity.MessageList$LoadMessagesTask: void onPostExecute(java.lang.Object)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<android.webkit.WebView$1: void onVisibilityChanged(boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.AddAccountSettings: void onResume()>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppBtEnablingActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.bluetooth.RequestPermissionActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.activity.setup.AccountSetupBasics: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.content.SyncManager$SyncHandler: void runStateSyncing()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.settings.TextToSpeechSettings: void useSupportedLocAsDefault()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.webkit.LoadListener: void doRedirect()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.DeviceAdminAdd: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setRadioPower(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.launcher2.LauncherApplication: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.content.ContentService: android.content.SyncInfo getCurrentSync()>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getLine1AlphaTag()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.mms.ui.SlideshowPresenter$5: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.INetworkManagementService$Stub: boolean isUsbRNDISStarted()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void setAndBroadcastNetworkSetTimeZone(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.calendar.CalendarView: void drawAfterScroll(android.graphics.Canvas)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.test.TestBrowserActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.model.MediaModelFactory: com.android.mms.model.MediaModel getRegionMediaModel(android.content.Context,java.lang.String,java.lang.String,org.w3c.dom.smil.SMILRegionMediaElement,com.android.mms.model.LayoutModel,com.google.android.mms.pdu.PduPart)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.provider.Browser: java.lang.String[] getVisitedHistory(android.content.ContentResolver)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.music.MediaPlaybackService$5: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.EmergencyCallHandler: void onCreate(android.os.Bundle)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.Connection dial(java.lang.String)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.internal.telephony.RI: void reportStkServiceIsRunning(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.providers.contacts.ContactsProvider2: boolean importLegacyContacts(com.android.providers.contacts.LegacyContactImporter)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.voicedialer.BluetoothVoiceDialerActivity: void onStop()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.nfc.INfcTag: int connect(int,int)>": [
  "android.permission.NFC"
 ], 
 "<android.nfc.tech.NdefFormatable: void format(android.nfc.NdefMessage,boolean)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean enableCellBroadcast(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.mms.util.Recycler$SmsRecycler: void deleteOldMessages(android.content.Context)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: void updateCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.providers.calendar.EmptyService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.os.Vibrator: void vibrate(long)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.exchange.adapter.AbstractSyncAdapter: void cleanup()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<java.net.ServerSocket: void bind(java.net.SocketAddress)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.inputmethod.latin.AutoDictionary: void loadDictionaryAsync()>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.settings.wifi.WifiInfo: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.RI: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.Phone: void invokeOemRilRequestStrings(java.lang.String[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ViewContactActivity$1: void onChange(boolean)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.ConnectivityService$ConnectivityThread: com.android.server.ConnectivityService getServiceInstance(android.content.Context)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.os.INetworkManagementService: void stopTethering()>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<android.webkit.WebView: void setJsFlags(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.browser.BrowserActivity: void onResume()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.development.UnderdevelopedSettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void dispatch(android.content.Intent,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.DevelopmentSettings: void onActivityResult(int,int,android.content.Intent)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.SET_DEBUG_APP"
 ], 
 "<com.android.certinstaller.CertFileList: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.wifi.WifiManager: int updateNetwork(android.net.wifi.WifiConfiguration)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.WifiService: boolean reconnect()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.soundrecorder.Recorder: void startRecording(int,java.lang.String,android.content.Context)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture confirmCredentials(android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.net.IConnectivityManager$Stub$Proxy: void reportInetCondition(int,int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.GsmUmtsAdditionalCallOptions: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ISms$Stub: void sendMultipartText(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS"
 ], 
 "<com.android.server.WifiService: android.net.DhcpInfo getDhcpInfo()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.net.IConnectivityManager: void setMobileDataEnabled(boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<android.net.wifi.WifiManager: int getWifiApState()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.AlarmManagerService: void setTimeZone(java.lang.String)>": [
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.phone.CdmaCallOptions: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.media.MediaScanner$MyMediaScannerClient: void scanFile(java.lang.String,long,long)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.NetworkManagementService: long getInterfaceTxCounter(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.net.INetworkManagementEventObserver: void interfaceAdded(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.am.ActivityManagerService: android.content.Intent registerReceiver(android.app.IApplicationThread,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.server.vpn.L2tpService: void onError(int)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.calendar.CalendarActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.webkit.CacheLoader: void sendHeaders()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.gsm.SIMRecords: void onAllRecordsLoaded()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.webkit.WebView: void access$4800(android.webkit.WebView)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.bluetooth.ConnectSpecificProfilesActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getIccSerialNumber()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.music.ArtistAlbumBrowserActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$BluetoothStateTracker: void toggleState(android.content.Context)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.location.GpsLocationProvider: void removeListener(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.inputmethod.pinyin.SoftKeyboardView: com.android.inputmethod.pinyin.SoftKey onKeyPress(int,int,com.android.inputmethod.pinyin.SkbContainer$LongPressTimer,boolean)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.email.activity.setup.AccountSetupOptions: void onClick(android.view.View)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.media.AudioService$AudioHandler: void playSoundEffect(int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.CalendarApplication: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.OutgoingCallBroadcaster$OutgoingCallReceiver: void doReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.policy.impl.SimUnlockScreen$1: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.soundrecorder.SoundRecorder$1: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.fuelgauge.PowerUsageDetail: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.accounts.AccountManager$1: void startTask()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.systemui.usb.UsbAccessoryUriActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.INTERNET", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.nfc.IP2pTarget: byte[] getGeneralBytes(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.calendar.Utils: java.lang.String formatDateRange(android.content.Context,long,long,int)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.nfc.NfcService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.ui.QuickContactActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void deleteSmsOnRuim(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.browser.BrowserActivity: boolean switchToTab(int)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.quicksearchbox.google.GoogleSearch: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.InCallScreen: boolean handleCallKey()>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.deviceinfo.Memory: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
 ], 
 "<com.android.development.UnderdevelopedSettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.util.WeakAsyncTask: java.lang.Object doInBackground(java.lang.Object,java.lang.Object[])>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.nfc.INfcAdapter$Stub$Proxy: void enableForegroundDispatch(android.content.ComponentName,android.app.PendingIntent,android.content.IntentFilter[],android.nfc.TechListParcel)>": [
  "android.permission.NFC"
 ], 
 "<com.android.phone.EnableIccPinScreen: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.SearchResultsActivity: java.lang.String getContactDisplayName(long)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.exchange.EasOutboxService: android.os.Bundle tryAutodiscover(java.lang.String,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity$MsgListMenuClickListener: boolean onMenuItemClick(android.view.MenuItem)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.phone.BluetoothHandsfree: android.bluetooth.AtCommandResult access$4600(com.android.phone.BluetoothHandsfree)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.providers.calendar.EmptyService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.content.ISyncAdapter$Stub: void initialize(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.provider.Browser: void updateVisitedHistory(android.content.ContentResolver,java.lang.String,boolean)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.music.MediaPlaybackActivity: void access$600(com.android.music.MediaPlaybackActivity)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void dial(java.lang.String,int,com.android.internal.telephony.UUSInfo,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.cooliris.media.Gallery: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.providers.downloads.DownloadThread: org.apache.http.HttpResponse sendRequest(com.android.providers.downloads.DownloadThread$State,android.net.http.AndroidHttpClient,org.apache.http.client.methods.HttpGet)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: void switchWaitingOrHoldingAndActive()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.music.TrackBrowserActivity$NowPlayingCursor: boolean removeItem(int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.tech.Ndef: void writeNdefMessage(android.nfc.NdefMessage)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.policy.impl.LockPatternKeyguardView$AccountAnalyzer: void run(android.accounts.AccountManagerFuture)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.nfc.tech.NfcV: byte[] transceive(byte[],boolean)>": [
  "android.permission.NFC"
 ], 
 "<com.android.settings.AccountSyncSettingsInAddAccount: void onResume()>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.READ_SYNC_STATS"
 ], 
 "<android.nfc.INfcTag: void setIsoDepTimeout(int)>": [
  "android.permission.NFC"
 ], 
 "<android.tts.TtsService: boolean synthesizeToFile(java.lang.String,java.lang.String,java.util.ArrayList,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.sip.SipService$AutoRegistrationProcess: void onRegistrationFailed(android.net.sip.ISipSession,int,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: android.graphics.Bitmap generatePhoneNumberIcon(android.net.Uri,int,int)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.BrightnessPreference: void onDialogClosed(boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.DockObserver: void update()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.deskclock.SettingsActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void setTTYMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.IBluetoothA2dp$Stub: boolean setSinkPriority(android.bluetooth.BluetoothDevice,int)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.music.CreatePlaylist: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.systemui.usb.UsbConfirmActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.DeleteFdnContactScreen: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.AlertAdapter: void updateView(android.content.Context,android.view.View,java.lang.String,java.lang.String,long,long,boolean)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.internal.telephony.WapPushOverSms: void dispatchWapPdu_MMS(byte[],int,int,int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.SimUnlockScreen: boolean onKeyDown(int,android.view.KeyEvent)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.mms.transaction.TransactionService: void launchTransaction(int,com.android.mms.transaction.TransactionBundle,boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SMS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.phone.CallNotifier: void onRingbackTone(android.os.AsyncResult)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.wifi.WifiSettings: void saveNetworks()>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.deskclock.SettingsActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.os.storage.ExternalStorageFormatter: void updateProgressState()>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS", 
  "android.permission.MOUNT_FORMAT_FILESYSTEMS"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getLine1Number()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.calendar.EditEvent: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$StateTracker: int getTriState(android.content.Context)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.PrivacySettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.NotificationPlayer: void startSound(com.android.server.NotificationPlayer$Command)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: void proceedAfterWildChar(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onCleanUpConnection(boolean,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.IConnectivityManager$Stub: android.net.NetworkInfo[] getAllNetworkInfo()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.nfc.INfcAdapter: android.nfc.NdefMessage localGet()>": [
  "android.permission.NFC"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.sip.SipSettings: void access$500(com.android.phone.sip.SipSettings,android.net.sip.SipProfile)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.internal.telephony.test.SimulatedCommands: void supplyIccPuk(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.IBatteryStats$Stub$Proxy: byte[] getStatistics()>": [
  "android.permission.BATTERY_STATS", 
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.calendar.AgendaWindowAdapter$QueryHandler$1: void onClick(android.view.View)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.internal.telephony.cdma.CdmaSMSDispatcher: int processMessagePart(com.android.internal.telephony.SmsMessageBase,com.android.internal.telephony.SmsHeader$ConcatRef,com.android.internal.telephony.SmsHeader$PortAddrs)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.DeviceInfoSettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.data.Conversation: boolean loadFromThreadId(long,boolean)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.RI: void releaseWakeLockIfDone()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.IAccountManager$Stub: void updateCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.cdma.RuimRecords: void onRuimReady()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.INetworkManagementService: void startTethering(java.lang.String[])>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.email.service.MailService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.exchange.adapter.CalendarSyncAdapter: void <init>(com.android.email.provider.EmailContent$Mailbox,com.android.exchange.EasSyncService)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.speechrecorder.SpeechRecorderActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.systemui.usb.StorageNotification: void access$000(com.android.systemui.usb.StorageNotification,boolean)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.commands.am.Am: void main(java.lang.String[])>": [
  "android.permission.SET_ANIMATION_SCALE"
 ], 
 "<android.nfc.INfcTag$Stub: void setIsoDepTimeout(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void simulateDataConnection(com.android.internal.telephony.Phone$DataState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.wifi.IWifiManager: void initializeMulticastFiltering()>": [
  "android.permission.CHANGE_WIFI_MULTICAST_STATE"
 ], 
 "<android.service.wallpaper.WallpaperService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.ManageAccountsSettings: void onCreate(android.os.Bundle)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.READ_SYNC_STATS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.LocationManagerService: android.os.Bundle _getProviderInfoLocked(java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: void access$600(com.android.internal.policy.impl.KeyguardViewMediator,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityManagerService: void processStartTimedOutLocked(com.android.server.am.ProcessRecord)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.settings.ApplicationSettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.wifi.WifiStateTracker: void notifySupplicantLost()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.settings.applications.RunningServiceDetails: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.webkit.WebViewCore: void sendMessageAtFrontOfQueue(int,java.lang.Object)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: boolean handleForwardedMessage()>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.providers.calendar.CalendarAppWidgetService: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void setPreferredNetworkType(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.server.BluetoothService: boolean startDiscovery()>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.calendar.EventLoader: void startBackgroundThread()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.development.PointerLocation: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.INfcAdapter$Stub$Proxy: void disableForegroundNdefPush(android.content.ComponentName)>": [
  "android.permission.NFC"
 ], 
 "<android.server.BluetoothService: boolean setDiscoverableTimeout(int)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.INTERNET", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.cooliris.media.PhotoAppWidgetBind: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.AdnRecordLoader: void loadFromEF(int,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.INetworkManagementService$Stub: void attachPppd(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.music.MediaPlaybackService: void play()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.cooliris.media.MenuBar: void renderOpaque(com.cooliris.media.RenderView,javax.microedition.khronos.opengles.GL11)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.mms.transaction.SmsReceiverService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.IContentService$Stub$Proxy: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.mms.data.WorkingMessage: void asyncDeleteDraftSmsMessage(com.android.mms.data.Conversation)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.sip.SipService: android.net.sip.ISipSession getPendingSession(java.lang.String)>": [
  "android.permission.USE_SIP"
 ], 
 "<android.widget.VideoView: void stopPlayback()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.cooliris.media.ReverseGeocoder: void <init>(android.content.Context)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.IIccPhoneBook$Stub: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: android.net.Uri access$1000(com.android.contacts.ContactsListActivity,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.service.wallpaper.WallpaperSettingsActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.activity.UpgradeAccounts: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.systemui.usb.UsbConfirmActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.app.ResolverActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setBandMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ContactsLiveFolders$PhoneContacts: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: void onNewIntent(android.content.Intent)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.certinstaller.CertFile: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.PhoneInterfaceManager: void enforceCallPermission()>": [
  "android.permission.CALL_PHONE"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.Connection: void proceedAfterWaitChar()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.browser.TitleBar: boolean onTouchEvent(android.view.MotionEvent)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.BluetoothHandsfree$3: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.internal.app.HeavyWeightSwitcherActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.bluetooth.BluetoothPairingDialog: void createConfirmationDialog()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void setCdmaRoamingPreference(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.phone.CdmaSystemSelectListPreference$MyHandler: void resetCdmaRoamingModeToDefault()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.content.ContentService: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.email.service.IEmailServiceCallback$Stub: void syncMailboxStatus(long,int,int)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.phone.PhoneInterfaceManager: boolean endCall()>": [
  "android.permission.CALL_PHONE"
 ], 
 "<com.android.server.WifiService: int[] getValidChannelCounts()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.settings.ApnSettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.ConnectivityService: void sendGeneralBroadcast(android.net.NetworkInfo,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.AccountManager$8: void doWork()>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.calendar.WeekView: void init(android.content.Context)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.email.activity.setup.AccountSetupBasics: void onActivityResult(int,int,android.content.Intent)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.server.connectivity.Tethering: boolean configureUsbIface(boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.exchange.SyncManager: void runAccountReconciler()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.Connection dial(java.lang.String,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.PackageManagerService: void installNewPackageLI(android.content.pm.PackageParser$Package,int,int,java.lang.String,com.android.server.PackageManagerService$PackageInstalledInfo)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.providers.contacts.ContactsProvider2: void access$1500(com.android.providers.contacts.ContactsProvider2)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.nfc.tech.NdefFormatable: void reconnect()>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.location.GpsLocationProvider: void disable()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.IActivityManager: void goingToSleep()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.systemui.usb.StorageNotification: void access$100(com.android.systemui.usb.StorageNotification,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.settings.ApnEditor: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.exchange.ContactsSyncAdapterService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.browser.BrowserActivity$18: void onPostExecute(java.lang.Object)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.BluetoothHandsfree: void expectVoiceRecognition()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.os.storage.ExternalStorageFormatter: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.providers.downloads.SizeLimitActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.exchange.adapter.ContactsSyncAdapter$EasContactsSyncParser: void commandsParser()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.browser.BrowserActivity$3: java.lang.Void doInBackground(java.lang.Void[])>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.mms.MmsApp: void onTerminate()>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.inputmethod.latin.LatinKeyboardBaseView$OnKeyboardActionListener: void swipeDown()>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.calendar.AgendaActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.bluetooth.RequestPermissionActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.policy.impl.KeyguardUpdateMonitor: void <init>(android.content.Context)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.policy.impl.KeyguardScreenCallback: void goToLockScreen()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.mms.ui.ConversationList$DeleteThreadListener$1: void run()>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.providers.contacts.LegacyApiSupport: java.lang.String getContactMethodType(android.net.Uri)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.ActivityPicker: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.activity.setup.AccountSettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.cooliris.media.Gallery: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.server.BluetoothService: int getBondState(java.lang.String)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.sip.SipService$ConnectivityReceiver: void onChanged(java.lang.String,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.exchange.EasSyncService: void sleep(long,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.WebView: void onPause()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.Connection: void separate()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.app.ActivityManagerNative: void killBackgroundProcesses(java.lang.String)>": [
  "android.permission.RESTART_PACKAGES", 
  "android.permission.KILL_BACKGROUND_PROCESSES"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppTransferHistory: boolean onContextItemSelected(android.view.MenuItem)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.browser.ActiveTabsPage$TabsListAdapter$1: void onClick(android.view.View)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<android.net.http.Connection: android.net.http.AndroidHttpClientConnection openConnection(android.net.http.Request)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: int getNumAllowedChannels()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.music.MediaPickerActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.BluetoothHandsfree$4: android.bluetooth.AtCommandResult handleReadCommand()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.cdma.RuimCard: void supplyPuk2(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.wifi.WifiSettings: boolean onOptionsItemSelected(android.view.MenuItem)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.settings.bluetooth.DockEventReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.test.mock.MockContentResolver: android.content.SyncInfo getCurrentSync()>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.browser.BrowserActivity: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: android.database.Cursor doFilter(java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.mms.ui.MessagingPreferenceActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.am.ActivityManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.GET_TASKS", 
  "android.permission.REORDER_TASKS", 
  "android.permission.SIGNAL_PERSISTENT_PROCESSES", 
  "android.permission.KILL_BACKGROUND_PROCESSES", 
  "android.permission.SET_DEBUG_APP", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.SET_PROCESS_LIMIT", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.SET_ALWAYS_FINISH", 
  "android.permission.RESTART_PACKAGES", 
  "android.permission.CHANGE_CONFIGURATION"
 ], 
 "<com.android.inputmethod.pinyin.SkbContainer: boolean onTouch(android.view.View,android.view.MotionEvent)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.InputMethodManagerService$SettingsObserver: void <init>(com.android.server.InputMethodManagerService,android.os.Handler)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.music.PlaylistBrowserActivity: void playRecentlyAdded()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.wifi.WifiAPITest: boolean onPreferenceClick(android.preference.Preference)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.inputmethodservice.AbstractInputMethodService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.cooliris.media.PathBarLayer: void renderBlended(com.cooliris.media.RenderView,javax.microedition.khronos.opengles.GL11)>": [
  "android.permission.INTERNET"
 ], 
 "<android.bluetooth.IBluetooth: boolean cancelDiscovery()>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.view.WindowManagerPolicy$WindowState: boolean hideLw(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<android.media.AudioRecord: void <init>(int,int,int,int,int)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkInfo getActiveNetworkInfo()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.email.activity.MailboxList: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.InCallScreen: void onPause()>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void setBandMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityManagerService: java.util.List getTasks(int,int,android.app.IThumbnailReceiver)>": [
  "android.permission.GET_TASKS"
 ], 
 "<com.android.mms.transaction.RetrieveTransaction: byte[] sendPdu(byte[],java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: boolean access$000(com.android.contacts.ContactsListActivity,boolean)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_SYNC_STATS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.email.service.EmailServiceProxy$5: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.sip.SipSettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.BluetoothHandsfree$BluetoothPhoneState: void <init>(com.android.phone.BluetoothHandsfree)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.net.Downloads$ById: long startDownloadByUri(android.content.Context,java.lang.String,java.lang.String,boolean,int,boolean,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.settings.wifi.WifiApEnabler: void access$100(com.android.settings.wifi.WifiApEnabler,java.lang.Object[],java.lang.Object[],java.lang.Object[])>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.phone.BluetoothHeadsetService$RfcommConnectThread: void run()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.settings.ManageAccountsSettings: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.READ_SYNC_STATS", 
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.calendar.CalendarView: void doFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.phone.CallFeaturesSetting: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.IIccPhoneBook: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.IBluetoothHeadset$Stub: void disconnectHeadset(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.email.service.IEmailService$Stub$Proxy: void hostChanged(long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.browser.BookmarkSearch: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.webkit.WebView: void onFocusChanged(boolean,int,android.graphics.Rect)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.WifiService: int getWifiApEnabledState()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.location.ILocationManager: void setTestProviderEnabled(java.lang.String,boolean)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.contacts.ContactsListActivity: void onResume()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_SYNC_STATS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.deskclock.AlarmClock: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.accounts.AccountManager$3: android.accounts.AccountManager$Future2Task start()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.browser.Tab$2: void onPageFinished(android.webkit.WebView,java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.gsm.stk.StkService: void handleProactiveCommand(com.android.internal.telephony.gsm.stk.CommandParams)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.AccountManagerService: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<android.webkit.HTML5VideoViewProxy$PosterDownloader$1: void run()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.contacts.ContactsListActivity: boolean access$000(com.android.contacts.ContactsListActivity,boolean)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_SYNC_STATS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppService: void onCreate()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.providers.userdictionary.DictionaryBackupAgent: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.browser.search.SearchEngine: android.database.Cursor getSuggestions(android.content.Context,java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.LanguageSettings: void onPause()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: void onScreenTurnedOn()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.settings.ConfirmLockPattern: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.CallCard: void displayMainCallStatus(com.android.internal.telephony.CallManager,com.android.internal.telephony.Call)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.contacts.ImportVCardActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.ConnectivityService: void access$1200(com.android.server.ConnectivityService,int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.settings.LocalePickerInSetupWizard: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.calendar.CalendarPreferenceActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.SelectCalendarsActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.ContactsListActivity$2: void onClick(android.view.View)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.exchange.EasOutboxService: void acknowledgeRemoteWipe(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.quicksearchbox.google.GoogleSettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.OutgoingCallBroadcaster: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.vpn.L2tpIpsecPskService: boolean checkConnectivity()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.settings.bluetooth.ConnectSpecificProfilesActivity: void setOnlineMode(boolean,boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.cooliris.media.CropImage$1: void shutdown(java.lang.String)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void queueNextSignalStrengthPoll()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.VIBRATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void acceptCall(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.SimCard: void supplyPuk(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.INfcAdapter$Stub: void enableForegroundNdefPush(android.content.ComponentName,android.nfc.NdefMessage)>": [
  "android.permission.NFC"
 ], 
 "<com.android.settings.ConfirmLockPassword: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.NativeDaemonConnector: void run()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.content.ContentService: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.phone.InCallScreen: void requestCloseOtaFailureNotice(long)>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppTransferActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.providers.media.MediaScannerService: void access$200(com.android.providers.media.MediaScannerService,java.lang.String[],java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.music.RepeatingImageButton: void doRepeat(boolean)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.SearchActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.RuimRecords: void onRecordLoaded()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.inputmethod.latin.LatinIME: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setLocationUpdates(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void dial(java.lang.String,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.transaction.HttpUtils: byte[] httpConnection(android.content.Context,long,java.lang.String,byte[],int,boolean,java.lang.String,int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.server.BluetoothService: boolean fetchRemoteUuids(java.lang.String,android.os.ParcelUuid,android.bluetooth.IBluetoothCallback)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getLastPdpFailCause(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.DisplaySettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.PackageManagerBackupAgent: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.PowerManagerService: void releaseWakeLock(android.os.IBinder,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.AccountsTester: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.calendar.Utils: void setTimeZone(android.content.Context,java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.settings.AccessibilitySettings: void persistEnabledAccessibilityServices()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.mms.transaction.SmsReceiverService: android.net.Uri insertMessage(android.content.Context,android.telephony.SmsMessage[],int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<android.nfc.ILlcpSocket$Stub$Proxy: int receive(int,byte[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.providers.settings.SettingsBackupAgent: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.tech.MifareClassic: boolean authenticate(int,byte[],boolean)>": [
  "android.permission.NFC"
 ], 
 "<android.view.WindowManagerPolicy: void screenTurnedOff(int)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void hangupConnection(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.IActivityManager: java.util.List getTasks(int,int,android.app.IThumbnailReceiver)>": [
  "android.permission.GET_TASKS"
 ], 
 "<com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo doSecondaryLookupIfNecessary(android.content.Context,java.lang.String,com.android.internal.telephony.CallerInfo)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.PackageManagerBackupAgent: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.http.RequestQueue: void access$300(android.net.http.RequestQueue)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.media.AudioService$AudioHandler: void persistVolume(android.media.AudioService$VolumeStreamState,boolean,boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.webkit.WebView$9: void onClick(android.view.View)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.PhoneBase: void exitEmergencyCallbackMode()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityManagerService: void unbroadcastIntent(android.app.IApplicationThread,android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.cooliris.media.RootLayer: void renderBlended(com.cooliris.media.RenderView,javax.microedition.khronos.opengles.GL11)>": [
  "android.permission.INTERNET"
 ], 
 "<android.webkit.WebView: void dumpV8Counters()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.net.IThrottleManager$Stub$Proxy: java.lang.String getHelpUri()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.net.IThrottleManager: long getCliffThreshold(java.lang.String,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.providers.downloads.DownloadThread: int readFromResponse(com.android.providers.downloads.DownloadThread$State,com.android.providers.downloads.DownloadThread$InnerState,byte[],java.io.InputStream)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.calendar.EventInfoActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.BluetoothHeadsetService$6: void disconnectHeadset(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.wifi.WifiApSettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.activity.setup.AccountSettingsUtils: void commitSettings(android.content.Context,com.android.email.provider.EmailContent$Account)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.settings.Settings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.applications.InstalledAppDetails: void processMoveMsg(android.os.Message)>": [
  "android.permission.GET_PACKAGE_SIZE"
 ], 
 "<com.android.providers.calendar.CalendarProvider2: void verifyAccounts()>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.contacts.ui.ContactsPreferencesActivity$AccountDisplay: void buildDiff(java.util.ArrayList)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.SMSDispatcher: void sendRawPdu(byte[],byte[],android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.inputmethod.pinyin.PinyinIME: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.inputmethod.latin.InputLanguageSelection: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.BluetoothHandsfree$8: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.email.activity.setup.AccountSetupCheckSettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: boolean setupData(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.ConnectivityManager: void reportInetCondition(int,int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.ContentResolver: android.content.SyncInfo getCurrentSync()>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<android.tts.TtsService: int access$1900(android.tts.TtsService,java.lang.String,java.lang.String,int,java.util.ArrayList)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.systemui.usb.UsbConfirmActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.camera.VideoCamera: boolean onKeyDown(int,android.view.KeyEvent)>": [
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.net.wifi.IWifiManager$Stub: boolean acquireWifiLock(android.os.IBinder,int,java.lang.String,android.os.WorkSource)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.WifiService: void enforceAccessPermission()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void notifyDefaultData(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity$20: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.test.IsolatedContext: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.calendar.MonthView: void drawBox(int,int,int,int,android.graphics.Canvas,android.graphics.Paint,android.graphics.Rect,boolean)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.mms.ui.SearchActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.SearchResultsActivity: android.database.Cursor queryPhoneNumbers(long)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.am.ActivityManagerService: boolean shutdown(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.phone.HapticFeedback: void vibrate()>": [
  "android.permission.VIBRATE"
 ], 
 "<android.os.storage.IMountService$Stub$Proxy: void unmountVolume(java.lang.String,boolean)>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
 ], 
 "<com.android.phone.BluetoothHandsfree$27: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.bluetooth.BluetoothAdapter: java.util.Set getBondedDevices()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.app.RingtonePickerActivity: void onStop()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.telephony.SmsManager: boolean enableCellBroadcast(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.internal.util.HierarchicalStateMachine$HsmHandler: void access$2100(com.android.internal.util.HierarchicalStateMachine$HsmHandler)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.EditPinPreference: void onDialogClosed(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ContactOptionsActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.service.EmailServiceProxy$3: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.SettingsSafetyLegalActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.TrackBrowserActivity: boolean dispatchKeyEvent(android.view.KeyEvent)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.ShutdownActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.EnableIccPinScreen: void access$300(com.android.phone.EnableIccPinScreen)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.BluetoothHandsfree: void userWantsAudioOn()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.media.IAudioService$Stub: void setSpeakerphoneOn(boolean)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.music.MediaPlaybackActivity: void cycleRepeat()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.sip.SipEditor: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.webkit.ContentLoader: boolean sendData()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.WindowManagerService: void prepareAppTransition(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<android.content.ContentService: android.content.SyncManager getSyncManager()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void separate(com.android.internal.telephony.cdma.CdmaConnection)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.WebView: void loadUrl(java.lang.String,java.util.Map)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.cooliris.media.RootLayer: boolean onTouchEvent(android.view.MotionEvent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.service.wallpaper.WallpaperSettingsActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.BluetoothHandsfree$DebugThread: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.am.ActivityManagerService: android.content.ComponentName startServiceLocked(android.app.IApplicationThread,android.content.Intent,java.lang.String,int,int)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.internal.telephony.PhoneSubInfo: java.lang.String getLine1AlphaTag()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.development.DataList: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void <init>(com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean)>": [
  "android.permission.CHANGE_CONFIGURATION", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.calendar.AgendaWindowAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.commands.monkey.MonkeyNetworkMonitor: void register(android.app.IActivityManager)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<android.util.CalendarUtils$TimeZoneUtils: void setTimeZone(android.content.Context,java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.cooliris.media.MovieView$1: void onPause()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.exchange.SyncManager$1: void loadAttachmentStatus(long,long,int,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.view.WindowManagerPolicy: void enableKeyguard(boolean)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.app.backup.BackupAgent: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.ConnectivityService: boolean setRadios(boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.music.AudioPreview: void onPrepared(android.media.MediaPlayer)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.sip.SipService: void open(android.net.sip.SipProfile)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.email.activity.MessageList: void onRefresh()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.phone.BluetoothHeadsetService: void getSdpRecordsAndConnect(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.google.common.io.MultiInputStream: void advance()>": [
  "android.permission.INTERNET"
 ], 
 "<com.cooliris.cache.CacheService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.providers.calendar.CalendarProvider2: void access$300(com.android.providers.calendar.CalendarProvider2,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: void connect()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.os.storage.StorageManager: void disableUsbMassStorage()>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
 ], 
 "<android.net.MobileDataStateTracker$MobileDataStateReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.ThrottleService: long getPeriodStartTime(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.TextToSpeechSettings: void access$000(com.android.settings.TextToSpeechSettings)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.util.HierarchicalStateMachine$HsmHandler: void completeConstruction()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.quicksearchbox.google.GoogleSettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getLastCallFailCause(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.music.MediaPlaybackActivity$9: void onRepeat(android.view.View,long,int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.PlatLogoActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.commands.monkey.Monkey: boolean getSystemInterfaces()>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<android.media.IAudioService$Stub: void stopBluetoothSco(android.os.IBinder)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.cooliris.media.MovieView: void onCreate(android.os.Bundle)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.systemui.usb.UsbStorageActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.server.BluetoothService: boolean setPin(java.lang.String,byte[])>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.policy.impl.RecentApplicationsDialog: void reloadButtons()>": [
  "android.permission.GET_TASKS"
 ], 
 "<android.os.INetworkManagementService$Stub$Proxy: long getInterfaceRxCounter(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.music.MediaPlaybackService$2: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void getIMEI(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.IWindowManager: void setAnimationScales(float[])>": [
  "android.permission.SET_ANIMATION_SCALE"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: boolean onOptionsItemSelected(android.view.MenuItem)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CALL_PHONE", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.phone.OtaUtils: void otaShowProgramFailure(int)>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.inputmethod.latin.InputLanguageSelection: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.webkit.WebViewCore: void sendMessage(int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.service.wallpaper.WallpaperSettingsActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.quicksearchbox.ChoiceActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.MusicUtils: void togglePartyShuffle()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean connectSinkInternal(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.server.WindowManagerService$InputMonitor: void notifyLidSwitchChanged(long,boolean)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.webkit.WebIconDatabase: void requestIconForPageUrl(java.lang.String,android.webkit.WebIconDatabase$IconListener)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.nfc.NfcService$4: void close(int)>": [
  "android.permission.NFC"
 ], 
 "<android.os.INetworkManagementService$Stub: void setIpForwardingEnabled(boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.camera.ShutterButton$OnShutterButtonListener: void onShutterButtonClick(com.android.camera.ShutterButton)>": [
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.phone.BluetoothHandsfree$7: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.test.ActivityUnitTestCase$MockParent: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.wifi.IWifiManager$Stub: void startScan(boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.phone.PhoneApp: void updateBluetoothIndication(boolean)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void doContactDelete(android.net.Uri)>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.music.IMediaPlaybackService$Stub$Proxy: void setQueuePosition(int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.LocationManagerService$Receiver: void access$700(com.android.server.LocationManagerService$Receiver)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.VideoView$6: void surfaceCreated(android.view.SurfaceHolder)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: void access$200(com.android.internal.policy.impl.KeyguardViewMediator)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.ServiceStateTracker: void setRadioPower(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.OtaUtils: void access$200(com.android.phone.OtaUtils)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.net.INetworkManagementEventObserver$Stub$Proxy: void interfaceAdded(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppBtErrorActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.ui.MessageUtils$ResizeImageResultCallback: void onResizeResult(com.google.android.mms.pdu.PduPart,boolean)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.webkit.WebView: void setNetworkType(java.lang.String,java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.app.ExternalMediaFormatActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.view.VolumePanel: void onVolumeChanged(int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.settings.bluetooth.BluetoothPermissionActivity: android.view.View createView()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.mms.transaction.SimFullReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.svox.pico.DownloadVoiceData: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.WifiService: void acquireMulticastLock(android.os.IBinder,java.lang.String)>": [
  "android.permission.CHANGE_WIFI_MULTICAST_STATE"
 ], 
 "<com.android.mms.model.RegionMediaModel: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,com.android.mms.drm.DrmWrapper)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.provider.Settings$System: boolean putInt(android.content.ContentResolver,java.lang.String,int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void restoreSavedNetworkSelection(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.AccessibilitySettings$2: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.content.MutableContextWrapper: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.LocalePicker: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager: boolean copyMessageToIccEf(int,byte[],byte[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.email.activity.MessageView: boolean handleMenuItem(int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.bluetooth.DockService: void handleUnexpectedDisconnect(android.bluetooth.BluetoothDevice,com.android.settings.bluetooth.LocalBluetoothProfileManager$Profile,int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.BackupManagerService: void <init>(android.content.Context)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.bluetooth.BluetoothDevice: boolean fetchUuidsWithSdp()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.calendar.AgendaListView: long getFirstVisibleTime()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.nfc.IP2pTarget$Stub$Proxy: int connect(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.settings.UserDictionarySettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.providers.downloads.DownloadProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapService: void onCreate()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.app.PlatLogoActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppTransferHistory: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.service.wallpaper.WallpaperService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.provider.Settings$Secure: boolean putFloat(android.content.ContentResolver,java.lang.String,float)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.media.AudioService: void setBluetoothScoOn(boolean)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.cooliris.media.PhotoAppWidgetBind: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.browser.search.OpenSearchSearchEngine: android.database.Cursor getSuggestions(android.content.Context,java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.widget.VideoView$6: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ImportVCardActivity$VCardReadThread: void run()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.RI: void getMute(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.inputmethod.latin.LatinIMEDebugSettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.app.ResolverActivity: void onCreate(android.os.Bundle,android.content.Intent,java.lang.CharSequence,android.content.Intent[],java.util.List,boolean)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.INTERNET", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapService: void access$900(com.android.bluetooth.pbap.BluetoothPbapService)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.nfc.IP2pInitiator$Stub$Proxy: boolean send(int,byte[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.music.AudioPreview: boolean onKeyDown(int,android.view.KeyEvent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.CallCard: void onQueryComplete(int,java.lang.Object,com.android.internal.telephony.CallerInfo)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.quicksearchbox.QsbApplicationWrapper: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.WifiService: boolean isMulticastEnabled()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.app.IBatteryStats$Stub$Proxy: void setBatteryState(int,int,int,int,int,int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.phone.BluetoothAtPhonebook: com.android.phone.BluetoothAtPhonebook$PhonebookResult access$500(com.android.phone.BluetoothAtPhonebook,java.lang.String,boolean)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.accessibilityservice.AccessibilityService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.PackageManagerService: boolean deletePackageX(java.lang.String,boolean,boolean,int)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void notifyDataConnection(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.IBluetoothHeadset$Stub$Proxy: int getPriority(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker$2: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.service.urlrenderer.UrlRendererService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.browser.BrowserBookmarksPage$4: void onClick(android.content.DialogInterface,int)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.contacts.CallDetailActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.location.ILocationManager$Stub: boolean isProviderEnabled(java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.cooliris.media.TimeBar: void onSurfaceCreated(com.cooliris.media.RenderView,javax.microedition.khronos.opengles.GL11)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void handleEnterEmergencyCallbackMode(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.activity.setup.AccountSetupIncoming: void onActivityResult(int,int,android.content.Intent)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.internal.policy.impl.LockPatternKeyguardView$1: void goToUnlockScreen()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.browser.BrowserPreferencesPage: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.provider.Calendar$CalendarAlerts: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.accounts.AccountManagerService: android.accounts.Account[] getAccounts(java.lang.String)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.browser.BrowserActivity: com.android.browser.Tab access$700(com.android.browser.BrowserActivity,java.lang.String)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void enableSingleLocationUpdate()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.IConnectivityManager$Stub$Proxy: boolean getMobileDataEnabled()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.email.service.IEmailService: void startSync(long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void acceptCall()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.drm.DrmUtils: void cleanupStorage(android.content.Context)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppBtEnableActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.browser.Tab: void putInForeground()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.contacts.ContactsListActivity: android.net.Uri getContactUri(int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.bluetooth.ConnectSpecificProfilesActivity: void addPreferencesForProfiles()>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void setPreferredApn(int)>": [
  "android.permission.WRITE_APN_SETTINGS"
 ], 
 "<com.android.mms.data.Conversation: com.android.mms.data.Conversation get(android.content.Context,com.android.mms.data.ContactList,boolean)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.cooliris.picasa.GDataClient: void put(java.lang.String,byte[],java.lang.String,com.cooliris.picasa.GDataClient$Operation)>": [
  "android.permission.INTERNET"
 ], 
 "<com.cooliris.media.UriTexture: android.graphics.Bitmap createFromUri(android.content.Context,java.lang.String,int,int,long,org.apache.http.conn.ClientConnectionManager)>": [
  "android.permission.INTERNET"
 ], 
 "<android.net.Downloads$ById: android.net.Downloads$StatusInfo getStatus(android.content.Context,long)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.server.vpn.L2tpService: boolean onConnect(java.lang.String,java.lang.String)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.nfc.NfcService$3: int getLocalSap(int)>": [
  "android.permission.NFC"
 ], 
 "<android.accounts.IAccountManager$Stub: void getAccountsByFeatures(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[])>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.calendar.DismissAllAlarmsService: void onHandleIntent(android.content.Intent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.music.MusicPicker: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onRoamingOff()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.test.TestBrowserActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.RuimCard: void setIccFdnEnabled(boolean,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.sip.SipService$ConnectivityReceiver: void access$1300(com.android.server.sip.SipService$ConnectivityReceiver,android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.PhysicalKeyboardSettings: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.phone.CallFeaturesSetting: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.AccessibilityManagerService$2: boolean onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.providers.downloads.SizeLimitActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.exchange.SyncManager: void access$900(com.android.exchange.SyncManager)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppService: void removeBatch(com.android.bluetooth.opp.BluetoothOppBatch)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.RI: void reportSmsMemoryStatus(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.SearchResultsActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.SettingsLicenseActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.INTERNET", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.mms.data.WorkingMessage$MessageStatusListener: void onMessageSent()>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.settings.AddAccountSettings: void updateAuthDescriptions()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.settings.DeviceInfoSettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.server.BluetoothEventLoop: void onDevicePropertyChanged(java.lang.String,java.lang.String[])>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.nfc.ILlcpConnectionlessSocket$Stub: void close(int)>": [
  "android.permission.NFC"
 ], 
 "<android.webkit.WebView: void onResume()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.VibratorService: void cancelVibrate(android.os.IBinder)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.settings.bluetooth.LocalBluetoothManager: void showError(android.bluetooth.BluetoothDevice,int,int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: void access$4700(com.android.mms.ui.ComposeMessageActivity,int,boolean)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.phone.BluetoothHandsfree: void callStarted()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.ndefpush.NdefPushClient: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.ThrottleService$MyHandler: void onRebootRecovery()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.mms.ui.SlideshowEditActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.google.common.io.InputSupplier: java.lang.Object getInput()>": [
  "android.permission.INTERNET"
 ], 
 "<android.accounts.IAccountManager$Stub: java.lang.String getUserData(android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.contacts.ui.EditContactActivity$AddContactTask: java.util.ArrayList doInBackground(com.android.contacts.ui.EditContactActivity,java.lang.Void[])>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.voicedialer.VoiceDialerActivity: int access$1000(com.android.voicedialer.VoiceDialerActivity,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.cooliris.media.Wallpaper: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.calendar.Navigator: void goToToday()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.settings.AirplaneModeEnabler: void setAirplaneModeOn(boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.SMSDispatcher: int dispatchMessage(com.android.internal.telephony.SmsMessageBase)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.BluetoothHeadsetService: void setState(android.bluetooth.BluetoothDevice,int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.mms.ui.MessagingPreferenceActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.media.AudioManager: void setParameter(java.lang.String,java.lang.String)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.speech.IRecognitionService$Stub$Proxy: void startListening(android.content.Intent,android.speech.IRecognitionListener)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<android.content.pm.IPackageManager$Stub: void getPackageSizeInfo(java.lang.String,android.content.pm.IPackageStatsObserver)>": [
  "android.permission.GET_PACKAGE_SIZE"
 ], 
 "<com.android.providers.downloads.DownloadInfo$Reader: void readRequestHeaders(com.android.providers.downloads.DownloadInfo)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<android.net.wifi.IWifiManager: android.net.DhcpInfo getDhcpInfo()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.exchange.EasSyncService: void getAttachment(com.android.exchange.PartRequest)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.server.search.SearchManagerService$MyPackageMonitor: boolean onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.nfc.ILlcpSocket$Stub$Proxy: int getRemoteSocketRw(int)>": [
  "android.permission.NFC"
 ], 
 "<android.pim.vcard.VCardComposer: boolean createOneEntry()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.provider.Calendar$CalendarAlerts: long findNextAlarmTime(android.content.ContentResolver,long)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.location.ILocationListener$Stub$Proxy: void onLocationChanged(android.location.Location)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.LocationManagerService: void removeTestProvider(java.lang.String)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<android.server.BluetoothEventLoop: void onRestartRequired()>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.EmergencyCallbackModeExitDialog: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.nfc.NfcService$5: android.nfc.LlcpPacket receiveFrom(int)>": [
  "android.permission.NFC"
 ], 
 "<com.cooliris.cache.CacheService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.gsm.GsmSMSDispatcher: void dispatch(android.content.Intent,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CallManager: void setAudioMode()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.bluetooth.ConnectSpecificProfilesActivity: void onOnlineModeCheckedStateChanged(boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppLauncherActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.RI: void supplyIccPin2(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.NfcManager: void <init>(android.content.Context)>": [
  "android.permission.NFC"
 ], 
 "<com.android.music.AudioPreview$PreviewPlayer: void setWakeMode(android.content.Context,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void pollCallsWhenSafe()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.cooliris.media.PicasaDataSource: void loadMediaSetsIntoFeed(com.cooliris.media.MediaFeed,boolean)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.phone.EnableIccPinScreen: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.http.ConnectionThread: void run()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.browser.BrowserBookmarksPage: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.BluetoothAdapter: int getDiscoverableTimeout()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.contacts.ContactsListActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.launcher2.Launcher: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.app.AlertActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.PhoneBase: void setTTYMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.vpn.VpnTypeSelection: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.IBluetooth: int getDiscoverableTimeout()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.exchange.SyncManager$1: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.speech.SpeechRecognizer: void access$200(android.speech.SpeechRecognizer)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.phone.DataUsageListener$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.BluetoothHeadsetService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.activity.MessageView: void onCreate(android.os.Bundle)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.policy.impl.AccountUnlockScreen: boolean dispatchKeyEvent(android.view.KeyEvent)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.phone.SipBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.USE_SIP", 
  "android.permission.CHANGE_CONFIGURATION", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.content.SyncManager: void <init>(android.content.Context,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.calendar.AlertActivity: void access$700(com.android.calendar.AlertActivity)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.music.ScanningProgress: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.usb.UsbService$1: void onUEvent(android.os.UEventObserver$UEvent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.os.INetworkManagementService$Stub$Proxy: void startTethering(java.lang.String[])>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.phone.GsmUmtsAdditionalCallOptions: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.activity.setup.AccountSetupOptions: void onDone()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.app.LauncherActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.BluetoothHandsfree$10: android.bluetooth.AtCommandResult handleTestCommand()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.camera.VideoCamera: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.MessagingListener: void synchronizeMailboxStarted(long,long)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.settings.Settings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.os.INetworkManagementService$Stub: boolean isTetheringStarted()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.nfc.P2pInitiator: byte[] receive()>": [
  "android.permission.NFC"
 ], 
 "<com.android.development.PackageBrowser: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.quicksearchbox.google.GoogleSettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.server.BluetoothService: java.lang.String[] listBonds()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.app.IBatteryStats$Stub: long getAwakeTimeBattery()>": [
  "android.permission.BATTERY_STATS"
 ], 
 "<com.android.mms.transaction.Transaction: void notifyObservers()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SMS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.email.activity.setup.AccountSetupIncoming: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.transaction.TransactionService: void update(com.android.mms.transaction.Observable)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SMS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.gsm.SIMRecords: void handleSimRefresh(int[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.PhoneUtils: void mergeCalls(com.android.internal.telephony.CallManager)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.nfc.INfcAdapter: int createLlcpSocket(int,int,int,int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.NotificationPlayer$CreationAndCompletionThread: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.cooliris.media.MovieView: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.transaction.NotificationTransaction: byte[] sendPdu(byte[],java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.app.DisableCarModeActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.app.NetInitiatedActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.google.common.io.Files: java.lang.String toString(java.io.File,java.nio.charset.Charset)>": [
  "android.permission.INTERNET"
 ], 
 "<android.content.ContentService: android.content.IContentService main(android.content.Context,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.contacts.RecentCallsListActivity: void callEntry(int)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.WindowManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.DISABLE_KEYGUARD", 
  "android.permission.SET_ANIMATION_SCALE", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.EXPAND_STATUS_BAR", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.providers.downloads.DownloadInfo: int checkCanUseNetwork()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.accounts.IAccountManager$Stub: void setPassword(android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.settings.TetherSettings: android.app.Dialog onCreateDialog(int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.DTMFTwelveKeyDialer: void onDrawerOpened()>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.Connection dialInternal(java.lang.String)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.server.NotificationManagerService: void enqueueNotificationWithTag(java.lang.String,java.lang.String,int,android.app.Notification,int[])>": [
  "android.permission.VIBRATE"
 ], 
 "<android.content.SyncManager$2: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.ThrottleService$DataRecorder: void retrieve()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.cooliris.media.MediaItemTexture: android.graphics.Bitmap load(com.cooliris.media.RenderView)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: void access$2800(com.android.mms.ui.ComposeMessageActivity,android.view.ContextMenu,com.android.mms.ui.ComposeMessageActivity$MsgListMenuClickListener,com.android.mms.ui.MessageItem)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.TestingSettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.MediaPlaybackService$ServiceStub: int removeTrack(long)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.HeadsetBase$1: void run()>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.accessibilityservice.AccessibilityService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.util.DraftCache$1: void run()>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void revertToNitz()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.view.IWindowManager$Stub$Proxy: void reenableKeyguard(android.os.IBinder)>": [
  "android.permission.DISABLE_KEYGUARD"
 ], 
 "<com.android.mms.ui.SlideView: void stopVideo()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.TelephonyRegistry: void notifyDataConnection(int,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,int,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.InCallScreen: void internalAnswerAndEnd()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.providers.downloads.DownloadThread: void updateDatabaseFromHeaders(com.android.providers.downloads.DownloadThread$State,com.android.providers.downloads.DownloadThread$InnerState)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.cooliris.media.GridDrawManager: void drawBlendedComponents(com.cooliris.media.RenderView,javax.microedition.khronos.opengles.GL11,float,int,int,float,float,com.cooliris.media.MediaBucketList,com.cooliris.media.MediaBucketList,boolean)>": [
  "android.permission.INTERNET"
 ], 
 "<android.bluetooth.IBluetooth$Stub: boolean cancelPairingUserInput(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void changeIccPin2(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.NetworkManagementService: java.lang.String[] listTtys()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.providers.telephony.SmsProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.nfc.INfcTag$Stub$Proxy: android.nfc.NdefMessage ndefRead(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.settings.PrivacySettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.soundrecorder.SoundRecorder: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.deviceinfo.Status: void onResume()>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.phone.InCallScreen$16: void onCancel(android.content.DialogInterface)>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.RadioInfo$19: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.camera.VideoCamera: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: void access$800(com.android.internal.policy.impl.KeyguardViewMediator)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.webkit.DataLoader: void sendHeaders()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.bluetooth.DockService: int onStartCommand(android.content.Intent,int,int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.test.mock.MockContentResolver: boolean isSyncActive(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<android.media.AudioService: boolean checkAudioSettingsPermission(java.lang.String)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.tts.TtsService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.pm.IPackageManager$Stub: boolean setInstallLocation(int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.calendar.DayView: void initView(com.android.calendar.CalendarView)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.pim.vcard.VCardComposer: boolean init(java.lang.String,java.lang.String[])>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.providers.downloads.ui.DownloadList: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.webkit.WebViewCore: void updateViewport()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.contacts.ui.ShowOrCreateActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.UserDictionarySettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.IAccountManager$Stub: android.accounts.Account[] getAccounts(java.lang.String)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.music.AudioPreview: void playPauseClicked(android.view.View)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.inputmethod.latin.LatinIMEDebugSettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.widget.ContactHeaderWidget: void startPhotoQuery(long,android.net.Uri,boolean)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.bluetooth.DockService: java.lang.CharSequence[] initBtSettings(com.android.settings.bluetooth.DockService,android.bluetooth.BluetoothDevice,int,boolean)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.provider.Telephony$Sms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.cooliris.media.MovieView: void onResume()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.EventInfoActivity: void showContactInfo(com.android.calendar.EventInfoActivity$Attendee,android.graphics.Rect)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.development.ShowActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.calendar.EventInfoActivity: void updateView()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.inputmethod.pinyin.SoftKeyboardView: com.android.inputmethod.pinyin.SoftKey onKeyMove(int,int)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.defcontainer.DefaultContainerService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.preference.VolumePreference: void cleanup()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$GpsStateTracker: void onActualStateChange(android.content.Context,android.content.Intent)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.music.IMediaPlaybackService$Stub: void pause()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.IWindowSession: int addWithoutInputChannel(android.view.IWindow,android.view.WindowManager$LayoutParams,int,android.graphics.Rect)>": [
  "android.permission.SYSTEM_ALERT_WINDOW"
 ], 
 "<com.android.contacts.SpecialCharSequenceMgr: void showMEIDPanel(android.content.Context,boolean)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.exchange.SyncManager: void requestSync(com.android.email.provider.EmailContent$Mailbox,int,com.android.exchange.Request)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.BluetoothHandsfree$26: android.bluetooth.AtCommandResult handleActionCommand()>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.BackupManagerService$PerformInitializeTask: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.certinstaller.CertInstaller: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.nfc.INfcAdapter$Stub: android.nfc.ILlcpConnectionlessSocket getLlcpConnectionlessInterface()>": [
  "android.permission.NFC"
 ], 
 "<android.media.AudioService: void stopBluetoothSco(android.os.IBinder)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.content.SyncManager: void access$100(android.content.SyncManager)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.mms.transaction.TransactionService: void onDestroy()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SMS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_SMS"
 ], 
 "<android.net.wifi.IWifiManager: boolean setWifiEnabled(boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.view.IWindowManager: void setAnimationScale(int,float)>": [
  "android.permission.SET_ANIMATION_SCALE"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppBtErrorActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.browser.BrowserActivity: void loadUrlFromContext(android.webkit.WebView,java.lang.String)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.calendar.MonthView$2: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.development.BadBehaviorActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.WifiWatchdogService: boolean checkDnsConnectivity()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.settings.ApnEditor: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: int compareTo(java.lang.Object)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.development.DevelopmentSettings$5: void onClick(android.view.View)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.email.MessagingListener: void loadAttachmentFinished(long,long,long)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.bluetooth.LocalBluetoothProfileManager$HeadsetProfileManager$1: void run()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.calendar.EventInfoActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.ConnectivityService: void handleInetConditionChange(int,int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.WeekView: void recalc()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.browser.AddBookmarkPage: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.TrackBrowserActivity: void removePlaylistItem(int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ui.EditContactActivity: void access$300(com.android.contacts.ui.EditContactActivity,android.accounts.Account)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: int getDrmMimeMenuStringRsrc(long)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState: void enter()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.ChooseLockPattern: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: boolean smsContact(android.database.Cursor)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.accounts.IAccountManager$Stub: void invalidateAuthToken(java.lang.String,java.lang.String)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.providers.calendar.CalendarProvider2: void triggerAppWidgetUpdate(long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.ConnectivityService: int tether(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.app.IAlarmManager: void setTimeZone(java.lang.String)>": [
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.server.location.LocationProviderInterface: void updateNetworkState(int,android.net.NetworkInfo)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.EditEvent: void onCreate(android.os.Bundle)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.nfc.ILlcpSocket$Stub$Proxy: int getLocalSocketMiu(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.quicksearchbox.SearchSettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getSubscriberId()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.app.IBatteryStats$Stub$Proxy: long getAwakeTimeBattery()>": [
  "android.permission.BATTERY_STATS"
 ], 
 "<com.android.settings.ChooseLockPatternExample: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.inputmethod.latin.LatinIMEBackupAgent: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.policy.impl.SimUnlockScreen$CheckSimPin$2: void run()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.inputmethod.latin.LatinIME: void hideWindow()>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.mms.data.WorkingMessage: void access$000(com.android.mms.data.WorkingMessage,com.android.mms.data.Conversation,android.net.Uri,com.google.android.mms.pdu.PduPersister,com.android.mms.model.SlideshowModel,com.google.android.mms.pdu.SendReq)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.phone.PhoneUtils: void switchHoldingAndActive(com.android.internal.telephony.Call)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.PhoneUtils: int placeCall(com.android.internal.telephony.Phone,java.lang.String,android.net.Uri)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.LocationManagerService: void requestLocationUpdates(java.lang.String,android.location.Criteria,long,float,boolean,android.location.ILocationListener)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.phone.DTMFTwelveKeyDialer: boolean onTouch(android.view.View,android.view.MotionEvent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.server.BluetoothA2dpService: void access$000(android.server.BluetoothA2dpService)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.phone.PhoneUtils: void access$100(com.android.internal.telephony.Phone,boolean)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.phone.PhoneUtils: void restoreSpeakerMode(android.content.Context)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppManager: java.lang.String getDeviceName(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.server.BluetoothA2dpService: boolean checkSinkSuspendState(int)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.phone.BluetoothHandsfree$BluetoothPhoneState: void handlePreciseCallStateChange(boolean,com.android.internal.telephony.Connection)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.os.RuntimeInit$UncaughtHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.nfc.NfcService$3: int receive(int,byte[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: void returnPickerResult(android.database.Cursor,java.lang.String,android.net.Uri,int)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry$Stub: void notifyDataConnectionFailed(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.nfc.LlcpSocket: void close()>": [
  "android.permission.NFC"
 ], 
 "<android.net.http.RequestQueue: void <init>(android.content.Context,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.os.PowerManager$WakeLock: void release()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.ChooserActivity: void onCreate(android.os.Bundle,android.content.Intent,java.lang.CharSequence,android.content.Intent[],java.util.List,boolean)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.INTERNET", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.EnableFdnScreen: void enableFdn()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.PhoneApp: void handleSetTTYModeResponse(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.ManageAccountsSettings: void onAccountsUpdated(android.accounts.Account[])>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.READ_SYNC_STATS"
 ], 
 "<android.view.IWindowManager$Stub: void exitKeyguardSecurely(android.view.IOnKeyguardExitResult)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.DISABLE_KEYGUARD", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.SMSDispatcher: void sendMultipartText(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$StartTetheringErrorState: void exit()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.net.IConnectivityManager$Stub$Proxy: void setNetworkPreference(int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipConnection$1: void onError(com.android.internal.telephony.Connection$DisconnectCause)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.exchange.SyncManager$ConnectivityReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.vpn.L2tpIpsecPskService: void waitUntilConnectedOrTimedout()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.vpn.VpnService: boolean onConnect(java.lang.String,java.lang.String)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.cooliris.wallpaper.Slideshow: void onVisibilityChanged(boolean)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.telephony.gsm.stk.RilMessageDecoder: com.android.internal.telephony.gsm.stk.RilMessageDecoder getInstance(android.os.Handler,com.android.internal.telephony.gsm.SIMFileHandler)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void setPropertiesByCarrier()>": [
  "android.permission.CHANGE_CONFIGURATION", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.phone.BluetoothHandsfree: void configAudioParameters()>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.commands.bmgr.Bmgr: void main(java.lang.String[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.webkit.WebView: void letPluginHandleNavKey(int,long,boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.contacts.SearchResultsActivity: boolean access$000(com.android.contacts.ContactsListActivity,boolean)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_SYNC_STATS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void registerForSuppServiceNotification(android.os.Handler,int,java.lang.Object)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.NfcService: boolean access$100(com.android.nfc.NfcService,boolean,boolean)>": [
  "android.permission.NFC"
 ], 
 "<com.android.phone.CallFeaturesSetting: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.nfc.NfcService$1: void run()>": [
  "android.permission.NFC"
 ], 
 "<android.accounts.AccountManager: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.music.AlbumBrowserActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.vpn.L2tpService: void onError(java.lang.Throwable)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.inputmethod.latin.PointerTracker: void onDownEvent(int,int,long)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.exchange.EasSyncService: void acknowledgeRemoteWipe(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.activity.MessageView$LoadBodyTask: void onPostExecute(java.lang.Object)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.content.SyncManager$6: void onServiceChanged(android.content.SyncAdapterType,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<android.webkit.WebSettings: void <init>(android.content.Context,android.webkit.WebView)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.systemui.statusbar.policy.StatusBarPolicy$4: void onCallStateChanged(int,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void powerOffRadioSafely()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.IConnectivityManager$Stub$Proxy: void setMobileDataEnabled(boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<android.webkit.WebView: void contentSizeChanged(boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.mms.transaction.SmsReceiverService: android.net.Uri storeMessage(android.content.Context,android.telephony.SmsMessage[],int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppLiveFolder: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapObexServer: void <init>(android.os.Handler,android.content.Context)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.quicksearchbox.google.GoogleSource: com.android.quicksearchbox.SuggestionCursor getSuggestions(java.lang.String,int,boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean resumeSink(android.bluetooth.BluetoothDevice)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.calendar.EditEvent: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.exchange.SyncManager: void releaseWakeLock(long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.MessagingListener: void synchronizeMailboxFailed(long,long,java.lang.Exception)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.exchange.adapter.AbstractSyncParser: void commandsParser()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CALENDAR", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.gsm.SIMFileHandler: void loadEFImgTransparent(int,int,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void deactivateDefaultPDP(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.ShowActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.cooliris.media.Gallery: void onResume()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.email.Email: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewBase: void wakeWhenReadyTq(int)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: android.graphics.Bitmap generatePhoneNumberIcon(android.net.Uri,int,int)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.DateTimeSettingsSetupWizard: void set24Hour(boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.commands.svc.PowerCommand: void run(java.lang.String[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.providers.calendar.CalendarAppWidgetService: android.database.Cursor getUpcomingInstancesCursor(android.content.ContentResolver,long,long)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.provider.Telephony$Mms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],java.lang.String,java.lang.String)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.gsm.GsmConnection: void proceedAfterWaitChar()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.LogViewer: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.development.Connectivity$6: void onClick(android.view.View)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.cdma.RuimFileHandler: void updateEFLinearFixed(int,int,byte[],java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.data.WorkingMessage: boolean loadFromConversation(com.android.mms.data.Conversation)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<android.webkit.WebView$ScaleDetectorListener: boolean onScale(android.view.ScaleGestureDetector)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.deskclock.AlarmAlert: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.wifi.IWifiManager: boolean setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: boolean access$3500(com.android.mms.ui.ComposeMessageActivity,long)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.settings.BrightnessPreference: void onCheckedChanged(android.widget.CompoundButton,boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.development.PackageBrowser: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.providers.contacts.ContactsProvider2: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.os.storage.IMountService$Stub: int[] getStorageUsers(java.lang.String)>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
 ], 
 "<android.os.INetworkManagementService$Stub$Proxy: boolean isUsbRNDISStarted()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.google.common.io.ByteStreams: java.lang.Object readBytes(com.google.common.io.InputSupplier,com.google.common.io.ByteProcessor)>": [
  "android.permission.INTERNET"
 ], 
 "<android.accounts.AccountManager: java.lang.String getPassword(android.accounts.Account)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.phone.PhoneInterfaceManager$CheckSimPin: boolean checkPin(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.NfcService$6: android.nfc.NdefMessage ndefRead(int)>": [
  "android.permission.NFC"
 ], 
 "<android.accounts.IAccountManager: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppTransferActivity: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.PackageManagerService: void killApplication(java.lang.String,int)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<android.location.ILocationManager: void setTestProviderLocation(java.lang.String,android.location.Location)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.providers.calendar.CalendarProvider2: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void notifySignalStrength()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.VibratorService: void startVibrationLocked(com.android.server.VibratorService$Vibration)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.WindowManagerService: void access$900(com.android.server.WindowManagerService)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.browser.SelectDialog: void dismiss()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.preference.PreferenceActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppObexServerSession: int onPut(javax.obex.Operation)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.transaction.NotificationTransaction: void <init>(android.content.Context,int,com.android.mms.transaction.TransactionSettings,java.lang.String)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.settings.bluetooth.ConnectSpecificProfilesActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.webkit.ContentLoader: void load()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.PhoneBase: void setCdmaSubscription(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.sip.SipSettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.model.GoogleSource: void attemptMyContactsMembership(com.android.contacts.model.EntityDelta,android.content.Context)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.ChooseLockGeneric: void updateUnlockMethodAndFinish(int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.development.DevelopmentSettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getDeviceId()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.settings.ConfirmLockPassword: void handleNext()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.server.BluetoothEventLoop: java.lang.String checkPairingRequestAndGetAddress(java.lang.String,int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.gsm.SIMFileHandler: void loadEFLinearFixedAll(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.fuelgauge.PowerUsageSummary: void load()>": [
  "android.permission.BATTERY_STATS", 
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.browser.BrowserActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.TabActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.RI: void startDtmf(char,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.data.Conversation: void startQueryForAll(android.content.AsyncQueryHandler,int)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.settings.AddAccountSettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.ui.SlideshowEditActivity$SlideListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.music.MediaPlaybackService: void enqueue(long[],int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.TextToSpeechSettings: void useCurrentLocAsDefault()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.exchange.EmailSyncAlarmReceiver$1: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.camera.Camera: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.ui.ManageSimMessages: void access$500(com.android.mms.ui.ManageSimMessages,android.database.Cursor)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.phone.ADNList: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.data.WorkingMessage: void deleteDraftSmsMessage(long)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<android.bluetooth.HeadsetBase: void handleInput(java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.bluetooth.opp.TestActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void setTTYMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.activity.MessageCompose: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.app.HeavyWeightSwitcherActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.ServiceStateTracker: void disableSingleLocationUpdate()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.IP2pTarget$Stub$Proxy: boolean disconnect(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.mms.data.WorkingMessage$3: void run()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.nfc.NfcService: com.android.internal.nfc.LlcpServiceSocket createLlcpServiceSocket(int,java.lang.String,int,int,int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.phone.CdmaCallOptions: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.browser.BrowserPreferencesPage: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.quicksearchbox.google.GoogleSuggestClient: com.android.quicksearchbox.SourceResult query(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.nfc.NfcEnabler: void resume()>": [
  "android.permission.NFC"
 ], 
 "<com.google.common.io.Files: byte[] toByteArray(java.io.File)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.phone.GsmUmtsCallForwardOptions: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.cooliris.media.Wallpaper$SetWallpaperThread: void run()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.music.QueryBrowserActivity: boolean onOptionsItemSelected(android.view.MenuItem)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.settings.bluetooth.DockService: void handleDocked(android.bluetooth.BluetoothDevice,int,int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.app.IActivityManager: void moveTaskToFront(int)>": [
  "android.permission.REORDER_TASKS"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapVcardManager: int getContactsSize()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.nfc.tech.NfcA: void connect()>": [
  "android.permission.NFC"
 ], 
 "<com.android.settings.ManageAccountsSettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.NotificationManagerService: void scheduleTimeoutLocked(com.android.server.NotificationManagerService$ToastRecord,boolean)>": [
  "android.permission.SET_PROCESS_LIMIT"
 ], 
 "<com.android.settings.ChooseLockGeneric: void onActivityResult(int,int,android.content.Intent)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.settings.ZoneList: void onListItemClick(android.widget.ListView,android.view.View,int,long)>": [
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.webkit.WebView: void doShortPress()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.mms.ui.AudioAttachmentView: void startAudio()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.providers.downloads.RealSystemFacade: java.lang.Integer getActiveNetworkType()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnection: void access$1300(com.android.internal.telephony.DataConnection,java.lang.Object)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.SimUnlockScreen$CheckSimPin$1: void run()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.net.sip.SipAudioCall$1: void onCallBusy(android.net.sip.SipSession)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void setCdmaBroadcastConfig(int[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.WifiManager: boolean isMulticastEnabled()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.mms.ui.MessageListAdapter$AvatarCache$1: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.phone.InCallScreenShowActivation: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.EmergencyCallbackModeExitDialog: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.transaction.TransactionService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.BluetoothHeadset: int getPriority(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.development.RunningProcesses: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager$6: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.ChooseLockGeneric: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.activity.setup.AccountSecurity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.HeadsetObserver: void onUEvent(android.os.UEventObserver$UEvent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.inputmethod.latin.LatinIME: void commitTyped(android.view.inputmethod.InputConnection)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<android.server.BluetoothEventLoop: void onCreateDeviceResult(java.lang.String,int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.nfc.INfcAdapter$Stub: android.nfc.INfcTag getNfcTagInterface()>": [
  "android.permission.NFC"
 ], 
 "<android.webkit.WebTextView: void sendDomEvent(android.view.KeyEvent)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.net.sip.SipAudioCall$1: void onCallEnded(android.net.sip.SipSession)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.http.RequestQueue: void enablePlatformNotifications()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.AppWidgetPickActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.browser.BrowserActivity$SetAsWallpaper: boolean onMenuItemClick(android.view.MenuItem)>": [
  "android.permission.SET_WALLPAPER", 
  "android.permission.INTERNET"
 ], 
 "<android.server.BluetoothEventLoop: void onRequestPairingConsent(java.lang.String,int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.systemui.usb.UsbPermissionActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.providers.media.MediaScannerService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.packageinstaller.UninstallerActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.IMediaPlaybackService$Stub: void enqueue(long[],int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ui.ContactsPreferencesActivity$UpdateTask: java.lang.Void doInBackground(android.app.Activity,com.android.contacts.ui.ContactsPreferencesActivity$AccountSet[])>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.os.storage.IMountService$Stub$Proxy: int mountVolume(java.lang.String)>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
 ], 
 "<android.nfc.IP2pInitiator$Stub: byte[] receive(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.SMSDispatcher: void notifyAndAcknowledgeLastIncomingSms(boolean,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.backup.IBackupManager: void restoreAtInstall(java.lang.String,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.settings.wifi.WifiApSettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.sip.SipManager: boolean isRegistered(java.lang.String)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.deskclock.AlarmClock: boolean onContextItemSelected(android.view.MenuItem)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.app.NetInitiatedActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.util.Recycler: android.database.Cursor getAllThreads(android.content.Context)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.phone.CallNotifier: void onCdmaCallWaiting(android.os.AsyncResult)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: int getWifiEnabledState()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.BatteryService: void update()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.email.GroupMessagingListener: void loadAttachmentFailed(long,long,long,java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.bluetooth.opp.TestTcpSessionNotifier: void <init>(int)>": [
  "android.permission.INTERNET"
 ], 
 "<android.net.IConnectivityManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.bluetooth.BluetoothDeviceProfileState$IncomingA2dp: boolean processMessage(android.os.Message)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.phone.BluetoothHandsfree$27: android.bluetooth.AtCommandResult handleTestCommand()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.mms.ui.ClassZeroActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.widget.VideoView$6: void surfaceDestroyed(android.view.SurfaceHolder)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.bluetooth.BluetoothDevicePreference: void onDeviceAttributesChanged(com.android.settings.bluetooth.CachedBluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.os.IPowerManager$Stub: void acquireWakeLock(int,android.os.IBinder,java.lang.String,android.os.WorkSource)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.LocationManagerService$Receiver: boolean callLocationChangedLocked(android.location.Location)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.server.BluetoothEventLoop: void onPropertyChanged(java.lang.String[])>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: boolean connectInt(com.android.settings.bluetooth.CachedBluetoothDevice,com.android.settings.bluetooth.LocalBluetoothProfileManager$Profile)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.providers.settings.SettingsHelper: void setGpsLocation(java.lang.String)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.bluetooth.IBluetoothPbap$Stub$Proxy: boolean connect(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.app.RingtonePickerActivity: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.LocationManagerService: void initialize()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.NfcService$2: int createLlcpConnectionlessSocket(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.net.IConnectivityManager: java.lang.String[] getTetherableWifiRegexs()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.net.sip.SipManager: void close(java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_SIP"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void screenTurnedOff(int)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.camera.VideoCamera: void startVideoRecording()>": [
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean updateMessageOnIccEf(int,int,byte[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.internal.telephony.DataConnectionTracker: boolean onTrySetupData(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_APN_SETTINGS"
 ], 
 "<com.android.server.ThrottleService: void enforceAccessPermission()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.calendar.EditEvent: void onResume()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.email.service.EmailBroadcastProcessorService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.speech.RecognitionService$RecognitionServiceBinder: void cancel(android.speech.IRecognitionListener)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void handleVolumeKey(int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.google.common.io.ByteStreams$4: java.lang.Object getInput()>": [
  "android.permission.INTERNET"
 ], 
 "<android.server.BluetoothService: boolean removeBondInternal(java.lang.String)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.quicksearchbox.google.GoogleSuggestClient: com.android.quicksearchbox.SuggestionCursor getSuggestions(java.lang.String,int,boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.mms.ui.SlideEditorActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.mms.transaction.SmsReceiverService: void access$300(com.android.mms.transaction.SmsReceiverService,android.content.Intent)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.am.ActivityManagerService: void systemReady(java.lang.Runnable)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.calendar.EditEvent$1: void onCheckedChanged(android.widget.CompoundButton,boolean)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.settings.DisplaySettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.ui.EditContactActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.webkit.FileLoader: boolean sendData()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.calendar.AlertActivity: void dismissFiredAlarms()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.calendar.LaunchActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.server.BluetoothService: void finishDisable(boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.browser.BrowserProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.webkit.Network: void enablePlatformNotifications()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.browser.BrowserActivity: boolean onKeyUp(int,android.view.KeyEvent)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.telephony.gsm.SimCard: void setIccFdnEnabled(boolean,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.ui.ManageSimMessages: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.BluetoothDeviceProfileState$IncomingA2dp: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.settings.bluetooth.BluetoothSettings: void onUserLeaveHint()>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.applications.InstalledAppDetails: void access$300(com.android.settings.applications.InstalledAppDetails,android.os.Message)>": [
  "android.permission.GET_PACKAGE_SIZE"
 ], 
 "<com.android.settings.ApplicationSettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.RadioInfo: void access$3400(com.android.settings.RadioInfo)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.transaction.RetryScheduler: int getResponseStatus(long)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.widget.LockPatternView: void addCellToPattern(com.android.internal.widget.LockPatternView$Cell)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.tts.TtsService: void onDestroy()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: void onConnectedInOrOut()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.WeekActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.development.PointerLocation: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.BluetoothHandsfree$10: android.bluetooth.AtCommandResult handleActionCommand()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.server.BluetoothA2dpService: void access$300(android.server.BluetoothA2dpService,android.bluetooth.BluetoothDevice,int,int)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.internal.os.storage.ExternalStorageFormatter$1: void onStorageStateChanged(java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS", 
  "android.permission.MOUNT_FORMAT_FILESYSTEMS"
 ], 
 "<com.android.voicedialer.RecognizerEngine: void recognize(com.android.voicedialer.RecognizerClient,android.app.Activity,java.io.File,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.phone.OtaUtils: void setSpeaker(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.email.activity.setup.AccountSetupAccountType: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.FdnSetting: void onPinEntered(com.android.phone.EditPinPreference,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.cooliris.media.CropImage: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.webkit.DataLoader: void closeStreamAndSendEndData()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.ServiceStateTracker: void setPowerStateToDesired()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppTransfer: void access$600(com.android.bluetooth.opp.BluetoothOppTransfer)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.SearchResultsActivity: android.net.Uri getContactUri(int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.am.BatteryStatsService: long getAwakeTimeBattery()>": [
  "android.permission.BATTERY_STATS"
 ], 
 "<com.android.soundrecorder.Recorder: void setState(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<java.net.MulticastSocket: void <init>(int)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.contacts.TwelveKeyDialer: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.NetworkManagementService: boolean isUsbRNDISStarted()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.development.DevelopmentSettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.WeekActivity: boolean onOptionsItemSelected(android.view.MenuItem)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothSocket createInsecureRfcommSocket(int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void notifyDataConnection(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.IMediaPlaybackService$Stub$Proxy: void play()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.InputManager$Callbacks: void notifyLidSwitchChanged(long,boolean)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.os.INetworkManagementService: void startAccessPoint(android.net.wifi.WifiConfiguration,java.lang.String,java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: boolean access$3400(com.android.mms.ui.ComposeMessageActivity,long)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.camera.Camera: void initializeSecondTime()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.spare_parts.SpareParts: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.BluetoothHandsfree$29: android.bluetooth.AtCommandResult handleActionCommand()>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void getEnhancedVoicePrivacy(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.pm.PackageManager: void freeStorage(long,android.content.IntentSender)>": [
  "android.permission.CLEAR_APP_CACHE"
 ], 
 "<com.android.server.am.ActivityManagerService: boolean attachApplicationLocked(android.app.IApplicationThread,int)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.svox.pico.CheckVoiceData: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void explicitCallTransfer()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneFactory: void makeDefaultPhones(android.content.Context)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_APN_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.CHANGE_CONFIGURATION", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.internal.telephony.cdma.RuimFileHandler: void updateEFTransparent(int,byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ITelephony$Stub: boolean supplyPin(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.NetworkManagementService: void attachPppd(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.calendar.CalendarView: void doScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.calendar.SelectCalendarsActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.wifi.WifiManager: boolean saveConfiguration()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.contacts.ui.EditContactActivity: void bindEditors()>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapService: void startObexServerSession()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.settings.SettingsSafetyLegalActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.IBluetooth$Stub$Proxy: int getBluetoothState()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.mms.ui.ConversationList: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.WeekSelector: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.PhoneBase: void getEnhancedVoicePrivacy(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.PermissionDetails: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accessibilityservice.AccessibilityService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.ui.SlideViewInterface: void setAudio(android.net.Uri,java.lang.String,java.util.Map)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.ViewInterface: void reset()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.test.mock.MockContentResolver: void addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.providers.calendar.CalendarProvider2: void updateEventAttendeeStatus(android.database.sqlite.SQLiteDatabase,android.content.ContentValues)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.settings.wifi.WifiInfo: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.deviceinfo.Memory: void mount()>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
 ], 
 "<com.cooliris.media.HudLayer: void onSurfaceCreated(com.cooliris.media.RenderView,javax.microedition.khronos.opengles.GL11)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void resetRadio(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.IThrottleManager: int getCliffLevel(java.lang.String,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.provision.DefaultActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.quicklaunch.BookmarkPicker: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.DefaultRingtonePreference: void onSaveRingtone(android.net.Uri)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.wifi.WifiManager$MulticastLock: void acquire()>": [
  "android.permission.CHANGE_WIFI_MULTICAST_STATE"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: boolean access$2000(com.android.mms.ui.ComposeMessageActivity,com.android.mms.data.Contact)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.phone.InCallScreen: void dumpBluetoothState()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.exchange.adapter.AccountSyncAdapter: java.lang.String getSyncKey()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.launcher2.WallpaperChooser: void onClick(android.view.View)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.browser.BrowserBookmarksAdapter$1: java.lang.Object doInBackground(java.lang.Object[])>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.systemui.statusbar.policy.StatusBarPolicy: void access$600(com.android.systemui.statusbar.policy.StatusBarPolicy,android.content.Intent)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void enableEnhancedVoicePrivacy(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.CalendarView: void onDraw(android.graphics.Canvas)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.settings.AccessibilitySettings: void handleEnableAccessibilityServiceStateChange(android.preference.CheckBoxPreference)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: void doKeyguard()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.webkit.WebView: void sendMoveFocus(int,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.inputmethod.latin.LatinKeyboardView: boolean invokeOnKey(int)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getLine1AlphaTag()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.settings.quicklaunch.QuickLaunchSettings: void updateShortcut(char,android.content.Intent)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.am.ActivityManagerService: void setBroadcastTimeoutLocked(long)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAccountsByTypeAndFeatures(java.lang.String,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.contacts.ui.EditContactActivity: void onRestoreInstanceState(android.os.Bundle)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.RI: void hangupForegroundResumeBackground(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.ConfigurationViewer: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.NotificationManagerService: void enqueueNotification(java.lang.String,int,android.app.Notification,int[])>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.settings.DisplaySettings: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.phone.InCallScreen: void access$500(com.android.phone.InCallScreen,android.os.AsyncResult)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.bluetooth.ConnectSpecificProfilesActivity: void refreshOnlineModePreference()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.phone.ADNList: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.ActivityManagerNative: void setDebugApp(java.lang.String,boolean,boolean)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.SET_DEBUG_APP"
 ], 
 "<android.app.IntentService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.vpn.VpnTypeSelection: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.webkit.WebView: boolean sendViewSizeZoom()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.LoadAverageService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.activity.MessageView$MessageViewHandler: void progress(boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void queryAvailableBandMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.MessageListAdapter: com.android.mms.ui.MessageItem getCachedMessageItem(java.lang.String,long,android.database.Cursor)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.nfc.NfcService$2: int createLlcpSocket(int,int,int,int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.nfc.TechListChooserActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.webkit.CallbackProxy: void switchOutDrawHistory()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.nfc.ILlcpConnectionlessSocket$Stub: int sendTo(int,android.nfc.LlcpPacket)>": [
  "android.permission.NFC"
 ], 
 "<com.android.inputmethod.latin.ExpandableDictionary: void loadDictionaryAsync()>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.READ_CONTACTS", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.development.BadBehaviorActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.os.IVibratorService$Stub$Proxy: void cancelVibrate(android.os.IBinder)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.mms.ui.MessageItem: void interpretFrom(com.google.android.mms.pdu.EncodedStringValue,android.net.Uri)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.NotificationPlayer: void access$500(com.android.server.NotificationPlayer,com.android.server.NotificationPlayer$Command)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.inputmethod.pinyin.SettingsActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.music.MediaPlaybackService: void open(long[],int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getGsmBroadcastConfig(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IccProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.ThrottleService$MyHandler: void onResetAlarm()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.contacts.ContactOptionsActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.webkit.WebView: void setFocusControllerInactive()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.development.UnderdevelopedSettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.cooliris.media.PathBarLayer: void onSurfaceCreated(com.cooliris.media.RenderView,javax.microedition.khronos.opengles.GL11)>": [
  "android.permission.INTERNET"
 ], 
 "<com.cooliris.media.RenderView: void loadTextureAsync(com.cooliris.media.Texture)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.email.mail.store.ExchangeStore: void checkSettings()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void notifyDataConnection(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.EmergencyCallbackModeService: void access$200(com.android.phone.EmergencyCallbackModeService,long)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.telephony.SmsManager: boolean deleteMessageFromIcc(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.phone.SimContacts$ImportAllSimContactsThread: void run()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.contacts.TwelveKeyDialer: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.providers.downloads.DownloadProvider: void logVerboseOpenFileInfo(android.net.Uri,java.lang.String)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppTransferHistory: void openCompleteTransfer()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.contacts.ContactsLiveFolders$StarredContacts: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setMute(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.AudioManager: void setMicrophoneMute(boolean)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.nfc.INfcTag: int[] getTechList(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppService: void insertShare(android.database.Cursor,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.app.ActivityGroup: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: android.net.Uri getSelectedUri(int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.os.INetworkManagementService$Stub: java.lang.String[] listTtys()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.launcher2.WallpaperChooser: void selectWallpaper(int)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkInfo[] getAllNetworkInfo()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.net.Downloads$DownloadBase: long startDownloadByUri(android.content.Context,java.lang.String,java.lang.String,boolean,int,boolean,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.telephony.gsm.SIMRecords: void onRefresh(boolean,int[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.SpecialCharSequenceMgr: boolean handleChars(android.content.Context,java.lang.String,boolean,android.widget.EditText)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.internal.telephony.IccRecords: void setVoiceMessageWaiting(int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void updateServiceLocation()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ExpandableListActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void enableEnhancedVoicePrivacy(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.activity.setup.AccountSetupAccountType: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.LauncherActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.commands.bmgr.Bmgr: void doEnable()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.policy.impl.LockPatternKeyguardView$1: void pokeWakelock()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.WifiService: boolean pingSupplicant()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.contacts.util.AccountSelectionUtil: void doImportFromSdCard(android.content.Context,android.accounts.Account)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void invokeOemRilRequestStrings(java.lang.String[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.ILlcpConnectionlessSocket$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.settings.bluetooth.LocalBluetoothProfileManager: int getPreferred(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.sip.SipSettings: void access$800(com.android.phone.sip.SipSettings,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.USE_SIP"
 ], 
 "<com.android.internal.telephony.gsm.stk.StkService: void handleRilMsg(com.android.internal.telephony.gsm.stk.RilMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.wifi.WifiStatusTest: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.RI: void setRadioState(com.android.internal.telephony.CommandsInterface$RadioState)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void changeIccPin2(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.EditEvent: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.os.IDropBoxManagerService$Stub: android.os.DropBoxManager$Entry getNextEntry(java.lang.String,long)>": [
  "android.permission.READ_LOGS"
 ], 
 "<android.accounts.IAccountManager: void setPassword(android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<android.webkit.WebViewCore: void contentScrollTo(int,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.deskclock.HandleSetAlarm: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean acceptIncomingConnect(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.contacts.ContactsLiveFolders$PhoneContacts: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.transaction.ReadRecTransaction: byte[] getPdu(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.email.activity.setup.AccountSetupExchange: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.SearchResultsActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.os.storage.IMountService$Stub$Proxy: int[] getStorageUsers(java.lang.String)>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
 ], 
 "<com.android.phone.BluetoothHeadsetService: void access$1600(com.android.phone.BluetoothHeadsetService,android.bluetooth.BluetoothDevice,int)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.policy.impl.LockPatternKeyguardView$1: void reportFailedUnlockAttempt()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.settings.bluetooth.BluetoothDiscoverableEnabler: void updateCountdownSummary()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void hangupWaitingOrBackground()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.TetherSettings: void access$100(com.android.settings.TetherSettings)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewBase: boolean dispatchKeyEvent(android.view.KeyEvent)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.inputmethod.latin.LatinIME: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.os.BatteryStatsImpl: void setBtHeadset(android.bluetooth.BluetoothHeadset)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.music.ArtistAlbumBrowserActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.providers.downloads.DownloadNotification: void updateActiveNotification(java.util.Collection)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.gsm.SimSmsInterfaceManager: java.util.List getAllMessagesFromIccEf()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.internal.telephony.IccFileHandler: void loadEFImgLinearFixed(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.INetworkManagementService$Stub$Proxy: void setIpForwardingEnabled(boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.phone.InCallTouchUi: void updateInCallControls(com.android.internal.telephony.Phone)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.mms.ui.SlideViewInterface: void setVideo(java.lang.String,android.net.Uri)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityManagerService: void handleAppDiedLocked(com.android.server.am.ProcessRecord,boolean)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.settings.bluetooth.DockService: void handleUndocked(android.content.Context,com.android.settings.bluetooth.LocalBluetoothManager,android.bluetooth.BluetoothDevice)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.ActivityPicker: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.view.IWindowManager$Stub$Proxy: void setNewConfiguration(android.content.res.Configuration)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.server.am.ActivityManagerService: void handleApplicationCrash(android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.server.am.ActivityManagerService: void performServiceRestartLocked(com.android.server.am.ServiceRecord)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.internal.telephony.Phone: void getPreferredNetworkType(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.vpn.L2tpService: void onDisconnect()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.phone.InCallScreen: com.android.phone.InCallScreen$InCallInitStatus syncWithPhoneState()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.contacts.ViewContactActivity: void startEntityQuery()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.speechrecorder.SpeechRecorderActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.inputmethod.latin.InputLanguageSelection: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.BluetoothHandsfree$16: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.WindowManagerService: com.android.server.WindowManagerService main(android.content.Context,com.android.server.PowerManagerService,boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.mms.transaction.PushReceiver: long findThreadId(android.content.Context,com.google.android.mms.pdu.GenericPdu,int)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.ISms$Stub: boolean enableCellBroadcastRange(int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.internal.app.ExternalMediaFormatActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.calendar.AgendaActivity$1: void run()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.cooliris.media.MediaFeed: void access$500(com.cooliris.media.MediaFeed)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.app.INotificationManager$Stub$Proxy: void enqueueNotificationWithTag(java.lang.String,java.lang.String,int,android.app.Notification,int[])>": [
  "android.permission.VIBRATE"
 ], 
 "<android.app.Activity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.webkit.WebViewCore: void contentScrollBy(int,int,boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void launchHomeFromHotKey()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.am.ActivityManagerService: int access$000(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,boolean,boolean,int,int)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.calendar.CalendarView$1: void run()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: boolean handleCallHoldIncallSupplementaryService(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.bluetooth.DockService$1: void run()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.app.ResolverActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.server.BluetoothService: boolean setTrust(java.lang.String,boolean)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.bluetooth.IBluetoothPbap$Stub: int getState()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.contacts.SearchResultsActivity: void afterTextChanged(android.text.Editable)>": [
  "android.permission.READ_SYNC_STATS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.gsm.stk.CommandParamsFactory: void make(com.android.internal.telephony.gsm.stk.BerTlv)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.providers.contacts.CallLogProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.phone.BluetoothHandsfree$18: android.bluetooth.AtCommandResult handleTestCommand()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.exchange.EmailSyncAlarmReceiver: void access$000(com.android.exchange.EmailSyncAlarmReceiver,android.content.Context)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.SearchResultsActivity: void setEmptyText()>": [
  "android.permission.READ_SYNC_STATS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.tts.TtsService: int speak(java.lang.String,java.lang.String,int,java.util.ArrayList)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.DataUsage: void onCreate(android.os.Bundle)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.OtaUtils: void otaShowProgramSuccessDialog()>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.net.IConnectivityManager: int stopUsingNetworkFeature(int,java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<android.app.IActivityManager: boolean bindBackupAgent(android.content.pm.ApplicationInfo,int)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.server.vpn.VpnServiceBinder$3: void run()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoProxy: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.voicedialer.VoiceDialerActivity$1: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.service.wallpaper.ImageWallpaper: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.activity.MessageList: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: int[] getAdnRecordsSize(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.BluetoothHandsfree$6: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.calendar.AgendaWindowAdapter: boolean queueQuery(int,int,android.text.format.Time,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapVcardManager: java.util.ArrayList getContactNamesByNumber(java.lang.String)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.am.ActivityManagerService: void startProcessLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.internal.telephony.IccCard: void setIccLockEnabled(boolean,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapVcardManager: java.util.ArrayList loadCallHistoryList(int)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.app.NativeActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void afterTextChanged(android.text.Editable)>": [
  "android.permission.READ_SYNC_STATS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.media.MediaRecorder: void setVideoSource(int)>": [
  "android.permission.CAMERA"
 ], 
 "<com.android.phone.Settings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone getGsmPhone()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.CHANGE_CONFIGURATION", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.speech.RecognitionService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.service.EmailBroadcastProcessorService: void onHandleIntent(android.content.Intent)>": [
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.systemui.statusbar.policy.StatusBarPolicy: void <init>(android.content.Context)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void getDataCallList(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void notifyServiceStateChanged(android.telephony.ServiceState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.telephony.SmsManager: boolean enableCellBroadcastRange(int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: void access$600(com.android.mms.ui.ComposeMessageActivity,com.android.mms.ui.MessageItem)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<android.bluetooth.AtCommandHandler: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.app.INotificationManager$Stub$Proxy: void enqueueNotification(java.lang.String,int,android.app.Notification,int[])>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.phone.DTMFTwelveKeyDialerView: boolean dispatchKeyEvent(android.view.KeyEvent)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.soundrecorder.Recorder: void restoreState(android.os.Bundle)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void doRecovery()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.WebView: void debugDump()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.WifiWatchdogService: boolean hasRequiredNumberOfAps(java.lang.String)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.server.VibratorService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<android.view.IWindowManager$Stub$Proxy: void disableKeyguard(android.os.IBinder,java.lang.String)>": [
  "android.permission.DISABLE_KEYGUARD"
 ], 
 "<com.android.browser.BrowserActivity$15: void onCancel(android.content.DialogInterface)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.os.INetworkManagementService: void untetherInterface(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.email.activity.setup.AccountSetupCheckSettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.browser.SelectDialog$1: void onClick(android.view.View)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.net.IConnectivityManager$Stub: boolean setRadios(boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.phone.EmergencyCallbackModeService: void resetEcmTimer(android.os.AsyncResult)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.server.BluetoothEventLoop: boolean isOtherSinkInNonDisconnectingState(java.lang.String)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.RI: void setNetworkSelectionModeManual(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.cooliris.media.ActiveWallpaper: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.BluetoothHandsfree$14: android.bluetooth.AtCommandResult handleActionCommand()>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.providers.contacts.LegacyApiSupport: int updateSettings(android.content.ContentValues)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: void onContextItemSelected(android.view.MenuItem)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.pim.vcard.VCardComposer: boolean init()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.development.AppHwPref: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.PhoneUtils: com.android.internal.telephony.CallerInfo getCallerInfo(android.content.Context,com.android.internal.telephony.Connection)>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.net.http.HttpConnection: void processRequests(android.net.http.Request)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.calendar.AlertActivity: void onStop()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.term.TermPreferences: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.LauncherActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.ConnectivityManager: void setMobileDataEnabled(boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.contacts.SplitAggregateView: void <init>(android.content.Context,android.net.Uri)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.speech.RecognitionService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.IBluetooth$Stub$Proxy: boolean disable(boolean)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.sip.SipWakeLock: void acquire(java.lang.Object)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.OtaUtils: void otaShowProgramFailureNotice(int)>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.sip.SipService$AutoRegistrationProcess: boolean notCurrentSession(android.net.sip.ISipSession)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.InCallScreen: void onSpeakerClick()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.gsm.stk.StkService: void sendTerminalResponse(com.android.internal.telephony.gsm.stk.CommandDetails,com.android.internal.telephony.gsm.stk.ResultCode,boolean,int,com.android.internal.telephony.gsm.stk.ResponseData)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calculator2.Calculator: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.deskclock.AlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewBase: void verifyUnlock()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.development.MediaScannerActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void dispatchPortAddressedPdus(byte[][],int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.GrantCredentialsPermissionActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.cooliris.media.MovieView: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void hangupConnectionByIndex(com.android.internal.telephony.cdma.CdmaCall,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ActivityGroup: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.INfcAdapter: boolean enable()>": [
  "android.permission.NFC"
 ], 
 "<com.android.settings.bluetooth.RequestPermissionActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.tts.TtsService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.ChangeIccPinScreen: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.webkit.FileLoader: void sendHeaders()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.accounts.AccountAuthenticatorActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.ILlcpSocket$Stub: int send(int,byte[])>": [
  "android.permission.NFC"
 ], 
 "<android.webkit.WebView: void addPackageName(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void updateSpnDisplay()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.webkit.WebView: void resumeTimers()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.development.DevelopmentSettings$4: void onClick(android.view.View)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.mms.data.WorkingMessage: android.net.Uri createDraftMmsMessage(com.google.android.mms.pdu.PduPersister,com.google.android.mms.pdu.SendReq,com.android.mms.model.SlideshowModel)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.nfc.tech.NdefFormatable: void format(android.nfc.NdefMessage)>": [
  "android.permission.NFC"
 ], 
 "<android.accounts.IAccountManager: void getAccountsByFeatures(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[])>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.gsm.GsmSMSDispatcher: void sendRawPdu(byte[],byte[],android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.WindowManagerService: void <init>(android.content.Context,com.android.server.PowerManagerService,boolean,com.android.server.WindowManagerService$1)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.WifiService: android.net.wifi.WifiInfo getConnectionInfo()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.browser.WebsiteSettingsActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.browser.BrowserBookmarksAdapter: android.database.Cursor queryBookmarksForUrl(android.content.ContentResolver,java.lang.String,java.lang.String,boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<android.provider.Settings$Secure: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.inputmethod.pinyin.PinyinDecoderService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.BluetoothDeviceProfileState: boolean access$5200(android.bluetooth.BluetoothDeviceProfileState,int,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.internal.telephony.PhoneNotifier: void notifyDataConnection(com.android.internal.telephony.Phone,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.webkit.WebView$ScaleDetectorListener: boolean onScaleBegin(android.view.ScaleGestureDetector)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.quicksearchbox.ChoiceActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.webkit.WebViewCore: void didFirstLayout(boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.mms.transaction.MmsMessageSender: void sendReadRec(android.content.Context,java.lang.String,java.lang.String,int)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDeviceManager: void onDeviceDisappeared(android.bluetooth.BluetoothDevice)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.providers.contacts.LegacyApiSupport: int updateAll(android.net.Uri,int,android.content.ContentValues,java.lang.String,java.lang.String[])>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.vpn.PptpService: boolean access$400(com.android.server.vpn.VpnService)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.settings.bluetooth.BluetoothSettings: boolean addDevicePreference(com.android.settings.bluetooth.CachedBluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.inputmethod.latin.LatinKeyboardView: void onDownEvent(com.android.inputmethod.latin.PointerTracker,int,int,long)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDeviceManager: void onBtClassChanged(android.bluetooth.BluetoothDevice)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.net.wifi.IWifiManager: java.util.List getScanResults()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.certinstaller.CertInstallerMain: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.exchange.adapter.ContactsSyncAdapter: void setSyncKey(java.lang.String,boolean)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.phone.InCallScreen: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.ContactsListActivity: void onClick(android.view.View)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.content.SyncManager: void access$900(android.content.SyncManager,android.content.SyncManager$ActiveSyncContext,android.content.SyncResult)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.mms.util.Recycler$SmsRecycler: boolean anyThreadOverLimit(android.content.Context)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.app.backup.IBackupManager$Stub: void setAutoRestore(boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.wifi.WifiManager: android.net.wifi.WifiConfiguration getWifiApConfiguration()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: boolean handleCallDeflectionIncallSupplementaryService(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.INfcTag$Stub$Proxy: int ndefWrite(int,android.nfc.NdefMessage)>": [
  "android.permission.NFC"
 ], 
 "<com.android.mms.ui.SlideshowActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.data.Conversation: android.net.Uri getUri(long)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.calendar.WeekView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.bluetooth.BluetoothDevice: boolean setTrust(boolean)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.policy.impl.LockPatternKeyguardView$1: void goToLockScreen()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.exchange.SyncManager$2: void sendMeetingResponse(long,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.AdnRecordCache: void requestLoadAllAdnLike(int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.LockPatternKeyguardView$AccountAnalyzer: void next()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.nfc.LlcpConnectionlessSocket: android.nfc.LlcpPacket receiveFrom()>": [
  "android.permission.NFC"
 ], 
 "<com.android.phone.EnableFdnScreen: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.providers.downloads.DownloadService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppBtEnableActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.quicklaunch.QuickLaunchSettings: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.settings.ChooseLockPatternExample: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.browser.BrowserProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void invokeOemRilRequestRaw(byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.GroupingListAdapter$1: void onChange(boolean)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.os.IHardwareService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.FLASHLIGHT"
 ], 
 "<com.android.settings.TextToSpeechSettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.soundrecorder.Recorder: void signalStateChanged(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.speech.SpeechRecognizer: void handleStartListening(android.content.Intent)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.email.service.MailService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.SearchResultsActivity: boolean callContact(android.database.Cursor)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.settings.AccountSyncSettingsInAddAccount: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.settings.ChooseLockPatternTutorial: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.ui.MessagingPreferenceActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: void startScan(boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void reconnectAfterFail(com.android.internal.telephony.DataConnection$FailCause,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.IPowerManager$Stub$Proxy: void acquireWakeLock(int,android.os.IBinder,java.lang.String,android.os.WorkSource)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.browser.TabControl: void freeMemory()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.SMSDispatcher: int processMessagePart(com.android.internal.telephony.SmsMessageBase,com.android.internal.telephony.SmsHeader$ConcatRef,com.android.internal.telephony.SmsHeader$PortAddrs)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.IBluetoothA2dp$Stub: boolean suspendSink(android.bluetooth.BluetoothDevice)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.music.MusicUtils: void playAll(android.content.Context,long[],int,boolean)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.wifi.WifiAPITest$1: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.net.wifi.WifiStateTracker: boolean setRadio(boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.cdma.RuimCard: void handleIccCardStatus(com.android.internal.telephony.IccCardStatus)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.CallNotifier: void resetAudioStateAfterDisconnect()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.content.ISyncAdapter$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.music.MediaPlaybackService: void stop()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyDataConnectionFailed(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.KeyguardManager$KeyguardLock: void disableKeyguard()>": [
  "android.permission.DISABLE_KEYGUARD"
 ], 
 "<com.android.contacts.TwelveKeyDialer: void onResume()>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.exchange.EasOutboxService: void runPingLoop()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onRecordsLoaded()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.location.ILocationManager$Stub$Proxy: void clearTestProviderEnabled(java.lang.String)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<android.net.IConnectivityManager$Stub: boolean getMobileDataEnabled()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.bluetooth.IBluetoothA2dp: int getSinkState(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: void hangup(com.android.internal.telephony.gsm.GsmConnection)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: boolean setWifiEnabled(boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.cooliris.media.PhotoAppWidgetConfigure: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.deskclock.SetAlarm: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewCallback: void pokeWakelock(int)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$GpsStateTracker$1: java.lang.Object doInBackground(java.lang.Object[])>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.sip.SipService$SipSessionGroupExt: void openToReceiveCalls()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.speech.tts.ITts$Stub$Proxy: boolean synthesizeToFile(java.lang.String,java.lang.String,java.lang.String[],java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.deskclock.HandleSetAlarm: void onCreate(android.os.Bundle)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.os.storage.IMountService$Stub$Proxy: void shutdown(android.os.storage.IMountShutdownObserver)>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: void access$000(com.android.internal.telephony.cdma.CdmaConnection)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.backup.RestoreSession: int restorePackage(java.lang.String,android.app.backup.RestoreObserver)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.contacts.TwelveKeyDialer: boolean resolveIntent()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.sip.SipService$ConnectivityReceiver$MyTimerTask: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void invokeOemRilRequestRaw(byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.ILocationManager$Stub: boolean addGpsStatusListener(android.location.IGpsStatusListener)>": [
  "android.permission.ACCESS_FINE_LOCATION"
 ], 
 "<android.accounts.AccountManager$4: void doWork()>": [
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.settings.bluetooth.LocalBluetoothProfileManager: boolean isPreferred(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.development.EnterUR: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.browser.BrowserActivity$SetAsWallpaper: void run()>": [
  "android.permission.SET_WALLPAPER", 
  "android.permission.INTERNET"
 ], 
 "<com.android.mms.ui.MessageListAdapter$AvatarCache$ContactData: boolean onContactInfoLoaded(android.database.Cursor)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.am.BatteryStatsService: byte[] getStatistics()>": [
  "android.permission.BATTERY_STATS", 
  "android.permission.BLUETOOTH"
 ], 
 "<android.nfc.INfcAdapter$Stub$Proxy: void enableForegroundNdefPush(android.content.ComponentName,android.nfc.NdefMessage)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipCall: void rejectCall()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.spare_parts.SpareParts: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.server.search.SearchManagerService$MyPackageMonitor: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.bluetooth.IBluetooth$Stub$Proxy: int getRemoteClass(java.lang.String)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.app.ReceiverRestrictedContext: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$StateTracker: void onActualStateChange(android.content.Context,android.content.Intent)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.settings.ChooseLockPassword: void onClick(android.view.View)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: boolean reconnect()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setCdmaRoamingPreference(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.connectivity.Tethering: void enableUsbIfaces(boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.NetworkManagementService: boolean isTetheringStarted()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.connectivity.Tethering$TetherInterfaceSM: void <init>(com.android.server.connectivity.Tethering,java.lang.String,android.os.Looper,boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.accounts.IAccountManager: void editProperties(android.accounts.IAccountManagerResponse,java.lang.String,boolean)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.development.RunningProcesses: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void sendUssdResponse(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.activity.setup.AccountSetupBasics: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.providers.downloads.DownloadService: boolean scanFile(com.android.providers.downloads.DownloadInfo,boolean,boolean)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.providers.userdictionary.DictionaryBackupAgent: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.webkit.WebSettings: void setDefaultZoom(android.webkit.WebSettings$ZoomDensity)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.cooliris.media.GridInputProcessor$1: void run()>": [
  "android.permission.INTERNET"
 ], 
 "<android.webkit.HTML5Audio: void <init>(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.IWifiManager$Stub: void releaseMulticastLock()>": [
  "android.permission.CHANGE_WIFI_MULTICAST_STATE"
 ], 
 "<com.android.exchange.EasOutboxService: org.apache.http.HttpResponse sendPing(byte[],int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: void doShareVisibleContacts()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.bluetooth.ConnectSpecificProfilesActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.BluetoothHandsfree$12: android.bluetooth.AtCommandResult handleReadCommand()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.calendar.WeekActivity: void onResume()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.net.wifi.WifiStateTracker: void configureInterface()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.calendar.GoogleCalendarUriIntentFilter: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.ConnectivityService: java.lang.String[] getTetherableIfaces()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.tts.TtsService$1: int stop(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.AccountManagerService: void removeAccount(android.accounts.IAccountManagerResponse,android.accounts.Account)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.contacts.RecentCallsListActivity$RecentCallsAdapter: boolean queryContactInfo(com.android.contacts.RecentCallsListActivity$CallerInfoQuery)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.server.BluetoothA2dpService: void <init>(android.content.Context,android.server.BluetoothService)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.stk.RilMessageDecoder$StateStart: boolean processMessage(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.wifi.WifiSettings: boolean onContextItemSelected(android.view.MenuItem)>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.app.ActivityGroup: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.WifiWatchdogService$2: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.policy.impl.GlobalActions$2: void onPress()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.NfcService$3: int send(int,byte[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.backup.IRestoreSession: int restoreAll(long,android.app.backup.IRestoreObserver)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.browser.widget.BookmarkWidgetService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.bluetooth.DockService: void access$000(com.android.settings.bluetooth.DockService,android.os.Message)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.google.common.io.MultiReader: void advance()>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.phone.EnableFdnScreen: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,boolean,boolean,int,int)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.internal.telephony.gsm.stk.RilMessageDecoder$StateCmdParamsReady: void enter()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.providers.downloads.RealSystemFacade: void postNotification(long,android.app.Notification)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.nfc.NfcService$3: int getRemoteSocketMiu(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.contacts.ImportVCardActivity$VCardScanThread: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.AttachImage: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.webkit.WebView: void clearHistory()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.music.MediaPlaybackActivity: void access$700(com.android.music.MediaPlaybackActivity)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.providers.userdictionary.DictionaryBackupAgent: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.speech.tts.ITts: int stop(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.sip.SipSettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.webkit.HTML5VideoViewProxy$VideoPlayer$1: void onCustomViewHidden()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.IBluetooth$Stub$Proxy: void removeServiceRecord(int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.settings.ChooseLockPattern: void saveChosenPatternAndFinish()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.PhoneBase: void notifyServiceStateChangedP(android.telephony.ServiceState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.DataConnectionTracker: void setDataOnRoamingEnabled(boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: void onSystemReady()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.NetworkManagementService: java.lang.String[] listInterfaces()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.google.common.io.Files: void move(java.io.File,java.io.File)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.phone.BluetoothHandsfree$30: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.webkit.WebView: void setSelection(int,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.wifi.WifiConfigInfo: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void setRadioPower(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.test.IsolatedContext: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.http.EventHandler: void certificate(android.net.http.SslCertificate)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.email.activity.MessageView$PresenceCheckTask: java.lang.Integer doInBackground(java.lang.String[])>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.browser.TabControl: android.webkit.WebView createNewWebView()>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.policy.impl.PasswordUnlockScreen: boolean onKeyDown(int,android.view.KeyEvent)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.RI: void acceptCall(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void dispose()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ImportVCardActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.EditEvent$QueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.music.AudioPreview$PreviewPlayer: void stop()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.SelectCalendarsActivity: void onClick(android.view.View)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.music.DeleteItems: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.CallFeaturesSetting: void onCreate(android.os.Bundle)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.contacts.ContactsListActivity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void <init>(com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface)>": [
  "android.permission.CHANGE_CONFIGURATION", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.mms.ui.SlideshowEditActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.providers.downloads.RealSystemFacade: boolean isNetworkRoaming()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.deskclock.AlarmKlaxon: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.development.EnterUR: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setupDefaultPDP(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.IWifiManager$Stub: int getNumAllowedChannels()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: boolean onContextItemSelected(android.view.MenuItem)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.policy.impl.KeyguardUpdateMonitor$SimStateCallback: void onSimStateChanged(com.android.internal.telephony.IccCard$State)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.cooliris.media.LoadingLayer: void onSurfaceCreated(com.cooliris.media.RenderView,javax.microedition.khronos.opengles.GL11)>": [
  "android.permission.INTERNET"
 ], 
 "<android.webkit.WebIconDatabase$EventHandler: void access$500(android.webkit.WebIconDatabase$EventHandler,android.os.Message)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.internal.telephony.IntRangeManager: boolean tryAddSingleRange(int,int,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.RingtonePickerActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void conference()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.MountService: int[] getStorageUsers(java.lang.String)>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
 ], 
 "<android.app.ActivityManagerNative: void wakingUp()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.EmergencyDialer: void onClick(android.view.View)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.webkit.WebView: void clearSslPreferences()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.ISms: boolean enableCellBroadcastRange(int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.webkit.LoadListener: void certificate(android.net.http.SslCertificate)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: void resetStateLocked()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.DataConnection$DcDefaultState: void enter()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void queryCallWaiting(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.BluetoothHeadsetService: void adjustOtherHeadsetPriorities(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManagerProxy: java.util.List getAllMessagesFromIccEf()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void queryAvailableBandMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: void explicitCallTransfer()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.bluetooth.BluetoothSettings: void createDevicePreference(com.android.settings.bluetooth.CachedBluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.music.IMediaPlaybackService$Stub$Proxy: void pause()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.RI: void sendCDMAFeatureCode(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.FdnList: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.google.common.io.CharStreams$4: java.lang.Object getInput()>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.nfc.NfcService$2: android.nfc.ILlcpSocket getLlcpInterface()>": [
  "android.permission.NFC"
 ], 
 "<android.webkit.PluginFullScreenHolder: boolean onKeyUp(int,android.view.KeyEvent)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.providers.applications.ApplicationLauncher: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.wifi.IWifiManager$Stub: int addOrUpdateNetwork(android.net.wifi.WifiConfiguration)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.settings.BatteryInfo: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.ui.ConversationListItem: void access$000(com.android.mms.ui.ConversationListItem)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getIMEISV(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.exchange.adapter.ContactsSyncAdapter: boolean isSyncable()>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.server.NetworkManagementService: void access$000(com.android.server.NetworkManagementService,java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onRecordsLoaded()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_APN_SETTINGS"
 ], 
 "<com.android.phone.EmergencyCallbackModeService$3: void onTick(long)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.app.Service: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapService$2: boolean isConnected(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.RI: void setupDefaultPDP(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.WifiManager$MulticastLock: void release()>": [
  "android.permission.CHANGE_WIFI_MULTICAST_STATE"
 ], 
 "<android.net.http.RequestHandle: void processRequest()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.camera.ui.HeadUpDisplay$2: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.DefaultPhoneNotifier: void notifySignalStrength(com.android.internal.telephony.Phone)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.inputmethod.latin.LatinIMESettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.UiModeManagerService$8: void retrieveLocation()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteBluetoothOn()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.mms.transaction.MessagingNotification: int getDownloadFailedMessageCount(android.content.Context)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.settings.fuelgauge.PowerUsageSummary: boolean onOptionsItemSelected(android.view.MenuItem)>": [
  "android.permission.BATTERY_STATS", 
  "android.permission.BLUETOOTH"
 ], 
 "<android.content.SyncManager$SyncHandler: void runSyncFinishedOrCanceled(android.content.SyncResult)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.location.GpsLocationProvider: void addListener(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.PointerLocation: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.music.VideoBrowserActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.DeviceAdminAdd: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.BluetoothDevice: boolean createBondOutOfBand(byte[],byte[])>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.browser.TabControl: boolean recreateWebView(com.android.browser.Tab,com.android.browser.BrowserActivity$UrlData)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.telephony.CallerInfoAsyncQuery: com.android.internal.telephony.CallerInfoAsyncQuery startQuery(int,android.content.Context,java.lang.String,com.android.internal.telephony.CallerInfoAsyncQuery$OnQueryCompleteListener,java.lang.Object)>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.contacts.ui.EditContactActivity: int compare(com.android.contacts.model.EntityDelta,com.android.contacts.model.EntityDelta)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.contacts.ui.QuickContactWindow: void handleData(android.database.Cursor)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState: boolean turnOnMasterTetherSettings()>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.server.ThrottleService$MyHandler: void postNotification(int,int,int,int)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.MountService: void <init>(android.content.Context)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.mms.data.WorkingMessage: android.net.Uri readDraftMmsMessage(android.content.Context,long,java.lang.StringBuilder)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.ISms: boolean disableCellBroadcast(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.browser.BrowserHistoryPage: boolean onPrepareOptionsMenu(android.view.Menu)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.quicksearchbox.SearchWidgetConfigActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.widget.ContactHeaderWidget$QueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.accounts.AccountManagerService: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<android.media.AsyncPlayer: void releaseWakeLock()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.provider.Browser: void clearHistory(android.content.ContentResolver)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: void operationComplete()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.tech.Ndef: byte[] transceive(byte[],boolean)>": [
  "android.permission.NFC"
 ], 
 "<com.android.phone.BluetoothHandsfree$2: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.WifiService: void access$2400(com.android.server.WifiService)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.browser.search.OpenSearchSearchEngine: android.net.NetworkInfo getActiveNetworkInfo(android.content.Context)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: java.util.List getAllMessagesFromIccEf()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.music.MediaPickerActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.ui.ConfirmRateLimitActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.inputmethod.pinyin.SkbContainer: boolean onTouchEvent(android.view.MotionEvent)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.settings.bluetooth.BluetoothPairingDialog: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.quicksearchbox.SearchWidgetConfigActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.ApnSettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: boolean handlePinMmi(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.bluetooth.BluetoothNamePreference: boolean persistString(java.lang.String)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.server.BluetoothService: void addRemoteDeviceProperties(java.lang.String,java.lang.String[])>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.music.IMediaPlaybackService: void setShuffleMode(int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.BluetoothProfileState$StableState: void exit()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppTransferHistory: void clearAllDownloads()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setCallWaiting(boolean,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.NfcService$6: int close(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.nfc.NfcService$2: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.settings.bluetooth.ConnectSpecificProfilesActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.sip.ISipService$Stub: boolean isRegistered(java.lang.String)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.server.NetworkManagementService: void stopUsbRNDIS()>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<android.nfc.tech.MifareUltralight: void close()>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.PackageManagerService$AppDirObserver: void onEvent(int,java.lang.String)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.internal.policy.impl.LockPatternKeyguardView$AccountAnalyzer: void <init>(com.android.internal.policy.impl.LockPatternKeyguardView,android.accounts.AccountManager)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.email.activity.setup.AccountSetupCheckSettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.calendar.AgendaActivity: void onSaveInstanceState(android.os.Bundle)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void finalize()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.browser.BrowserActivity: void onDownloadStartNoStream(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.settings.CreateShortcut: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.applications.ApplicationsState: void requestSize(java.lang.String)>": [
  "android.permission.GET_PACKAGE_SIZE"
 ], 
 "<android.nfc.tech.NdefFormatable: void formatReadOnly(android.nfc.NdefMessage)>": [
  "android.permission.NFC"
 ], 
 "<com.android.settings.ApnEditor: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.wifi.IWifiManager$Stub: int getWifiApEnabledState()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.phone.InCallScreen$14: void onCancel(android.content.DialogInterface)>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.OtaUtils: void onClickOtaTryAgainButton()>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.connectivity.Tethering: void interfaceAdded(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.Use2GOnlyCheckBoxPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.ILlcpSocket$Stub$Proxy: int send(int,byte[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.inputmethod.voice.VoiceInput: void startListeningAfterInitialization(com.android.inputmethod.voice.FieldContext)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.settings.bluetooth.BluetoothPairingDialog: void createDisplayPasskeyDialog()>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.BluetoothAtPhonebook$1: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.soundrecorder.SoundRecorder: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.BluetoothDeviceProfileState: void access$5300(android.bluetooth.BluetoothDeviceProfileState)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.browser.Browser: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.activity.setup.AccountSetupOutgoing: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.browser.BrowserHistoryPage: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppService: void updateShare(android.database.Cursor,int,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void queryTTYMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.LoadListener: void error(int,java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.exchange.SyncManager: void access$300(com.android.exchange.SyncManager,long,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void invokeOemRilRequestRaw(byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean disableCellBroadcastRange(int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.calendar.EventInfoActivity: void addAttendeesToLayout(java.util.ArrayList,android.widget.LinearLayout,java.lang.CharSequence)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.ITelephony: android.os.Bundle getCellLocation()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void setSmscAddress(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.IAudioService$Stub$Proxy: void setSpeakerphoneOn(boolean)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.camera.NoSearchActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.tech.NdefFormatable: void connect()>": [
  "android.permission.NFC"
 ], 
 "<android.content.ISyncAdapter$Stub$Proxy: void initialize(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.DataConnectionTracker: void onDataSetupComplete(android.os.AsyncResult)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_APN_SETTINGS"
 ], 
 "<com.android.browser.BrowserBookmarksPage: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.server.BluetoothService: boolean setBondState(java.lang.String,int,int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.calendar.WeekView: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.systemui.statusbar.StatusBarService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.location.ILocationManager$Stub$Proxy: void requestLocationUpdatesPI(java.lang.String,android.location.Criteria,long,float,boolean,android.app.PendingIntent)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.view.IWindowManager$Stub: void setNewConfiguration(android.content.res.Configuration)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.nfc.NfcService$2: android.nfc.INfcTag getNfcTagInterface()>": [
  "android.permission.NFC"
 ], 
 "<com.android.email.MessagingController$2: void run()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.RI: void getPreferredNetworkType(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.PackageManagerBackupAgent: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.systemui.usb.UsbResolverActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GsmSMSDispatcher: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmCall: void hangupIfAlive()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CallerInfo: java.lang.String getCallerId(android.content.Context,java.lang.String)>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.app.IAlarmManager$Stub$Proxy: void setTimeZone(java.lang.String)>": [
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.net.ConnectivityManager: boolean getMobileDataEnabled()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.server.BluetoothService: void getAllProperties()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.net.wifi.WifiManager$WifiLock: void acquire()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.DevelopmentSettings: void access$1900(com.android.development.DevelopmentSettings)>": [
  "android.permission.SET_PROCESS_LIMIT"
 ], 
 "<com.android.nfc.NfcService$7: byte[] receive(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.phone.AccelerometerListener: void setOrientation(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.Connection dial(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.wifi.WifiApSettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.GroupingListAdapter: void onContentChanged()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.phone.BluetoothAtPhonebook$2: android.bluetooth.AtCommandResult handleReadCommand()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.inputmethod.latin.LatinKeyboardView: boolean access$300(com.android.inputmethod.latin.LatinKeyboardBaseView,int,com.android.inputmethod.latin.PointerTracker)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void sendCDMAFeatureCode(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.InCallScreen: com.android.phone.InCallControlState getUpdatedInCallControlState()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.packageinstaller.UninstallAppProgress: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.sip.SipService: void open3(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_SIP"
 ], 
 "<android.bluetooth.BluetoothAdapter: android.util.Pair readOutOfBandData()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.cdma.RuimCard: void supplyPuk(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.PackageManagerBackupAgent: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppBtEnablingActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.test.IsolatedContext: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.DataConnectionTracker: void onEnableNewApn()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.ADNList: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.bluetooth.RequestPermissionActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.server.BluetoothA2dpService: boolean setSinkPriority(android.bluetooth.BluetoothDevice,int)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: boolean setNumAllowedChannels(int,boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.nfc.NfcAdapter: boolean enable()>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.ConnectivityService: void handleSetMobileData(boolean)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipAudioCallAdapter: void onCallBusy(android.net.sip.SipAudioCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.KeyguardScreenCallback: void reportFailedUnlockAttempt()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.view.WindowManagerPolicy: boolean detectSafeMode()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<android.location.ILocationManager$Stub$Proxy: void setTestProviderLocation(java.lang.String,android.location.Location)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.providers.contacts.ContactsProvider2: void onLegacyContactImportFailure()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.vpn.VpnService$NotificationHelper: void showDisconnect()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.widget.RotarySelector: void vibrate(long)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.sip.SipService$ConnectivityReceiver$1: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.bluetooth.BluetoothSettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: void onClicked()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.BluetoothHandsfree: void userWantsAudioOff()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.LocationManagerService: android.location.Location _getLastKnownLocationLocked(java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.contacts.RecentCallsListActivity: boolean onKeyUp(int,android.view.KeyEvent)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.nfc.ILlcpSocket$Stub: int getRemoteSocketRw(int)>": [
  "android.permission.NFC"
 ], 
 "<com.cooliris.media.CrossFadingTexture: boolean bind(com.cooliris.media.RenderView,javax.microedition.khronos.opengles.GL11)>": [
  "android.permission.INTERNET"
 ], 
 "<android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS"
 ], 
 "<android.inputmethodservice.InputMethodService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.wifi.AdvancedSettings: void onCreate(android.os.Bundle)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.settings.WirelessSettings: void onResume()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.NFC"
 ], 
 "<android.bluetooth.IBluetooth$Stub$Proxy: java.lang.String getRemoteName(java.lang.String)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.phone.BluetoothHeadsetService: void setState(android.bluetooth.BluetoothDevice,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.settings.vpn.VpnEditor: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.ViewContactActivity: void access$100(com.android.contacts.ViewContactActivity)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.ISms$Stub: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS"
 ], 
 "<com.android.email.Controller: void loadAttachment(long,long,long,long,com.android.email.Controller$Result)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.net.http.Connection: boolean httpFailure(android.net.http.Request,int,java.lang.Exception)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.NotificationManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.exchange.ContactsSyncAdapterService: void access$000(android.content.Context,android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.net.ConnectivityManager: boolean setRadios(boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.deskclock.SetAlarm: long saveAlarmAndEnableRevert()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.vpn.VpnService$NotificationHelper: void update(long)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.development.DevelopmentSettings$3: void onClick(android.view.View)>": [
  "android.permission.SET_ALWAYS_FINISH", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.music.TrackBrowserActivity: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.WifiService: java.util.List getConfiguredNetworks()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.test.TestBrowserActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.development.Connectivity$10: void onClick(android.view.View)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.settings.IccLockSettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.deskclock.HandleSetAlarm: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.sip.SipService: android.net.sip.SipProfile[] getListOfProfiles()>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.settings.AccessibilitySettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.BluetoothAtPhonebook: boolean queryPhonebook(java.lang.String,com.android.phone.BluetoothAtPhonebook$PhonebookResult)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void setEmptyText()>": [
  "android.permission.READ_SYNC_STATS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.os.storage.IMountService$Stub$Proxy: void setUsbMassStorageEnabled(boolean)>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
 ], 
 "<com.android.phone.GsmUmtsAdditionalCallOptions: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.IntentService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.webkit.WebView: void onDraw(android.graphics.Canvas)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.content.IContentService: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.commands.monkey.Monkey: void main(java.lang.String[])>": [
  "android.permission.SIGNAL_PERSISTENT_PROCESSES", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.development.AppHwConfigList: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.cooliris.media.Wallpaper: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.ImportVCardActivity: android.app.Dialog onCreateDialog(int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.contacts.ViewContactActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.systemui.usb.StorageNotification$2: void run()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.SMSDispatcher: void handleBroadcastSms(android.os.AsyncResult)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.RuimFileHandler: void loadEFLinearFixedAll(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.vpn.L2tpIpsecService: void access$600(com.android.server.vpn.VpnService,java.lang.Throwable)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.voicedialer.PhoneTypeChoiceRecognizerEngine: void onRecognitionSuccess(com.android.voicedialer.RecognizerClient)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.providers.calendar.CalendarReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.settings.deviceinfo.Status: void setWimaxStatus()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.view.IWindowManager: void reenableKeyguard(android.os.IBinder)>": [
  "android.permission.DISABLE_KEYGUARD"
 ], 
 "<com.android.contacts.ContactsLiveFolders$StarredContacts: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.transaction.RetrieveTransaction: byte[] sendPdu(long,byte[])>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.email.activity.Debug: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.nfc.NfcService$2: void disableForegroundNdefPush(android.content.ComponentName)>": [
  "android.permission.NFC"
 ], 
 "<com.android.settings.vpn.VpnSettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.server.BluetoothA2dpService: void onSinkPropertyChanged(java.lang.String,java.lang.String[])>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.internal.telephony.PhoneBase: void getSmscAddress(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.deskclock.SetAlarm: long saveAlarm()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.bluetooth.IBluetooth$Stub: boolean setPairingConfirmation(java.lang.String,boolean)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.quicksearchbox.google.GoogleSuggestClient: com.android.quicksearchbox.SourceResult queryInternal(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.providers.contacts.LegacyContactImporter: void importCalls()>": [
  "android.permission.WRITE_CONTACTS"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void setCdmaRoamingPreference(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.providers.calendar.CalendarProvider2: void regenerateInstancesTable()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.browser.BrowserBookmarksPage: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.IBluetooth: boolean isDiscovering()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.exchange.EasOutboxService: void validate(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,int,boolean,boolean,android.content.Context)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void queryTTYMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<android.app.Application: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.wifi.WifiStatusTest: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.bluetooth.LocalBluetoothProfileManager$HeadsetProfileManager: int getSummary(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.PowerManagerService: void acquireWakeLock(int,android.os.IBinder,java.lang.String,android.os.WorkSource)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.telephony.gsm.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS"
 ], 
 "<com.android.settings.AccountSyncSettings: boolean onPrepareOptionsMenu(android.view.Menu)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.server.ConnectivityService: void access$500(com.android.server.ConnectivityService,android.net.NetworkInfo)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.app.IBatteryStats$Stub: void setBatteryState(int,int,int,int,int,int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.settings.wifi.WifiSettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.providers.calendar.CalendarAppWidgetProvider: void performUpdate(android.content.Context,int[],long[],boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.exchange.SyncManager$2: void loadAttachment(long,java.lang.String,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ContactsLiveFolders$PhoneContacts: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.BluetoothSocket: void <init>(int,int,boolean,boolean,java.lang.String,int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.exchange.EasOutboxService: org.apache.http.HttpResponse executePostWithTimeout(org.apache.http.client.HttpClient,org.apache.http.client.methods.HttpPost,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.exchange.CalendarSyncEnabler: void showNotification(java.lang.String)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.calendar.EventInfoActivity: void initAttendeesCursor()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.cooliris.media.MovieViewControl$4: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.AudioAttachmentView: void stopAudio()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.PluginFullScreenHolder: boolean onTrackballEvent(android.view.MotionEvent)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.BluetoothHandsfree$28: android.bluetooth.AtCommandResult handleReadCommand()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.contacts.ui.ContactsPreferencesActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.server.BluetoothA2dpService: int getSinkPriority(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.exchange.SyncManager: void reconcileAccountsWithAccountManager(android.content.Context,java.util.List,android.accounts.Account[],boolean,android.content.ContentResolver)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.test.mock.MockContentResolver: boolean getMasterSyncAutomatically()>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.content.IContentService$Stub$Proxy: void addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.mms.ui.SearchActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.activity.setup.AccountSetupOptions: void finishOnDone()>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: void onUserInteraction()>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.ConnectivityService: void access$600(com.android.server.ConnectivityService,android.net.NetworkInfo)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.ConnectivityManager: boolean setRadio(int,boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.bluetooth.IBluetooth$Stub$Proxy: boolean setPasskey(java.lang.String,int)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.bluetooth.AtCommandHandler: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.contacts.SearchResultsActivity: android.net.Uri getUriToQuery()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void setPropertiesByCarrier()>": [
  "android.permission.CHANGE_CONFIGURATION", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.contacts.ContactsUtils: android.graphics.Bitmap loadContactPhoto(android.content.Context,long,android.graphics.BitmapFactory$Options)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.accounts.ChooseAccountActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.camera.Camera$MyHeadUpDisplayListener: void onSharedPreferencesChanged()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.email.MessagingListener: void loadMessageForViewFinished(long)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.cooliris.media.RenderView: void processCurrentEvent()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.vpn.L2tpIpsecPskService: boolean access$400(com.android.server.vpn.VpnService)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.email.activity.MailboxList: boolean onContextItemSelected(android.view.MenuItem)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.development.AppHwPref: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.provider.EmailProvider$DatabaseHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.webkit.WebView: void setActive(boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.exchange.EasOutboxService: boolean hasConnectivity()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.cdma.RuimRecords: void setMsisdnNumber(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getLine1Number()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.inputmethod.latin.LatinIME: void onVoiceResults(java.util.List,java.util.Map)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.cooliris.media.MovieViewControl: void <init>(android.view.View,android.content.Context,android.net.Uri)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.BluetoothHandsfree$15: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.SecuritySettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.media.IAudioService: void setBluetoothScoOn(boolean)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.webkit.WebView: void addJavascriptInterface(java.lang.Object,java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.exchange.EasOutboxService: boolean tryProvision()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.certinstaller.CertInstaller: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.transaction.TransactionService: int beginMmsConnectivity()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: boolean releaseWifiLock(android.os.IBinder)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.camera.Camera: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.server.BluetoothA2dpService: boolean addAudioSink(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.google.common.io.CharStreams: java.lang.String toString(com.google.common.io.InputSupplier)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.telephony.test.SimulatedCommands: void onRadioAvailable()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void startPeriodicPdpPoll()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_APN_SETTINGS"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: void editSlideshow()>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.webkit.WebView: void setNewZoomScale(float,boolean,boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.InputMethodManagerService$MyPackageMonitor: boolean onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.webkit.WebView: void sendMoveMouseIfLatest(boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.RIL$RILReceiver: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.music.IMediaPlaybackService$Stub$Proxy: void moveQueueItem(int,int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.voicedialer.BluetoothVoiceDialerActivity$ErrorRunnable: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.settings.wifi.WifiStatusTest: void handleScanResultsAvailable()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.phone.DataUsage: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.exchange.adapter.EmailSyncAdapter: boolean parse(java.io.InputStream)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.webkit.FileLoader: void load()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.content.pm.IPackageManager$Stub$Proxy: void freeStorageAndNotify(long,android.content.pm.IPackageDataObserver)>": [
  "android.permission.CLEAR_APP_CACHE"
 ], 
 "<com.android.email.activity.setup.AccountSetupOutgoing: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.ui.ManageSimMessages: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.calendar.CalendarActivity: void goTo(android.text.format.Time,boolean)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.settings.LocalePicker: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.exchange.adapter.ContactsSyncAdapter: void <init>(com.android.email.provider.EmailContent$Mailbox,com.android.exchange.EasSyncService)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.cooliris.picasa.GDataClient: void get(java.lang.String,com.cooliris.picasa.GDataClient$Operation)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.settings.IccLockSettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.cooliris.picasa.PicasaApi: int deleteEntry(java.lang.String)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: void onWindowFocusChanged(boolean)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.LocationManagerService: void setTestProviderEnabled(java.lang.String,boolean)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<android.nfc.ILlcpSocket$Stub$Proxy: int getRemoteSocketMiu(int)>": [
  "android.permission.NFC"
 ], 
 "<android.accounts.ChooseAccountActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.location.ILocationManager$Stub: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_LOCATION_EXTRA_COMMANDS", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.nfc.NfcService$8: int getMode(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.quicksearchbox.google.GoogleSuggestClient: com.android.quicksearchbox.SourceResult getSuggestions(java.lang.String,int,boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.SettingsLicenseActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.BluetoothHandsfree$25: android.bluetooth.AtCommandResult handleReadCommand()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.phone.BluetoothHandsfree$28: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean disconnectSinkInternal(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewManager$KeyguardViewHost: void dispatchDraw(android.graphics.Canvas)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.google.android.mms.pdu.PduPersister: com.google.android.mms.pdu.GenericPdu load(android.net.Uri)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.bluetooth.AtCommandHandler: android.bluetooth.AtCommandResult handleTestCommand()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.speech.RecognitionService$RecognitionServiceBinder: void stopListening(android.speech.IRecognitionListener)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<android.nfc.tech.MifareUltralight: void writePage(int,byte[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.phone.EditFdnContactScreen: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void getCallForwardingOption(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.BluetoothHeadsetService$6: boolean setPriority(android.bluetooth.BluetoothDevice,int)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<java.net.URLConnection: void connect()>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.providers.contacts.LegacyContactImporter: void updateDisplayNamesAndLookupKeys()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.DeviceAdminSettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.IMediaPlaybackService$Stub: void setQueuePosition(int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.DataConnectionTracker: void onRadioAvailable()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.BluetoothHeadsetService$6: boolean startVoiceRecognition()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.media.RingtoneManager: void setActualDefaultRingtoneUri(android.content.Context,int,android.net.Uri)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.settings.WirelessSettings: void onCreate(android.os.Bundle)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.ActivityPicker: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.sip.ISipService$Stub: android.net.sip.SipProfile[] getListOfProfiles()>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.internal.telephony.RI: void getSignalStrength(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.inputmethod.latin.LatinIME$8: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.server.WifiService: boolean access$2600(com.android.server.WifiService,boolean,int,android.net.wifi.WifiConfiguration)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.mms.ui.MessageUtils: boolean isLocalNumber(java.lang.String)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.calendar.WeekView: void updateEventDetails()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.provider.Settings$System: android.net.Uri getUriFor(java.lang.String)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.settings.UserDictionarySettings: void onCreate(android.os.Bundle)>": [
  "android.permission.READ_USER_DICTIONARY"
 ], 
 "<com.android.email.activity.MessageView: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.SearchResultsActivity: void handleImportRequest(int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.mms.model.ImageModel: void <init>(android.content.Context,java.lang.String,java.lang.String,com.android.mms.drm.DrmWrapper,com.android.mms.model.RegionModel)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.settings.RadioInfo: void refreshSmsc()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.http.HttpsConnection: boolean openHttpConnection(android.net.http.Request)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.net.IThrottleManager$Stub: java.lang.String getHelpUri()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.webkit.WebTextView: void setType(int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.mms.model.SlideshowModel: com.android.mms.model.SlideshowModel createFromMessageUri(android.content.Context,android.net.Uri)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.providers.contacts.LegacyApiSupport: int updateContactMethods(long,android.content.ContentValues)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.app.ActivityManager: java.util.List getRecentTasks(int,int)>": [
  "android.permission.GET_TASKS"
 ], 
 "<com.android.email.activity.AccountShortcutPicker: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.EmergencyCallbackModeService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void explicitCallTransfer(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.SurfaceView: void updateWindow(boolean,boolean)>": [
  "android.permission.SYSTEM_ALERT_WINDOW"
 ], 
 "<android.nfc.INfcAdapter$Stub: void enableForegroundDispatch(android.content.ComponentName,android.app.PendingIntent,android.content.IntentFilter[],android.nfc.TechListParcel)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void pollStateDone()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.VIBRATE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.nfc.tech.NfcF: byte[] transceive(byte[],boolean)>": [
  "android.permission.NFC"
 ], 
 "<android.bluetooth.IBluetoothHeadset: boolean setPriority(android.bluetooth.BluetoothDevice,int)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.mms.ui.MessagingPreferenceActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.cooliris.media.GridLayer: void onSurfaceCreated(com.cooliris.media.RenderView,javax.microedition.khronos.opengles.GL11)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.calendar.EventLoader$LoadEventDaysRequest: void processRequest(com.android.calendar.EventLoader)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.server.LocationManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_LOCATION_EXTRA_COMMANDS", 
  "android.permission.ACCESS_MOCK_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.settings.UserDictionarySettings: android.database.Cursor createCursor()>": [
  "android.permission.READ_USER_DICTIONARY"
 ], 
 "<android.nfc.INfcTag: int reconnect(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.ConnectivityService: boolean isTetheringSupported()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.calendar.AgendaActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.development.DevelopmentSettings$2: void onClick(android.view.View)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.SET_DEBUG_APP"
 ], 
 "<com.android.spare_parts.SpareParts: void writeAnimationPreference(int,java.lang.Object)>": [
  "android.permission.SET_ANIMATION_SCALE"
 ], 
 "<android.webkit.WebView: void drawCoreAndCursorRing(android.graphics.Canvas,int,boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.calendar.AgendaListView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.cooliris.media.Photographs$SetWallpaperThread: void run()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.BluetoothAtPhonebook$3: android.bluetooth.AtCommandResult handleReadCommand()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.music.QueryBrowserActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.browser.Tab$3: void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.os.INetworkManagementService$Stub$Proxy: java.lang.String[] listInterfaces()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.svox.pico.CheckVoiceData: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.ConnectivityService: void handleConnectionFailure(android.net.NetworkInfo)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.email.service.EasAuthenticatorServiceAlternate: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.os.INetworkManagementService$Stub$Proxy: boolean isTetheringStarted()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.view.ContextThemeWrapper: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.IP2pTarget$Stub: byte[] transceive(int,byte[])>": [
  "android.permission.NFC"
 ], 
 "<android.provider.Telephony$Threads: long getOrCreateThreadId(android.content.Context,java.lang.String)>": [
  "android.permission.READ_SMS"
 ], 
 "<android.nfc.tech.BasicTagTechnology: byte[] transceive(byte[],boolean)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void stopDtmf()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.OtaUtils: void otaPerformActivation()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.development.DevelopmentSettings$9: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>": [
  "android.permission.SET_PROCESS_LIMIT"
 ], 
 "<com.android.settings.wifi.WifiSettings$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.mms.MmsApp: void onCreate()>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.nfc.INfcAdapter: android.nfc.ILlcpConnectionlessSocket getLlcpConnectionlessInterface()>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void enableEnhancedVoicePrivacy(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.OtaUtils$3: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.nfc.NfcService$3: int getLocalSocketRw(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppBtEnablingActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.activity.FolderMessageList: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.applications.RunningServiceDetails: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.webkit.WebView: void cancelWebCoreTouchEvent(int,int,boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.net.wifi.IWifiManager: boolean disableNetwork(int)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.nfc.P2pDevice: byte[] getGeneralBytes()>": [
  "android.permission.NFC"
 ], 
 "<android.bluetooth.IBluetooth$Stub: int addRfcommServiceRecord(java.lang.String,android.os.ParcelUuid,int,android.os.IBinder)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void rejectCall()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: void setKeyguardEnabled(boolean)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.deskclock.AlarmAlertWakeLock: void releaseCpuLock()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.providers.contacts.LegacyApiSupport: int delete(android.net.Uri,int,long)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.NetworkManagementService: void tetherInterface(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.music.ScanningProgress: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.calendar.DayView: int getEventAccessLevel(android.content.Context,com.android.calendar.Event)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.server.sip.SipWakeLock: void reset()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.BluetoothHandsfree$29: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.BluetoothHandsfree$8: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.bluetooth.BluetoothDevice: boolean setPin(byte[])>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.music.IMediaPlaybackService: void play()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: void refreshName()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.inputmethod.pinyin.PinyinDecoderService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.calendar.CalendarView: void initView(com.android.calendar.CalendarView)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.mms.transaction.PushReceiver: boolean isDuplicateNotification(android.content.Context,com.google.android.mms.pdu.NotificationInd)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void notifyDataConnection(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.data.Conversation: android.net.Uri getUri()>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.mms.ui.ManageSimMessages: void init()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.phone.OtaUtils: void otaShowHome()>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.mms.ui.AudioAttachmentView$2: boolean onError(android.media.MediaPlayer,int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.AccountManager: android.accounts.AccountManagerFuture hasFeatures(android.accounts.Account,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void setOutgoingCallerIdDisplay(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void setVoiceMailNumber(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.provider.ContactsContract$RawContacts$EntityIteratorImpl: java.lang.Object next()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.internal.telephony.RI: void supplyIccPuk(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void <init>(com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean)>": [
  "android.permission.CHANGE_CONFIGURATION", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.PackageManagerService: void <init>(android.content.Context,boolean)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.music.MediaPlaybackService: void pause()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.ILocationManager$Stub$Proxy: boolean addGpsStatusListener(android.location.IGpsStatusListener)>": [
  "android.permission.ACCESS_FINE_LOCATION"
 ], 
 "<com.android.mms.transaction.SmsReceiverService: void moveOutboxMessagesToQueuedBox()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.calendar.DeleteEventHelper$1: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<android.bluetooth.IBluetooth: boolean isEnabled()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.inputmethod.pinyin.PinyinIME: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.quicksearchbox.SearchSettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.server.BluetoothService: void access$200(android.server.BluetoothService,boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.voicedialer.BluetoothVoiceDialerActivity: void speakChoices()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.launcher2.Launcher: void setWallpaperDimension()>": [
  "android.permission.SET_WALLPAPER_HINTS"
 ], 
 "<com.android.deskclock.Alarms: boolean enableSnoozeAlert(android.content.Context)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppLiveFolder: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.exchange.EasOutboxService: void sleep(long,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.CdmaSystemSelectListPreference: void onDialogClosed(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.development.BadBehaviorActivity$BadService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.inputmethod.pinyin.SettingsActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.view.IApplicationToken: void windowsVisible()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.email.service.EmailBroadcastProcessorService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.os.INetworkManagementService: java.lang.String[] listTetheredInterfaces()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.email.activity.MessageCompose: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: void setPassword(android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.server.BackupManagerService: void clearBackupData(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.BluetoothHeadsetService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.PhysicalKeyboardSettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.ActivityManagerNative: void moveTaskBackwards(int)>": [
  "android.permission.REORDER_TASKS"
 ], 
 "<com.android.internal.service.wallpaper.ImageWallpaper: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.service.wallpaper.WallpaperSettingsActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.gsm.SIMRecords: void setMsisdnNumber(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<java.net.HttpURLConnection: void <init>(int)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.settings.ChooseLockPassword: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.webkit.BrowserFrame: void setProgress(int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.mms.ui.SlideView$1: void onPrepared(android.media.MediaPlayer)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmSMSDispatcher: void handleIccFull()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.activity.AccountFolderList: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.deskclock.AlarmClock: void updateIndicatorAndAlarm(boolean,android.widget.ImageView,com.android.deskclock.Alarm)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.phone.OutgoingCallBroadcaster: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.fuelgauge.PowerUsageSummary: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.CreateShortcut: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.AccountSyncSettings: void onAuthDescriptionsUpdated()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.browser.CombinedBookmarkHistoryActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.browser.Tab: void resume()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.calendar.CalendarActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.RadioInfo$18: void onClick(android.view.View)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ReceiverRestrictedContext: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.exchange.SyncManager: void access$800(com.android.exchange.SyncManager)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.accounts.AccountAuthenticatorActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.quicksearchbox.ChoiceActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.webkit.WebViewCore$EventHub: void access$6300(android.webkit.WebViewCore$EventHub,android.os.Message)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.accounts.IAccountManager: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppNotification: void access$300(com.android.bluetooth.opp.BluetoothOppNotification)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.contacts.model.Sources: java.util.ArrayList getAccounts(boolean)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.bluetooth.IBluetooth$Stub: boolean isEnabled()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.music.WeekSelector: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.util.HierarchicalStateMachine$HsmHandler: void invokeEnterMethods(int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.InCallScreen: void internalHangupRingingCall()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.deskclock.AlarmKlaxon: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppTransfer: void startObexSession()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.AudioService$AudioHandler$1: void onCompletion(android.media.MediaPlayer)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.soundrecorder.SoundRecorder: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.webkit.CacheLoader: boolean sendData()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void dispatchBroadcastPdus(byte[][],boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.DemoDataSet: void add(android.content.Context)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.widget.DateTimeView: void onAttachedToWindow()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.phone.CdmaVoicePrivacyCheckBoxPreference: void onClick()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.BluetoothHandsfree: void onBluetoothDisabled()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.CallNotifier: void onResendMute()>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.settings.ApplicationSettings$1: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.spare_parts.SpareParts: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.quicksearchbox.ChoiceActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.webkit.WebViewCore: void access$1800(android.webkit.WebViewCore,int,int,int,float,int,int,boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.ThrottleService: long getCliffThreshold(java.lang.String,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.voicedialer.BluetoothVoiceDialerActivity: void releaseWakeLock()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void onResume()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_SYNC_STATS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.soundrecorder.SoundRecorder: void updateTimeRemaining()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.LockScreen: void onConfigurationChanged(android.content.res.Configuration)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.ThrottleService$SettingsObserver: void observe(android.content.Context)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.content.IContentService$Stub$Proxy: void setMasterSyncAutomatically(boolean)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.providers.downloads.ui.DownloadList: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.location.LocationManager: void requestSingleUpdate(android.location.Criteria,android.location.LocationListener,android.os.Looper)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.WifiService: void initializeMulticastFiltering()>": [
  "android.permission.CHANGE_WIFI_MULTICAST_STATE"
 ], 
 "<com.android.server.DropBoxManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.READ_LOGS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void operationComplete()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.inputmethod.latin.LatinIME: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.browser.Tab$2$4: java.lang.Object doInBackground(java.lang.Object[])>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<android.webkit.WebViewCore$3: void onReceiveValue(java.lang.String[])>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.email.service.IEmailService: void hostChanged(long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.ConversationList: void openThread(long)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.settings.SecuritySettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.nfc.tech.MifareUltralight: void connect()>": [
  "android.permission.NFC"
 ], 
 "<com.android.browser.BrowserActivity$UrlData: void loadIn(com.android.browser.Tab)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.server.LocationManagerService$2: boolean onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.development.DevelopmentSettings: void writePointerLocationOptions()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.RI: void changeBarringPassword(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.browser.BrowserActivity: com.android.browser.Tab openTabToHomePage()>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.camera.NoSearchActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.ui.SlideViewInterface: void startAudio()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.soundrecorder.SoundRecorder: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.bluetooth.RequestPermissionHelperActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.nfc.NfcService$5: int getSap(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.app.PlatLogoActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.WifiWatchdogService: void handleBackgroundCheckAp(com.android.server.WifiWatchdogService$AccessPoint)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.gsm.stk.CommandParamsFactory: boolean processGetInput(com.android.internal.telephony.gsm.stk.CommandDetails,java.util.List)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.htmlviewer.HTMLViewerActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppBtEnableActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.exchange.ContactsSyncAdapterService$SyncAdapterImpl: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.browser.WebsiteSettingsActivity$SiteAdapter: void populateIcons(java.util.Map)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.camera.Camera: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.ConnectivityService: android.net.NetworkInfo getNetworkInfo(int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.ISms$Stub$Proxy: boolean disableCellBroadcastRange(int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onDataStateChanged(android.os.AsyncResult)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.IBluetooth$Stub: boolean fetchRemoteUuids(java.lang.String,android.os.ParcelUuid,android.bluetooth.IBluetoothCallback)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.telephony.gsm.SmsManager: boolean updateMessageOnSim(int,int,byte[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.server.BluetoothService: boolean setBondState(java.lang.String,int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapVcardManager: int composeAndSendCallLogVcards(int,javax.obex.Operation,int,int,boolean)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.server.BluetoothEventLoop: void onRequestPasskey(java.lang.String,int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$WifiStateTracker$1: java.lang.Void doInBackground(java.lang.Void[])>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.contacts.ViewContactActivity: void bindData()>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.os.INetworkManagementService$Stub$Proxy: void enableNat(java.lang.String,java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.phone.EmergencyCallHandler: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.backup.RestoreSession: int restoreAll(long,android.app.backup.RestoreObserver)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<android.content.IContentService$Stub: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.browser.SelectDialog$3: void onClick(android.view.View)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.Phone: void exitEmergencyCallbackMode()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.providers.calendar.CalendarDebug: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.CallFeaturesSetting: void handleSipCallOptionsChange(java.lang.Object)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.development.DevelopmentSettings: void access$100(com.android.development.DevelopmentSettings)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.SET_DEBUG_APP"
 ], 
 "<com.android.providers.downloads.DownloadThread: void handleEndOfStream(com.android.providers.downloads.DownloadThread$State,com.android.providers.downloads.DownloadThread$InnerState)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET"
 ], 
 "<android.server.BluetoothService: int addRfcommServiceRecord(java.lang.String,android.os.ParcelUuid,int,android.os.IBinder)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetheringErroredIfaces()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.packageinstaller.UninstallerActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.transaction.ReadRecTransaction: byte[] sendPdu(byte[])>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.exchange.SyncManager: long checkMailboxes()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.phone.FdnList: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.inputmethod.latin.LatinIME: void onText(java.lang.CharSequence)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.phone.sip.SipEditor: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.AttachImage: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.PlaylistBrowserActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.nfc.INfcAdapter: void enableForegroundNdefPush(android.content.ComponentName,android.nfc.NdefMessage)>": [
  "android.permission.NFC"
 ], 
 "<com.android.settings.bluetooth.BluetoothDiscoverableEnabler: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.sip.SipService: void access$300(com.android.server.sip.SipService)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: java.util.List getAdnRecordsInEf(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.providers.media.MediaScannerService: android.net.Uri scanFile(java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.RI: void send(com.android.internal.telephony.RILRequest)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.music.VideoBrowserActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.AlarmManagerService: void <init>(android.content.Context)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.IThrottleManager: int getThrottle(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.bluetooth.DockService: boolean hasOtherConnectedDevices(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: boolean haveSomethingToCopyToSDCard(long)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.media.AsyncPlayer$Thread: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.music.MediaPlaybackService: int removeTracksInternal(int,int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.music.TrackBrowserActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.wifi.WifiStatusTest$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void onSignalStrengthResult(android.os.AsyncResult)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.service.EmailBroadcastProcessorService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.AgendaActivity: void updateTitle()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.development.MediaScannerActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: boolean copyMessageToIccEf(int,byte[],byte[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.app.IWallpaperManager$Stub$Proxy: android.os.ParcelFileDescriptor setWallpaper(java.lang.String)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.activity.Debug: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: void acceptCall()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.INetworkManagementService$Stub: long getInterfaceRxCounter(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.providers.contacts.LegacyApiSupport: int update(int,long,android.content.ContentValues)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.phone.BluetoothHandsfree$4: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.mms.ui.SlideView: void setAudio(android.net.Uri,java.lang.String,java.util.Map)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.Connectivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.server.BluetoothService$2: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.gsm.SimCard: void changeIccLockPassword(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.DeliveryReportActivity: java.util.List getMmsReportItems()>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void queryAvailableBandMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.ConnectivityService: int untether(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.RI: void queryFacilityLock(java.lang.String,java.lang.String,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: void forwardMessage(com.android.mms.ui.MessageItem)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.phone.BluetoothHandsfree$19: android.bluetooth.AtCommandResult handleActionCommand()>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.wifi.WifiConfigInfo: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.development.AccountsTester: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.exchange.adapter.Parser: boolean parse()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: void setRssi(short)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void getNeighboringCids(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.pm.PackageManager: void freeStorageAndNotify(long,android.content.pm.IPackageDataObserver)>": [
  "android.permission.CLEAR_APP_CACHE"
 ], 
 "<com.android.nfc.TechListChooserActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.activity.MessageView: void onDelete()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.service.urlrenderer.UrlRendererService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.IBluetooth$Stub$Proxy: boolean cancelPairingUserInput(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.app.ShutdownThread$1: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.VIBRATE", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.accounts.AccountManagerService: void clearPassword(android.accounts.Account)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<android.app.INotificationManager$Stub: void enqueueNotificationWithTag(java.lang.String,java.lang.String,int,android.app.Notification,int[])>": [
  "android.permission.VIBRATE"
 ], 
 "<android.speech.tts.ITts: int playEarcon(java.lang.String,java.lang.String,int,java.lang.String[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.music.MusicUtils: void playPlaylist(android.content.Context,long)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.TwelveKeyDialer: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.TextToSpeechSettings: void onActivityResult(int,int,android.content.Intent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.systemui.usb.UsbAccessoryUriActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.wifi.WifiStateTracker$NotificationEnabledSettingObserver: void register()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.am.ActivityManagerService: void crashApplication(com.android.server.am.ProcessRecord,android.app.ApplicationErrorReport$CrashInfo)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<android.nfc.tech.Ndef: void close()>": [
  "android.permission.NFC"
 ], 
 "<com.android.calendar.EditEvent: void onClick(android.view.View)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<android.location.ILocationManager$Stub: android.os.Bundle getProviderInfo(java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.calendar.CalendarActivity: boolean onOptionsItemSelected(android.view.MenuItem)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.calendar.CalendarView: void updateEventDetails()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.email.activity.MessageView$MessageViewHandler: void loadContentUri(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.gsm.stk.StkService: com.android.internal.telephony.gsm.stk.AppInterface getInstance()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.bluetooth.BluetoothPairingDialog: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.content.IContentService$Stub: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.systemui.usb.UsbConfirmActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.IAlarmManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.music.MusicUtils: void playAll(android.content.Context,long[],int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneNotifier: void notifyDataConnectionFailed(com.android.internal.telephony.Phone,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.ProxySelector: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.BluetoothHandsfree: void disconnectHeadset()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.calendar.MonthView: void updateEventDetails(int)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.providers.calendar.CalendarAppWidgetService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.NotificationManagerService: void enqueueNotificationInternal(java.lang.String,int,int,java.lang.String,int,android.app.Notification,int[])>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.LocationManagerService: void requestLocationUpdatesLocked(java.lang.String,long,float,boolean,com.android.server.LocationManagerService$Receiver)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.contacts.CallDetailActivity: void updateData(android.net.Uri)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.cooliris.media.RootLayer: boolean onKeyDown(int,android.view.KeyEvent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityManagerService$AppDeathRecipient: void binderDied()>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$ErrorState: void exit()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.email.activity.MessageView: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.bluetooth.BluetoothPairingDialog: void onPair(java.lang.String)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.ConnectivityService: void access$1300(com.android.server.ConnectivityService,boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.preference.VolumePreference$SeekBarVolumizer: void initSeekBar(android.widget.SeekBar)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.email.service.MailService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.inputmethodservice.InputMethodService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.systemui.usb.UsbResolverActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.TwelveKeyDialer: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.service.IEmailService$Stub: android.os.Bundle autoDiscover(java.lang.String,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.ConnectivityService: void enforceAccessPermission()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.music.AudioPreview$PreviewPlayer: void release()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.PackageManagerService: void freeStorage(long,android.content.IntentSender)>": [
  "android.permission.CLEAR_APP_CACHE"
 ], 
 "<android.webkit.WebSettings: void setBlockNetworkLoads(boolean)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.phone.sip.SipEditor: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.ContactsListActivity: boolean isSyncActive()>": [
  "android.permission.READ_SYNC_STATS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.email.activity.MessageList: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.DTMFTwelveKeyDialer: void onDrawerClosed()>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.media.IAudioService$Stub$Proxy: void setBluetoothScoOn(boolean)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.settings.ApnSettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.inputmethod.pinyin.PinyinIME: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.accounts.IAccountManager$Stub: boolean addAccount(android.accounts.Account,java.lang.String,android.os.Bundle)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void access$300(com.android.contacts.ContactsListActivity,int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.email.activity.AccountShortcutPicker: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.content.pm.IPackageManager$Stub$Proxy: void getPackageSizeInfo(java.lang.String,android.content.pm.IPackageStatsObserver)>": [
  "android.permission.GET_PACKAGE_SIZE"
 ], 
 "<com.android.calendar.DayView: void recalc()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.server.NetworkManagementService: int getInterfaceTxThrottle(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.email.AccountBackupRestore$1: void run()>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.server.NotificationManagerService: void cancelToastLocked(int)>": [
  "android.permission.SET_PROCESS_LIMIT"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void sendUSSD(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.IAudioService: void stopBluetoothSco(android.os.IBinder)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.Connection dial(java.lang.String,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.BluetoothHeadsetService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.app.DisableCarModeActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.sip.SipCommandInterface: void onRadioAvailable()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.InCallScreen: boolean isBluetoothAvailable()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.calendar.AgendaActivity: void onNewIntent(android.content.Intent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.voicedialer.BluetoothVoiceDialerActivity$CommandRecognizerClient$2: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: boolean pingSupplicant()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.exchange.AbstractSyncService: void validate(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,int,boolean,boolean,android.content.Context)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void notifyServiceStateChangedP(android.telephony.ServiceState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.soundrecorder.Recorder: void onCompletion(android.media.MediaPlayer)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.NfcService$6: int formatNdef(int,byte[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.settings.BatteryInfo: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.sip.SipEditor: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_SIP"
 ], 
 "<com.android.deskclock.AlarmClock$1: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.webkit.WebViewCore$EventHub: void sendMessage(android.os.Message)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.bluetooth.IBluetooth$Stub$Proxy: boolean setTrust(java.lang.String,boolean)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.email.service.MailService: void access$100(com.android.email.service.MailService,long)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.browser.Tab: void removeSubWindow(android.view.ViewGroup)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.quicksearchbox.ui.ContactBadge: void assignContactFromPhone(java.lang.String,boolean)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.email.activity.setup.AccountSettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.WindowManagerService: void sendNewConfiguration()>": [
  "android.permission.CHANGE_CONFIGURATION"
 ], 
 "<com.android.contacts.PhoneDisambigDialog: void <init>(android.content.Context,android.database.Cursor,boolean,int)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.webkit.WebView: void postUrl(java.lang.String,byte[])>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.contacts.ImportVCardActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.inputmethod.latin.LatinIME: void onCreate()>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.settings.Display: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.FakePhoneActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.os.storage.IMountService$Stub: void shutdown(android.os.storage.IMountShutdownObserver)>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
 ], 
 "<com.android.mms.ui.SlideEditorActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.MessagingController$10: void run()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.music.AudioPreview: void stopPlayback()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity$BackgroundQueryHandler: void onDeleteComplete(int,java.lang.Object,int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.music.RepeatingImageButton$1: void run()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.IThrottleManager$Stub$Proxy: long getResetTime(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.music.PlaylistBrowserActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.PackageManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.CLEAR_APP_CACHE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.GET_PACKAGE_SIZE"
 ], 
 "<com.android.phone.BluetoothHandsfree$23: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.bluetooth.BluetoothAdapter: java.lang.String getAddress()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.music.MusicUtils: void playAll(android.content.Context,android.database.Cursor,int,boolean)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.InCallScreen: void onShowHideDialpad()>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.DTMFTwelveKeyDialer: void clearInCallScreenReference()>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManagerProxy: boolean updateMessageOnIccEf(int,int,byte[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.mms.transaction.SmsReceiverService: void handleSmsSent(android.content.Intent,int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture addAccount(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.phone.InCallScreen: void access$1600(com.android.phone.InCallScreen)>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.accounts.IAccountManager$Stub: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.server.AccessibilityManagerService: void registerPackageChangeAndBootCompletedBroadcastReceiver()>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<android.view.IApplicationToken$Stub: boolean keyDispatchingTimedOut()>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.nfc.NfcService$EnableDisableDiscoveryTask: java.lang.Object doInBackground(java.lang.Object[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.transaction.SmsReceiverService: void access$100(com.android.mms.transaction.SmsReceiverService,android.content.Intent,int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<android.preference.VolumePreference: void onBindDialogView(android.view.View)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewCallback: void keyguardDoneDrawing()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: void connectAllProfiles()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.browser.BrowserBookmarksPage$1: java.lang.Void doInBackground(java.lang.Void[])>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.providers.downloads.SizeLimitActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.nfc.INfcTag$Stub: int[] getTechList(int)>": [
  "android.permission.NFC"
 ], 
 "<android.net.wifi.WifiManager: int addNetwork(android.net.wifi.WifiConfiguration)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.settings.applications.InstalledAppDetails: void access$000(com.android.settings.applications.InstalledAppDetails,android.os.Message)>": [
  "android.permission.GET_PACKAGE_SIZE"
 ], 
 "<com.android.settings.vpn.VpnEditor: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.DataConnection: void access$1300(com.android.internal.telephony.DataConnection,java.lang.Object)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.ILocationManager$Stub$Proxy: void addProximityAlert(double,double,float,long,android.app.PendingIntent)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.calendar.GoogleCalendarUriIntentFilter: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.providers.calendar.CalendarAppWidgetService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.activity.MessageCompose: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.IConnectivityManager$Stub: void reportInetCondition(int,int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.SyncManager: void scheduleLocalSync(android.accounts.Account,java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.inputmethod.latin.ExpandableDictionary: void addWord(java.lang.String,int)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.providers.contacts.SocialProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.nfc.tech.NfcB: void reconnect()>": [
  "android.permission.NFC"
 ], 
 "<com.android.browser.BrowserActivity$3: java.lang.Object doInBackground(java.lang.Object[])>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: void getAuthToken(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle)>": [
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.cooliris.media.LoadingLayer: void generate(com.cooliris.media.RenderView,com.cooliris.media.RenderView$Lists)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.phone.Settings$MyHandler: void handleSetPreferredNetworkTypeResponse(android.os.Message)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.HeadsetObserver: void sendIntents(int,int,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: void loadMessageContent()>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.calendar.GoogleCalendarUriIntentFilter: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.providers.contacts.SocialProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.providers.downloads.DownloadInfo: void startIfReady(long)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.settings.ZoneList: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.activity.MessageView: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void revertToNitz()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.phone.ADNList: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity$25: void onTextChanged(java.lang.CharSequence,int,int,int)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.spare_parts.SpareParts: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.content.IContentService$Stub: boolean getMasterSyncAutomatically()>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.contacts.util.WeakAsyncTask: void onPostExecute(java.lang.Object,java.lang.Object)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.nfc.INfcTag$Stub$Proxy: void resetIsoDepTimeout()>": [
  "android.permission.NFC"
 ], 
 "<android.net.ThrottleManager: long getCliffThreshold(java.lang.String,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.WindowManagerService: void setHoldScreenLocked(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.systemui.usb.StorageNotification$1: void run()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.systemui.usb.UsbPermissionActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setAndBroadcastNetworkSetTimeZone(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.internal.telephony.Phone: void getEnhancedVoicePrivacy(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void handleIccFull()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.SlideshowPresenter: void presentVideo(com.android.mms.ui.SlideViewInterface,com.android.mms.model.VideoModel,com.android.mms.model.RegionModel,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.cooliris.cache.CacheService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.ApplicationSettings: void setNonMarketAppsAllowed(boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity$5: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.nfc.tech.NfcV: void close()>": [
  "android.permission.NFC"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppLauncherActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.policy.impl.LockPatternKeyguardViewProperties: com.android.internal.policy.impl.KeyguardViewBase createKeyguardView(android.content.Context,com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.policy.impl.KeyguardWindowController)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.nfc.IP2pInitiator$Stub: int getMode(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.music.AudioPreview$PreviewPlayer: void start()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.transaction.Transaction: byte[] sendPdu(long,byte[])>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.browser.widget.BookmarkWidgetService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.service.wallpaper.ImageWallpaper: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.BluetoothHeadsetService: int access$100(com.android.phone.BluetoothHeadsetService,android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.test.ActivityUnitTestCase$MockParent: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.ConnectivityManager: boolean isTetheringSupported()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyServiceState(android.telephony.ServiceState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.os.IPowerManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.wifi.IWifiManager: boolean saveConfiguration()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.UiModeManagerService$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.CHANGE_CONFIGURATION"
 ], 
 "<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkInfo getNetworkInfo(int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.contacts.TwelveKeyDialer: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.google.android.mms.util.PduCache: boolean put(java.lang.Object,java.lang.Object)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.settings.BandMode: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.util.Recycler$MmsRecycler: void deleteOldMessagesByThreadId(android.content.Context,long)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.browser.BrowserSettings$RlzUpdateTask: java.lang.Void doInBackground(java.lang.Void[])>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<android.webkit.WebViewCore$3: void onReceiveValue(java.lang.Object)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.inputmethod.latin.LatinIMESettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.commands.svc.WifiCommand: void run(java.lang.String[])>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.test.TestBrowserActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.test.RenamingDelegatingContext: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.InCallScreen$7: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.providers.contacts.ContactsProvider2: int deleteData(java.lang.String,java.lang.String[],boolean)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.mms.transaction.SmsReceiverService: void sendFirstQueuedMessage()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.settings.RadioInfo$17: void onClick(android.view.View)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.SlideshowActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.calendar.MonthActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: int finishAnimationLw()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.cooliris.media.Gallery: void updatePicasaAccountStatus()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.nfc.LlcpServiceSocket: void close()>": [
  "android.permission.NFC"
 ], 
 "<android.content.ContextWrapper: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.ServerThread$1: void run()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.calendar.MonthActivity$1: void run()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.internal.app.NetInitiatedActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.cooliris.media.GridInputProcessor: void touchEnded(int,int,float)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.location.LocationProviderInterface: void enable()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void setPreferredNetworkType(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.IBluetoothHeadset$Stub: boolean startVoiceRecognition()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.WebView: boolean setFrame(int,int,int,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.os.storage.IMountService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS", 
  "android.permission.MOUNT_FORMAT_FILESYSTEMS"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.PhoneApp: void dismissCallScreen()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.OtaUtils: void otaShowInProgressScreen()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.contacts.util.AccountSelectionUtil: android.app.Dialog getSelectAccountDialog(android.content.Context,int,android.content.DialogInterface$OnClickListener)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.NetworkManagementService: void stopTethering()>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.server.sip.SipService: void access$1700(com.android.server.sip.SipService,java.lang.String,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.IAccountManager$Stub: void addAcount(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<android.bluetooth.BluetoothHeadset: boolean disconnectHeadset(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.browser.BrowserActivity: void onPageFinished(android.webkit.WebView,java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$BluetoothStateTracker: void setImageViewResources(android.content.Context,android.widget.RemoteViews)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.webkit.WebView: void sendMotionUp(int,int,int,int,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.music.RenamePlaylist: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.am.ActivityStack: void completeResumeLocked(com.android.server.am.ActivityRecord)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: boolean interceptKeyBeforeDispatching(android.view.WindowManagerPolicy$WindowState,int,int,int,int,int,int,int)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.phone.AccelerometerListener$OrientationListener: void orientationChanged(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.AliasActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.AccountSyncSettingsInAddAccount: void onAuthDescriptionsUpdated()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.settings.DebugIntentSender: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void init(android.content.Context,android.view.IWindowManager,android.os.LocalPowerManager)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.voicedialer.BluetoothVoiceDialerActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.media.MediaPlayer: void release()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.BluetoothHandsfree$26: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.GsmUmtsCallForwardOptions: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.deskclock.DeskClock: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.IccProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.os.IVibratorService$Stub$Proxy: void vibratePattern(long[],int,android.os.IBinder)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.webkit.WebViewCore$EventHub: void access$6400(android.webkit.WebViewCore$EventHub,android.os.Message)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.browser.DownloadTouchIcon: java.lang.Object doInBackground(java.lang.Object[])>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.phone.InCallScreen: void access$900(com.android.phone.InCallScreen)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.net.IThrottleManager$Stub$Proxy: long getCliffThreshold(java.lang.String,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.browser.BookmarkSearch: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.soundrecorder.SoundRecorder: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.CellBroadcastSms: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.deskclock.AlarmAlert: void snooze()>": [
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.phone.PhoneApp: void requestWakeState(com.android.phone.PhoneApp$WakeState)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ActivityManagerNative: java.util.List getRecentTasks(int,int)>": [
  "android.permission.GET_TASKS"
 ], 
 "<com.android.development.PointerLocation: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void access$000(com.android.internal.telephony.gsm.GsmServiceStateTracker)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.server.PowerManagerService$10: void run()>": [
  "android.permission.VIBRATE", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.nfc.INfcAdapter$Stub: void disableForegroundNdefPush(android.content.ComponentName)>": [
  "android.permission.NFC"
 ], 
 "<com.android.certinstaller.CertFile: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.location.ILocationManager: android.os.Bundle getProviderInfo(java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.deskclock.AlarmKlaxon: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.BluetoothHandsfree$11: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.PhoneSubInfo: java.lang.String getDeviceSvn()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapVcardManager: java.util.ArrayList getPhonebookNameList(int)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.AccountPreferenceBase: void onResume()>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.music.CreatePlaylist: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.BluetoothHandsfree$23: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.nfc.NfcAdapter: android.nfc.INfcAdapterExtras getNfcAdapterExtrasInterface()>": [
  "android.permission.NFC"
 ], 
 "<android.app.LauncherActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.DataConnectionTracker: void restartRadio()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.http.EventHandler: void headers(android.net.http.Headers)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.am.ActivityManagerService: void processNextBroadcast(boolean)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.calendar.WeekActivity: void goTo(android.text.format.Time,boolean)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.widget.VideoView: void setVideoURI(android.net.Uri,java.util.Map)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.LocationManagerService: void addProximityAlert(double,double,float,long,android.app.PendingIntent)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.settings.bluetooth.BluetoothSettings: void onBluetoothStateChanged(int)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.BluetoothHandsfree$BluetoothPhoneState$2: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.browser.TabControl: void pauseCurrentTab()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.content.Context: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.IBluetooth: boolean fetchRemoteUuids(java.lang.String,android.os.ParcelUuid,android.bluetooth.IBluetoothCallback)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.gsm.stk.CommandParamsFactory: boolean processSetUpIdleModeText(com.android.internal.telephony.gsm.stk.CommandDetails,java.util.List)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void acknowledgeLastIncomingGsmSms(boolean,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.storage.IMountService: void shutdown(android.os.storage.IMountShutdownObserver)>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
 ], 
 "<com.android.calculator2.Calculator: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.accounts.AccountManager$1: android.accounts.AccountManager$Future2Task start()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.phone.EmergencyCallbackModeExitDialog$4: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManagerProxy: void sendMultipartText(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS"
 ], 
 "<android.app.ContextImpl$ApplicationPackageManager: void freeStorage(long,android.content.IntentSender)>": [
  "android.permission.CLEAR_APP_CACHE"
 ], 
 "<com.android.phone.PhoneUtils: boolean answerAndEndHolding(com.android.internal.telephony.CallManager,com.android.internal.telephony.Call)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.mms.util.RateController: boolean isLimitSurpassed()>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.voicedialer.BluetoothVoiceDialerActivity$ChoiceRecognizerClient: void onRecognitionSuccess(android.content.Intent[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$WifiStateTracker: void onActualStateChange(android.content.Context,android.content.Intent)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.mms.ui.SlideEditorActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.ui.ShowOrCreateActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.bluetooth.DockService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.IContentService: void removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.development.DevelopmentSettings: void writeFinishOptions()>": [
  "android.permission.SET_ALWAYS_FINISH", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.os.INetworkManagementService$Stub: long getInterfaceTxCounter(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.location.GpsLocationProvider: void enable()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.InputManager$Callbacks: boolean interceptKeyBeforeDispatching(android.view.InputChannel,int,int,int,int,int,int,int)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.phone.SimContacts: void actuallyImportOneSimContact(android.database.Cursor,android.content.ContentResolver,android.accounts.Account)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.music.VideoBrowserActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.launcher2.Launcher: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.service.IEmailServiceCallback$Stub$Proxy: void loadAttachmentStatus(long,long,int,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.server.BluetoothService: void removeServiceRecord(int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.app.NativeActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: boolean update(com.android.internal.telephony.DriverCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.SystemBackupAgent: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.exchange.SyncManager$2: void startSync(long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.sip.ISipService$Stub: void open3(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_SIP"
 ], 
 "<com.android.calendar.AgendaListView: void goTo(android.text.format.Time,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.internal.telephony.gsm.GsmSMSDispatcher: void sendMultipartSms(com.android.internal.telephony.SMSDispatcher$SmsTracker)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.BrowserFrame: void didFirstLayout()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.nfc.INfcAdapter$Stub$Proxy: android.nfc.NdefMessage localGet()>": [
  "android.permission.NFC"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void onRestart()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_SYNC_STATS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.content.SyncManager: void cancelActiveSync(android.accounts.Account,java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.providers.applications.ApplicationsProvider$MyPackageMonitor: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.accounts.IAccountManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.media.MediaPlayer: boolean resume()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.quicksearchbox.QsbApplicationWrapper: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.wifi.IWifiManager: int getWifiApEnabledState()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.mms.transaction.MessagingNotification: void notifySendFailed(android.content.Context)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_SMS"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.calendar.AgendaWindowAdapter: void doQuery(com.android.calendar.AgendaWindowAdapter$QuerySpec)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<android.nfc.ILlcpSocket: int send(int,byte[])>": [
  "android.permission.NFC"
 ], 
 "<android.telephony.TelephonyManager: java.util.List getNeighboringCellInfo()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.ConnectivityService: void access$400(com.android.server.ConnectivityService,android.net.NetworkInfo)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.EditFdnContactScreen: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.development.AppPicker: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.providers.downloads.DownloadService: void access$1000(com.android.providers.downloads.DownloadService,long)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<android.os.INetworkManagementService$Stub$Proxy: void tetherInterface(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.phone.EmergencyDialer: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.music.MediaPlaybackService$ServiceStub: void enqueue(long[],int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.IBluetooth: boolean setPairingConfirmation(java.lang.String,boolean)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.BluetoothHandsfree$12: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.webkit.HTML5Audio: void pause()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.Details: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void setDataRoamingEnabled(boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.provider.Telephony$Sms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],java.lang.String,java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.phone.DeleteFdnContactScreen: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.music.MediaPlaybackService$MultiPlayer: void pause()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.content.PackageMonitor: boolean onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onRestartRadio()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.ILocationManager$Stub$Proxy: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.internal.telephony.PhoneBase: void setSmscAddress(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.providers.contacts.LegacyApiSupport: int updateGroups(long,android.content.ContentValues)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.music.CreatePlaylist: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.os.INetworkManagementService$Stub$Proxy: void stopTethering()>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.cooliris.media.CropImage: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.nfc.NfcService$6: void setIsoDepTimeout(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void invokeOemRilRequestRaw(byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.ChooseLockPatternTutorial: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.transaction.RetrieveTransaction: byte[] getPdu(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.phone.BluetoothHandsfree$12: android.bluetooth.AtCommandResult handleTestCommand()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManagerProxy: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS"
 ], 
 "<com.android.internal.telephony.PhoneBase: void queryTTYMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setTimeFromNITZString(java.lang.String,long)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.providers.calendar.CalendarProvider2: boolean onCreate()>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.inputmethod.latin.UserDictionary$2: void run()>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<android.service.wallpaper.WallpaperService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.calendar.CalendarActivity: void goToToday()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.contacts.DialtactsActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: void handleShow()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppTransferActivity: android.view.View createView()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.accessibilityservice.AccessibilityService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.transaction.TransactionService: void acquireWakeLock()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.BrowserFrame: boolean handleUrl(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.svox.pico.EngineSettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.ArtistAlbumBrowserActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.server.BluetoothService: java.lang.String getAddress()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.browser.AddBookmarkPage: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.activity.setup.AccountSetupIncoming: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.DataConnectionTracker: void onEnableApn(int,int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.MediaPlaybackService: void setShuffleMode(int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setFacilityLock(java.lang.String,boolean,java.lang.String,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.browser.BrowserActivity: java.lang.String smartUrlFilter(java.lang.String)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.email.Controller: void loadMoreMessages(long,com.android.email.Controller$Result)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.location.ILocationManager$Stub: java.util.List getProviders(android.location.Criteria,boolean)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.bluetooth.IBluetooth$Stub: boolean setScanMode(int,int)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.VoiceInputOutputSettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.browser.BrowserActivity$6: java.lang.Void doInBackground(java.lang.Void[])>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.server.PackageManagerService: android.content.pm.PackageParser$Package access$2000(com.android.server.PackageManagerService,java.io.File,int,int,long)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.cooliris.media.PicasaDataSource: java.util.HashMap getAccountStatus(android.content.Context)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.IccFileHandler: void loadEFTransparent(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.ILlcpConnectionlessSocket$Stub: int getSap(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.providers.calendar.CalendarDebug$FetchInfoTask: java.lang.Object doInBackground(java.lang.Object[])>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.bluetooth.IBluetooth$Stub: boolean setName(java.lang.String)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.exchange.utility.CalendarUtilities: long createCalendar(com.android.exchange.EasSyncService,com.android.email.provider.EmailContent$Account,com.android.email.provider.EmailContent$Mailbox)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.calendar.DayActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingScoOn()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.speech.tts.ITts: int playSilence(java.lang.String,long,int,java.lang.String[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.AccountPreferenceBase: void onAuthDescriptionsUpdated()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void rejectCall()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.ThrottleManager: long getPeriodStartTime(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.os.INetworkManagementService$Stub$Proxy: void setInterfaceThrottle(java.lang.String,int,int)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<android.net.ConnectivityManager: java.lang.String[] getTetherableIfaces()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.content.SyncManager: void sendSyncFinishedOrCanceledMessage(android.content.SyncManager$ActiveSyncContext,android.content.SyncResult)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.ThrottleService$DataRecorder: void checkForSubscriberId()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppObexServerSession: void onClose()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.providers.calendar.CalendarProvider2: void access$600(com.android.providers.calendar.CalendarProvider2,long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.CredentialInstaller: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.os.IPowerManager$Stub: void setStayOnSetting(int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.provider.Calendar$Instances: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],long,long)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.server.BluetoothEventLoop: void onRequestOobData(java.lang.String,int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.nfc.NfcService$8: byte[] transceive(int,byte[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.phone.OtaUtils: void otaShowProgramFailureDialog()>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.am.ActivityManagerService: void access$300(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.launcher2.Launcher: void onCreate(android.os.Bundle)>": [
  "android.permission.SET_WALLPAPER_HINTS"
 ], 
 "<com.android.mms.transaction.SmsSingleRecipientSender: void <init>(android.content.Context,java.lang.String,java.lang.String,long,boolean,android.net.Uri)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.cooliris.media.CropImage: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.inputmethod.pinyin.PinyinDecoderService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.deskclock.SettingsActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.google.common.io.Files: void copy(java.io.File,java.nio.charset.Charset,java.lang.Appendable)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.browser.AddBookmarkPage$SaveBookmarkRunnable: void run()>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.settings.AppWidgetPickActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.wifi.WifiStateTracker: void handleDisconnectedState(android.net.NetworkInfo$DetailedState,boolean)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager: void enforceReceiveAndSend(java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.exchange.EasSyncService: void validateAccount(java.lang.String,java.lang.String,java.lang.String,int,boolean,boolean,android.content.Context)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.systemui.usb.UsbStorageActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker$ApnChangeObserver: void onChange(boolean)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_APN_SETTINGS"
 ], 
 "<android.net.http.EventHandler: void error(int,java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.Phone: void setPreferredNetworkType(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.exchange.EasOutboxService: void doProgressCallback(long,long,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.calendar.SelectCalendarsActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.RecentCallsListActivity$1: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.music.MusicUtils: void deleteTracks(android.content.Context,long[])>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.Phone: void setCdmaRoamingPreference(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.AgendaWindowAdapter: boolean access$600(com.android.calendar.AgendaWindowAdapter,com.android.calendar.AgendaWindowAdapter$QuerySpec)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<android.net.IConnectivityManager$Stub$Proxy: int stopUsingNetworkFeature(int,java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.contacts.ContactsListActivity: void setEmptyText()>": [
  "android.permission.READ_SYNC_STATS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.phone.PhoneApp$MediaButtonBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.OutgoingCallBroadcaster: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.bluetooth.BluetoothSettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.DevelopmentSettings: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.http.RequestHandle: void createAndQueueNewRequest()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.bluetooth.LocalBluetoothProfileManager: int getConnectionStatus(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.mms.data.WorkingMessage: void clearConversation(com.android.mms.data.Conversation)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.settings.AccountSyncSettingsInAddAccount: boolean onPrepareOptionsMenu(android.view.Menu)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.settings.DateTimeSettings: void setDateFormat(java.lang.String)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.RI: void queryCallForwardStatus(int,int,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.ConfirmRateLimitActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.server.BluetoothService: android.os.ParcelUuid[] getRemoteUuids(java.lang.String)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.ISms$Stub$Proxy: boolean disableCellBroadcast(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.cooliris.media.MenuBar: boolean update(com.cooliris.media.RenderView,float)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.PackageManagerService: android.content.pm.PackageParser$Package scanPackageLI(android.content.pm.PackageParser$Package,int,int,long)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<android.location.ILocationManager$Stub: void addProximityAlert(double,double,float,long,android.app.PendingIntent)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.mms.transaction.SmsReceiverService: void access$000(com.android.mms.transaction.SmsReceiverService,android.content.Intent,int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.settings.TestingSettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.IMediaPlaybackService: void next()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager$2: void run()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.VIBRATE", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.service.urlrenderer.UrlRendererService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.SoundSettings: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.music.MediaPlaybackService: int onStartCommand(android.content.Intent,int,int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.deskclock.AlarmAlert: boolean dispatchKeyEvent(android.view.KeyEvent)>": [
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.bluetooth.AtParser: android.bluetooth.AtCommandResult process(java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.am.ActivityManagerService: boolean bindBackupAgent(android.content.pm.ApplicationInfo,int)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void restoreSavedNetworkSelection(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.IConnectivityManager: int tether(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.nfc.NfcService$6: int ndefWrite(int,android.nfc.NdefMessage)>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.vpn.L2tpIpsecPskService: void onDisconnect()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.app.ExternalMediaFormatActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.INTERNET", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.DTMFTwelveKeyDialer: void openDialer(boolean)>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.accounts.GrantCredentialsPermissionActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.wifi.IWifiManager$Stub: java.util.List getConfiguredNetworks()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.browser.Tab$3: void onReachedMaxAppCacheSize(long,long,android.webkit.WebStorage$QuotaUpdater)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.WindowManagerService$PolicyThread: void run()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.contacts.DialtactsActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.EventLoader$LoadEventsRequest: void processRequest(com.android.calendar.EventLoader)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.phone.BluetoothHandsfree: void audioOff()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.contacts.ui.EditContactActivity$AddContactTask: void onPostExecute(java.lang.Object,java.lang.Object)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.nfc.INfcTag$Stub: android.nfc.TransceiveResult transceive(int,byte[],boolean)>": [
  "android.permission.NFC"
 ], 
 "<com.android.contacts.ContactsListActivity: android.database.Cursor doFilter(java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.UiModeManagerService: void adjustStatusBarCarModeLocked()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.gsm.GsmConnection: void proceedAfterWildChar(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.location.GpsNetInitiatedHandler: void setNiNotification(com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.phone.FdnList: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.sip.SipManager: android.net.sip.SipSession getSessionFor(android.content.Intent)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.providers.media.MediaScannerService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.FdnSetting: void toggleFDNEnable(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.exchange.adapter.ContactsSyncAdapter: boolean parse(java.io.InputStream)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapService$2: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.browser.AddBookmarkPage: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.server.BluetoothService$EnableThread: void run()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.InCallScreen: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.location.ILocationManager$Stub: void requestLocationUpdates(java.lang.String,android.location.Criteria,long,float,boolean,android.location.ILocationListener)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.settings.PrivacySettings: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.accounts.AccountManagerService: void checkReadAccountsPermission()>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.statusbar.IStatusBarService$Stub: void expand()>": [
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.music.QueryBrowserActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipCall: void hangup()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void writeSmsToSim(int,java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getCurrentCalls(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.packageinstaller.InstallAppProgress: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.BluetoothProfileState: void start()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.net.sip.SipManager: android.net.sip.SipAudioCall makeAudioCall(java.lang.String,java.lang.String,android.net.sip.SipAudioCall$Listener,int)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.internal.policy.impl.KeyguardScreenCallback: void pokeWakelock()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.server.BluetoothService: java.lang.String getObjectPathFromAddress(java.lang.String)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.mms.transaction.RetrieveTransaction: void sendAcknowledgeInd(com.google.android.mms.pdu.RetrieveConf)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.HeadsetObserver: void update(java.lang.String,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.quicksearchbox.google.GoogleSettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.wifi.WifiInfo: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.wifi.WifiManager: boolean pingSupplicant()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.webkit.WebView$InvokeListBox$2: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.net.sip.ISipService: void setRegistrationListener(java.lang.String,android.net.sip.ISipSessionListener)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.settings.bluetooth.DockService: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.ApnEditor: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.WeekSelector: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.ILlcpSocket$Stub: int getLocalSocketMiu(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void acceptCall()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void setCallWaiting(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.CallNotifier$InCallTonePlayer: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.music.MediaPlaybackService: void access$1600(com.android.music.MediaPlaybackService,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.providers.calendar.CalendarProvider2: boolean fixAllDayTime(android.net.Uri,android.content.ContentValues)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.phone.EmergencyCallbackModeExitDialog: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.IBluetooth$Stub$Proxy: int getDiscoverableTimeout()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.contacts.ViewContactActivity: boolean onContextItemSelected(android.view.MenuItem)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.music.TrackBrowserActivity$NowPlayingCursor: boolean requery()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.deskclock.AlarmKlaxon: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.vpn.L2tpIpsecPskService: boolean onConnect(java.lang.String,java.lang.String)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.accounts.AccountManagerService: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<android.server.BluetoothService: java.lang.String getRemoteName(java.lang.String)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.mms.ui.MessageUtils: void handleReadReport(android.content.Context,long,int,java.lang.Runnable)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.settings.wifi.WifiStatusTest: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.server.ThrottleService: void systemReady()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.ServiceStateTracker: void enableSingleLocationUpdate()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.server.BluetoothService$BondState: void setBondState(java.lang.String,int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.location.ILocationManager: void clearTestProviderLocation(java.lang.String)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void changeBarringPassword(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.provider.Telephony$Threads: long getOrCreateThreadId(android.content.Context,java.util.Set)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.nfc.ndefpush.NdefPushClient$SendAsync: java.lang.Object doInBackground(java.lang.Object[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.phone.NotificationMgr: void init(android.content.Context)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.net.wifi.IWifiManager: int getWifiEnabledState()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.settings.applications.ApplicationsState$BackgroundHandler$1: void onGetStatsCompleted(android.content.pm.PackageStats,boolean)>": [
  "android.permission.GET_PACKAGE_SIZE"
 ], 
 "<com.android.mms.transaction.RetrieveTransaction: boolean isDuplicateMessage(android.content.Context,com.google.android.mms.pdu.RetrieveConf)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.development.PackageSummary: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.CalendarPreferenceActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.music.MusicPicker: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.systemui.statusbar.StatusBarService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: void loadDraft()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.launcher2.UserFolder: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.settings.bluetooth.BluetoothEnabler: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.svox.pico.Pico: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.webkit.WebView: void notifyFindDialogDismissed()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.UserDictionarySettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.bluetooth.BluetoothDiscoverableEnabler: void access$100(com.android.settings.bluetooth.BluetoothDiscoverableEnabler)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.gsm.SIMFileHandler: void loadEFTransparent(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: boolean isConnected()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.test.mock.MockApplication: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapService: void stopObexServerSession()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.vpn.VpnServiceBinder: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.applications.InstalledAppDetails: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.IContentService$Stub: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.mms.ui.ConversationList$2: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.settings.RadioInfo: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.util.AccountSelectionUtil: android.app.Dialog getSelectAccountDialog(android.content.Context,int,android.content.DialogInterface$OnClickListener,android.content.DialogInterface$OnCancelListener)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.IccProvider: boolean addIccRecordToEf(int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: void hangupConnectionByIndex(com.android.internal.telephony.gsm.GsmCall,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.ChangeIccPinScreen: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.BluetoothHandsfree$30: android.bluetooth.AtCommandResult handleTestCommand()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.app.AlertActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.nfc.NfcService$6: void resetIsoDepTimeout()>": [
  "android.permission.NFC"
 ], 
 "<com.android.phone.BluetoothHandsfree$14: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.bluetooth.BluetoothDevicePreference: void <init>(android.content.Context,com.android.settings.bluetooth.CachedBluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.bluetooth.IBluetoothA2dp$Stub$Proxy: android.bluetooth.BluetoothDevice[] getNonDisconnectedSinks()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.app.backup.BackupAgent: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.calendar.AlertReceiver: void finishStartingService(android.app.Service,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.data.WorkingMessage: void discard()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<android.speech.RecognitionService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.DockSettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.EmergencyCallbackModeService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.webkit.WebView: void <init>(android.content.Context)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.inputmethod.latin.LatinKeyboardBaseView$2: void onKey(int,int[],int,int)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.systemui.usb.UsbAccessoryUriActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.CallNotifier$1: void onCallForwardingIndicatorChanged(boolean)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.vpn.L2tpIpsecService: void onError(int)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.test.ActivityUnitTestCase$MockParent: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.wifi.WifiEnabler$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.development.BadBehaviorActivity$BadService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.systemui.usb.UsbResolverActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.INTERNET", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.browser.BrowserActivity$16: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.cooliris.media.RenderView$TextureLoadThread: void run()>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.mms.data.WorkingMessage$4: void run()>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.phone.CallNotifier: void access$100(com.android.phone.CallNotifier,boolean)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.google.common.io.Files: void copy(java.io.File,java.nio.charset.Charset,com.google.common.io.OutputSupplier)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.settings.bluetooth.LocalBluetoothProfileManager$A2dpProfileManager: boolean disconnect(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: int interceptKeyBeforeQueueing(long,int,int,int,int,int,boolean)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.VIBRATE", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CALL_PHONE", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.content.ISyncAdapter$Stub: void startSync(android.content.ISyncContext,java.lang.String,android.accounts.Account,android.os.Bundle)>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.exchange.EasOutboxService: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.settings.wifi.WifiSettings: void updateAccessPoints()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.content.ContentService: void setIsSyncable(android.accounts.Account,java.lang.String,int)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void exitEmergencyCallbackMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.RuimRecords: void handleRuimRefresh(int[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.SIMFileHandler: void getEFLinearRecordSize(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.DateTimeSettings: void set24Hour(boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.tts.TtsService$1: int speak(java.lang.String,java.lang.String,int,java.lang.String[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.transaction.PrivilegedSmsReceiver: void finishStartingService(android.app.Service,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.model.AudioModel: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,com.android.mms.drm.DrmWrapper)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture getAuthTokenByFeatures(java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle,android.os.Bundle,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactItemListAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.contacts.RecentCallsListActivity: void access$000(com.android.contacts.RecentCallsListActivity)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.ConnectivityService: void access$1100(com.android.server.ConnectivityService,int,int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.WindowManagerService$InputMonitor: long notifyANR(java.lang.Object,android.view.InputChannel)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.commands.pm.Pm: void main(java.lang.String[])>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getVoiceMailAlphaTag()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.google.common.io.ByteStreams: long copy(com.google.common.io.InputSupplier,com.google.common.io.OutputSupplier)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.server.location.GpsLocationProvider: void reportAGpsStatus(int,int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.development.SyncAdapterDriver: void startSyncSelected(android.view.View)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.webkit.HTML5Audio: void onPrepared(android.media.MediaPlayer)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.EnableFdnScreen: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.mail.store.LocalStore: android.os.Bundle autoDiscover(android.content.Context,java.lang.String,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.ContentResolver: void removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.server.BluetoothService: boolean setPasskey(java.lang.String,int)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.exchange.SyncManager: void done(com.android.exchange.AbstractSyncService)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.browser.WebDialog: void dismiss()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.TextToSpeechSettings: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.activity.setup.AccountSetupOptions$1$1: void run()>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.email.activity.setup.AccountSetupOptions: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onGprsDetached()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.Controller: void sendMeetingResponse(long,int,com.android.email.Controller$Result)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.LocationManagerService$SettingsObserver: void update(java.util.Observable,java.lang.Object)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void sendDtmf(char,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.AlertActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.AgendaActivity$3: void onChange(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.systemui.usb.UsbStorageActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.fuelgauge.PowerUsageDetail: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.bluetooth.LocalBluetoothManager: int getBluetoothState()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.WifiWatchdogService: void access$1600(com.android.server.WifiWatchdogService,java.lang.String,java.lang.String)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.settings.bluetooth.BluetoothSettings: boolean onContextItemSelected(android.view.MenuItem)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.ChooseLockPatternTutorial: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.test.RenamingDelegatingContext: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.am.ActivityManagerService: void access$100(com.android.server.am.ActivityManagerService,boolean)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.settings.quicklaunch.BookmarkPicker: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.hardware.Camera: void native_setup(java.lang.Object)>": [
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.app.ShutdownThread: void beginShutdownSequence(android.content.Context)>": [
  "android.permission.VIBRATE", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.bluetooth.LocalBluetoothProfileManager$HeadsetProfileManager: boolean disconnect(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.RI: void sendCdmaSms(byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.transaction.SmsReceiverService: void handleBootCompleted()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.google.common.io.Files: java.lang.String readFirstLine(java.io.File,java.nio.charset.Charset)>": [
  "android.permission.INTERNET"
 ], 
 "<android.app.ActivityManagerNative: void moveTaskToBack(int)>": [
  "android.permission.REORDER_TASKS"
 ], 
 "<com.android.browser.Browser: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.nfc.ILlcpSocket: int getRemoteSocketMiu(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: void exit()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.calendar.DayView: void updateEventDetails()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.bluetooth.IBluetooth: byte[] readOutOfBandData()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.phone.CellBroadcastSms: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.test.mock.MockContentResolver: void setMasterSyncAutomatically(boolean)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.content.pm.IPackageManager$Stub$Proxy: void freeStorage(long,android.content.IntentSender)>": [
  "android.permission.CLEAR_APP_CACHE"
 ], 
 "<com.android.nfc.TechListChooserActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager: void sendMultipartText(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS"
 ], 
 "<android.app.ActivityManager: void killBackgroundProcesses(java.lang.String)>": [
  "android.permission.RESTART_PACKAGES", 
  "android.permission.KILL_BACKGROUND_PROCESSES"
 ], 
 "<android.os.INetworkManagementService$Stub: void setInterfaceThrottle(java.lang.String,int,int)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.server.ThrottleService$MyHandler: void checkThrottleAndPostNotification(long)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.settings.applications.InstalledAppDetails: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void runPingTest()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_APN_SETTINGS"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void setPreferredNetworkType(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.SimContacts: boolean onContextItemSelected(android.view.MenuItem)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.bluetooth.RequestPermissionActivity: void proceedAndFinish()>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.GsmUmtsAdditionalCallOptions: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.speech.SpeechRecognizer: void handleCancelMessage()>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.cooliris.media.CropImage$1: void onMediaScannerConnected()>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.contacts.ContactsListActivity: android.net.Uri getJoinSuggestionsUri(java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.email.activity.Welcome: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.deskclock.HandleSetAlarm: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.browser.CombinedBookmarkHistoryActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.bluetooth.BluetoothPairingDialog: android.view.View createView()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.development.AppHwPref: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.speech.RecognitionService: boolean checkPermissions(android.speech.IRecognitionListener)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.phone.SimContacts: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.browser.Tab$2: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<android.app.backup.BackupManager: int requestRestore(android.app.backup.RestoreObserver)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.CHANGE_CONFIGURATION", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.nfc.ILlcpSocket$Stub$Proxy: int getLocalSocketRw(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.DataConnectionTracker: void onVoiceCallStarted()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.BluetoothHandsfree$23: android.bluetooth.AtCommandResult handleTestCommand()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.IMediaPlaybackService$Stub$Proxy: void setShuffleMode(int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.transaction.RetryScheduler: void setRetryAlarm(android.content.Context)>": [
  "android.permission.READ_SMS"
 ], 
 "<android.app.WallpaperManager: void setBitmap(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: void invalidateAuthToken(java.lang.String,java.lang.String)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.development.DataList: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.ChooseLockPattern: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.ChooseLockPatternTutorial: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void <init>(com.android.internal.telephony.cdma.CDMAPhone)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.settings.LocalePicker: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.cooliris.media.MediaFeed$2: void run()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.WindowManagerService$WindowState: boolean hideLw(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.calendar.AlertActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.ConnectivityManager: void setNetworkPreference(int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.soundrecorder.SoundRecorder: boolean onKeyDown(int,android.view.KeyEvent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void notifyServiceStateChangedP(android.telephony.ServiceState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: void addCallAndContactMenuItems(android.view.ContextMenu,com.android.mms.ui.ComposeMessageActivity$MsgListMenuClickListener,com.android.mms.ui.MessageItem)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.bluetooth.IBluetooth: boolean removeBond(java.lang.String)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.cooliris.media.MonitoredActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.TrackBrowserActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapObexServer: int pullVcardEntry(byte[],com.android.bluetooth.pbap.BluetoothPbapObexServer$AppParamValue,javax.obex.Operation,java.lang.String,java.lang.String)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.server.BluetoothService: boolean cancelBondProcess(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.app.backup.BackupAgentHelper: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.view.IWindowSession$Stub$Proxy: int addWithoutInputChannel(android.view.IWindow,android.view.WindowManager$LayoutParams,int,android.graphics.Rect)>": [
  "android.permission.SYSTEM_ALERT_WINDOW"
 ], 
 "<android.bluetooth.IBluetoothPbap: boolean connect(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.bluetooth.ConnectSpecificProfilesActivity: android.preference.CheckBoxPreference createProfilePreference(com.android.settings.bluetooth.LocalBluetoothProfileManager$Profile)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.providers.downloads.DownloadService: void trimDatabase()>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<android.media.IMediaScannerListener: void scanCompleted(java.lang.String,android.net.Uri)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getNetworkSelectionMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.storage.IMountService: void unmountVolume(java.lang.String,boolean)>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
 ], 
 "<com.android.email.activity.UpgradeAccounts: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.ui.SearchActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.settings.DateTimeSettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean stopVoiceRecognition()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.app.ResolverActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.calendar.CalendarView: boolean initNextView(int)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.music.IMediaPlaybackService: void open(long[],int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.vpn.L2tpIpsecService: boolean checkConnectivity()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.connectivity.Tethering: void access$200(com.android.server.connectivity.Tethering)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.certinstaller.CertInstallerMain: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.PhoneApp: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.location.LocationManager: void clearTestProviderEnabled(java.lang.String)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.development.UnderdevelopedSettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.wifi.WifiManager$WifiLock: void release()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.IBluetoothA2dp$Stub: boolean disconnectSink(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.UserDictionarySettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.telephony.PhoneNumberUtils: boolean isVoiceMailNumber(java.lang.String)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.settings.bluetooth.BluetoothPermissionActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.OtaUtils: void otaShowSuccessFailure()>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.connectivity.Tethering$TetherInterfaceSM: void setLastError(int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.contacts.ContactOptionsActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.pm.IPackageManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.CLEAR_APP_CACHE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.GET_PACKAGE_SIZE"
 ], 
 "<com.android.server.am.ActivityManagerService$6: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: void keyguardDoneDrawing()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.contacts.ui.QuickContactActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.ui.EditContactActivity$DeleteClickListener: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.os.INetworkManagementService: boolean isUsbRNDISStarted()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.PackageManagerService: boolean setInstallLocation(int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.settings.DateTimeSettingsSetupWizard: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.server.BluetoothService: boolean setPropertyBoolean(java.lang.String,boolean)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.svox.pico.DownloadVoiceData: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.nfc.tech.NfcB: byte[] transceive(byte[],boolean)>": [
  "android.permission.NFC"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: int getIsSyncable(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.contacts.ui.ContactsPreferencesActivity$QueryGroupsTask: java.lang.Object doInBackground(java.lang.Object[])>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.development.Connectivity$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.AudioAttachmentView: void reset()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: void hangup(com.android.internal.telephony.gsm.GsmCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.AccessibilityManagerService: void registerSettingsContentObservers()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: void enter()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.app.ExternalMediaFormatActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: void verifyUnlockLocked()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.phone.SipCallOptionHandler: boolean access$100(com.android.phone.SipCallOptionHandler)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.contacts.ContactsListActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.am.ActivityRecord: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.music.IMediaPlaybackService$Stub: int removeTrack(long)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.Connectivity$5: void onClick(android.view.View)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.RI: void getIMSI(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.server.BluetoothService: boolean setPairingConfirmation(java.lang.String,boolean)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.contacts.ViewContactActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.ui.SlideViewInterface: void stopVideo()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.providers.downloads.DownloadThread: int getFinalStatusForHttpError(com.android.providers.downloads.DownloadThread$State)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.ISms$Stub$Proxy: void sendMultipartText(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS"
 ], 
 "<android.webkit.WebView: void goBackOrForward(int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.vpn.PptpService: boolean onConnect(java.lang.String,java.lang.String)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.nfc.IP2pTarget$Stub: boolean disconnect(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.certinstaller.CertFile: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.bluetooth.RequestPermissionActivity: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.nfc.INfcTag$Stub: int reconnect(int)>": [
  "android.permission.NFC"
 ], 
 "<com.cooliris.media.RenderView: void draw2D(com.cooliris.media.Texture,float,float,float,float)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.mms.MmsApp: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.MutableContextWrapper: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IccFileHandler: void loadEFLinearFixed(int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.InCallScreen: void updateSlidingTabHint(int,int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.email.Email: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.providers.calendar.CalendarProvider2: void runScheduleNextAlarm(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.calendar.DayActivity: android.view.View switchViews(boolean,float,float)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.contacts.PhoneDisambigDialog: void show()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.contacts.ui.ContactsPreferencesActivity$GroupDelta: com.android.contacts.ui.ContactsPreferencesActivity$GroupDelta fromSettings(android.content.ContentResolver,java.lang.String,java.lang.String,boolean)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.contacts.ExportVCardActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.AccountManager$5: void doWork()>": [
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.phone.DTMFTwelveKeyDialer: boolean onKeyDown(int,android.view.KeyEvent)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.mms.ui.DeliveryReportActivity: java.util.List getMmsReportRequests()>": [
  "android.permission.READ_SMS"
 ], 
 "<android.net.Downloads$ById: android.net.Uri getDownloadUri(long)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.deskclock.SetAlarm$3: void onClick(android.view.View)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.settings.CreateShortcut: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.media.MediaScannerClient: void scanFile(java.lang.String,java.lang.String,long,long)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.PhoneBase: void queryAvailableBandMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.AccountUnlockScreen$1: void run()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapService: boolean initSocket()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.development.EnterUR: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.deskclock.SettingsActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.SMSDispatcher: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipConnection: void dial()>": [
  "android.permission.USE_SIP"
 ], 
 "<android.content.IContentService: void addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.internal.nfc.P2pTarget: void disconnect()>": [
  "android.permission.NFC"
 ], 
 "<com.android.phone.EmergencyCallbackModeService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.util.Recycler$MmsRecycler: void deleteOldMessagesInSameThreadAsMessage(android.content.Context,android.net.Uri)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.phone.PhoneUtils: void turnOnNoiseSuppression(android.content.Context,boolean,boolean)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.server.BatteryService: void access$000(com.android.server.BatteryService)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onDisconnectDone(android.os.AsyncResult)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_APN_SETTINGS"
 ], 
 "<com.android.server.sip.SipService$MyExecutor: void execute(java.lang.Runnable)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.MediaScanner$MyMediaScannerClient: void scanFile(java.lang.String,java.lang.String,long,long)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.ThrottleManager: long getResetTime(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.bluetooth.BluetoothSocket: void <init>(int,int,boolean,boolean,android.bluetooth.BluetoothDevice,int,android.os.ParcelUuid)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.calendar.DayActivity: void goToToday()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.server.location.LocationProviderInterface: void removeListener(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$BluetoothStateTracker$1: java.lang.Object doInBackground(java.lang.Object[])>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppTransferHistory: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.OutgoingCallBroadcaster: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.transaction.Observer: void update(com.android.mms.transaction.Observable)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SMS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.contacts.CallDetailActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.app.IBatteryStats: long getAwakeTimeBattery()>": [
  "android.permission.BATTERY_STATS"
 ], 
 "<com.android.internal.nfc.P2pTarget: byte[] transceive(byte[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnection: void onConnect(com.android.internal.telephony.DataConnection$ConnectionParams)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.stk.RilMessageDecoder$StateStart: void exit()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendSubmitPdu(com.android.internal.telephony.cdma.SmsMessage$SubmitPdu,android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.wifi.AdvancedSettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.telephony.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS"
 ], 
 "<android.webkit.WebView: void requestLabel(int,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.util.HierarchicalState: void enter()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.nfc.ILlcpSocket: int connectByName(int,java.lang.String)>": [
  "android.permission.NFC"
 ], 
 "<com.android.exchange.SyncManager: void serviceRequest(long,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void unregisterForSuppServiceNotification(android.os.Handler)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getBasebandVersion(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.wifi.WifiSettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.music.AudioPreview$PreviewPlayer: void reset()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.SyncManager$SyncHandler: void onBootCompleted()>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.ThrottleService$DataRecorder: void addData(long,long)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.email.activity.MessageList: void onLoadMoreMessages()>": [
  "android.permission.VIBRATE"
 ], 
 "<android.net.IConnectivityManager$Stub: boolean requestRouteToHost(int,int)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.email.mail.Store: android.os.Bundle autoDiscover(android.content.Context,java.lang.String,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.WebView: void goBack()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider: void toggleBrightness(android.content.Context)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.settings.SettingsSafetyLegalActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.ui.MessageListAdapter$AvatarCache: com.android.mms.ui.MessageListAdapter$AvatarCache$ContactData get(java.lang.String)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.content.SyncManager: void maybeRescheduleSync(android.content.SyncResult,android.content.SyncOperation)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.music.MusicPicker: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.policy.impl.LockPatternKeyguardView$AccountAnalyzer: void start()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.gsm.stk.CommandParamsFactory: boolean processLaunchBrowser(com.android.internal.telephony.gsm.stk.CommandDetails,java.util.List)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.ILocationManager: java.util.List getProviders(android.location.Criteria,boolean)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.exchange.SyncManager: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.READ_CALENDAR", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.phone.InCallScreen: boolean onKeyDown(int,android.view.KeyEvent)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.net.ConnectivityManager: java.lang.String[] getTetheredIfaces()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.fuelgauge.PowerUsageSummary: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.ActivityPicker: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.BluetoothHandsfree$22: android.bluetooth.AtCommandResult handleReadCommand()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.bluetooth.IBluetooth$Stub: boolean createBondOutOfBand(java.lang.String,byte[],byte[])>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.browser.BrowserActivity: void goBackOnePageOrQuit()>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.contacts.util.EmptyService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.webkit.WebViewCore$EventHub: void access$6500(android.webkit.WebViewCore$EventHub,android.os.Message,long)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.BluetoothHandsfree$17: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.WindowManagerService$Session: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SYSTEM_ALERT_WINDOW"
 ], 
 "<com.android.server.vpn.L2tpService: void access$600(com.android.server.vpn.VpnService,java.lang.Throwable)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.app.ChooserActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.ZoneList: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.RI: void setGsmBroadcastConfig(com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.IBluetoothHeadset$Stub: boolean disconnectHeadsetInternal(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.server.am.BatteryStatsService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.BATTERY_STATS", 
  "android.permission.BLUETOOTH"
 ], 
 "<android.location.LocationManager: void requestSingleUpdate(android.location.Criteria,android.app.PendingIntent)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.browser.BrowserProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<android.content.IContentService$Stub: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.email.activity.setup.AccountSettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void <init>(com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean)>": [
  "android.permission.CHANGE_CONFIGURATION", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.net.wifi.WifiStateTracker: void checkIsBluetoothPlaying()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.contacts.ContactsListActivity: android.net.Uri getSelectedUri(int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.mms.data.WorkingMessage: boolean loadFromUri(android.net.Uri)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.net.IConnectivityManager: java.lang.String[] getTetheringErroredIfaces()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.webkit.WebViewCore: void viewSizeChanged(int,int,int,float,int,int,boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.email.mail.store.ExchangeStore$ExchangeTransport: void checkSettings(java.net.URI)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.LightsService$1: void setFlashlightEnabled(boolean)>": [
  "android.permission.FLASHLIGHT"
 ], 
 "<android.app.Activity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.CalendarPreferenceActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.inputmethod.latin.LatinIME: void pickSuggestionManually(int,java.lang.CharSequence)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.providers.calendar.CalendarAppWidgetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.Connectivity$7: void onClick(android.view.View)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.LocationManager: void addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.server.BatteryService$1: void onUEvent(android.os.UEventObserver$UEvent)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.browser.ErrorConsoleView$1: void onClick(android.view.View)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.deskclock.SetAlarm$7: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.phone.InCallScreen: void access$400(com.android.phone.InCallScreen,android.os.AsyncResult)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.deskclock.Alarms: void saveNextAlarm(android.content.Context,java.lang.String)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.development.InstrumentationList: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.nfc.NfcService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.ThrottleService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.launcher2.Launcher: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.BluetoothHandsfree$11: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.calendar.EventInfoActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.READ_CALENDAR", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.provider.Contacts$Settings: void setSetting(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.wifi.AdvancedSettings: boolean onOptionsItemSelected(android.view.MenuItem)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.VideoView: void release(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ISms: boolean disableCellBroadcastRange(int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.settings.TetherSettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.activity.MailboxList: boolean onOptionsItemSelected(android.view.MenuItem)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.svox.pico.EngineSettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void handleCfuQueryResult(com.android.internal.telephony.CallForwardInfo[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.DataConnection$DcDefaultState: void exit()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.cooliris.media.RenderView: void <init>(android.content.Context)>": [
  "android.permission.INTERNET"
 ], 
 "<android.speech.tts.TextToSpeech: int stop()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.activity.MessageList$LoadMessagesTask: void onPostExecute(android.database.Cursor)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.settings.bluetooth.LocalBluetoothProfileManager$A2dpProfileManager: boolean isConnected(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.email.activity.setup.AccountSetupExchange: void onCreate(android.os.Bundle)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.settings.TestingSettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.accounts.IAccountManager$Stub: void confirmCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,android.os.Bundle,boolean)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.music.MediaPlaybackService$ServiceStub: void play()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.SlideshowPresenter: void present()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ExportVCardActivity: android.app.Dialog onCreateDialog(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.sip.SipService: void setRegistrationListener(java.lang.String,android.net.sip.ISipSessionListener)>": [
  "android.permission.USE_SIP"
 ], 
 "<android.net.wifi.WifiStateTracker$SettingsObserver: void onChange(boolean)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.content.IContentService: int getIsSyncable(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.settings.wifi.WifiEnabler: void handleStateChanged(android.net.NetworkInfo$DetailedState)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.app.HeavyWeightSwitcherActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.exchange.CalendarSyncAdapterService$SyncAdapterImpl: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.development.ConfigurationViewer: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.am.ActivityManagerService$ServiceRestarter: void run()>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.contacts.ContactsLiveFolders$AllContacts: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCall: void hangupIfAlive()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.bluetooth.LocalBluetoothProfileManager$A2dpProfileManager: int getConnectionStatus(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.deskclock.AlarmAlert: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ISms$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.settings.quicklaunch.QuickLaunchSettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.providers.calendar.CalendarAppWidgetProvider: void providerUpdated(android.content.Context,long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.SearchResultsActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.policy.impl.PasswordUnlockScreen: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.contacts.model.EntitySet: void buildSplitContactDiff(java.util.ArrayList,int,int,int[])>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.wifi.AdvancedSettings: void initNumChannelsPreference()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.WifiService$3: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void rejectCall(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.SettingsSafetyLegalActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.INTERNET", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.Settings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.SipBroadcastReceiver$1: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_SIP"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: void onStop()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.settings.TextToSpeechSettings: void initDefaultSettings()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void queryTTYMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.DayView: boolean onTouchEvent(android.view.MotionEvent)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.bluetooth.BluetoothDevice: boolean cancelBondProcess()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.server.BluetoothService: void pairingAttempt(java.lang.String,int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.gsm.SimSmsInterfaceManager: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS"
 ], 
 "<com.android.phone.BluetoothHeadsetService: void access$1500(com.android.phone.BluetoothHeadsetService,android.bluetooth.BluetoothDevice,int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void notifyAndAcknowledgeLastIncomingSms(boolean,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.BluetoothHeadsetService: void access$2500(com.android.phone.BluetoothHeadsetService,android.bluetooth.BluetoothDevice,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.net.IConnectivityManager$Stub$Proxy: int tether(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.media.IAudioService: void setMode(int,android.os.IBinder)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.IccCard: void supplyPuk(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmMmiCode: void cancel()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void disableLocationUpdates()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.server.BluetoothEventLoop: void onAgentAuthorize(java.lang.String,java.lang.String,int)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.contacts.ImportVCardActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.nfc.NfcService$2: android.nfc.NdefMessage localGet()>": [
  "android.permission.NFC"
 ], 
 "<com.android.mms.transaction.ReadRecTransaction: void notifyObservers()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SMS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.term.TermPreferences: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.ConnectivityService: void handleNotificationChange(boolean,int,android.app.Notification)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.mms.util.AddressUtils: java.lang.String getFrom(android.content.Context,android.net.Uri)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.browser.BrowserBackupAgent: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.NfcAdapter$2: void onPaused(android.app.Activity)>": [
  "android.permission.NFC"
 ], 
 "<android.bluetooth.BluetoothAdapter: void setDiscoverableTimeout(int)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.ApnSettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.LocationManagerService: void updateProviderListenersLocked(java.lang.String,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.music.IMediaPlaybackService: void setQueuePosition(int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.SMSDispatcher: void handleIccFull()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.DateTimeSettingsSetupWizard: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet,int)>": [
  "android.permission.INTERNET"
 ], 
 "<com.cooliris.picasa.PicasaContentProvider: com.cooliris.picasa.UserEntry[] syncUsers(com.cooliris.picasa.PicasaContentProvider$SyncContext,android.content.SyncResult)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.cooliris.media.RootLayer: boolean update(com.cooliris.media.RenderView,float)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.wifi.WifiApEnabler: void updateTetherState(java.lang.Object[],java.lang.Object[],java.lang.Object[])>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setPreferredVoicePrivacy(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.sip.SipService: boolean isOpened(java.lang.String)>": [
  "android.permission.USE_SIP"
 ], 
 "<android.bluetooth.BluetoothPbap: int getState()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.settings.AccountSyncSettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.exchange.adapter.ContactsSyncAdapter$EasContactsSyncParser: void deleteParser(com.android.exchange.adapter.ContactsSyncAdapter$ContactOperations)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.app.INotificationManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.WindowManagerService$WMThread: void run()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.google.common.io.CharStreams: long copy(com.google.common.io.InputSupplier,com.google.common.io.OutputSupplier)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.providers.downloads.DownloadService: void deleteDownload(long)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.browser.BrowserActivity$Download: boolean onMenuItemClick(android.view.MenuItem)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<android.bluetooth.IBluetooth$Stub$Proxy: int getScanMode()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.calendar.CalendarPreferenceActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.server.BluetoothService: boolean removeBond(java.lang.String)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.server.BluetoothService$BondState: boolean isAutoPairingBlacklisted(java.lang.String)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getNeighboringCids(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.music.IMediaPlaybackService$Stub: int removeTracks(int,int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.DataConnection: void tearDownData(java.lang.Object)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.UserDictionarySettings: void access$100(com.android.settings.UserDictionarySettings,java.lang.String)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.server.connectivity.Tethering: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.DebugIntentSender: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.RuimRecords: void fetchRuimRecords()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.browser.WebStorageSizeManager: void scheduleOutOfSpaceNotification()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.phone.BluetoothHandsfree$13: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry: void listen(java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.phone.NotificationMgr: void updateNotificationsAtStartup()>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.phone.CallNotifier: void sendMwiChangedDelayed(long)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.phone.CallCard: void updateRingingCall(com.android.internal.telephony.CallManager)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.email.service.EasAuthenticatorServiceAlternate: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.IBluetooth$Stub$Proxy: boolean setPairingConfirmation(java.lang.String,boolean)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.mms.data.Contact$ContactsCache: com.android.mms.data.Contact getContactInfoForEmailAddress(java.lang.String)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.browser.Tab$3$3: java.lang.Void doInBackground(java.lang.Void[])>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.development.DevelopmentSettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.bluetooth.LocalBluetoothManager: boolean shouldShowDialogInForeground(java.lang.String)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.WifiService: java.util.List getScanResults()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.cooliris.picasa.PicasaContentProvider: void reloadAccounts()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.development.LogViewer: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.transaction.SmsSingleRecipientSender: boolean sendMessage(long)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS"
 ], 
 "<com.android.email.service.EasAuthenticatorService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.ContactsLiveFolders$StarredContacts: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.FdnList: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.soundrecorder.SoundRecorder$2: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ISms$Stub$Proxy: boolean copyMessageToIccEf(int,byte[],byte[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.phone.PhoneInterfaceManager: void silenceRingerInternal()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.server.InputMethodManagerService$MyPackageMonitor: void onSomePackagesChanged()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.settings.bluetooth.ConnectSpecificProfilesActivity: void refreshProfiles()>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.server.BluetoothService: int getScanMode()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.settings.ChooseLockPassword: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.IBluetooth$Stub$Proxy: boolean removeBond(java.lang.String)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.contacts.ContactsListActivity: android.graphics.Bitmap loadContactPhoto(android.net.Uri,android.graphics.BitmapFactory$Options)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void supplyIccPin2(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.SelectCalendarsActivity: void doSaveAction()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.internal.widget.SlidingTab: boolean onInterceptTouchEvent(android.view.MotionEvent)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.server.DockObserver: void systemReady()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.sip.SipEditor: void access$700(com.android.phone.sip.SipEditor,android.net.sip.SipProfile)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_SIP"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_SYNC_STATS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.inputmethod.voice.VoiceInput: void <init>(android.content.Context,com.android.inputmethod.voice.VoiceInput$UiListener)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.settings.ZoneList: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.sip.SipService$ConnectivityReceiver$MyTimerTask: void realRun()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewManager: boolean wakeWhenReadyTq(int)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.content.SyncManager$SyncHandler: void installHandleTooManyDeletesNotification(android.accounts.Account,java.lang.String,long)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.launcher2.WallpaperChooser: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.FdnSetting: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppBtEnableActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.SearchResultsActivity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.cooliris.media.BackgroundLayer: void renderOpaque(com.cooliris.media.RenderView,javax.microedition.khronos.opengles.GL11)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.launcher2.WallpaperChooser: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.ui.ClassZeroActivity: void access$200(com.android.mms.ui.ClassZeroActivity)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<android.bluetooth.BluetoothServerSocket: void <init>(int,boolean,boolean,int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.webkit.ContentLoader: void closeStreamAndSendEndData()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.nfc.tech.NfcF: byte[] transceive(byte[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.development.DevelopmentSettings: void writeDebugOptions()>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.SET_DEBUG_APP"
 ], 
 "<android.net.IConnectivityManager$Stub$Proxy: boolean setRadios(boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppTransferHistory: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: void afterTextChanged(android.text.Editable)>": [
  "android.permission.READ_SYNC_STATS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.connectivity.Tethering$TetherInterfaceSM: void setLastErrorAndTransitionToInitialState(int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onEnableApn(int,int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.browser.WebsiteSettingsActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.deskclock.HandleSetAlarm: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.ListActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.sip.SipSessionGroup: void processRequest(javax.sip.RequestEvent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.AbstractThreadedSyncAdapter$ISyncAdapterImpl: void initialize(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.server.vpn.VpnService: boolean access$400(com.android.server.vpn.VpnService)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.settings.LanguageSettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.cooliris.cache.CacheService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.applications.RunningServiceDetails: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.media.AudioService: void clearAllScoClients()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.os.INetworkManagementService: void stopUsbRNDIS()>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendSms(com.android.internal.telephony.SMSDispatcher$SmsTracker)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.WebView: void cancelTouch()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.contacts.ui.ContactsPreferencesActivity$AccountDisplay: void <init>(android.content.ContentResolver,java.lang.String,java.lang.String)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.svox.pico.GetSampleText: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.ContactsListActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.util.Recycler$MmsRecycler: android.database.Cursor getAllThreads(android.content.Context)>": [
  "android.permission.READ_SMS"
 ], 
 "<android.location.ILocationManager$Stub: java.lang.String getBestProvider(android.location.Criteria,boolean)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.music.MediaPlaybackService$MultiPlayer: void release()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.SettingsSafetyLegalActivity: boolean dispatchKeyEvent(android.view.KeyEvent)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.PhoneInterfaceManager: void access$000(com.android.phone.PhoneInterfaceManager)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.providers.calendar.CalendarAppWidgetService: void performUpdate(android.content.Context,int[],java.util.Set,long)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.server.am.ActivityManagerService: void killAppAtUsersRequest(com.android.server.am.ProcessRecord,android.app.Dialog)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<android.net.wifi.WifiManager$WifiLock: void finalize()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.INetworkManagementService$Stub: java.lang.String[] listInterfaces()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.nfc.tech.IsoDep: byte[] transceive(byte[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.settings.applications.RunningServiceDetails: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothSocket createRfcommSocket(int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.DataConnection$DcInactiveState: boolean processMessage(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.INetworkManagementService$Stub$Proxy: void attachPppd(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.music.MusicUtils: void setRingtone(android.content.Context,long)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.providers.downloads.DownloadService: void access$300(com.android.providers.downloads.DownloadService)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.calendar.AlertService: void doTimeChanged()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<android.server.BluetoothEventLoop: void onDeviceRemoved(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.development.DevelopmentSettings$7: void onClick(android.view.View)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.tts.TtsService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.exchange.SyncManager: void serviceRequest(long,long,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.CallNotifier: void onCfiChanged(boolean)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.deskclock.DeskClock: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.CredentialInstaller: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.activity.AccountFolderList: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.exchange.SyncManager$CalendarObserver$1: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: java.util.List getAdnRecordsInEf(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.gsm.UsimPhoneBookManager: void readEmailFileAndWait(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.browser.Browser: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.bluetooth.BluetoothSettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.IWallpaperManager: void setDimensionHints(int,int)>": [
  "android.permission.SET_WALLPAPER_HINTS"
 ], 
 "<com.android.settings.nfc.NfcEnabler$2: void run()>": [
  "android.permission.NFC"
 ], 
 "<android.net.IThrottleManager$Stub: long getByteCount(java.lang.String,int,int,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.ZonePicker: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.webkit.WebView: void reload()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.contacts.util.WeakAsyncTask: java.lang.Object doInBackground(java.lang.Object[])>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.calendar.MonthView$1: void run()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.server.WifiService: void startScan(boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.content.IContentService$Stub$Proxy: void setIsSyncable(android.accounts.Account,java.lang.String,int)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.internal.app.IBatteryStats$Stub$Proxy: long getAwakeTimePlugged()>": [
  "android.permission.BATTERY_STATS"
 ], 
 "<com.android.exchange.EasOutboxService: java.lang.String acknowledgeProvisionImpl(java.lang.String,java.lang.String,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.cooliris.media.Layer: void renderBlended(com.cooliris.media.RenderView,javax.microedition.khronos.opengles.GL11)>": [
  "android.permission.INTERNET"
 ], 
 "<android.net.IThrottleManager$Stub: long getResetTime(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.ChooseLockPatternExample: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.exchange.adapter.ContactsSyncAdapter$EasContactsSyncParser: void commit()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.mms.ui.ManageSimMessages: void access$000(com.android.mms.ui.ManageSimMessages)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.contacts.model.EntitySet: java.util.ArrayList buildDiff()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.wifi.WifiSettings: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.music.MediaPlaybackService: void doAutoShuffleUpdate()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.music.IMediaPlaybackService$Stub$Proxy: int removeTracks(int,int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.PhoneUtils: void setMuteInternal(com.android.internal.telephony.Phone,boolean)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.mms.ui.DeliveryReportActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.PackageManagerService: void getPackageSizeInfo(java.lang.String,android.content.pm.IPackageStatsObserver)>": [
  "android.permission.GET_PACKAGE_SIZE"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: boolean callSelection()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.os.INetworkManagementService$Stub: int getInterfaceRxThrottle(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.cooliris.media.PhotoAppWidgetConfigure: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GsmConnection: void access$000(com.android.internal.telephony.gsm.GsmConnection)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean setCellBroadcastActivation(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: boolean turnOnMasterTetherSettings()>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.term.Term: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.IntentService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.transaction.PushReceiver: long access$000(android.content.Context,com.google.android.mms.pdu.GenericPdu,int)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.browser.BrowserBookmarksPage: void onActivityResult(int,int,android.content.Intent)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void deleteSmsOnSim(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.tts.TtsService: int playEarcon(java.lang.String,java.lang.String,int,java.util.ArrayList)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.storage.IMountService$Stub: int formatVolume(java.lang.String)>": [
  "android.permission.MOUNT_FORMAT_FILESYSTEMS"
 ], 
 "<com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager: int[] getAdnRecordsSize(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.service.IEmailService$Stub: void startSync(long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.SpecialCharSequenceMgr: boolean handleIMEIDisplay(android.content.Context,java.lang.String,boolean)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$StateTracker: void setCurrentState(android.content.Context,int)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.browser.BrowserActivity: void access$200(com.android.browser.BrowserActivity,java.lang.String,boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.policy.impl.PatternUnlockScreen$2: void onClick(android.view.View)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.app.ActivityManagerNative: void killApplicationWithUid(java.lang.String,int)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.contacts.PhoneDisambigDialog: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.email.activity.setup.AccountSetupNames: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void updateSpnDisplay()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.ConfirmLockPattern: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.calendar.WeekView: void onDraw(android.graphics.Canvas)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.music.MusicBrowserActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.BluetoothHandsfree: void access$5900(com.android.phone.BluetoothHandsfree)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.RadioInfo: void onResume()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.server.BluetoothA2dpService: int getSinkState(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.vpn.VpnService: void onError(java.lang.Throwable)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: void keyguardDone(boolean)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.certinstaller.CertInstallerMain: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.MountService: void finishMediaUpdate()>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
 ], 
 "<android.media.AudioService$ScoClient: void clearCount(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.WifiWatchdogService: boolean requiresWatchdog(java.lang.String,java.lang.String)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.WifiService: boolean setNumAllowedChannelsBlocking(int,boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.settings.ApnSettings: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>": [
  "android.permission.WRITE_APN_SETTINGS"
 ], 
 "<com.android.mms.util.Recycler: void deleteMessagesForThread(android.content.Context,long,int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<android.net.IConnectivityManager: int untether(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.AccountPreferenceBase: boolean onPrepareOptionsMenu(android.view.Menu)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.deskclock.AlarmInitReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.calendar.SelectCalendarsAdapter$RefreshCalendars: void run()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.music.MusicUtils: void addToCurrentPlaylist(android.content.Context,long[])>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.applications.ManageApplications: void onActivityResult(int,int,android.content.Intent)>": [
  "android.permission.GET_PACKAGE_SIZE"
 ], 
 "<com.android.soundrecorder.Recorder: void delete()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.activity.UpgradeAccounts: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.webkit.WebView: void onDetachedFromWindow()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.EnableFdnScreen: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.location.LocationManager: void requestSingleUpdate(java.lang.String,android.app.PendingIntent)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.nfc.NfcAdapter: void disableForegroundDispatchInternal(android.app.Activity,boolean)>": [
  "android.permission.NFC"
 ], 
 "<com.cooliris.media.PhotoAppWidgetBind: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.provider.Calendar$CalendarAlerts: boolean alarmExists(android.content.ContentResolver,long,long,long)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.internal.telephony.ServiceStateTracker: void disableLocationUpdates()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.CredentialInstaller: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.GroupMessagingListener: void synchronizeMailboxStarted(long,long)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.nfc.NfcService$2: void enableForegroundDispatch(android.content.ComponentName,android.app.PendingIntent,android.content.IntentFilter[],android.nfc.TechListParcel)>": [
  "android.permission.NFC"
 ], 
 "<com.android.settings.AccountSyncSettingsInAddAccount: void onAccountsUpdated(android.accounts.Account[])>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.providers.downloads.Helpers: void deleteFile(android.content.ContentResolver,long,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.calendar.CalendarActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.activity.MessageView: boolean moveToNewer()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.RI: void deleteSmsOnRuim(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$BluetoothStateTracker: void onActualStateChange(android.content.Context,android.content.Intent)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.inputmethodservice.InputMethodService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.calendar.CalendarPreferenceActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapVcardManager: int getCallHistorySize(int)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.browser.BrowserActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.AudioPreview: void start()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.providers.contacts.ContactsProvider2: int updateInTransaction(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.am.ActivityManagerService: void sendServiceArgsLocked(com.android.server.am.ServiceRecord,boolean)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.music.MusicPicker: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.providers.settings.SettingsBackupAgent: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.provider.Browser: boolean canClearHistory(android.content.ContentResolver)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.contacts.ViewContactActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.deskclock.SetAlarm: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.IBluetooth: boolean createBond(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewManager: void show()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.bluetooth.IBluetooth: int addRfcommServiceRecord(java.lang.String,android.os.ParcelUuid,int,android.os.IBinder)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void access$300(com.android.internal.telephony.cdma.CdmaDataConnectionTracker,boolean,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.inputmethod.pinyin.PinyinIME: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.webkit.WebView$DragTrackerHandler: void buildBitmap(int,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.nfc.INfcAdapter$Stub: int createLlcpConnectionlessSocket(int)>": [
  "android.permission.NFC"
 ], 
 "<com.cooliris.media.HudLayer$12: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.music.PlaylistBrowserActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.NotificationPlayer$CmdThread: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.cooliris.media.LoadingLayer: boolean onTouchEvent(android.view.MotionEvent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.WifiManager$MulticastLock: void finalize()>": [
  "android.permission.CHANGE_WIFI_MULTICAST_STATE"
 ], 
 "<com.android.phone.BluetoothHandsfree$5: android.bluetooth.AtCommandResult handleActionCommand()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.mms.ui.SlideEditorActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry: void notifyDataConnection(int,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,int,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.data.Conversation: void blockingMarkAllSmsMessagesAsSeen(android.content.Context)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.phone.PhoneUtils: boolean hangupRingingAndActive(com.android.internal.telephony.Phone)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.media.Ringtone: void stop()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.TextToSpeechSettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.soundrecorder.SoundRecorder: void onCreate(android.os.Bundle)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.htmlviewer.HTMLViewerActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.wifi.IWifiManager: boolean disconnect()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.webkit.WebView: void replaceTextfieldText(int,int,java.lang.String,int,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.music.IMediaPlaybackService$Stub$Proxy: void open(long[],int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.wifi.WifiSettings: void onResume()>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.svox.pico.DownloadVoiceData: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.RI: void setCdmaSubscription(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.IConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.ApnSettings: android.net.Uri access$400()>": [
  "android.permission.WRITE_APN_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker: boolean onTrySetupData(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_APN_SETTINGS"
 ], 
 "<com.android.server.usb.UsbService: void access$400(com.android.server.usb.UsbService,boolean)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.ui.SlideView: void reset()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.WifiStateTracker$DhcpHandler: boolean shouldDisableCoexistenceMode()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.settings.DeviceAdminSettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: boolean isSyncActive(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getDataCallList(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.ChooseLockPassword: void handleNext()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.IccRecords: void onRefresh(boolean,int[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.GroupMessagingListener: void loadMessageForViewFailed(long,java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.development.InstrumentationList: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.media.AudioManager: boolean isBluetoothA2dpOn()>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.contacts.SpecialCharSequenceMgr: boolean handleChars(android.content.Context,java.lang.String)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.deskclock.SetAlarm: long access$500(com.android.deskclock.SetAlarm)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.QuickContactBadge: void assignContactFromEmail(java.lang.String,boolean)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.DisplaySettings: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>": [
  "android.permission.SET_ANIMATION_SCALE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.browser.FetchUrlMimeType: void onPostExecute(java.lang.String)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.nfc.ndefpush.NdefPushServer$ServerThread: void shutdown()>": [
  "android.permission.NFC"
 ], 
 "<com.android.launcher2.Launcher: boolean onLongClick(android.view.View)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<android.net.IConnectivityManager: java.lang.String[] getTetherableIfaces()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.browser.CombinedBookmarkHistoryActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void sendEmergencyCallbackModeChange()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void deactivateDataCall(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.BluetoothAtPhonebook$3: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.music.MusicUtils: void playAll(android.content.Context,android.database.Cursor)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.ILocationManager: void clearTestProviderEnabled(java.lang.String)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.settings.TextToSpeechSettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.IBluetooth: boolean setDeviceOutOfBandData(java.lang.String,byte[],byte[])>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.test.IsolatedContext: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.deskclock.AlarmAlert: void access$000(com.android.deskclock.AlarmAlertFullScreen)>": [
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.mms.ui.ManageSimMessages: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.LocationManagerService: void checkMockPermissionsSafe()>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void setCdmaRoamingPreference(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.MediaPlayer: void reset()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.WebViewCore: void sendMessage(android.os.Message)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.nfc.NfcAdapter: boolean isEnabled()>": [
  "android.permission.NFC"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapService: void access$1200(com.android.bluetooth.pbap.BluetoothPbapService)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.cooliris.picasa.PicasaApi: android.accounts.Account[] getAccounts(android.content.Context)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.quicksearchbox.google.GoogleSource: com.android.quicksearchbox.SourceResult getSuggestionsExternal(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.nfc.INfcAdapter$Stub$Proxy: int createLlcpServiceSocket(int,java.lang.String,int,int,int)>": [
  "android.permission.NFC"
 ], 
 "<android.app.IActivityManager: void wakingUp()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.fuelgauge.PowerUsageSummary: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: int access$3600(com.android.mms.ui.ComposeMessageActivity,long,boolean)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.providers.calendar.CalendarProvider2: int deleteMatchingCalendars(java.lang.String)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.content.SyncManager$SyncHandler: void runBoundToSyncAdapter(android.content.ISyncAdapter)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onRoamingOn()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_APN_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onApnChanged()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_APN_SETTINGS"
 ], 
 "<com.android.server.ConnectivityService: void systemReady()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.QueryBrowserActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.IConnectivityManager: void reportInetCondition(int,int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.GetPin2Screen: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.browser.BrowserActivity: com.android.browser.BrowserActivity$UrlData getUrlDataFromIntent(android.content.Intent)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.internal.telephony.CallTracker: void handlePollCalls(android.os.AsyncResult)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.browser.BrowserSettings$Observer: void update(java.util.Observable,java.lang.Object)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void switchHoldingAndActive()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.ChooseLockPatternExample: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.AudioPreview$PreviewPlayer: void stayAwake(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.test.mock.MockContentResolver: void removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.media.IAudioService$Stub$Proxy: void startBluetoothSco(android.os.IBinder)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.BluetoothHandsfree: void <init>(android.content.Context,com.android.internal.telephony.CallManager)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.bluetooth.opp.TestActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.model.ImageModel: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,com.android.mms.drm.DrmWrapper)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.browser.BrowserActivity: boolean onContextItemSelected(android.view.MenuItem)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<android.net.http.RequestHandle: void setupAuthResponse()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.cooliris.picasa.PicasaApi: int getAlbums(android.accounts.AccountManager,android.content.SyncResult,com.cooliris.picasa.UserEntry,com.cooliris.picasa.GDataParser$EntryHandler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.INTERNET"
 ], 
 "<com.android.browser.BrowserActivity$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.mms.transaction.SendTransaction: byte[] sendPdu(long,byte[])>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.service.wallpaper.WallpaperService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.commands.bmgr.Bmgr: void doRestorePackage(java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.deskclock.SettingsActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: int turnOnMobileConnection()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.commands.pm.Pm: void runSetInstallLocation()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.settings.BatteryInfo: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.server.BluetoothEventLoop: void onDeviceFound(java.lang.String,java.lang.String[])>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.RecognitionManagerService$MyPackageMonitor: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppService: void deleteShare(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.nfc.LlcpSocket: int getRemoteSocketRw()>": [
  "android.permission.NFC"
 ], 
 "<com.android.deskclock.HandleSetAlarm: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.SimContacts: void onListItemClick(android.widget.ListView,android.view.View,int,long)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.email.activity.setup.AccountSetupExchange: void onActivityResult(int,int,android.content.Intent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.nfc.TechListChooserActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.browser.BrowserActivity: void retainIconsOnStartup()>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$SyncStateTracker: void toggleState(android.content.Context)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.Settings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.ui.WarnOfStorageLimitsActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.PhoneBase: void setBandMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.MountService: void setUsbMassStorageEnabled(boolean)>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
 ], 
 "<com.android.inputmethod.latin.LatinKeyboardBaseView: boolean onTouchEvent(android.view.MotionEvent)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.settings.wifi.WifiAPITest: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.bluetooth.BluetoothPairingDialog: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.test.SyncBaseInstrumentation: void syncProvider(android.net.Uri,java.lang.String,java.lang.String)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<android.bluetooth.IBluetooth$Stub: boolean createBond(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.UiModeManagerService: void systemReady()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.sip.SipSettings$1: void run()>": [
  "android.permission.USE_SIP"
 ], 
 "<android.webkit.WebIconDatabase: void bulkRequestIconForPageUrl(android.content.ContentResolver,java.lang.String,android.webkit.WebIconDatabase$IconListener)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.internal.telephony.DataConnection$DcActiveState: boolean processMessage(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.cooliris.media.MovieViewControl$3: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.PowerManagerService: void setStayOnSetting(int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.util.Log$1: void onTerribleFailure(java.lang.String,android.util.Log$TerribleFailure)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$SetDnsForwardersErrorState: void enter()>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.development.RunningProcesses: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.BluetoothDeviceProfileState$OutgoingHandsfree: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.calendar.EventLoader$LoaderThread: void run()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.content.ISyncStatusObserver$Stub$Proxy: void onStatusChanged(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<android.os.INetworkManagementService$Stub: void stopTethering()>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<android.os.IHardwareService$Stub$Proxy: void setFlashlightEnabled(boolean)>": [
  "android.permission.FLASHLIGHT"
 ], 
 "<com.android.mms.ui.ManageSimMessages: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.backup.IBackupManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.development.BadBehaviorActivity$BadService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.term.Term: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.location.ILocationManager: android.location.Location getLastKnownLocation(java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.os.INetworkManagementService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.net.wifi.IWifiManager: android.net.wifi.WifiConfiguration getWifiApConfiguration()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.music.MusicPicker: void stopMediaPlayer()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.provider.Settings$System: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void setCallForwardingOption(int,int,java.lang.String,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.NfcService$4: int accept(int)>": [
  "android.permission.NFC"
 ], 
 "<android.bluetooth.IBluetooth: java.lang.String getName()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.mms.MmsApp: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.development.LogViewer: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.soundrecorder.Recorder: void stopPlayback()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.RecentCallsListActivity$RecentCallsAdapter: void onContentChanged()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.bluetooth.LocalBluetoothProfileManager$A2dpProfileManager: int getPreferred(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.phone.BluetoothHandsfree$13: android.bluetooth.AtCommandResult handleActionCommand()>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.email.activity.MailboxList: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.ConnectivityService: int getNetworkPreference()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.providers.calendar.CalendarProvider2: void doUpdateTimezoneDependentFields()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.phone.PhoneApp: void access$900(com.android.phone.PhoneApp,android.os.Message)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.os.INetworkManagementService$Stub$Proxy: void stopAccessPoint()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.view.IWindowManager$Stub: void reenableKeyguard(android.os.IBinder)>": [
  "android.permission.DISABLE_KEYGUARD"
 ], 
 "<android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.phone.CallFeaturesSetting: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.voicedialer.VoiceDialerActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.EnableFdnScreen$3: void onClick(android.view.View)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.quicksearchbox.QsbApplicationWrapper: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.service.EmailServiceProxy$6: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.soundrecorder.Recorder: void clear()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.cooliris.cache.CacheService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.am.ActivityManagerService: void signalPersistentProcesses(int)>": [
  "android.permission.SIGNAL_PERSISTENT_PROCESSES"
 ], 
 "<android.content.SyncManager$ActiveSyncContext: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.mms.ui.WarnOfStorageLimitsActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.Phone: void enableEnhancedVoicePrivacy(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.sip.SipAudioCall: void stopCall(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.WebView$ScaleDetectorListener: void onScaleEnd(android.view.ScaleGestureDetector)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.cooliris.picasa.PicasaService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.DataUsageListener: void resume()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppService: void updateFromProvider()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.calendar.DayActivity: void onNewIntent(android.content.Intent)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.internal.widget.RotarySelector: boolean onTouchEvent(android.view.MotionEvent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.mms.transaction.SmsReceiverService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.CdmaDataConnection: com.android.internal.telephony.cdma.CdmaDataConnection makeDataConnection(com.android.internal.telephony.cdma.CDMAPhone)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.app.ActivityManagerNative: void goingToSleep()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.internal.telephony.RI: void queryCdmaRoamingPreference(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.ILocationManager$Stub: android.location.Location getLastKnownLocation(java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.browser.AddBookmarkPage: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.http.RequestHandle: boolean setupRedirect(java.lang.String,int,java.util.Map)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.bluetooth.BluetoothDeviceProfileState$IncomingHandsfree: void exit()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.BandMode: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.bluetooth.BluetoothDiscoverableEnabler$2: void run()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.phone.CallCard: void updateState(com.android.internal.telephony.CallManager)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.app.RingtonePickerActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.INTERNET", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.bluetooth.BluetoothDevice: android.os.ParcelUuid[] getUuids()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.google.android.mms.pdu.PduPersister: void updateHeaders(android.net.Uri,com.google.android.mms.pdu.SendReq)>": [
  "android.permission.READ_SMS"
 ], 
 "<android.location.LocationManager: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.mms.ui.SlideshowActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.settings.quicklaunch.QuickLaunchSettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.NotificationPlayer: void releaseWakeLock()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.providers.calendar.CalendarAppWidgetService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void invokeOemRilRequestStrings(java.lang.String[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.test.RenamingDelegatingContext: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.development.ShowActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.AccessibilitySettings: void access$100(com.android.settings.AccessibilitySettings)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.email.AccountBackupRestore: void backupAccounts(android.content.Context)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.os.INetworkManagementService$Stub: int getInterfaceTxThrottle(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.DeviceAdminAdd: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.browser.Tab$5: void onIndexChanged(android.webkit.WebHistoryItem,int)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.providers.contacts.LegacyApiSupport: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.policy.impl.LockScreen: void onTrigger(android.view.View,int)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.settings.UserDictionarySettings$2: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.settings.bluetooth.BluetoothSettings: void addDevices()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.quicksearchbox.SearchableItemsSettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.location.LocationManager: void requestSingleUpdate(java.lang.String,android.location.LocationListener,android.os.Looper)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState: int turnOnMobileConnection()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.media.IMediaScannerListener$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.mms.util.Recycler$SmsRecycler: void deleteMessagesForThread(android.content.Context,long,int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnection: void start()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.accounts.AccountManager$12: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.nfc.IP2pTarget$Stub$Proxy: int getMode(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.exchange.SyncManager$AccountObserver: void access$500(com.android.exchange.SyncManager$AccountObserver)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.certinstaller.CertFileList: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.development.PackageSummary: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$InitialState: void exit()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.calendar.AgendaActivity: boolean onOptionsItemSelected(android.view.MenuItem)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.settings.SettingsSafetyLegalActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.ChooseLockPassword: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GsmConnection: void <init>(android.content.Context,com.android.internal.telephony.DriverCall,com.android.internal.telephony.gsm.GsmCallTracker,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmSMSDispatcher: void acknowledgeLastIncomingSms(boolean,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.AppHwConfigList: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.widget.VideoView: void start()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.DateTimeSettingsSetupWizard: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.inputmethod.pinyin.PinyinDecoderService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.ui.DeliveryReportActivity: java.util.Map getMmsReportStatus()>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.phone.OtaUtils: void otaShowListeningScreen()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.bluetooth.BluetoothA2dp: boolean allowIncomingConnect(android.bluetooth.BluetoothDevice,boolean)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.contacts.RecentCallsListActivity$RecentCallsAdapter: void updateCallLog(com.android.contacts.RecentCallsListActivity$CallerInfoQuery,com.android.contacts.RecentCallsListActivity$ContactInfo)>": [
  "android.permission.WRITE_CONTACTS"
 ], 
 "<com.android.calendar.DayActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void restoreSavedNetworkSelection(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.wifi.WifiAPITest: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.webkit.WebView: void pauseTimers()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.accounts.AccountManager$BaseFutureTask: void startTask()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.music.RepeatingImageButton$RepeatListener: void onRepeat(android.view.View,long,int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.provider.Calendar$Events: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],java.lang.String,java.lang.String)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.media.MediaPlayer: void pause()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.GsmUmtsCallForwardOptions: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.LocationManagerService: void clearTestProviderStatus(java.lang.String)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.internal.widget.LockPatternUtils: void setPermanentlyLocked(boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.settings.AddAccountSettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.soundrecorder.SoundRecorder: void onStop()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.IBluetooth$Stub$Proxy: boolean setPin(java.lang.String,byte[])>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.AddAccountSettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: void pair()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.tts.TtsService$1: boolean synthesizeToFile(java.lang.String,java.lang.String,java.lang.String[],java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.ILlcpConnectionlessSocket$Stub: android.nfc.LlcpPacket receiveFrom(int)>": [
  "android.permission.NFC"
 ], 
 "<android.net.ConnectivityManager: java.lang.String[] getTetheringErroredIfaces()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.calendar.MonthActivity: void goTo(android.text.format.Time,boolean)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.settings.bluetooth.BluetoothDevicePreference: int compareTo(android.preference.Preference)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.DeviceStorageMonitorService: void access$000(com.android.server.DeviceStorageMonitorService,boolean)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CLEAR_APP_CACHE", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.browser.BrowserBackupAgent: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<android.server.BluetoothService: boolean createBond(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.cooliris.media.TimeBar: void renderBlended(com.cooliris.media.RenderView,javax.microedition.khronos.opengles.GL11)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.inputmethod.latin.LatinKeyboardBaseView: boolean onLongPress(android.inputmethodservice.Keyboard$Key)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.contacts.ui.EditContactActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.EnableIccPinScreen: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.server.BluetoothService$BondState: void loadBondState()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.widget.SlidingTab: void setGrabbedState(int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.nfc.ILlcpServiceSocket: int accept(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.phone.InCallScreen: void onNewIntent(android.content.Intent)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.gsm.GsmSMSDispatcher: int dispatchMessage(com.android.internal.telephony.SmsMessageBase)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.EmergencyCallHandler: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.wifi.WifiApSettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.sip.SipService$ConnectivityReceiver$MyTimerTask: void access$1800(com.android.server.sip.SipService$ConnectivityReceiver$MyTimerTask)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.LockPatternView$OnPatternListener: void onPatternCellAdded(java.util.List)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.contacts.ContactsListActivity: boolean onContextItemSelected(android.view.MenuItem)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.cooliris.media.RenderView: void draw2D(com.cooliris.media.Texture,float,float)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.contacts.ui.ContactsPreferencesActivity$QueryGroupsTask: com.android.contacts.ui.ContactsPreferencesActivity$AccountSet doInBackground(com.android.contacts.ui.ContactsPreferencesActivity,java.lang.Void[])>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.webkit.HTML5VideoViewProxy$PosterDownloader: void retainQueue()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.calendar.EditEvent: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.deskclock.AlarmKlaxon: void startAlarm(android.media.MediaPlayer)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ActivityGroup: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.development.PointerLocation: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.activity.UpgradeAccounts: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.ScanningProgress: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.location.ILocationManager$Stub: void addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.server.InputMethodManagerService: void <init>(android.content.Context,com.android.server.StatusBarManagerService)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.Downloads$ByUri: long startDownloadByUri(android.content.Context,java.lang.String,java.lang.String,boolean,int,boolean,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.settings.ManageAccountsSettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.ContentService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.READ_SYNC_STATS", 
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.email.service.IEmailService$Stub: void hostChanged(long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.ShutdownThread: void run()>": [
  "android.permission.VIBRATE", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.net.wifi.WifiManager: boolean initializeMulticastFiltering()>": [
  "android.permission.CHANGE_WIFI_MULTICAST_STATE"
 ], 
 "<com.android.internal.telephony.gsm.stk.StkService: void sendMenuSelection(int,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.SlideView: void startAudio()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.svox.pico.Pico: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.vpn.VpnTypeSelection: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.am.ActivityManagerService: void killBackgroundProcesses(java.lang.String)>": [
  "android.permission.RESTART_PACKAGES", 
  "android.permission.KILL_BACKGROUND_PROCESSES"
 ], 
 "<com.android.server.location.GpsLocationProvider: void reportNiNotification(int,int,int,int,int,java.lang.String,java.lang.String,int,int,java.lang.String)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.inputmethod.latin.LatinIMESettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.camera.VideoCamera$6: void run()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.settings.wifi.WifiStatusTest: void handleNetworkStateChanged(android.net.NetworkInfo)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.webkit.StreamLoader: boolean setupStreamAndSendStatus()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewCallback: void pokeWakelock()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.location.ILocationManager$Stub$Proxy: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_LOCATION_EXTRA_COMMANDS", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getDeviceId()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.nfc.NfcService$2: java.lang.String getProperties(java.lang.String)>": [
  "android.permission.NFC"
 ], 
 "<android.content.IContentService$Stub$Proxy: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.phone.GsmUmtsCallOptions: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.ConfirmLockPassword: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.RI: void setCallForward(int,int,int,java.lang.String,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.SearchResultsActivity: boolean callSelection()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void restartRadio()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.LoadListener: void handleEndData()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.gsm.SimSmsInterfaceManager$CellBroadcastRangeManager: boolean finishUpdate()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.MessageListAdapter$AvatarCache$ContactData: boolean access$600(com.android.mms.ui.MessageListAdapter$AvatarCache$ContactData,android.database.Cursor)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.phone.InCallScreen: void handleOnscreenButtonClick(int)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.InCallScreenShowActivation: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.development.SyncAdapterDriver: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.google.android.mms.pdu.PduPersister: android.net.Uri persist(com.google.android.mms.pdu.GenericPdu,android.net.Uri)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.app.RingtonePickerActivity: void onPause()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.IBluetooth$Stub: void removeServiceRecord(int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.ShutdownActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.MediaPlaybackService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.IBluetooth$Stub$Proxy: boolean startDiscovery()>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDeviceManager: boolean readPairedDevices()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.gsm.SIMRecords: void handleSms(byte[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.launcher2.Launcher: void showNotifications()>": [
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.browser.BrowserHistoryPage: boolean onContextItemSelected(android.view.MenuItem)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void queueNextSignalStrengthPoll()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.server.AppWidgetService: void systemReady(boolean)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<android.webkit.ContentLoader: boolean setupStreamAndSendStatus()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.contacts.CallDetailActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.browser.BrowserBookmarksAdapter: void <init>(com.android.browser.BrowserBookmarksPage,java.lang.String,java.lang.String,android.graphics.Bitmap,boolean,boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<android.net.sip.ISipService: boolean isRegistered(java.lang.String)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.contacts.ContactsLiveFolders$StarredContacts: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.ConnectivityService: android.net.NetworkInfo[] getAllNetworkInfo()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.fuelgauge.PowerUsageDetail: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.BluetoothHandsfree$25: android.bluetooth.AtCommandResult handleActionCommand()>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: void editMmsMessageItem(com.android.mms.ui.MessageItem)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<android.bluetooth.BluetoothAdapter: boolean isDiscovering()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.bluetooth.IBluetoothHeadset$Stub: boolean connectHeadsetInternal(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$SyncStateTracker: void requestStateChange(android.content.Context,boolean)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.contacts.ui.EditContactActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.cooliris.media.CropImage$1: void onScanCompleted(java.lang.String,android.net.Uri)>": [
  "android.permission.INTERNET"
 ], 
 "<com.cooliris.media.RootLayer: void renderOpaque(com.cooliris.media.RenderView,javax.microedition.khronos.opengles.GL11)>": [
  "android.permission.INTERNET"
 ], 
 "<android.nfc.INfcAdapter$Stub: int createLlcpSocket(int,int,int,int)>": [
  "android.permission.NFC"
 ], 
 "<android.nfc.INfcAdapter$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactItemListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.calendar.SelectCalendarsActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: int[] getAdnRecordsSize(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.bluetooth.BluetoothDevicePreference: int compareTo(java.lang.Object)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.app.backup.IRestoreSession$Stub$Proxy: int restoreAll(long,android.app.backup.IRestoreObserver)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.server.vpn.L2tpIpsecService: boolean onConnect(java.lang.String,java.lang.String)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.view.IWindowSession: int add(android.view.IWindow,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.view.InputChannel)>": [
  "android.permission.SYSTEM_ALERT_WINDOW"
 ], 
 "<com.android.exchange.adapter.EmailSyncAdapter: java.lang.String getSyncKey()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.browser.WebsiteSettingsActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.PhoneBase: void getPreferredNetworkType(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.TestingSettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.wifi.WifiStateTracker: void startEventLoop()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.BLUETOOTH", 
  "android.permission.CHANGE_WIFI_MULTICAST_STATE"
 ], 
 "<com.android.server.WindowManagerService: void performLayoutAndPlaceSurfacesLockedInner(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<android.bluetooth.IBluetoothHeadset$Stub: int getPriority(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManagerProxy: boolean enableCellBroadcastRange(int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.phone.EditPinPreference: void onDialogClosed(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneSubInfo: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.phone.DTMFTwelveKeyDialer$DTMFKeyListener: boolean onKeyDown(android.view.KeyEvent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.service.IEmailService: void loadAttachment(long,java.lang.String,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.wifi.WifiInfo: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: void onStart()>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.phone.IccNetworkDepersonalizationPanel$3: void onClick(android.view.View)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.policy.impl.PowerDialog: void onClick(android.view.View)>": [
  "android.permission.VIBRATE", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.email.AccountBackupRestore: void restoreAccountsIfNeeded(android.content.Context)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.IccProvider: boolean deleteIccRecordFromEf(int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.providers.applications.ApplicationLauncher: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.providers.applications.ApplicationsProvider$MyPackageMonitor: boolean onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.contacts.util.NotifyingAsyncQueryHandler$AsyncQueryListener: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.phone.FdnSetting: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.activity.setup.AccountSetupOutgoing: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.SMSDispatcher: void dispatchPortAddressedPdus(byte[][],int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ActivityManager: void restartPackage(java.lang.String)>": [
  "android.permission.RESTART_PACKAGES", 
  "android.permission.KILL_BACKGROUND_PROCESSES"
 ], 
 "<com.android.browser.Browser: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.inputmethod.pinyin.PinyinIME: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.ListActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.am.ActivityManagerService: void finishBooting()>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.server.location.GpsLocationProvider: void sendMessage(int,int,java.lang.Object)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.ServerThread: void run()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.CLEAR_APP_CACHE", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: void onMaxPendingMessagesReached()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.WapPushOverSms: int dispatchWapPdu(byte[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.inputmethod.latin.PointerTracker: void startLongPressTimer(int)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.providers.downloads.ui.DownloadList: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.DTMFTwelveKeyDialer: void access$000(com.android.phone.DTMFTwelveKeyDialer,char)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.SimUnlockScreen: void onConfigurationChanged(android.content.res.Configuration)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.accounts.IAccountManager: void updateCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.cooliris.picasa.PicasaContentProvider: void syncAlbumPhotos(com.cooliris.picasa.PicasaContentProvider$SyncContext,java.lang.String,com.cooliris.picasa.AlbumEntry,android.content.SyncResult)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.INTERNET"
 ], 
 "<com.android.phone.PhoneApp$PhoneAppBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.voicedialer.VoiceDialerActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.IConnectivityManager$Stub$Proxy: int getNetworkPreference()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.webkit.LoadListener: void handleHeaders(android.net.http.Headers)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.bluetooth.BluetoothNamePreference$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.email.service.EasAuthenticatorService$EasAuthenticator: android.os.Bundle addAccount(android.accounts.AccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.settings.RadioInfo: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.LocationManagerService$2: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.RI: void setCdmaRoamingPreference(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.InCallScreen: void onDestroy()>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.cooliris.picasa.PicasaContentProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.INTERNET"
 ], 
 "<com.android.server.HeadsetObserver: void sendIntent(int,int,int,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.MediaPlaybackActivity$5: void onClick(android.view.View)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.AccountManager: android.accounts.AccountManagerFuture addAccount(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.phone.SipCallOptionHandler: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.quicksearchbox.SearchSettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.IBluetoothHeadset: boolean acceptIncomingConnect(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.mms.ui.ConversationList: void onListItemClick(android.widget.ListView,android.view.View,int,long)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.net.wifi.WifiMonitor$MonitorThread: void run()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.BLUETOOTH", 
  "android.permission.CHANGE_WIFI_MULTICAST_STATE"
 ], 
 "<android.bluetooth.BluetoothAdapter: int getState()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.settings.fuelgauge.BatteryHistoryDetail: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.accounts.IAccountManager: android.accounts.Account[] getAccounts(java.lang.String)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.commands.pm.Pm: void run(java.lang.String[])>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.phone.PhoneUtils: void restoreNoiseSuppression(android.content.Context)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.phone.DTMFTwelveKeyDialer: void startTone(char)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.IBluetooth: android.os.ParcelUuid[] getRemoteUuids(java.lang.String)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$WifiStateTracker: void toggleState(android.content.Context)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$SyncStateTracker$1: void onPostExecute(java.lang.Boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.TextToSpeechSettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.nfc.NfcService: boolean access$500(com.android.nfc.NfcService,boolean,boolean)>": [
  "android.permission.NFC"
 ], 
 "<android.app.TabActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.WallpaperManagerService: void setDimensionHints(int,int)>": [
  "android.permission.SET_WALLPAPER_HINTS"
 ], 
 "<com.android.music.PlaylistBrowserActivity$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.PhoneUtils$4: void onQueryComplete(int,java.lang.Object,com.android.internal.telephony.CallerInfo)>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.browser.BrowserActivity: void sendNetworkType(java.lang.String,java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.media.MediaPlayer: void start()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.tech.MifareClassic: void connect()>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.RI: void setTTYMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.DevelopmentSettings: void writeXmppOptions()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.providers.calendar.CalendarDebug: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.cooliris.media.ActiveWallpaper: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.SelectCalendarsActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.internal.nfc.LlcpSocket: void connect(java.lang.String)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void getSmscAddress(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.PhoneApp: void clearInCallScreenMode()>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: android.database.Cursor queryPhoneNumbers(long)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.contacts.ui.QuickContactActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.music.RenamePlaylist: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.music.AlbumBrowserActivity: boolean onOptionsItemSelected(android.view.MenuItem)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.TimeConsumingPreferenceActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.os.INetworkManagementService: void setDnsForwarders(java.lang.String[])>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getMute(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.BackupManagerService$PerformBackupTask: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.term.Term: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.speech.IRecognitionService$Stub: void cancel(android.speech.IRecognitionListener)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.settings.Display: void onClick(android.view.View)>": [
  "android.permission.CHANGE_CONFIGURATION"
 ], 
 "<com.android.phone.EditFdnContactScreen: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.policy.impl.SimUnlockScreen$TouchInput: void onClick(android.view.View)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: void rejectCall()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.INetworkManagementService$Stub: void stopAccessPoint()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.inputmethod.latin.ExpandableDictionary$LoadDictionaryTask: java.lang.Void doInBackground(java.lang.Void[])>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.READ_CONTACTS", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<android.webkit.WebView: void computeScroll()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.providers.telephony.TelephonyProvider: void checkPermission()>": [
  "android.permission.WRITE_APN_SETTINGS"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.net.wifi.IWifiManager$Stub: void initializeMulticastFiltering()>": [
  "android.permission.CHANGE_WIFI_MULTICAST_STATE"
 ], 
 "<android.media.IAudioService$Stub: void setBluetoothScoOn(boolean)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GsmConnection: void finalize()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.inputmethod.latin.LatinIMEBackupAgent: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.AlertActivity: void dismissAlarm(long)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.internal.nfc.P2pTarget: void connect()>": [
  "android.permission.NFC"
 ], 
 "<com.android.music.MediaPlaybackService$ServiceStub: void setShuffleMode(int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.PrivacySettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IccFileHandler: void updateEFTransparent(int,byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.NfcService$7: int getMode(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.music.ScanningProgress: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.RI: void rejectCall(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.quicksearchbox.google.GoogleSearch: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.transaction.MessagingNotification: com.android.mms.transaction.MessagingNotification$MmsSmsNotificationInfo getSmsNewMessageNotificationInfo(android.content.Context,java.util.Set)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.settings.IccLockSettings: void tryChangeIccLockState()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.util.Recycler: boolean anyThreadOverLimit(android.content.Context)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.cooliris.media.MovieView: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: android.graphics.Bitmap loadContactPhoto(android.net.Uri,android.graphics.BitmapFactory$Options)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.contacts.ViewContactActivity: void joinAggregate(long)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.deskclock.Alarms: void saveSnoozeAlert(android.content.Context,int,long)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.NetworkManagementService: java.lang.String[] listTetheredInterfaces()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.quicksearchbox.google.GoogleSettings: void storeShowWebSuggestionsPreference()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.phone.BluetoothHandsfree: void startDebug()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.app.IActivityManager: void moveTaskToBack(int)>": [
  "android.permission.REORDER_TASKS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setupDataCall(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.certinstaller.CertInstallerMain: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.ContextImpl: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.bluetooth.BluetoothPairingDialog: void createUserEntryDialog()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.nfc.INfcAdapter: java.lang.String getProperties(java.lang.String)>": [
  "android.permission.NFC"
 ], 
 "<com.android.browser.Bookmarks: void removeFromBookmarks(android.content.Context,android.content.ContentResolver,java.lang.String,java.lang.String)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<java.net.DatagramSocket: void <init>(int)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.settings.bluetooth.ConnectSpecificProfilesActivity: void onResume()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.email.activity.MessageView$LoadBodyTask: void onPostExecute(java.lang.String[])>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.net.wifi.IWifiManager$Stub: boolean setWifiEnabled(boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.accounts.IAccountManager$Stub: void getAuthToken(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle)>": [
  "android.permission.USE_CREDENTIALS"
 ], 
 "<android.bluetooth.BluetoothPbap: boolean isConnected(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.browser.BrowserBookmarksPage: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.am.ActivityManagerService: boolean handleApplicationWtf(android.os.IBinder,java.lang.String,android.app.ApplicationErrorReport$CrashInfo)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<android.server.BluetoothEventLoop: void onCreatePairedDeviceResult(java.lang.String,int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.bluetooth.ConnectSpecificProfilesActivity: void refresh()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.location.ILocationManager: boolean addGpsStatusListener(android.location.IGpsStatusListener)>": [
  "android.permission.ACCESS_FINE_LOCATION"
 ], 
 "<com.android.calendar.AlertActivity: void access$400(com.android.calendar.AlertActivity,long)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.settings.SettingsLicenseActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.activity.setup.AccountSecurity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.cooliris.wallpaper.RandomDataSource: android.graphics.Bitmap getBitmapForIndex(android.content.Context,int)>": [
  "android.permission.INTERNET"
 ], 
 "<android.media.IMediaScannerListener$Stub: void scanCompleted(java.lang.String,android.net.Uri)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.calendar.CalendarActivity: void eventsChanged()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$SyncStateTracker: int getTriState(android.content.Context)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.media.AsyncPlayer: void play(android.content.Context,android.net.Uri,boolean,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.ConnectivityService: void sendInetConditionBroadcast(android.net.NetworkInfo)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.SelectCalendarsAdapter: android.database.Cursor getChildrenCursor(android.database.Cursor)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.accounts.ChooseAccountActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.browser.BrowserActivity: boolean onOptionsItemSelected(android.view.MenuItem)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.contacts.model.Sources: void <init>(android.content.Context)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.LocationManagerService: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppBtErrorActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.tech.NdefFormatable: void close()>": [
  "android.permission.NFC"
 ], 
 "<com.android.exchange.SyncManager: void startServiceThread(com.android.exchange.AbstractSyncService,com.android.email.provider.EmailContent$Mailbox)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.BaseCommands: void onRadioAvailable()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord startProcessLocked(java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName,boolean)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void handleRadioAvailable()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.SyncActivityTooManyDeletes: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.provider.Browser: void addSearchUrl(android.content.ContentResolver,java.lang.String)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<android.net.http.EventHandler: boolean handleSslErrorRequest(android.net.http.SslError)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.svox.pico.Pico: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.AccountPreferenceBase: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.policy.impl.KeyguardScreenCallback: void goToUnlockScreen()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.mms.data.WorkingMessage: android.net.Uri access$400(com.google.android.mms.pdu.PduPersister,com.google.android.mms.pdu.SendReq,com.android.mms.model.SlideshowModel)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.LocationManagerService: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void setCdmaSubscription(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.deskclock.SetAlarm: void onBackPressed()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.nfc.INfcAdapter$Stub$Proxy: int createLlcpConnectionlessSocket(int)>": [
  "android.permission.NFC"
 ], 
 "<com.cooliris.media.GridLayer: void stop()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.bluetooth.LocalBluetoothProfileManager: void setPreferred(android.bluetooth.BluetoothDevice,boolean)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.webkit.WebView: void onScrollChanged(int,int,int,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.DevelopmentSettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.LocationManagerService$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.cooliris.media.GridLayer: boolean onTouchEvent(android.view.MotionEvent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.SyncManager$ActiveSyncContext: void onFinished(android.content.SyncResult)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.mms.transaction.RetrieveTransaction: void ensureRouteToHost(java.lang.String,com.android.mms.transaction.TransactionSettings)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void conference()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.browser.BrowserBookmarksPage: boolean onContextItemSelected(android.view.MenuItem)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.exchange.SyncManager: void stopAccountSyncs(long,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ui.EditContactActivity$PersistTask: java.lang.Object doInBackground(java.lang.Object[])>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.mms.ui.DeliveryReportActivity: void initListAdapter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothClass getBluetoothClass()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.providers.downloads.Helpers: java.io.File locateDestinationDirectory(android.content.Context,java.lang.String,int,long)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.settings.ManageAccountsSettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.SoundSettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.deskclock.AlarmAlert: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.transaction.NotificationTransaction: byte[] sendPdu(long,byte[],java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.DataConnection$DcDisconnectingState: void enter()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.RI: void acquireWakeLock()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.INetworkManagementService$Stub$Proxy: void setDnsForwarders(java.lang.String[])>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.settings.AccountPreferenceBase: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: boolean disconnectInt(com.android.settings.bluetooth.CachedBluetoothDevice,com.android.settings.bluetooth.LocalBluetoothProfileManager$Profile)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.bluetooth.LocalBluetoothProfileManager$HeadsetProfileManager: void setPreferred(android.bluetooth.BluetoothDevice,boolean)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.net.sip.SipManager: android.net.sip.SipAudioCall takeAudioCall(android.content.Intent,android.net.sip.SipAudioCall$Listener)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.internal.telephony.gsm.SimCard: void broadcastIccStateChangedIntent(java.lang.String,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.InCallScreen: void updateDialpadVisibility()>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.voicedialer.VoiceDialerActivity$CommandRecognizerClient$2: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.contacts.ui.QuickContactActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.cooliris.picasa.GDataClient: void delete(java.lang.String,com.cooliris.picasa.GDataClient$Operation)>": [
  "android.permission.INTERNET"
 ], 
 "<android.app.ContextImpl$ApplicationPackageManager: void getPackageSizeInfo(java.lang.String,android.content.pm.IPackageStatsObserver)>": [
  "android.permission.GET_PACKAGE_SIZE"
 ], 
 "<com.android.settings.DebugIntentSender: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.sip.SipSettings: void handleSipReceiveCallsOption(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.USE_SIP"
 ], 
 "<com.android.exchange.EasSyncService: boolean tryProvision()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.IccCard: void supplyNetworkDepersonalization(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.MediaPlayer: void setWakeMode(android.content.Context,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.SlideView: void startVideo()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.LockPatternKeyguardView: void maybeEnableFallback(android.content.Context)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.cooliris.media.MovieViewControl: void onPause()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ActivityManagerNative: void signalPersistentProcesses(int)>": [
  "android.permission.SIGNAL_PERSISTENT_PROCESSES"
 ], 
 "<com.android.calendar.MonthActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.internal.telephony.Phone: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.SMSDispatcher: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipConnection$1: void onChanged(android.net.sip.SipAudioCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.MediaFormat: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.AccountSyncSettings: void onResume()>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.READ_SYNC_STATS"
 ], 
 "<android.nfc.INfcTag$Stub: int close(int)>": [
  "android.permission.NFC"
 ], 
 "<android.net.sip.SipManager: void open(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.SipRegistrationListener)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_SIP"
 ], 
 "<android.webkit.WebViewCore: void <init>(android.content.Context,android.webkit.WebView,android.webkit.CallbackProxy,java.util.Map)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.contacts.RecentCallsListActivity: java.lang.String getBetterNumberFromContacts(java.lang.String)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.WifiService: boolean disableNetwork(int)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.music.MediaPickerActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.nfc.INfcAdapter$Stub: int createLlcpServiceSocket(int,java.lang.String,int,int,int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.phone.ChangeIccPinScreen: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppTransferActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: void fetchBtClass()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.DeviceStorageMonitorService: void cancelFullNotification()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.providers.settings.DatabaseHelper: void upgradeLockPatternLocation(android.database.sqlite.SQLiteDatabase)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: int getBondState()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ui.EditContactActivity$PersistTask: java.lang.Object doInBackground(java.lang.Object,java.lang.Object[])>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.mms.data.WorkingMessage: void access$600(com.android.mms.data.WorkingMessage,com.android.mms.data.Conversation)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.browser.Tab$3: boolean onCreateWindow(android.webkit.WebView,boolean,boolean,android.os.Message)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<android.provider.Settings$System: boolean putConfiguration(android.content.ContentResolver,android.content.res.Configuration)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.settings.ConfirmLockPattern: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.camera.NoSearchActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.ui.ConversationList$ThreadListQueryHandler: void onDeleteComplete(int,java.lang.Object,int)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.ISms: java.util.List getAllMessagesFromIccEf()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.server.WifiService: void releaseMulticastLock()>": [
  "android.permission.CHANGE_WIFI_MULTICAST_STATE"
 ], 
 "<com.android.exchange.EasSyncService: void run()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CALENDAR", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_CALENDAR", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.cdma.RuimFileHandler: void loadEFImgTransparent(int,int,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.server.BluetoothA2dpService: void handleSinkStateChange(android.bluetooth.BluetoothDevice,int,int)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.webkit.WebView: void goBackOrForward(int,boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.app.backup.BackupAgentHelper: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.providers.contacts.ContactsProvider2: int updateData(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[],boolean)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.policy.impl.KeyguardScreenCallback: void keyguardDone(boolean)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.phone.BluetoothHandsfree$24: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice$1: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.WindowManagerService: void removeWindowInnerLocked(com.android.server.WindowManagerService$Session,com.android.server.WindowManagerService$WindowState)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.internal.telephony.PhoneBase: void setCdmaRoamingPreference(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.AudioService$AudioServiceBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.google.common.io.CharStreams: java.lang.StringBuilder toStringBuilder(com.google.common.io.InputSupplier)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.browser.BrowserBackupAgent: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapObexServer: int onGet(javax.obex.Operation)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void reRegisterNetwork(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: void handleSetHidden(boolean)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.browser.WebsiteSettingsActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getVoiceMailNumber()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.app.backup.BackupAgent: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.cooliris.media.Gallery: void access$000(com.cooliris.media.Gallery)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.app.AlertActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneFactory: com.android.internal.telephony.sip.SipPhone makePhone(java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier)>": [
  "android.permission.CHANGE_CONFIGURATION", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.providers.downloads.DownloadService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.BootReceiver: void access$100(com.android.server.BootReceiver,android.content.Context)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<android.media.AsyncPlayer: void startSound(android.media.AsyncPlayer$Command)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.TwelveKeyDialer: boolean onLongClick(android.view.View)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.music.MediaPlaybackService: void access$400(com.android.music.MediaPlaybackService)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ContextImpl: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.ui.ConversationListItem: void updateFromView()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.mms.transaction.MessagingNotification: com.android.mms.transaction.MessagingNotification$MmsSmsNotificationInfo getMmsNewMessageNotificationInfo(android.content.Context,java.util.Set)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.bluetooth.IBluetoothHeadset$Stub$Proxy: int getState(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.exchange.adapter.CalendarSyncAdapter$EasCalendarSyncParser: void changeParser(com.android.exchange.adapter.CalendarSyncAdapter$CalendarOperations)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipAudioCallAdapter: void onCallEnded(android.net.sip.SipAudioCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapService$2: boolean connect(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.camera.ShutterButton: boolean performClick()>": [
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.providers.settings.SettingsHelper: void setLocaleData(byte[])>": [
  "android.permission.CHANGE_CONFIGURATION"
 ], 
 "<android.net.IThrottleManager$Stub$Proxy: int getThrottle(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.music.AlbumBrowserActivity: boolean onContextItemSelected(android.view.MenuItem)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.providers.userdictionary.DictionaryBackupAgent: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.internal.telephony.IccRecords: void setVoiceMailNumber(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ui.ShowOrCreateActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.cooliris.media.GridLayer: void renderBlended(com.cooliris.media.RenderView,javax.microedition.khronos.opengles.GL11)>": [
  "android.permission.INTERNET"
 ], 
 "<android.telephony.SmsManager: boolean disableCellBroadcast(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.app.IWallpaperManager: android.os.ParcelFileDescriptor setWallpaper(java.lang.String)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.telephony.SmsManager: java.util.ArrayList getAllMessagesFromIcc()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.cooliris.media.ReverseGeocoder: java.lang.String computeMostGranularCommonLocation(com.cooliris.media.MediaSet)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.browser.widget.BookmarkWidgetService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.am.ActivityManagerService: void setProcessLimit(int)>": [
  "android.permission.SET_PROCESS_LIMIT"
 ], 
 "<android.webkit.WebView: void clearCache(boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.UUSInfo)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.ManageSimMessages: void onNewIntent(android.content.Intent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.accounts.AccountManager$3: void startTask()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.music.QueryBrowserActivity: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.TetherSettings: void updateState()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean connectHeadset(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.location.LocationManager: boolean addNmeaListener(android.location.GpsStatus$NmeaListener)>": [
  "android.permission.ACCESS_FINE_LOCATION"
 ], 
 "<android.accounts.AccountManager$BaseFutureTask: void doWork()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.mms.transaction.MessageStatusReceiver: android.telephony.SmsMessage updateMessageStatus(android.content.Context,android.net.Uri,byte[])>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.providers.contacts.ContactsProvider2: void verifyAccounts()>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.nfc.NfcService$4: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.phone.NotificationMgr: void showNetworkSelection(java.lang.String)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.webkit.DataLoader: boolean setupStreamAndSendStatus()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.net.Downloads$ByUri: android.net.Downloads$StatusInfo getStatus(android.content.Context,java.lang.String,long)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.music.TrackBrowserActivity: boolean onContextItemSelected(android.view.MenuItem)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.exchange.CalendarSyncAdapterService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.Service: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.activity.MessageList: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.speechrecorder.SpeechRecorderActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.music.IMediaPlaybackService: int removeTrack(long)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.DTMFTwelveKeyDialer: void processDtmf(char)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.activity.Debug: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.IBluetooth$Stub$Proxy: boolean fetchRemoteUuids(java.lang.String,android.os.ParcelUuid,android.bluetooth.IBluetoothCallback)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.net.IConnectivityManager$Stub$Proxy: int getLastTetherError(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.calendar.CalendarView: void access$300(com.android.calendar.CalendarView)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.internal.telephony.RI: void processUnsolicited(android.os.Parcel)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.systemui.usb.StorageNotification: void onStorageStateChangedAsync(java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.email.mail.store.ExchangeStore: android.accounts.AccountManagerFuture removeSystemAccount(android.content.Context,com.android.email.provider.EmailContent$Account,android.accounts.AccountManagerCallback)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.content.ContentResolver: boolean getMasterSyncAutomatically()>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: void handleRadioNotAvailable()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.music.AudioPreview$PreviewPlayer: void pause()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.AudioService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.nfc.NfcService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.transaction.PushReceiver$ReceivePushTask: java.lang.Void doInBackground(android.content.Intent[])>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.phone.PhoneInterfaceManager: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CALL_PHONE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.settings.bluetooth.BluetoothPermissionActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.INTERNET", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.TextToSpeechSettings: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.util.HierarchicalState: void exit()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.mms.ui.SlideEditorActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.view.IWindowManager$Stub$Proxy: void setAnimationScales(float[])>": [
  "android.permission.SET_ANIMATION_SCALE"
 ], 
 "<com.google.common.io.CharStreams: java.lang.String readFirstLine(com.google.common.io.InputSupplier)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void expand()>": [
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.nfc.ndefpush.NdefPushServer$ServerThread: void run()>": [
  "android.permission.NFC"
 ], 
 "<com.android.development.Development: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: void setEmptyText()>": [
  "android.permission.READ_SYNC_STATS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.nfc.INfcTag: int formatNdef(int,byte[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.mms.transaction.MessagingNotification$MmsSmsNotificationInfo: void deliver(android.content.Context,boolean,int,int)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.vpn.VpnService$NotificationHelper: void enableNotification(android.app.Notification)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.soundrecorder.SoundRecorder: void access$100(com.android.soundrecorder.SoundRecorder)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.wifi.WifiApEnabler$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.ShutdownActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.location.GpsNetInitiatedHandler: void handleNiNotification(com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.net.IConnectivityManager$Stub: java.lang.String[] getTetherableWifiRegexs()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void <init>(com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean)>": [
  "android.permission.CHANGE_CONFIGURATION", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.provision.DefaultActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.providers.downloads.DownloadProvider: void checkInsertPermissions(android.content.ContentValues)>": [
  "android.permission.INTERNET"
 ], 
 "<android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean disconnectSink(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void <init>(android.content.Context,com.android.internal.telephony.PhoneNotifier)>": [
  "android.permission.CHANGE_CONFIGURATION", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.development.AccountsTester$ButtonClickListener: void onClick(android.view.View)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: boolean callContact(android.database.Cursor)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.TelephonyRegistry: void broadcastServiceStateChanged(android.telephony.ServiceState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.SIMFileHandler: void loadEFImgLinearFixed(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.InputMethodManagerService: boolean setInputMethodEnabledLocked(java.lang.String,boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.development.Connectivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.IBluetooth$Stub: java.lang.String getName()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: boolean performHapticFeedbackLw(android.view.WindowManagerPolicy$WindowState,int,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void setBandMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.DayActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.transaction.SendTransaction: byte[] sendPdu(byte[],java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.app.NativeActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.quicksearchbox.google.GoogleSettings: boolean onPreferenceClick(android.preference.Preference)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GsmConnection: void releaseWakeLock()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.TimeConsumingPreferenceActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.INfcAdapter$Stub$Proxy: android.nfc.IP2pInitiator getP2pInitiatorInterface()>": [
  "android.permission.NFC"
 ], 
 "<com.android.contacts.ui.EditContactActivity$QueryEntitiesTask: void onPostExecute(com.android.contacts.ui.EditContactActivity,com.android.contacts.model.EntitySet)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.mms.ui.AudioAttachmentView$1: void onCompletion(android.media.MediaPlayer)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.LocationManager: void requestLocationUpdates(long,float,android.location.Criteria,android.app.PendingIntent)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.gsm.UsimPhoneBookManager: void readPbrFileAndWait()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.ZonePicker: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: void notifyScreenOffLocked()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.phone.ManageConferenceUtils$1: void onClick(android.view.View)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.vpn.L2tpIpsecService: void onDisconnect()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.phone.CdmaCallOptions: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.music.DeleteItems: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.quicksearchbox.SearchSettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.music.AudioPreview$PreviewPlayer: void access$300(android.media.MediaPlayer,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.exchange.adapter.AbstractSyncAdapter: boolean isSyncable()>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void createAllApnList()>": [
  "android.permission.WRITE_APN_SETTINGS"
 ], 
 "<com.android.contacts.RecentCallsListActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.CallFeaturesSetting: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.ui.SlideViewInterface: void stopAudio()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.google.common.io.Files: long getChecksum(java.io.File,java.util.zip.Checksum)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.calendar.DayView: boolean onKeyDown(int,android.view.KeyEvent)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.internal.telephony.PhoneBase: void setPropertiesByCarrier()>": [
  "android.permission.CHANGE_CONFIGURATION", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.contacts.SearchResultsActivity: void access$300(com.android.contacts.ContactsListActivity,int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.IIccPhoneBook: int[] getAdnRecordsSize(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.inputmethod.voice.VoiceInput: void startListening(com.android.inputmethod.voice.FieldContext,boolean)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.phone.PhoneUtils: void separateCall(com.android.internal.telephony.Connection)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getDeviceSvn()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.net.wifi.IWifiManager: void acquireMulticastLock(android.os.IBinder,java.lang.String)>": [
  "android.permission.CHANGE_WIFI_MULTICAST_STATE"
 ], 
 "<com.android.email.activity.MessageView$LoadMessageTask: void onPostExecute(java.lang.Object)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.speech.tts.ITts$Stub$Proxy: int playSilence(java.lang.String,long,int,java.lang.String[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void getSmscAddress(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.util.Recycler$MmsRecycler: void deleteMessagesOlderThanDate(android.content.Context,long,long)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.content.IContentService$Stub$Proxy: boolean isSyncActive(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.settings.AccountPreferenceBase: void onCreate(android.os.Bundle)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.READ_SYNC_STATS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.settings.ChooseLockPatternTutorial: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.backup.IRestoreSession$Stub$Proxy: int restorePackage(java.lang.String,android.app.backup.IRestoreObserver)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.defcontainer.DefaultContainerService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.server.BluetoothA2dpService: boolean isSinkDevice(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.calendar.SelectCalendarsAdapter: void doSaveAction()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.soundrecorder.SoundRecorder: void updateTimerView()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ContactsListActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void screenTurnedOn()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void notifyServiceStateChangedP(android.telephony.ServiceState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.provider.Calendar$CalendarAlerts: android.net.Uri insert(android.content.ContentResolver,long,long,long,long,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.browser.search.OpenSearchSearchEngine: boolean isNetworkConnected(android.content.Context)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.webkit.GeolocationService: void setEnableGps(boolean)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.location.ILocationManager$Stub$Proxy: java.util.List getProviders(android.location.Criteria,boolean)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.exchange.SyncManager: void sendMessageRequest(com.android.exchange.Request)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.CalendarView: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.internal.telephony.RI: void changeIccPin(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.DemoDataSet: void addDefaultData()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.wifi.IWifiManager: boolean pingSupplicant()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.nfc.tech.MifareUltralight: byte[] readPages(int)>": [
  "android.permission.NFC"
 ], 
 "<android.net.IConnectivityManager$Stub: int getNetworkPreference()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.AddAccountSettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.os.INetworkManagementService$Stub$Proxy: void disableNat(java.lang.String,java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.internal.app.IBatteryStats: void noteBluetoothOn()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.providers.downloads.ui.DownloadList: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.systemui.statusbar.policy.StatusBarPolicy: void showLowBatteryWarning()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.BluetoothDeviceProfileState: boolean processCommand(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: void cancelPostDial()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.GetPin2Screen: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.ViewContactActivity: void buildEntries()>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.bluetooth.IBluetooth: boolean setTrust(java.lang.String,boolean)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.sip.SipSettings: void retrieveSipLists()>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.music.AlbumBrowserActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.BluetoothDeviceProfileState$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.CallNotifier: void <init>(com.android.phone.PhoneApp,com.android.internal.telephony.Phone,com.android.phone.Ringer,com.android.phone.BluetoothHandsfree,com.android.phone.CallLogAsync)>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.providers.contacts.LegacyContactImporter: void insertCall(android.database.Cursor)>": [
  "android.permission.WRITE_CONTACTS"
 ], 
 "<android.net.wifi.IWifiManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_MULTICAST_STATE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.contacts.ContactsLiveFolders$AllContacts: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.ConfirmLockPassword: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.RI: void conference(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.service.IEmailServiceCallback$Stub$Proxy: void syncMailboxStatus(long,int,int)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.ServiceStateTracker: void powerOffRadioSafely()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapVcardManager: int composeAndSendVCards(javax.obex.Operation,java.lang.String,boolean,java.lang.String,boolean)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.accounts.AccountManagerService: void confirmCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,android.os.Bundle,boolean)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<android.net.http.RequestQueue$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.commands.monkey.Monkey: int run(java.lang.String[])>": [
  "android.permission.SIGNAL_PERSISTENT_PROCESSES", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.email.Controller$Result: void loadAttachmentCallback(com.android.email.mail.MessagingException,long,long,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.ChooseLockPattern: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.wifi.WifiManager: boolean disableNetwork(int)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.mms.data.Conversation: void blockingMarkAllMmsMessagesAsSeen(android.content.Context)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.development.SyncAdapterDriver: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.launcher2.WallpaperChooser: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.server.BluetoothA2dpService: boolean connectSinkInternal(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: boolean disableNetwork(int)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.content.SyncManager$6: void onServiceChanged(java.lang.Object,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onCdmaDataDetached()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.location.LocationManager: void _requestLocationUpdates(java.lang.String,android.location.Criteria,long,float,boolean,android.location.LocationListener,android.os.Looper)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.net.http.HttpsConnection: void processRequests(android.net.http.Request)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.PhoneBase: void invokeOemRilRequestRaw(byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.inputmethod.latin.LatinKeyboardView: boolean handleSuddenJump(android.view.MotionEvent)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<android.net.IConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.browser.BrowserActivity: void resumeWebViewTimers()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.mms.data.Conversation: void markAsRead()>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.phone.PhoneUtils: boolean answerCall(com.android.internal.telephony.Call)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.bluetooth.BluetoothDevice: boolean setPairingConfirmation(boolean)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.SyncActivityTooManyDeletes: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.TimeConsumingPreferenceActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.cooliris.media.Photographs: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.camera.Camera: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.MessagingController$8: void run()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.deskclock.Alarms: void enableAlert(android.content.Context,com.android.deskclock.Alarm,long)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.IConnectivityManager$Stub$Proxy: boolean isTetheringSupported()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: void hangup()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.exchange.adapter.EmailSyncAdapter$EasEmailSyncParser: boolean parse()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.PackageManagerService$7: void run()>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<android.media.AsyncPlayer: void enqueueLocked(android.media.AsyncPlayer$Command)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.AccountManager$5: android.accounts.AccountManagerFuture start()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.app.DisableCarModeActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.ui.MessageUtils: java.lang.String getMultimediaMessageDetails(android.content.Context,android.database.Cursor,int)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.browser.Tab$2: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.music.RepeatingImageButton: void access$000(com.android.music.RepeatingImageButton,boolean)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.transaction.PrivilegedSmsReceiver: void onReceiveWithPrivilege(android.content.Context,android.content.Intent,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.INfcAdapter$Stub$Proxy: android.nfc.IP2pTarget getP2pTargetInterface()>": [
  "android.permission.NFC"
 ], 
 "<com.android.email.activity.FolderMessageList: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.nfc.LlcpSocket: void send(byte[])>": [
  "android.permission.NFC"
 ], 
 "<android.test.IsolatedContext: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.RI: void getCurrentCalls(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.VideoView: void openVideo()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: boolean addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.settings.BandMode: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.Call: void hangupIfAlive()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.providers.downloads.ui.DownloadList: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.ReceiverRestrictedContext: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.systemui.usb.UsbAccessoryUriActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.IBluetoothHeadset: boolean connectHeadset(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.music.AudioPreview: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppTransferActivity: void updateProgressbar()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void enableKeyguard(boolean)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.providers.downloads.SizeLimitActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.server.BluetoothService: boolean isEnabled()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.bluetooth.AtCommandHandler: android.bluetooth.AtCommandResult handleActionCommand()>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.sip.SipSettings: void processActiveProfilesFromSipService()>": [
  "android.permission.USE_SIP"
 ], 
 "<android.server.BluetoothService: java.lang.String getPropertyInternal(java.lang.String)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.settings.MasterClear: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.activity.MessageView$CustomWebViewClient: void onReceivedHttpAuthRequest(android.webkit.WebView,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.deskclock.SettingsActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.bluetooth.BluetoothSettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState: boolean processMessage(android.os.Message)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.nfc.NfcService$EnableDisableDiscoveryTask: java.lang.Void doInBackground(java.lang.Boolean[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.WebTextView: void onSelectionChanged(int,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: void releaseMulticastLock()>": [
  "android.permission.CHANGE_WIFI_MULTICAST_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void dispatchPdus(byte[][])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.exchange.adapter.ContactsSyncAdapter: boolean sendLocalChanges(com.android.exchange.adapter.Serializer)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.cooliris.media.Wallpaper: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.ChooseLockPattern: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.wifi.WifiStatusTest$3: void onClick(android.view.View)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.mms.data.Contact: android.net.Uri getUri()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.fuelgauge.PowerUsageSummary: void processMiscUsage()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: void onCreateContextMenu(android.view.ContextMenu)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.am.BatteryStatsService: long getAwakeTimePlugged()>": [
  "android.permission.BATTERY_STATS"
 ], 
 "<com.android.mms.transaction.TransactionService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.app.RingtonePickerActivity: void stopAnyPlayingRingtone()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.OtaUtils: void onClickOtaEndButton()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.BandMode$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.IPowerManager: void acquireWakeLock(int,android.os.IBinder,java.lang.String,android.os.WorkSource)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.Connection: void hangup()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.AccessibilitySettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.util.HierarchicalStateMachine$HsmHandler$HaltingState: void enter()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.email.service.EmailServiceProxy$10: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.AttachImage: void onActivityResult(int,int,android.content.Intent)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.UUSInfo)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.phone.BluetoothHandsfree$12: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.systemui.statusbar.StatusBarService$5: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.phone.CellBroadcastSms: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.IConnectivityManager: java.lang.String[] getTetherableUsbRegexs()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.contacts.SearchResultsActivity: void doContactDelete(android.net.Uri)>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.cooliris.media.DetailMode: java.lang.CharSequence[] populateSetViewDetailModeStrings(android.content.Context,com.cooliris.media.MediaSet,int)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.app.ExpandableListActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppIncomingFileConfirmActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.music.MediaPlaybackActivity$10: void onRepeat(android.view.View,long,int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.BluetoothDevice: boolean setPasskey(int)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.server.BluetoothService: java.lang.String[] getRemoteDeviceProperties(java.lang.String)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.SystemBackupAgent: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.DevelopmentSettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.PackageManagerService: void replacePackageLI(android.content.pm.PackageParser$Package,int,int,java.lang.String,com.android.server.PackageManagerService$PackageInstalledInfo)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.music.MusicPicker: void onCompletion(android.media.MediaPlayer)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.NfcService$2: android.nfc.ILlcpConnectionlessSocket getLlcpConnectionlessInterface()>": [
  "android.permission.NFC"
 ], 
 "<android.nfc.ILlcpSocket: int connect(int,int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.music.TrackBrowserActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.nfc.ILlcpSocket$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.providers.telephony.MmsProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.phone.BluetoothHandsfree: boolean startVoiceRecognition()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.mms.ui.EditSlideDurationActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.ui.ClassZeroActivity: android.net.Uri replaceMessage(android.telephony.SmsMessage)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.term.Term: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.server.BluetoothService: boolean attemptAutoPair(java.lang.String)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.contacts.ui.ShowOrCreateActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.systemui.statusbar.StatusBarService: void onCreate()>": [
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.nfc.P2pInitiator: byte[] getGeneralBytes()>": [
  "android.permission.NFC"
 ], 
 "<android.location.ILocationManager: void addProximityAlert(double,double,float,long,android.app.PendingIntent)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.phone.EmergencyCallHandler: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.app.ResolverActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.webkit.WebIconDatabase: void releaseIconForPageUrl(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<android.net.wifi.IWifiManager$Stub: boolean isMulticastEnabled()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.development.Development: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.service.IEmailServiceCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.contacts.ViewContactActivity$2: void onPostExecute(java.lang.Object)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.location.ILocationManager$Stub: void requestLocationUpdatesPI(java.lang.String,android.location.Criteria,long,float,boolean,android.app.PendingIntent)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.phone.CallNotifier: void onQueryComplete(int,java.lang.Object,com.android.internal.telephony.CallerInfo)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.phone.PhoneApp: void onCreate()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_APN_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.CHANGE_CONFIGURATION", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.settings.SecuritySettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.ContactsListActivity: void returnPickerResult(android.database.Cursor,java.lang.String,android.net.Uri,int)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.cooliris.media.Wallpaper: void onActivityResult(int,int,android.content.Intent)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.systemui.usb.UsbPermissionActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.view.WindowManagerPolicy: void systemReady()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.view.ContextThemeWrapper: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.ConnectivityService: java.lang.String[] getTetherableUsbRegexs()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.DateTimeSettings: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.email.activity.setup.AccountSetupNames: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.LocationManagerService$Receiver: void binderDied()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmSMSDispatcher: void sendMultipartText(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void handlePollStateResult(int,android.os.AsyncResult)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.VIBRATE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.music.IMediaPlaybackService: void moveQueueItem(int,int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void queryCLIP(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.IWifiManager: void startScan(boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.mms.ui.ConversationList$ThreadListQueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.email.activity.MessageList: void onResume()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.music.MediaPlaybackActivity: void scanForward(int,long)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void setPropertiesByCarrier()>": [
  "android.permission.CHANGE_CONFIGURATION", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.mms.data.Conversation: void startQueryHaveLockedMessages(android.content.AsyncQueryHandler,long,int)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.mms.transaction.Transaction: byte[] sendPdu(byte[],java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.phone.EmergencyDialer: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.InCallScreen: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.inputmethod.pinyin.PinyinIME: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.voicedialer.BluetoothVoiceDialerActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.SearchResultsActivity: android.database.Cursor doFilter(java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.ConnectivityService: void handleInetConditionHoldEnd(int,int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IIccPhoneBook$Stub: java.util.List getAdnRecordsInEf(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.mms.model.AudioModel: void <init>(android.content.Context,java.lang.String,java.lang.String,com.android.mms.drm.DrmWrapper)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.bluetooth.IBluetooth$Stub$Proxy: android.os.ParcelUuid[] getRemoteUuids(java.lang.String)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$WifiStateTracker: void setCurrentState(android.content.Context,int)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.nfc.IP2pTarget: int connect(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.NotificationManagerService: void access$1500(com.android.server.NotificationManagerService,boolean)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.ISms$Stub: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS"
 ], 
 "<com.android.internal.telephony.WapPushOverSms: void dispatchWapPdu_PushCO(byte[],int,int,int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.deskclock.AlarmAlertFullScreen: void access$000(com.android.deskclock.AlarmAlertFullScreen)>": [
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.browser.Tab: boolean restoreState(android.os.Bundle)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.bluetooth.IBluetooth: int getRemoteServiceChannel(java.lang.String,android.os.ParcelUuid)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.phone.BluetoothAtPhonebook$3: android.bluetooth.AtCommandResult handleTestCommand()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.nfc.NfcAdapter: android.nfc.INfcAdapter getService()>": [
  "android.permission.NFC"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: void addAttachment(int,boolean)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.music.MediaPlaybackService: void open(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.NetworkSetting: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.EmergencyCallbackModeService: void access$000(com.android.phone.EmergencyCallbackModeService,android.os.AsyncResult)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.LoadAverageService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.gsm.SimCard: void handleIccCardStatus(com.android.internal.telephony.IccCardStatus)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.INotificationManager: void enqueueNotificationWithTag(java.lang.String,java.lang.String,int,android.app.Notification,int[])>": [
  "android.permission.VIBRATE"
 ], 
 "<com.cooliris.picasa.PicasaApi: com.cooliris.picasa.PicasaApi$AuthAccount[] getAuthenticatedAccounts(android.content.Context)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void exitEmergencyCallbackMode()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.SIMFileHandler: void updateEFTransparent(int,byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void setSmscAddress(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.cooliris.media.ActiveWallpaper: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.am.ActivityManagerService: boolean handleAppCrashLocked(com.android.server.am.ProcessRecord)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.internal.telephony.PhoneFactory: void makeDefaultPhone(android.content.Context)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_APN_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.CHANGE_CONFIGURATION", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.settings.bluetooth.BluetoothSettings: void onDeviceAdded(com.android.settings.bluetooth.CachedBluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.VibratorService$VibrateThread: void <init>(com.android.server.VibratorService,com.android.server.VibratorService$Vibration)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.INfcTag$Stub: int ndefMakeReadOnly(int)>": [
  "android.permission.NFC"
 ], 
 "<android.bluetooth.IBluetooth$Stub$Proxy: int getBondState(java.lang.String)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.phone.NetworkSetting: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.PhoneApp: void clearOtaState()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void handleImportRequest(int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.quicksearchbox.SearchActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.exchange.adapter.AbstractSyncParser: void commit()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.camera.VideoCamera: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void startDtmf(char,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.activity.setup.AccountSettings: void onCreate(android.os.Bundle)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.SIMRecords: void onSimReady()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.ZoneList: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.accounts.IAccountManager$Stub: void editProperties(android.accounts.IAccountManagerResponse,java.lang.String,boolean)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.music.AudioPreview$PreviewPlayer: boolean suspend()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.AlertService: void processMessage(android.os.Message)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<android.net.wifi.WifiStateTracker$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.calculator2.Calculator: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.cooliris.media.GridInputProcessor: boolean onKeyDown(int,android.view.KeyEvent,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.CallCard: void updateNoCall(com.android.internal.telephony.CallManager)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: void handleImportRequest(int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.telephony.gsm.SmsManager: java.util.ArrayList getAllMessagesFromSim()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.provider.Calendar$EventsEntity$EntityIteratorImpl: android.content.Entity next()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.deskclock.DeskClock: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.ActivityManagerNative: void setAlwaysFinish(boolean)>": [
  "android.permission.SET_ALWAYS_FINISH", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.accounts.AccountManagerService: void invalidateAuthToken(java.lang.String,java.lang.String)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.contacts.ExportVCardActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.providers.applications.ApplicationLauncher: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.data.WorkingMessage$1: void run()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.settings.ConfirmLockPassword: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.SyncManager$SyncHandler: void runStateIdle()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.BrowserFrame: android.webkit.LoadListener startLoadingResource(int,java.lang.String,java.lang.String,java.util.HashMap,byte[],long,int,boolean,boolean,boolean,java.lang.String,java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.VoiceInputOutputSettings: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.phone.InCallScreen: void onResume()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.contacts.ImportVCardActivity$VCardReadThread: void finalize()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.IVibratorService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.phone.sip.SipSettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.AdnRecordCache: void updateAdnBySearch(int,com.android.internal.telephony.AdnRecord,com.android.internal.telephony.AdnRecord,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.UsimPhoneBookManager: void readAdnFileAndWait(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.AudioService$AudioHandler: void access$3400(android.media.AudioService$AudioHandler,android.media.MediaPlayer)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.transaction.MessageSender: boolean sendMessage(long)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.email.activity.AccountFolderList$DeleteAccountTask: java.lang.Void doInBackground(java.lang.Void[])>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipCall: void hangupIfAlive()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.defcontainer.DefaultContainerService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void dispose()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppTransferHistory: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void setTimeFromNITZString(java.lang.String,long)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.server.ConnectivityService: void <init>(android.content.Context)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.PhoneBase: void setSystemLocale(java.lang.String,java.lang.String)>": [
  "android.permission.CHANGE_CONFIGURATION"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppUtility: com.android.bluetooth.opp.BluetoothOppTransferInfo queryRecord(android.content.Context,android.net.Uri)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: void buildAddAddressToContactMenuItem(android.view.Menu)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.content.ContentService: boolean getMasterSyncAutomatically()>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.music.VideoBrowserActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: void pokeWakelock(int)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.webkit.WebView$1: void onZoom(boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: android.net.Uri getUriToQuery()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.development.BadBehaviorActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.TwelveKeyDialer: void keyPressed(int)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.browser.BrowserActivity: boolean closeDialog(com.android.browser.WebDialog)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.location.ILocationManager$Stub$Proxy: boolean isProviderEnabled(java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.mms.data.WorkingMessage: void sendMmsWorker(com.android.mms.data.Conversation,android.net.Uri,com.google.android.mms.pdu.PduPersister,com.android.mms.model.SlideshowModel,com.google.android.mms.pdu.SendReq)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.browser.BrowserBackupAgent: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.deskclock.AlarmKlaxon: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GsmSMSDispatcher: void handleStatusReport(android.os.AsyncResult)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.webkit.WebTextView: boolean onTouchEvent(android.view.MotionEvent)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.mms.ui.MessageListAdapter$AvatarCache$ContactData: boolean startInitialQuery()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.bluetooth.IBluetooth$Stub$Proxy: boolean setDeviceOutOfBandData(java.lang.String,byte[],byte[])>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.BatteryService: void <init>(android.content.Context)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.os.storage.ExternalStorageFormatter: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.BluetoothAdapter: int getScanMode()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.music.AlbumBrowserActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: boolean processMessage(android.os.Message)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.widget.LockPatternUtils: java.lang.String getSalt()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.phone.InCallScreen: void onBluetoothClick()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.BluetoothHeadsetService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.DeviceStorageMonitorService: void clearCache()>": [
  "android.permission.CLEAR_APP_CACHE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void queryCallForwardStatus(int,int,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.DeleteFdnContactScreen: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.TwelveKeyDialer: void initVoicemailButton()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.mms.transaction.TransactionService$ServiceHandler: void processPendingTransaction(com.android.mms.transaction.Transaction,com.android.mms.transaction.TransactionSettings)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SMS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.systemui.usb.StorageNotification: void onUsbMassStorageConnectionChangedAsync(boolean)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.view.WindowManagerPolicy: boolean interceptKeyBeforeDispatching(android.view.WindowManagerPolicy$WindowState,int,int,int,int,int,int,int)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.music.CreatePlaylist: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.quicksearchbox.SearchableItemsSettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.activity.MessageView: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.app.ResolverActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.INTERNET", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.service.urlrenderer.UrlRendererService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.IBluetoothHeadset: boolean connectHeadsetInternal(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getVoiceMailAlphaTag()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.exchange.EasOutboxService: org.apache.http.HttpResponse sendHttpClientPost(java.lang.String,byte[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.Development: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.AudioPreview: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.InputManager$Callbacks: long notifyANR(java.lang.Object,android.view.InputChannel)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.phone.InCallScreen: void delayedCleanupAfterDisconnect()>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.app.INotificationManager: void enqueueNotification(java.lang.String,int,android.app.Notification,int[])>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.phone.BluetoothHandsfree$28: android.bluetooth.AtCommandResult handleActionCommand()>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.mms.transaction.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.bluetooth.ConnectSpecificProfilesActivity: void onProfileCheckedStateChanged(com.android.settings.bluetooth.LocalBluetoothProfileManager$Profile,boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipAudioCallAdapter: void onError(com.android.internal.telephony.Connection$DisconnectCause)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.launcher2.Launcher: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: void notifyScreenOnLocked()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: android.content.SyncInfo getCurrentSync()>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.internal.telephony.sip.SipCommandInterface: void setRadioState(com.android.internal.telephony.CommandsInterface$RadioState)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.cooliris.picasa.PicasaSyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: void chooseUpstreamType(boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.packageinstaller.InstallAppProgress: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.LocationManagerService: void requestLocationUpdatesPI(java.lang.String,android.location.Criteria,long,float,boolean,android.app.PendingIntent)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.os.PowerManager$WakeLock: void acquire()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.InstrumentationList: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$SetIpForwardingDisabledErrorState: void exit()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.util.CalendarUtils$TimeZoneUtils: java.lang.String formatDateRange(android.content.Context,long,long,int)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.settings.RadioInfo: void onCreate(android.os.Bundle)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.exchange.EasSyncService: java.lang.String acknowledgeProvision(java.lang.String,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.WifiManager: boolean removeNetwork(int)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.content.Context: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.BootReceiver$1: void run()>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.deskclock.AlarmAlertFullScreen: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.service.MailService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.mail.store.ExchangeStore: android.accounts.AccountManagerFuture addSystemAccount(android.content.Context,com.android.email.provider.EmailContent$Account,boolean,boolean,android.accounts.AccountManagerCallback)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.phone.BluetoothHandsfree$15: android.bluetooth.AtCommandResult handleTestCommand()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.sip.SipService$KeepAliveProcess: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.deviceinfo.Memory: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.IccCard: void changeIccLockPassword(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.NetworkQueryService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.NotificationManagerService$SettingsObserver: void observe()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.sip.SipAudioCall: void access$700(android.net.sip.SipAudioCall,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.DataConnection$DcDisconnectingBadDnsState: void enter()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.email.activity.MessageList: void onSendPendingMessages()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.inputmethod.latin.CandidateView$CandidateStripGestureListener: void onLongPress(android.view.MotionEvent)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<android.bluetooth.IBluetooth$Stub: android.os.ParcelUuid[] getRemoteUuids(java.lang.String)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.cooliris.media.GridLayer: boolean changeFocusToNextSlot(float)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.PasswordUnlockScreen: void onClick(android.view.View)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.bluetooth.IBluetoothHeadset$Stub$Proxy: int getBatteryUsageHint()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.music.MediaPlaybackService$ServiceStub: void prev()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.WebView: void centerKeyPressOnTextField()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.NotificationManagerService$2: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.settings.CreateShortcut: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.content.IContentService: boolean getMasterSyncAutomatically()>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.bluetooth.IBluetooth: java.lang.String getAddress()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.policy.impl.GlobalActions: void changeAirplaneModeSystemSetting(boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.browser.BrowserActivity: void closeTab(com.android.browser.Tab)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET"
 ], 
 "<android.app.LauncherActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.PhoneApp: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.deskclock.Alarms: void setNextAlert(android.content.Context)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.nfc.tech.Ndef: void reconnect()>": [
  "android.permission.NFC"
 ], 
 "<com.android.development.MediaScannerActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.view.WindowManagerPolicy: void screenTurnedOn()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS"
 ], 
 "<com.android.contacts.TwelveKeyDialer: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.cooliris.media.Gallery: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.ISms$Stub: java.util.List getAllMessagesFromIccEf()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.server.BluetoothService: void sendUuidIntent(java.lang.String)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.email.service.EasAuthenticatorServiceAlternate: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.providers.downloads.DownloadThread: void notifyThroughDatabase(int,boolean,int,boolean,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.mms.ui.ClassZeroActivity: void saveMessage()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.settings.bluetooth.LocalBluetoothProfileManager: java.util.Set getConnectedDevices()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.RI: void setPreferredVoicePrivacy(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void getGsmBroadcastConfig(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.PlatLogoActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: void finalize()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.IP2pTarget$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.mms.ui.ConversationList: void onNewIntent(android.content.Intent)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.settings.ConfirmLockPassword: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.DevicePolicyManagerService: void wipeDataLocked(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDeviceManager: void onBondingStateChanged(android.bluetooth.BluetoothDevice,int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.music.MediaPlaybackService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.nfc.NfcService$2: int createLlcpServiceSocket(int,java.lang.String,int,int,int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.email.activity.setup.AccountSetupIncoming: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.BluetoothHeadsetService: void access$1800(com.android.phone.BluetoothHeadsetService,android.bluetooth.BluetoothDevice)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.server.sip.SipService: void onConnectivityChanged(java.lang.String,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.bluetooth.LocalBluetoothManager: void setBluetoothEnabled(boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.nfc.INfcTag: int ndefWrite(int,android.nfc.NdefMessage)>": [
  "android.permission.NFC"
 ], 
 "<com.android.settings.deviceinfo.Status: void onPause()>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.nfc.NfcAdapter: android.nfc.NdefMessage getLocalNdefMessage()>": [
  "android.permission.NFC"
 ], 
 "<android.app.LauncherActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.ConnectivityService: void access$800(com.android.server.ConnectivityService,boolean,int,android.app.Notification)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.webkit.CallbackProxy: void onReceivedHttpAuthRequest(android.webkit.HttpAuthHandler,java.lang.String,java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.cooliris.media.RenderView: boolean bindMixed(com.cooliris.media.Texture,com.cooliris.media.Texture,float)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.server.WifiService: boolean testAndClearWifiSavedState()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.media.IAudioService: void setSpeakerphoneOn(boolean)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.server.WindowManagerService$WindowState: boolean showLw(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.browser.BrowserPreferencesPage: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.IBluetoothHeadset: boolean isConnected(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.webkit.WebViewCore: void sendMessage(int,int,int,java.lang.Object)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.music.MediaPlaybackService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.AccountSyncSettings$1: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.calendar.AgendaWindowAdapter: void access$1200(com.android.calendar.AgendaWindowAdapter,int,int)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.providers.contacts.LegacyContactImporter: void importContactsFromLegacyDb()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.mms.ui.AudioAttachmentView: void onPlaybackError()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppTransfer$SocketConnectThread: void run()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.location.ILocationManager$Stub: void clearTestProviderStatus(java.lang.String)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.email.MessagingListener: void synchronizeMailboxFinished(long,long,int,int)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.bluetooth.IBluetooth: boolean setPin(java.lang.String,byte[])>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.calendar.EditEvent$DateListener: void onDateSet(android.widget.DatePicker,int,int,int)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.Connection dial(java.lang.String)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.providers.downloads.Helpers: java.io.File getCacheDestination(android.content.Context,long)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void notifyServiceStateChanged(android.telephony.ServiceState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void acknowledgeLastIncomingCdmaSms(boolean,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.ProxySelector: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.os.BatteryStatsImpl: void doUnplugLocked(long,long)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.email.MessagingController: void access$400(com.android.email.MessagingController,com.android.email.provider.EmailContent$Account,com.android.email.provider.EmailContent$Mailbox)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.accounts.IAccountManager$Stub: java.lang.String getPassword(android.accounts.Account)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<android.app.ExpandableListActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.os.IDropBoxManagerService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.READ_LOGS"
 ], 
 "<android.server.BluetoothService: void onCreatePairedDeviceResult(java.lang.String,int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.inputmethod.latin.LatinIME: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.bluetooth.LocalBluetoothProfileManager: boolean disconnect(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.Phone: void queryAvailableBandMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getOperator(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void getPreferredNetworkType(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.BadBehaviorActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.webkit.WebIconDatabase: void open(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.server.am.ActivityManagerService: void access$200(com.android.server.am.ActivityManagerService,boolean)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.settings.WirelessSettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.transaction.NotificationTransaction: byte[] sendPdu(long,byte[])>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.provider.Browser: void clearSearches(android.content.ContentResolver)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.settings.DebugIntentSender: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.server.BluetoothA2dpService$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.stk.StkService: com.android.internal.telephony.gsm.stk.StkService getInstance(com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.gsm.SIMRecords,android.content.Context,com.android.internal.telephony.gsm.SIMFileHandler,com.android.internal.telephony.gsm.SimCard)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.app.TabActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.os.BatteryStatsImpl: void writeToParcelLocked(android.os.Parcel,boolean,int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.providers.settings.SettingsBackupAgent: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.CHANGE_CONFIGURATION", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: void removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.exchange.SyncManager: java.lang.String getDeviceId()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: void access$400(com.android.contacts.ContactsListActivity)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.browser.Tab$3$4: java.lang.Object doInBackground(java.lang.Object[])>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void invokeOemRilRequestStrings(java.lang.String[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapVcardManager: int composeAndSendPhonebookOneVcard(javax.obex.Operation,int,boolean,java.lang.String,int)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.ThrottleService$MyHandler: void onPollAlarm()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.VIBRATE"
 ], 
 "<android.speech.IRecognitionService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDeviceManager: void dispatchDeviceAdded(com.android.settings.bluetooth.CachedBluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.settings.RadioInfo: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.Controller: void sendPendingMessages(long,com.android.email.Controller$Result)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.DataList: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.ui.ConversationList$1: void onContentChanged(com.android.mms.ui.ConversationListAdapter)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.settings.Settings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.ExportVCardActivity$ActualExportThread: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void getEnhancedVoicePrivacy(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.NetworkManagementService: void setInterfaceThrottle(java.lang.String,int,int)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setNetworkSelectionModeManual(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<java.net.HttpURLConnection: void connect()>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.telephony.gsm.SIMFileHandler: void loadEFLinearFixed(int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.providers.downloads.DownloadThread: void processResponseHeaders(com.android.providers.downloads.DownloadThread$State,com.android.providers.downloads.DownloadThread$InnerState,org.apache.http.HttpResponse)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.server.am.ActivityManagerService: boolean updateConfigurationLocked(android.content.res.Configuration,com.android.server.am.ActivityRecord)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.google.common.io.ByteStreams: byte[] toByteArray(com.google.common.io.InputSupplier)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: android.database.Cursor queryPhoneNumbers(long)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.mms.data.Contact$ContactsCache: byte[] loadAvatarData(com.android.mms.data.Contact)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.contacts.ui.EditContactActivity: boolean doDeleteAction()>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.inputmethod.latin.LatinIMEDebugSettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.music.MediaPickerActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.util.CalendarUtils$TimeZoneUtils: java.lang.String getTimeZone(android.content.Context,java.lang.Runnable)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.app.ActivityManagerNative: android.content.Intent registerReceiver(android.app.IApplicationThread,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.internal.telephony.RI: void getSmscAddress(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void setBandMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.EnterUR: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.AccountManager$Future2Task: void startTask()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.app.IWallpaperManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SET_WALLPAPER_HINTS", 
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: void clearPassword(android.accounts.Account)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: java.lang.String getContactDisplayName(long)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.content.IContentService: boolean isSyncPending(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.server.WifiService: void persistWifiEnabled(boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.camera.Camera: void onSharedPreferenceChanged()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.phone.PhoneApp: void handleServiceStateChanged(android.content.Intent)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.mms.ui.MessageUtils$4: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void supplyIccPuk(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.CreateShortcut: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void setBandMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$SyncStateTracker: int getActualState(android.content.Context)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.server.TelephonyRegistry: void notifySignalStrength(android.telephony.SignalStrength)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.RI: void getAvailableNetworks(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityManagerService: void broadcastTimeoutLocked(boolean)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.google.android.mms.util.PduCache: android.net.Uri normalizeKey(android.net.Uri)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.test.TestListActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.development.Connectivity$11: void onClick(android.view.View)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.mms.ui.ClassZeroActivity$3: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.RI: void setCdmaBroadcastActivation(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.HeadsetObserver: void init()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.CdmaSystemSelectListPreference: void <init>(android.content.Context,android.util.AttributeSet)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager: boolean enableCellBroadcast(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.settings.wifi.AdvancedSettings: void onResume()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.Connection checkMtFindNewRinging(com.android.internal.telephony.DriverCall,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.PackageManagerService: boolean access$3100(com.android.server.PackageManagerService,java.lang.String,boolean,boolean,int)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.providers.telephony.SmsProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onRoamingOn()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.HeadsetBase: void releaseWakeLock()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.exchange.SyncManager: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.quicksearchbox.google.GoogleSource: com.android.quicksearchbox.SourceResult queryExternal(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.WifiService: boolean access$2700(com.android.server.WifiService,int,boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.provider.ContactsContract$Contacts: android.net.Uri getLookupUri(long,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.htmlviewer.HTMLViewerActivity$WebChrome: void onSelectionStart(android.webkit.WebView)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.nfc.ILlcpServiceSocket$Stub$Proxy: int accept(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.settings.ChooseLockPatternTutorial: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.exchange.ContactsSyncAdapterService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.bluetooth.BluetoothPermissionActivity: java.lang.String createDisplayText()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.app.IBatteryStats$Stub: byte[] getStatistics()>": [
  "android.permission.BATTERY_STATS", 
  "android.permission.BLUETOOTH"
 ], 
 "<android.server.BluetoothService: boolean createBondOutOfBand(java.lang.String,byte[],byte[])>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.view.WindowManagerPolicy: int checkAddPermission(android.view.WindowManager$LayoutParams)>": [
  "android.permission.SYSTEM_ALERT_WINDOW"
 ], 
 "<com.android.contacts.ui.EditContactActivity$QueryEntitiesTask: void onPostExecute(java.lang.Object)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.webkit.WebIconDatabase: void removeAllIcons()>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.email.activity.setup.AccountSetupBasics: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.MusicPicker: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.music.TrackBrowserActivity$4: void drop(int,int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void getPreferredNetworkType(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void stopDtmf(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppService$BluetoothShareContentObserver: void onChange(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.DeviceInfoSettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.WifiService: void enforceChangePermission()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.phone.DeleteFdnContactScreen: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void notifyDataConnectionFailed(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.PhoneApp: void access$1200(com.android.phone.PhoneApp)>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.bluetooth.BluetoothA2dp: java.util.Set getNonDisconnectedSinks()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void flashAndSetGenericTrue()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapService: void startRfcommSocketListener()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.tts.TtsService: void onCompletion(android.media.MediaPlayer)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.IBluetooth$Stub: java.lang.String[] listBonds()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.app.INotificationManager$Stub: void enqueueNotification(java.lang.String,int,android.app.Notification,int[])>": [
  "android.permission.VIBRATE"
 ], 
 "<android.os.storage.IMountService: int mountVolume(java.lang.String)>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
 ], 
 "<com.android.mms.ui.ManageSimMessages: void copyToPhoneMemory(android.database.Cursor)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.exchange.EasOutboxService: void sendMeetingResponse(com.android.exchange.MeetingResponseRequest)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.browser.Tab: void activateVoiceSearchMode(android.content.Intent)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.deviceinfo.Status: void onCreate(android.os.Bundle)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.am.ActivityStack: void moveTaskToFrontLocked(com.android.server.am.TaskRecord,com.android.server.am.ActivityRecord)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<android.app.NativeActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: void wakeWhenReadyLocked(int)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.webkit.LoadListener: boolean checkCache(java.util.Map)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity$11: void run()>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.contacts.ui.EditContactActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.INetworkManagementEventObserver$Stub: void interfaceLinkStatusChanged(java.lang.String,boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.browser.BrowserActivity$6: java.lang.Object doInBackground(java.lang.Object[])>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.server.connectivity.Tethering$TetherInterfaceSM$InitialState: boolean processMessage(android.os.Message)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.net.ThrottleManager: int getCliffLevel(java.lang.String,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.mms.data.WorkingMessage: void updateDraftSmsMessage(long,java.lang.String)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.contacts.SearchResultsActivity: void onResume()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_SYNC_STATS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.nfc.LlcpSocket: int getLocalSocketRw()>": [
  "android.permission.NFC"
 ], 
 "<android.os.INetworkManagementService$Stub$Proxy: void untetherInterface(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<android.telephony.TelephonyManager: java.lang.String getVoiceMailAlphaTag()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.inputmethod.pinyin.SettingsActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$StartTetheringErrorState: void enter()>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.quicksearchbox.QsbApplicationWrapper: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.PhoneApp: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.ContentResolver: void setMasterSyncAutomatically(boolean)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.voicedialer.CommandRecognizerEngine: void recognize(com.android.voicedialer.RecognizerClient,android.app.Activity,java.io.File,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.mms.transaction.ReadRecTransaction: byte[] sendPdu(long,byte[],java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.app.ActivityManagerNative: void handleApplicationCrash(android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<android.webkit.WebViewCore: void sendMessage(int,int,java.lang.Object)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: void disconnect()>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.am.ActivityManagerService: void ensureBootCompleted()>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$GpsStateTracker: int getTriState(android.content.Context)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.commands.bmgr.Bmgr: void doTransport()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.settings.ChooseLockGeneric: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.wifi.WifiApSettings: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.provider.Browser: android.database.Cursor getAllVisitedUrls(android.content.ContentResolver)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.am.ActivityManagerService: boolean access$400(com.android.server.am.ActivityManagerService,java.lang.String,int,boolean,boolean,boolean)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$GpsStateTracker$1: void onPostExecute(java.lang.Boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapService: void access$600(com.android.bluetooth.pbap.BluetoothPbapService,java.lang.String)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.net.wifi.WifiManager: int getWifiState()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.hardware.Camera: android.hardware.Camera open()>": [
  "android.permission.CAMERA"
 ], 
 "<android.server.BluetoothService: android.os.ParcelUuid[] getUuidFromCache(java.lang.String)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.nfc.tech.IsoDep: void reconnect()>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.RI: void access$300(com.android.internal.telephony.RI,android.os.Parcel)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.ConnectivityService: void handleSetNetworkPreference(int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.development.BadBehaviorActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.speech.tts.ITts$Stub$Proxy: int stop(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void setRadioPower(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setGsmBroadcastConfig(com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.bluetooth.LocalBluetoothProfileManager$A2dpProfileManager: int getSummary(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getPDPContextList(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.SyncManager$ActiveSyncContext: void onServiceDisconnected(android.content.ComponentName)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.settings.AddAccountSettings: void onAuthDescriptionsUpdated()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.deskclock.SetAlarm: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.media.AudioManager: void setParameters(java.lang.String)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.internal.telephony.RI: void setLocationUpdates(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.launcher2.Folder: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<android.net.sip.SipAudioCall: void releaseWifiHighPerfLock()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmConnection: void cancelPostDial()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void getCallWaiting(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void writeSmsToSim(int,java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.cooliris.media.HudLayer$14: void run()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.phone.NetworkSetting: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.providers.contacts.LegacyApiSupport: void updateLegacyPhotoData(long,long,android.content.ContentValues)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.browser.BrowserActivity: void access$500(com.android.browser.BrowserActivity,android.webkit.WebView,java.lang.String)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.mms.transaction.TransactionService: void endMmsConnectivity()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.music.IMediaPlaybackService$Stub: void stop()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.IP2pInitiator$Stub$Proxy: byte[] receive(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.voicedialer.CommandRecognizerEngine: void onRecognitionSuccess(com.android.voicedialer.RecognizerClient)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.PackageManagerService: void access$3900(com.android.server.PackageManagerService,boolean,boolean)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: boolean setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.bluetooth.BluetoothHeadset: boolean startVoiceRecognition()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.calendar.DayActivity: boolean onOptionsItemSelected(android.view.MenuItem)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.development.AppHwPref: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.deskclock.AlarmAlertFullScreen$2: void onClick(android.view.View)>": [
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.music.IMediaPlaybackService$Stub$Proxy: void next()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.vpn.PptpService: void onDisconnect()>": [
  "android.permission.VIBRATE"
 ], 
 "<android.speech.SpeechRecognizer: void access$100(android.speech.SpeechRecognizer)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.calendar.EventInfoActivity: void onPause()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.cooliris.media.MonitoredActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.INTERNET", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.cooliris.media.ActiveWallpaper: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.RuimFileHandler: void loadEFTransparent(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ContactsListActivity: android.net.Uri getPeopleFilterUri(java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.phone.NotificationMgr: void updateNetworkSelection(int)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.email.activity.setup.AccountSetupNames: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.gsm.stk.CommandParamsFactory: boolean processPlayTone(com.android.internal.telephony.gsm.stk.CommandDetails,java.util.List)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.Phone: void setCdmaSubscription(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.speech.IRecognitionService: void cancel(android.speech.IRecognitionListener)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.mms.transaction.SmsReceiver: void finishStartingService(android.app.Service,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.IAccountManager$Stub: void removeAccount(android.accounts.IAccountManagerResponse,android.accounts.Account)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.PhoneBase: void setPreferredNetworkType(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$GpsStateTracker$1: java.lang.Boolean doInBackground(java.lang.Void[])>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.am.ActivityRecord: void windowsVisible()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: void hangupForegroundResumeBackground()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.inputmethod.latin.CandidateView: void longPressFirstWord()>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.nfc.ndefpush.NdefPushServer: void start()>": [
  "android.permission.NFC"
 ], 
 "<com.android.contacts.SearchResultsActivity: void access$400(com.android.contacts.ContactsListActivity)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.webkit.GeolocationService: void registerForLocationUpdates()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.deskclock.AlarmClock: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.google.common.io.MultiInputStream: int read(byte[],int,int)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.settings.LocalePickerInSetupWizard: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.BluetoothHandsfree$19: android.bluetooth.AtCommandResult handleTestCommand()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.email.service.IEmailService$Stub$Proxy: void startSync(long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker$2: void onChange(boolean)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.view.IWindowManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.DISABLE_KEYGUARD", 
  "android.permission.SET_ANIMATION_SCALE", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.EXPAND_STATUS_BAR", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.RI: void dial(java.lang.String,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.Connectivity$9: void onClick(android.view.View)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void hangupAllConnections(com.android.internal.telephony.cdma.CdmaCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.wifi.WifiAPITest: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.cooliris.media.PhotoAppWidgetBind: void onCreate(android.os.Bundle)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.test.mock.MockContentResolver: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.contacts.DialtactsActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.MessagingController: void loadAttachment(long,long,long,long,com.android.email.MessagingListener)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.svox.pico.Pico: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.LoadAverageService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.development.AppPicker: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.gsm.SimCard: void supplyPuk2(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.RadioInfo: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.calendar.AgendaWindowAdapter$QueryHandler: int processNewCursor(com.android.calendar.AgendaWindowAdapter$QuerySpec,android.database.Cursor)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.cooliris.media.LoadingLayer: boolean update(com.cooliris.media.RenderView,float)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.ExternalMediaFormatActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.tech.MifareClassic: void restore(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.email.Controller$LegacyListener: void synchronizeMailboxStarted(long,long)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.mms.ui.MessageListAdapter$OnDataSetChangedListener: void onContentChanged(com.android.mms.ui.MessageListAdapter)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.mms.ui.AudioAttachmentView: void cleanupMediaPlayer()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.backup.IRestoreSession: int getAvailableRestoreSets(android.app.backup.IRestoreObserver)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmCall: void hangup()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.deskclock.AlarmAlertFullScreen: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.SecuritySettings: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.mms.ui.MmsThumbnailPresenter: void presentFirstSlide(com.android.mms.ui.SlideViewInterface,com.android.mms.model.SlideModel)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.sip.SipService$AutoRegistrationProcess: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: boolean access$2600(com.android.mms.ui.ComposeMessageActivity,long)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.contacts.RecentCallsListActivity: void onResume()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.applications.RunningServiceDetails: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.ui.DeliveryReportActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.test.mock.MockContentResolver: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.nfc.tech.MifareClassic: byte[] transceive(byte[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.calendar.AgendaActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.inputmethod.latin.LatinIME: void onFinishInput()>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.mms.util.Recycler$MmsRecycler: boolean anyThreadOverLimit(android.content.Context)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.exchange.EasSyncService: java.lang.String acknowledgeProvisionImpl(java.lang.String,java.lang.String,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.transaction.Observable: void notifyObservers()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SMS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.gsm.GsmSMSDispatcher: void dispatchBroadcastPdus(byte[][],boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.PatternUnlockScreen$UnlockPatternListener: void onPatternCellAdded(java.util.List)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.systemui.usb.UsbStorageActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: boolean turnOffMasterTetherSettings()>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.google.common.io.CharStreams$2: java.lang.Object getInput()>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.contacts.ui.EditContactActivity: void selectAccountAndCreateContact(java.util.ArrayList)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.settings.DateTimeSettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: com.android.mms.ui.MessageItem access$500(com.android.mms.ui.ComposeMessageActivity,java.lang.String,long,boolean)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.nfc.IP2pTarget: int getMode(int)>": [
  "android.permission.NFC"
 ], 
 "<android.net.sip.SipAudioCall: void close()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.TetherSettings$TetherChangeReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onVoiceCallEnded()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_APN_SETTINGS"
 ], 
 "<com.android.deskclock.AlarmKlaxon: int onStartCommand(android.content.Intent,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.spare_parts.SpareParts: void writeEndButtonPreference(java.lang.Object)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.settings.PhysicalKeyboardSettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.browser.ActiveTabsPage$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.phone.InCallScreen: void internalAnswerCall()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.server.vpn.L2tpIpsecService: void waitUntilConnectedOrTimedout()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.contacts.ContactsListActivity: boolean deleteSelection()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean disableCellBroadcast(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.phone.EditFdnContactScreen: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.Application: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.ui.MessageUtils$3$1: void run()>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void queryTTYMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.vpn.VpnService: void onDisconnect()>": [
  "android.permission.VIBRATE"
 ], 
 "<android.nfc.ILlcpSocket$Stub: int close(int)>": [
  "android.permission.NFC"
 ], 
 "<android.webkit.WebView: android.graphics.Rect sendOurVisibleRect()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.Connection dial(java.lang.String,int,com.android.internal.telephony.UUSInfo)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.AudioManager: boolean isWiredHeadsetOn()>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.server.BluetoothEventLoop: void onRequestPinCode(java.lang.String,int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.providers.contacts.LegacyApiSupport: int updatePhotoByDataId(long,android.content.ContentValues)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.mms.ui.MessagingPreferenceActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.model.VideoModel: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,com.android.mms.drm.DrmWrapper,com.android.mms.model.RegionModel)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.phone.BluetoothHeadsetService: void setPriority(android.bluetooth.BluetoothDevice,int)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppService: void access$1800(com.android.bluetooth.opp.BluetoothOppService,android.database.Cursor,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.exchange.SyncManager$EasSyncStatusObserver: void onStatusChanged(int)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.browser.Tab: void dismissSubWindow()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.launcher2.Launcher: boolean onOptionsItemSelected(android.view.MenuItem)>": [
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<android.location.ILocationManager$Stub: void clearTestProviderEnabled(java.lang.String)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$GpsStateTracker: void toggleState(android.content.Context)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.PackageManagerService: void replaceNonSystemPackageLI(android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package,int,int,java.lang.String,com.android.server.PackageManagerService$PackageInstalledInfo)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.nfc.NfcService: com.android.internal.nfc.LlcpSocket createLlcpSocket(int,int,int,int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void exitKeyguardSecurely(android.view.WindowManagerPolicy$OnKeyguardExitResult)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.provider.Telephony$Mms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[])>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.RI: void queryAvailableBandMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.provider.CallLog$Calls: android.net.Uri addCall(com.android.internal.telephony.CallerInfo,android.content.Context,java.lang.String,int,int,long,int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.nfc.INfcTag$Stub$Proxy: int connect(int,int)>": [
  "android.permission.NFC"
 ], 
 "<android.webkit.WebView: void destroy()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.InCallScreen: void onCreate(android.os.Bundle)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: void handlePollCalls(android.os.AsyncResult)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.tech.NfcA: void close()>": [
  "android.permission.NFC"
 ], 
 "<android.accounts.AccountManagerService: void addAcount(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<android.accounts.AccountManager$9: void doWork()>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<android.net.IConnectivityManager: void setNetworkPreference(int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaDataConnection: void access$1300(com.android.internal.telephony.DataConnection,java.lang.Object)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.vpn.VpnServiceBinder$2: void run()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.providers.contacts.LegacyApiSupport: int updatePhoto(long,android.content.ContentValues)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.phone.PhoneUtils: boolean hangupRingingCall(com.android.internal.telephony.Call)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.phone.GetPin2Screen: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.calendar.AlertActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.inputmethod.pinyin.PinyinDecoderService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppTransferActivity$BluetoothTransferContentObserver: void onChange(boolean)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyDataConnection(int,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,int,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.IBluetooth$Stub$Proxy: java.lang.String getAddress()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.widget.LockPatternUtils: void clearLock()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.PhoneSubInfo: java.lang.String getVoiceMailNumber()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void handleRadioNotAvailable()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.browser.Tab$3: void onSelectionDone(android.webkit.WebView)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.contacts.ViewContactActivity: void considerBindData()>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.inputmethod.latin.LatinKeyboardBaseView: void onUpEvent(com.android.inputmethod.latin.PointerTracker,int,int,long)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.voicedialer.VoiceDialerActivity$CommandRecognizerClient$3: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void access$400(com.android.contacts.ContactsListActivity)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.widget.QuickContactBadge: void assignContactFromPhone(java.lang.String,boolean)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.nfc.tech.NfcA: void reconnect()>": [
  "android.permission.NFC"
 ], 
 "<com.cooliris.media.Gallery: void onStop()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.storage.IMountService: int formatVolume(java.lang.String)>": [
  "android.permission.MOUNT_FORMAT_FILESYSTEMS"
 ], 
 "<com.android.contacts.TwelveKeyDialer: void onClick(android.view.View)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.webkit.WebView$InvokeListBox$4: void onCancel(android.content.DialogInterface)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.server.BluetoothEventLoop: void onDeviceCreated(java.lang.String)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.music.MediaPlaybackService$MultiPlayer: void stop()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.browser.AddBookmarkPage: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.model.EntitySet: com.android.contacts.model.EntitySet fromQuery(android.content.ContentResolver,java.lang.String,java.lang.String[],java.lang.String)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.bluetooth.LocalBluetoothProfileManager$A2dpProfileManager: java.util.Set getConnectedDevices()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.nfc.ILlcpSocket$Stub: int receive(int,byte[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void dispose()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.cooliris.media.Layer: boolean update(com.cooliris.media.RenderView,float)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.AgendaWindowAdapter: com.android.calendar.AgendaWindowAdapter$EventInfo getEventByPosition(int)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.webkit.WebView: void drawPage(android.graphics.Canvas)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.svox.pico.EngineSettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.TwelveKeyDialer: void onNewIntent(android.content.Intent)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.WifiService: android.net.wifi.WifiConfiguration getWifiApConfiguration()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: void onStart()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.phone.BluetoothAtPhonebook$2: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.speech.tts.ITts$Stub: int stop(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.exchange.EasOutboxService: void sync(com.android.exchange.adapter.AbstractSyncAdapter)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.READ_CALENDAR", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_CALENDAR", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.app.IntentService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.am.ActivityManagerService: void moveTaskBackwards(int)>": [
  "android.permission.REORDER_TASKS"
 ], 
 "<com.android.server.NotificationManagerService: void <init>(android.content.Context,com.android.server.StatusBarManagerService,com.android.server.LightsService)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.exchange.adapter.CalendarSyncAdapter: boolean sendLocalChanges(com.android.exchange.adapter.Serializer)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.settings.MasterClear: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.exchange.AbstractSyncService: void validateAccount(java.lang.String,java.lang.String,java.lang.String,int,boolean,boolean,android.content.Context)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.exchange.CalendarSyncAdapterService: void performSync(android.content.Context,android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.inputmethod.latin.LatinIMEBackupAgent: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.quicklaunch.BookmarkPicker: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.cooliris.picasa.PicasaService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.transaction.RetryScheduler: void update(com.android.mms.transaction.Observable)>": [
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SMS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.phone.BluetoothHandsfree$13: android.bluetooth.AtCommandResult handleTestCommand()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.content.ContentService: void setMasterSyncAutomatically(boolean)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.preference.PreferenceActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.service.EasAuthenticatorServiceAlternate: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.SimContacts: boolean onOptionsItemSelected(android.view.MenuItem)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<org.apache.http.impl.client.DefaultHttpClient: void <init>(int)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.nfc.NfcService$2: android.nfc.ILlcpServiceSocket getLlcpServiceInterface()>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.PhoneBase: void dispose()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.sip.SipAudioCall: void onError(int,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.Controller$ServiceCallback: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: boolean checkProviderState(boolean)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_SYNC_STATS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.mms.transaction.SendTransaction: byte[] sendPdu(byte[])>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetheredIfaces()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.os.IVibratorService$Stub: void vibrate(long,android.os.IBinder)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<android.webkit.HTML5Audio: void teardown()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.INfcAdapter$Stub: void disableForegroundDispatch(android.content.ComponentName)>": [
  "android.permission.NFC"
 ], 
 "<com.android.settings.DisplaySettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.development.ShowActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.http.HttpConnection: android.net.http.AndroidHttpClientConnection openConnection(android.net.http.Request)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.os.INetworkManagementService$Stub$Proxy: int getInterfaceTxThrottle(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: void onBondingDockConnect()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppService: void access$1700(com.android.bluetooth.opp.BluetoothOppService,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.exchange.provider.GalEmailAddressAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.browser.widget.BookmarkWidgetService: void queryCursorAndRender()>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.systemui.statusbar.StatusBarService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.soundrecorder.Recorder: void stop()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.WeekView: boolean onKeyDown(int,android.view.KeyEvent)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.contacts.util.AccountSelectionUtil: void doImportFromSim(android.content.Context,android.accounts.Account)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.development.Connectivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.location.LocationManager: java.util.List getProviders(android.location.Criteria,boolean)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.music.IMediaPlaybackService: void stop()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.music.AudioPreview$PreviewPlayer: void onPrepared(android.media.MediaPlayer)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.AccountsTester: void onStart()>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.nfc.NfcService$3: int getRemoteSocketRw(int)>": [
  "android.permission.NFC"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: android.net.wifi.WifiInfo getConnectionInfo()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: void editProperties(android.accounts.IAccountManagerResponse,java.lang.String,boolean)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<android.net.wifi.WifiManager: boolean setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.inputmethod.latin.LatinIME: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.BluetoothHandsfree$3: android.bluetooth.AtCommandResult handleTestCommand()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.RI: void getPDPContextList(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ContactsLiveFolders$PhoneContacts: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.BluetoothAdapter: boolean isEnabled()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.server.BluetoothService: boolean cancelPairingUserInput(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.cdma.CdmaDataConnection: void onConnect(com.android.internal.telephony.DataConnection$ConnectionParams)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.InCallScreen: void access$1500(com.android.phone.InCallScreen)>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.development.UnderdevelopedSettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.test.TestListActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: void playSounds(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.exchange.adapter.AbstractSyncAdapter: void setSyncKey(java.lang.String,boolean)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.accounts.AccountManager$2: void startTask()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.PhoneBase: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.music.MusicUtils: void shuffleAll(android.content.Context,android.database.Cursor)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.GsmUmtsCallOptions: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManagerProxy: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider: void updateWidget(android.content.Context)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.FakePhoneActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.ContactsListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_SYNC_STATS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.settings.ActivityPicker: void onCreate(android.os.Bundle)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.INTERNET", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.exchange.EasSyncService: void sync(com.android.exchange.adapter.AbstractSyncAdapter)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.READ_CALENDAR", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_CALENDAR", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.music.MusicBrowserActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.IBluetooth$Stub$Proxy: int addRfcommServiceRecord(java.lang.String,android.os.ParcelUuid,int,android.os.IBinder)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.phone.NotificationMgr: void onQueryComplete(int,java.lang.Object,com.android.internal.telephony.CallerInfo)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.calendar.DismissAllAlarmsService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.AccountSyncSettings: void onCreate(android.os.Bundle)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.READ_SYNC_STATS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.settings.AccountSyncSettingsInAddAccount: void onSyncStateUpdated()>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.server.WifiWatchdogService$WifiWatchdogHandler: void backgroundCheckAp(com.android.server.WifiWatchdogService$AccessPoint)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean isConnected(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.view.IWindowManager: void exitKeyguardSecurely(android.view.IOnKeyguardExitResult)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.DISABLE_KEYGUARD", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.policy.impl.KeyguardScreenCallback: void pokeWakelock(int)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.accounts.AccountAuthenticatorActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.ui.ContactsPreferencesActivity$GroupDelta: android.content.ContentProviderOperation buildDiff()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getLine1AlphaTag()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.music.TrackBrowserActivity$NowPlayingCursor: void moveItem(int,int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.launcher2.DragController: void startDrag(android.graphics.Bitmap,int,int,int,int,int,int,com.android.launcher2.DragSource,java.lang.Object,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.quicksearchbox.SearchActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.exchange.EasSyncService: void validate(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,int,boolean,boolean,android.content.Context)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.NfcAdapter: void disableForegroundNdefPush(android.app.Activity)>": [
  "android.permission.NFC"
 ], 
 "<com.android.mms.transaction.PrivilegedSmsReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.fuelgauge.BatteryHistoryDetail: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.ui.ManageSimMessages: void refreshMessageList()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.exchange.SyncManager: void releaseMailbox(long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.WebViewCore$4: void invoke(java.lang.String,boolean,boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.email.activity.setup.AccountSetupExchange: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.SettingsSafetyLegalActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.music.TrackBrowserActivity$TrackListAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.browser.CombinedBookmarkHistoryActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setAndBroadcastNetworkSetTime(long)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.LocationManagerService: void loadProviders()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.DayActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.data.Conversation: com.android.mms.data.Conversation get(android.content.Context,android.net.Uri,boolean)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.contacts.PhoneDisambigDialog$PhonesAdapter: void <init>(android.content.Context,java.util.List,boolean)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.contacts.SearchResultsActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.providers.contacts.ContactsProvider2: void outputRawContactsAsVCard(java.io.OutputStream,java.lang.String,java.lang.String[])>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.DisplaySettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.ui.DeliveryReportActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.os.INetworkManagementService$Stub$Proxy: void setAccessPoint(android.net.wifi.WifiConfiguration,java.lang.String,java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.vpn.L2tpIpsecService: void onError(java.lang.Throwable)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void <init>(com.android.internal.telephony.cdma.CDMAPhone)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.wifi.WifiSettings: void updateWifiState(int)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.calendar.AgendaListView: void refresh(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.development.ShowActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.bluetooth.LocalBluetoothProfileManager$HeadsetProfileManager: boolean connect(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.gsm.stk.IconLoader: void readId()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.SoundSettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.music.IMediaPlaybackService: void prev()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void notifyLidSwitchChanged(long,boolean)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void <init>(android.content.Context,com.android.internal.telephony.PhoneNotifier)>": [
  "android.permission.CHANGE_CONFIGURATION", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.net.sip.ISipService: android.net.sip.ISipSession getPendingSession(java.lang.String)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.email.Utility: java.lang.String getConsistentDeviceId(android.content.Context)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.cooliris.media.CropImage: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppBtEnablingActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.DataConnection$DcActivatingState: boolean processMessage(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.NotificationMgr: void updateCfi(boolean)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getVoiceMailNumber()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.exchange.EasSyncService: org.apache.http.HttpResponse executePostWithTimeout(org.apache.http.client.HttpClient,org.apache.http.client.methods.HttpPost,int,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.PackageManagerService: void updateExternalMediaStatusInner(boolean,boolean)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<android.bluetooth.IBluetooth: boolean setRemoteOutOfBandData(java.lang.String)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.BluetoothHeadsetService$6: boolean disconnectHeadsetInternal(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.contacts.SearchResultsActivity: void doShareVisibleContacts()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.RecognitionManagerService: void systemReady()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.phone.PhoneUtils: com.android.phone.PhoneUtils$CallerInfoToken startGetCallerInfo(android.content.Context,com.android.internal.telephony.Call,com.android.internal.telephony.CallerInfoAsyncQuery$OnQueryCompleteListener,java.lang.Object)>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.providers.calendar.CalendarAppWidgetProvider: void timeUpdated(android.content.Context,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.CallLogAsync$GetLastOutgoingCallTask: java.lang.String doInBackground(com.android.phone.CallLogAsync$GetLastOutgoingCallArgs[])>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.net.wifi.IWifiManager$Stub: void setWifiApConfiguration(android.net.wifi.WifiConfiguration)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.inputmethod.latin.LatinIME: void onConfigurationChanged(android.content.res.Configuration)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<android.nfc.ILlcpConnectionlessSocket: int getSap(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.settings.DockSettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.data.WorkingMessage: void access$500(android.net.Uri,com.google.android.mms.pdu.PduPersister,com.android.mms.model.SlideshowModel,com.google.android.mms.pdu.SendReq)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.cooliris.media.Photographs: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.deskclock.AlarmAlertFullScreen$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.contacts.ui.EditContactActivity$QueryEntitiesTask: java.lang.Object doInBackground(java.lang.Object[])>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.calendar.GoogleCalendarUriIntentFilter: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.sip.SipService: android.net.sip.ISipSession createSession(android.net.sip.SipProfile,android.net.sip.ISipSessionListener)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.contacts.ui.ContactsPreferencesActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.server.BluetoothA2dpService: boolean suspendSink(android.bluetooth.BluetoothDevice)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.ServiceStateTracker: void enableLocationUpdates()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.deskclock.AlarmAlertWakeLock: void acquireCpuWakeLock(android.content.Context)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.spare_parts.SpareParts: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.sip.SipSettings: void access$900(com.android.phone.sip.SipSettings)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.certinstaller.CertInstaller: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onRadioOffOrNotAvailable()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.PhoneUtils: void turnOnSpeaker(android.content.Context,boolean,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.net.ConnectivityManager: int getLastTetherError(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.google.common.io.Resources$1: java.lang.Object getInput()>": [
  "android.permission.INTERNET"
 ], 
 "<android.nfc.NfcAdapter: void setLocalNdefMessage(android.nfc.NdefMessage)>": [
  "android.permission.NFC"
 ], 
 "<com.android.email.AccountBackupRestore: void doBackupAccounts(android.content.Context,com.android.email.Preferences)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.webkit.PluginFullScreenHolder: boolean onKeyDown(int,android.view.KeyEvent)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.provider.ContactsContract$Groups$EntityIteratorImpl: android.content.Entity next()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.browser.BrowserHistoryPage: boolean onOptionsItemSelected(android.view.MenuItem)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.calendar.CalendarActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void sendCdmaSms(byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.InCallScreen: void access$1100(com.android.phone.InCallScreen)>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.voicedialer.RecognizerEngine: void setupGrammar()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity$21: void onResizeResult(com.google.android.mms.pdu.PduPart,boolean)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.RI: void getCdmaBroadcastConfig(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.inputmethod.latin.LatinIMESettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void getSmscAddress(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneSubInfo: java.lang.String getSubscriberId()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.settings.deviceinfo.Status: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.LocationManagerService: android.os.Bundle getProviderInfo(java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.ISms: boolean enableCellBroadcast(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.calendar.CalendarView: boolean onTouchEvent(android.view.MotionEvent)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.server.BluetoothA2dpService: boolean isDisconnectSinkFeasible(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.mms.data.WorkingMessage: void sendSmsWorker(java.lang.String,java.lang.String,long)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<android.bluetooth.IBluetoothHeadset$Stub: android.bluetooth.BluetoothDevice getCurrentHeadset()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$InitialState: int turnOnMobileConnection()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.BluetoothHandsfree$6: android.bluetooth.AtCommandResult handleTestCommand()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.GsmUmtsCallOptions: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: boolean updateCurrentCarrierInProvider(java.lang.String)>": [
  "android.permission.WRITE_APN_SETTINGS", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.CHANGE_CONFIGURATION", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.settings.PhysicalKeyboardSettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.inputmethod.latin.LatinIMEBackupAgent: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.nfc.INfcTag$Stub$Proxy: int[] getTechList(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.exchange.EasOutboxService: void doStatusCallback(long,long,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.webkit.HTML5Audio: boolean onError(android.media.MediaPlayer,int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.WebTextView: void setDefaultSelection()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.net.wifi.WifiStateTracker: void sendNetworkStateChangeBroadcast(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.bluetooth.BluetoothSettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.exchange.ContactsSyncAdapterService: void performSync(android.content.Context,android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.app.ExpandableListActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.IBluetooth$Stub$Proxy: boolean setDiscoverableTimeout(int)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.server.BluetoothService: boolean enable()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.DateTimeSettingsSetupWizard: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.NotificationMgr: void showDataDisconnectedRoaming()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.contacts.ExportVCardActivity$ActualExportThread: void finalize()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.inputmethod.latin.LatinIME: void handleCharacter(int,int[])>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.contacts.ui.EditContactActivity$AddContactTask: java.lang.Object doInBackground(java.lang.Object,java.lang.Object[])>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.app.backup.IBackupManager: void setAutoRestore(boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.nfc.tech.BasicTagTechnology: void reconnect()>": [
  "android.permission.NFC"
 ], 
 "<com.android.settings.deviceinfo.Memory: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.MediaPlaybackService$MultiPlayer$2: boolean onError(android.media.MediaPlayer,int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.Activity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.inputmethod.latin.LatinIME: void handleClose()>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<android.content.ContentService: boolean isSyncPending(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.exchange.CalendarSyncAdapterService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.SyncManager: void sendSyncAlarmMessage()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.BackupManagerService: android.app.IBackupAgent bindToAgentSynchronous(android.content.pm.ApplicationInfo,int)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.settings.applications.RunningServiceDetails$ActiveDetail: void onClick(android.view.View)>": [
  "android.permission.RESTART_PACKAGES", 
  "android.permission.KILL_BACKGROUND_PROCESSES"
 ], 
 "<com.android.music.AudioPreview: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.webkit.WebView: void rebuildWebTextView()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.music.MediaPlaybackActivity: void access$1000(com.android.music.MediaPlaybackActivity,int,long)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: boolean callOrSmsContact(android.database.Cursor,boolean)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.email.service.EmailBroadcastProcessorService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.nfc.NfcService$8: boolean disconnect(int)>": [
  "android.permission.NFC"
 ], 
 "<com.cooliris.media.RenderView: void access$600(com.cooliris.media.RenderView,com.cooliris.media.Texture)>": [
  "android.permission.INTERNET"
 ], 
 "<android.content.ContentResolver: void addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$StateTracker: void setImageViewResources(android.content.Context,android.widget.RemoteViews)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.music.MediaPlaybackService: void setQueuePosition(int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.cooliris.media.GridDrawables: void onSurfaceCreated(com.cooliris.media.RenderView,javax.microedition.khronos.opengles.GL11)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.telephony.RI: void getLastPdpFailCause(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.DialtactsActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void rejectCall()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CallTracker: void handleRadioAvailable()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.voicedialer.VoiceContact: java.lang.String redialNumber(android.app.Activity)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.app.AlertActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.preference.VolumePreference: void onSampleStarting(android.preference.VolumePreference$SeekBarVolumizer)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.Utils: java.lang.String getTimeZone(android.content.Context,java.lang.Runnable)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: void doContactDelete(android.net.Uri)>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.app.backup.BackupAgent: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.inputmethod.latin.LatinIME: boolean addWordToDictionary(java.lang.String)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.music.MediaPlaybackService: void prev()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.deskclock.SetAlarm: void onTimeSet(android.widget.TimePicker,int,int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.content.IContentService: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.bluetooth.IBluetooth$Stub$Proxy: boolean isEnabled()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.commands.bmgr.Bmgr: void doListRestoreSets()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.ConfirmRateLimitActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.deskclock.DeskClock: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.fuelgauge.BatteryHistoryDetail: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.IConnectivityManager$Stub$Proxy: boolean requestRouteToHost(int,int)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.cooliris.media.Wallpaper: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.preference.PreferenceActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.StatusBarManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.settings.fuelgauge.PowerUsageDetail: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.SoundSettings: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.providers.contacts.LegacyApiSupport: int updatePeople(long,android.content.ContentValues)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.am.ActivityManagerService: void skipCurrentReceiverLocked(com.android.server.am.ProcessRecord)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<android.app.ActivityManagerNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.GET_TASKS", 
  "android.permission.REORDER_TASKS", 
  "android.permission.SIGNAL_PERSISTENT_PROCESSES", 
  "android.permission.KILL_BACKGROUND_PROCESSES", 
  "android.permission.SET_DEBUG_APP", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.SET_PROCESS_LIMIT", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.SET_ALWAYS_FINISH", 
  "android.permission.RESTART_PACKAGES", 
  "android.permission.CHANGE_CONFIGURATION"
 ], 
 "<com.android.calendar.CalendarView: void reloadEvents()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.server.WindowManagerService: boolean detectSafeMode()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.music.MediaPlaybackActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.widget.LockPatternUtils: void saveLockPattern(java.util.List)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.sip.SipService$AutoRegistrationProcess: void stop()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.TetherSettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.cooliris.wallpaper.Slideshow: android.graphics.Bitmap getRandomBitmap()>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.phone.SipCallOptionHandler: boolean isNetworkConnected()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: void setName(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker: boolean trySetupData(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_APN_SETTINGS"
 ], 
 "<android.nfc.tech.Ndef: void connect()>": [
  "android.permission.NFC"
 ], 
 "<com.android.phone.BluetoothHandsfree$20: android.bluetooth.AtCommandResult handleReadCommand()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.mms.data.Conversation: void startDeleteAll(android.content.AsyncQueryHandler,int,boolean)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.connectivity.Tethering: boolean access$600(com.android.server.connectivity.Tethering,boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.ConfirmLockPattern: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.speech.SpeechRecognizer: void access$000(android.speech.SpeechRecognizer,android.content.Intent)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.phone.CallNotifier: void access$1000(com.android.phone.CallNotifier)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.service.wallpaper.WallpaperService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: android.net.Uri getContactFilterUri(java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.Phone: void invokeOemRilRequestRaw(byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.NfcAdapter: void enableForegroundNdefPush(android.app.Activity,android.nfc.NdefMessage)>": [
  "android.permission.NFC"
 ], 
 "<android.widget.VideoView: void access$2100(android.widget.VideoView,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.wifi.WifiSettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.NotificationPlayer: void enqueueLocked(com.android.server.NotificationPlayer$Command)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.music.ArtistAlbumBrowserActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.cooliris.media.MonitoredActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.transaction.TransactionService: void releaseWakeLock()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.WebView: void passToJavaScript(java.lang.String,android.view.KeyEvent)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.PhoneInterfaceManager: void call(java.lang.String)>": [
  "android.permission.CALL_PHONE"
 ], 
 "<com.android.phone.EmergencyCallHandler: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.DemoDataSet: android.net.Uri addShortcut(java.lang.String,android.content.Intent)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.IIccPhoneBook: java.util.List getAdnRecordsInEf(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.phone.FakePhoneActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.test.ModelInterpreter: void <init>(java.net.InetSocketAddress)>": [
  "android.permission.INTERNET"
 ], 
 "<android.bluetooth.BluetoothAdapter: boolean startDiscovery()>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.packageinstaller.UninstallAppProgress: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.os.INetworkManagementService: java.lang.String[] getDnsForwarders()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.IccCard: void supplyPin2(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.SearchResultsActivity: boolean onContextItemSelected(android.view.MenuItem)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.server.BluetoothService: boolean disable(boolean)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.contacts.ImportVCardActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.GetPin2Screen: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.Use2GOnlyCheckBoxPreference: void <init>(android.content.Context,android.util.AttributeSet)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.ILlcpSocket$Stub$Proxy: int connectByName(int,java.lang.String)>": [
  "android.permission.NFC"
 ], 
 "<com.android.exchange.SyncManager: void onCreate()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.WifiService: boolean setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.RI: void getNetworkSelectionMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.server.BluetoothA2dpService: boolean disconnectSink(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.content.SyncManager: void scheduleSyncOperation(android.content.SyncOperation)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.development.PackageSummary: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.INetworkManagementEventObserver: void interfaceLinkStatusChanged(java.lang.String,boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.speech.tts.TextToSpeech: int playSilence(long,int,java.util.HashMap)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.settings.ManageAccountsSettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.WifiService: boolean saveConfiguration()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.settings.bluetooth.DockService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.data.WorkingMessage: void access$100(com.android.mms.data.WorkingMessage,com.android.mms.data.Conversation,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<android.webkit.HTML5VideoViewProxy$PosterDownloader: void start()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.gsm.stk.RilMessageDecoder: void start()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket createNewRfcommSocketAndRecord(java.lang.String,java.util.UUID,boolean,boolean)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.gsm.stk.IconLoader: void loadIcons(int[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.StatusBarManager: void expand()>": [
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.phone.CdmaVoicePrivacyCheckBoxPreference: void <init>(android.content.Context)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.DTMFTwelveKeyDialer: void handleBurstDtmfConfirmation()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.IConnectivityManager: boolean isTetheringSupported()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onDataSetupComplete(android.os.AsyncResult)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.EditFdnContactScreen: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IccFileHandler: void loadEFLinearFixedAll(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.WeekActivity: android.view.View switchViews(boolean,float,float)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.email.activity.MessageView: void onDownloadAttachment(com.android.email.activity.MessageView$AttachmentInfo)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.statusbar.IStatusBarService: void expand()>": [
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.calendar.AlertActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.commands.bmgr.Bmgr: void run(java.lang.String[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.WindowManagerService: void unsetAppFreezingScreenLocked(com.android.server.WindowManagerService$AppWindowToken,boolean,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.internal.telephony.RI: void getCLIR(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityManagerService: boolean forceStopPackageLocked(java.lang.String,int,boolean,boolean,boolean)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.phone.CdmaCallOptions: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.util.AccountSelectionUtil$AccountSelectedListener: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.view.IWindowManager$Stub: void setAnimationScales(float[])>": [
  "android.permission.SET_ANIMATION_SCALE"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapObexServer: int pullVcardListing(byte[],com.android.bluetooth.pbap.BluetoothPbapObexServer$AppParamValue,javax.obex.HeaderSet,javax.obex.Operation)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.WifiService: boolean getPersistedWifiEnabled()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.music.VideoBrowserActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifySignalStrength(android.telephony.SignalStrength)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.MonthActivity: void updateTitle(android.text.format.Time)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.mms.ui.SlideListItemView: void setVideo(java.lang.String,android.net.Uri)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.Service: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void acceptCall()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.PackageManagerService: void loadMediaPackages(java.util.HashMap,int[],java.util.HashSet)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.contacts.SearchResultsActivity: android.net.Uri getContactFilterUri(java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.provider.Calendar$EventDays: android.database.Cursor query(android.content.ContentResolver,int,int)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.cooliris.picasa.PicasaApi: int getAlbumPhotos(android.accounts.AccountManager,android.content.SyncResult,com.cooliris.picasa.AlbumEntry,com.cooliris.picasa.GDataParser$EntryHandler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.INTERNET"
 ], 
 "<com.android.inputmethod.latin.LatinIME: void handleSeparator(int)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.settings.UserDictionarySettings: boolean onContextItemSelected(android.view.MenuItem)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.phone.OutgoingCallBroadcaster: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.DateTimeSettingsSetupWizard: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.settings.TextToSpeechSettings: void onInit(int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.cooliris.media.ReverseGeocoder: boolean process(com.cooliris.media.MediaSet)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.phone.GsmUmtsCallOptions: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.test.TestBrowserActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.FdnSetting: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.server.BluetoothEventLoop: void onDiscoverServicesResult(java.lang.String,boolean)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.net.wifi.WifiManager: boolean reconnect()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.bluetooth.BluetoothA2dp: int getSinkPriority(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.email.activity.MessageView: void onRespond(int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.CallManager: void acceptCall(com.android.internal.telephony.Call)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.AgendaListView: void deleteSelectedEvent()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.app.ReceiverRestrictedContext: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.BatteryInfo: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.browser.BrowserActivity: void onDestroy()>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipConnection$1: void onCallEstablished(android.net.sip.SipAudioCall)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.nfc.NfcService$8: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.email.service.EmailServiceProxy$2: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: void acquireMulticastLock(android.os.IBinder,java.lang.String)>": [
  "android.permission.CHANGE_WIFI_MULTICAST_STATE"
 ], 
 "<com.android.email.service.IEmailServiceCallback$Stub: void loadAttachmentStatus(long,long,int,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getDeviceSvn()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getSignalStrength(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: android.net.Uri getJoinSuggestionsUri(java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getDeviceId()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.browser.BrowserActivity: void onNetworkToggle(boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.mms.model.MediaModelFactory: com.android.mms.model.MediaModel getMediaModel(android.content.Context,org.w3c.dom.smil.SMILMediaElement,com.android.mms.model.LayoutModel,com.google.android.mms.pdu.PduBody)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.settings.AppWidgetPickActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.cooliris.media.UriTexture: java.io.BufferedInputStream createInputStreamFromRemoteUrl(java.lang.String,org.apache.http.conn.ClientConnectionManager)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.phone.InCallTouchUi: void updateState(com.android.internal.telephony.CallManager)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.nfc.tech.NdefFormatable: byte[] transceive(byte[],boolean)>": [
  "android.permission.NFC"
 ], 
 "<com.android.settings.UsageStats: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.ui.WarnOfStorageLimitsActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.htmlviewer.HTMLViewerActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.email.activity.setup.AccountSetupCheckSettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: void onConfigurationChanged(android.content.res.Configuration)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.ChooseLockGeneric: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppBtErrorActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.BluetoothHandsfree$30: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: int getDrmMimeSavedStringRsrc(long,boolean)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.email.service.IEmailService$Stub$Proxy: void sendMeetingResponse(long,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void cleanUpConnection(boolean,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.RI: void setSmscAddress(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: void setPassword(android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.email.service.MailService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.cooliris.media.MovieView$1: void <init>(android.view.View,android.content.Context,android.net.Uri)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.Controller$8: void run()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.RecognitionManagerService: void setCurRecognizer(android.content.ComponentName)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.cooliris.wallpaper.Slideshow: void performSetup(int,int)>": [
  "android.permission.INTERNET"
 ], 
 "<android.net.IThrottleManager$Stub: long getPeriodStartTime(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.mms.ui.SearchActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.inputmethod.pinyin.SettingsActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.DataConnectionTracker: void onDisconnectDone(android.os.AsyncResult)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_APN_SETTINGS"
 ], 
 "<android.speech.SpeechRecognizer: void handleStopMessage()>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.deskclock.AlarmAlertFullScreen: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.IBluetooth$Stub$Proxy: boolean setRemoteOutOfBandData(java.lang.String)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.app.ListActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.webkit.WebIconDatabase: void retainIconForPageUrl(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void <init>(com.android.internal.telephony.gsm.GSMPhone)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.bluetooth.IBluetooth$Stub: int getRemoteServiceChannel(java.lang.String,android.os.ParcelUuid)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.calendar.EventInfoActivity: void updateAttendees()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.bluetooth.IBluetooth$Stub: int getBondState(java.lang.String)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.email.service.EmailBroadcastProcessorService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.service.EmailBroadcastProcessorService: void onBootCompleted()>": [
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.phone.InCallScreen: void onClick(android.view.View)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.bluetooth.BluetoothA2dp: java.util.Set getConnectedSinks()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.app.ChooserActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.data.WorkingMessage$MessageStatusListener: void onMaxPendingMessagesReached()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.inputmethod.latin.LatinIME: void launchDebugSettings()>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<android.webkit.WebView: void access$1000(android.webkit.WebView,float,boolean,boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.CellBroadcastSms: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.providers.downloads.DownloadInfo: void notifyPauseDueToSize(boolean)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.telephony.RI: void switchWaitingOrHoldingAndActive(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.CredentialInstaller: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.ChooseLockPattern: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.music.PlaylistBrowserActivity: boolean onContextItemSelected(android.view.MenuItem)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.IBluetooth$Stub$Proxy: java.lang.String getName()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.browser.BrowserBackupAgent: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.voicedialer.VoiceDialerActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ITelephony: java.util.List getNeighboringCellInfo()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.provider.ContactsContract$SyncState: android.util.Pair getWithUri(android.content.ContentProviderClient,android.accounts.Account)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppLauncherActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.quicksearchbox.SearchSettings: void setShowWebSuggestions(android.content.Context,boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getIMEI(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.providers.calendar.CalendarDebug: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void supplyIccPuk2(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.activity.MessageCompose: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.BluetoothAtPhonebook: com.android.phone.BluetoothAtPhonebook$PhonebookResult getPhonebookResult(java.lang.String,boolean)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.bluetooth.IBluetooth: boolean cancelBondProcess(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.bluetooth.LocalBluetoothProfileManager$OppProfileManager: boolean isConnected(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.net.sip.ISipService$Stub$Proxy: void open(android.net.sip.SipProfile)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.calendar.WeekView: boolean onTouchEvent(android.view.MotionEvent)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.music.AudioPreview$PreviewPlayer: boolean resume()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.svox.pico.DownloadVoiceData: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.exchange.EasSyncService: org.apache.http.HttpResponse sendHttpClientPost(java.lang.String,org.apache.http.HttpEntity,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.server.BluetoothService: android.bluetooth.BluetoothDeviceProfileState access$1900(android.server.BluetoothService,java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.calendar.AgendaActivity$2: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<android.net.wifi.WifiManager: boolean enableNetwork(int,boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.settings.DisplaySettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.PackageManagerBackupAgent: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.activity.setup.AccountSetupExchange: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.AlertService: void postNotification(android.content.Context,android.content.SharedPreferences,java.lang.String,java.lang.String,int,boolean,boolean)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.server.BluetoothService: boolean setPropertyString(java.lang.String,java.lang.String)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.media.AudioService$2: void onServiceDisconnected()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.EditFdnContactScreen: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.http.HttpConnection: boolean httpFailure(android.net.http.Request,int,java.lang.Exception)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.provider.ContactsContract$SyncState: byte[] get(android.content.ContentProviderClient,android.accounts.Account)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.phone.ADNList: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.ApnEditor: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.AccountSyncSettingsInAddAccount: void updateAuthDescriptions()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.PhoneBase: void <init>(com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface)>": [
  "android.permission.CHANGE_CONFIGURATION", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity$6: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void reportStkServiceIsRunning(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.server.BluetoothA2dpService: void onBluetoothEnable()>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: void removeAccount(android.accounts.IAccountManagerResponse,android.accounts.Account)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.nfc.NfcService$7: byte[] getGeneralBytes(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.gsm.SimSmsInterfaceManager: void sendMultipartText(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS"
 ], 
 "<com.android.calendar.CalendarActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.IConnectivityManager$Stub: boolean isTetheringSupported()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getRegistrationState(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.applications.ManageApplications: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.CallCard: void updateForegroundCall(com.android.internal.telephony.CallManager)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.DataConnectionTracker: void onResetDone(android.os.AsyncResult)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.browser.BrowserSettings: void access$3200(com.android.browser.BrowserSettings,android.content.Context)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<android.app.ListActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.CreateShortcut: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.AccountAuthenticatorActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.vpn.VpnEditor: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.AlertReceiver: void beginStartingService(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.http.Request: void error(int,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.AccelerometerListener: void access$000(com.android.phone.AccelerometerListener,double,double,double)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.transaction.MessagingNotification: void access$200(android.content.Context,android.content.Intent,java.lang.String,int,boolean,java.lang.CharSequence,long,java.lang.String,int,int)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.development.ProcessInfo: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.activity.FolderMessageList: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.EmergencyDialer: void keyPressed(int)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.calendar.AgendaWindowAdapter: java.lang.String formatDateString(int)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.server.am.ActivityManagerService: void setProcessForeground(android.os.IBinder,int,boolean)>": [
  "android.permission.SET_PROCESS_LIMIT"
 ], 
 "<com.android.providers.calendar.CalendarAppWidgetProvider: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void switchHoldingAndActive()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.browser.BrowserBookmarksPage: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.service.wallpaper.ImageWallpaper: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.accounts.GrantCredentialsPermissionActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.tech.Ndef: boolean makeReadOnly()>": [
  "android.permission.NFC"
 ], 
 "<android.net.http.Connection: boolean openHttpConnection(android.net.http.Request)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.mms.MmsApp: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.exchange.EasOutboxService: int parsePingResult(java.io.InputStream,android.content.ContentResolver,java.util.HashMap)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.deskclock.Alarms: void disableAlert(android.content.Context)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager: boolean enableCellBroadcastRange(int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.development.ShowActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: void separate()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.location.LocationProviderInterface: void enableLocationTracking(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityManagerService: void removeConnectionLocked(com.android.server.am.ConnectionRecord,com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onVoiceCallStarted()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.IContentService$Stub: int getIsSyncable(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: void enforceReceiveAndSend(java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.os.INetworkManagementService: void detachPppd(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.server.ConnectivityService: void enforceChangePermission()>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.providers.contacts.LegacyApiSupport: android.net.Uri findFirstDataRow(long,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.google.common.io.Resources: void copy(java.net.UR,java.io.OutputStream)>": [
  "android.permission.INTERNET"
 ], 
 "<android.net.sip.SipManager: android.net.sip.SipSession createSipSession(android.net.sip.SipProfile,android.net.sip.SipSession$Listener)>": [
  "android.permission.USE_SIP"
 ], 
 "<android.location.ILocationManager$Stub: void removeTestProvider(java.lang.String)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<android.bluetooth.IBluetoothA2dp$Stub: android.bluetooth.BluetoothDevice[] getConnectedSinks()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.cooliris.media.PhotoAppWidgetBind: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.MutableContextWrapper: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.cooliris.media.GridInputProcessor: void selectSlot(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.inputmethod.latin.LatinKeyboardBaseView$2: void onText(java.lang.CharSequence)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.providers.calendar.CalendarProvider2: int updateInTable(java.lang.String,android.content.ContentValues,android.net.Uri,java.lang.String,java.lang.String[])>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.server.BackupManagerService$ActiveRestoreSession: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.email.activity.MailboxList: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.ui.SlideshowEditActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.ViewContactActivity: void onResume()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: void handleWakeWhenReady(int)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.RI: void supplyIccPuk2(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.BluetoothSocket$SdpHelper: int doSdp()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.test.mock.MockContentResolver: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.server.BackupManagerService$PerformBackupTask: int doQueuedBackups(com.android.internal.backup.IBackupTransport)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.server.WindowManagerService: void exitKeyguardSecurely(android.view.IOnKeyguardExitResult)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.DISABLE_KEYGUARD", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.ConnectivityService: java.lang.String[] getTetherableWifiRegexs()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.development.SyncAdapterDriver: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.providers.telephony.TelephonyProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>": [
  "android.permission.WRITE_APN_SETTINGS"
 ], 
 "<com.android.server.PackageManagerService$11: void run()>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.internal.util.HierarchicalStateMachine$HsmHandler$HaltingState: void exit()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.nfc.ILlcpSocket$Stub: int getLocalSocketRw(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.calendar.SelectCalendarsActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.ApnSettings: boolean onOptionsItemSelected(android.view.MenuItem)>": [
  "android.permission.WRITE_APN_SETTINGS"
 ], 
 "<com.android.internal.os.storage.ExternalStorageFormatter: void onCreate()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.IThrottleManager$Stub$Proxy: long getByteCount(java.lang.String,int,int,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.view.VolumePanel: void onVibrate()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.phone.InCallScreenShowActivation: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.RI: void getOperator(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.WifiService: void doUpdateWifiState()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.sip.SipAudioCall: void startAudioInternal()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.spare_parts.SpareParts: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.phone.InCallTouchUi: void onGrabbedStateChange(android.view.View,int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.location.GpsLocationProvider: void requestRefLocation(int)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.nfc.IP2pTarget: byte[] transceive(int,byte[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipConnection: void hangup()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.server.BluetoothService: void updateDeviceServiceChannelCache(java.lang.String)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.systemui.statusbar.policy.StatusBarPolicy: void updateBluetooth(android.content.Intent)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.server.BluetoothService: void access$1100(android.server.BluetoothService)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.BluetoothHandsfree$30: android.bluetooth.AtCommandResult handleReadCommand()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.email.activity.MessageList: void access$1600(com.android.email.activity.MessageList)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<android.net.sip.ISipService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_SIP"
 ], 
 "<com.android.exchange.EasSyncService: void doProgressCallback(long,long,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.test.SimulatedCommands: void setRadioPower(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.BluetoothSocket: void connect()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppRfcommListener$1: void run()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.LoadAverageService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.nfc.ILlcpSocket$Stub$Proxy: int close(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.phone.DataUsage: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.AccountManager: java.lang.String getUserData(android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.email.activity.setup.AccountSetupAccountType: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.os.PowerManager$WakeLock$1: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.connectivity.Tethering$TetherInterfaceSM$UnavailableState: void exit()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.email.activity.MessageView: boolean moveToOlder()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.email.activity.MessageList: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.ui.EditContactActivity$AddContactTask: void onPostExecute(com.android.contacts.ui.EditContactActivity,java.util.ArrayList)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.providers.downloads.SizeLimitActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.LocationManagerService: java.lang.String getBestProvider(android.location.Criteria,boolean)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.ThrottleService: int getThrottle(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.CallLogAsync$GetLastOutgoingCallTask: java.lang.Object doInBackground(java.lang.Object[])>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: void hangupWaitingOrBackground()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.IBluetooth$Stub$Proxy: boolean setName(java.lang.String)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.camera.ui.HeadUpDisplay$Listener: void onSharedPreferencesChanged()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.speech.IRecognitionService: void stopListening(android.speech.IRecognitionListener)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.server.NetworkManagementService: void notifyInterfaceLinkStatusChanged(java.lang.String,boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.email.activity.MessageView$MessageViewHandler: void attachmentProgress(boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.PackageManagerService: android.content.pm.PackageParser$Package scanPackageLI(java.io.File,int,int,long)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<android.bluetooth.BluetoothAdapter: java.lang.String getName()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.contacts.ui.EditContactActivity: int compare(java.lang.Object,java.lang.Object)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.email.activity.setup.AccountSetupAccountType: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: void dispatchAttributesChanged()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.speech.IRecognitionService$Stub: void startListening(android.content.Intent,android.speech.IRecognitionListener)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.server.LocationManagerService: void addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<android.preference.PreferenceActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.activity.setup.AccountSetupIncoming: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.commands.svc.Svc$Command: void run(java.lang.String[])>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.LocationManagerService: boolean _isProviderEnabledLocked(java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.net.wifi.IWifiManager: void setWifiApConfiguration(android.net.wifi.WifiConfiguration)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.settings.AddAccountSettings: void addAccount(java.lang.String)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.settings.DateTimeSettings: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.cooliris.media.PopupMenu: void renderOpaque(com.cooliris.media.RenderView,javax.microedition.khronos.opengles.GL11)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.server.AccessibilityManagerService$2: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.email.service.MailService$ControllerResults: void updateMailboxCallback(com.android.email.mail.MessagingException,long,long,int,int)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.exchange.SyncManager: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.google.common.io.MultiInputStream: void <init>(java.util.Iterator)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.contacts.ContactsListActivity$4: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.email.activity.AccountShortcutPicker: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.calendar.EventInfoActivity: boolean isDuplicateName(java.lang.String)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.contacts.ui.EditContactActivity: void joinAggregate(long)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.WindowManagerService$WindowState: boolean showLw(boolean,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.contacts.RecentCallsListActivity: void startQuery()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppManager: void enableBluetooth()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.development.PermissionDetails: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.data.Conversation$1: void run()>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.calendar.CalendarActivity: void onResume()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.calendar.EditEvent: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.server.LocationManagerService: void setTestProviderLocation(java.lang.String,android.location.Location)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.settings.bluetooth.ConnectSpecificProfilesActivity: void onDeviceAttributesChanged(com.android.settings.bluetooth.CachedBluetoothDevice)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.provider.Calendar$Calendars: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],java.lang.String,java.lang.String)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.settings.RadioInfo: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.sip.ISipService$Stub$Proxy: void close(java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_SIP"
 ], 
 "<android.nfc.ILlcpSocket: int getLocalSocketRw(int)>": [
  "android.permission.NFC"
 ], 
 "<android.bluetooth.IBluetoothHeadset: int getState(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.music.MediaPlaybackService$ServiceStub: void pause()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.WallpaperManager: void suggestDesiredDimensions(int,int)>": [
  "android.permission.SET_WALLPAPER_HINTS"
 ], 
 "<com.android.phone.BluetoothHandsfree$18: android.bluetooth.AtCommandResult handleActionCommand()>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.music.MediaPlaybackActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.ui.ConversationList: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.LaunchActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.ActivityPicker: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.EmergencyCallHandler: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.IContentService$Stub: void setMasterSyncAutomatically(boolean)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.net.sip.SipAudioCall: void endCall()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.LocationManagerService$ProximityListener: void onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.ConnectivityService: java.lang.String[] getTetheringErroredIfaces()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.webkit.WebIconDatabase$EventHandler: void access$900(android.webkit.WebIconDatabase$EventHandler,android.os.Message)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.server.am.ActivityManagerService: boolean killPackageProcessesLocked(java.lang.String,int,int,boolean,boolean)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppTransferHistory$1: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.systemui.usb.UsbStorageActivity$9: void run()>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
 ], 
 "<com.android.settings.MasterClear: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.BluetoothDeviceProfileState$OutgoingA2dp: boolean processMessage(android.os.Message)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.app.AliasActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.Application: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GsmConnection: void onConnectedInOrOut()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.Navigator: long getSelectedTime()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.bluetooth.BluetoothProfileState$PendingCommandState: void exit()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.WifiService: boolean removeNetwork(int)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.phone.BluetoothHandsfree$BluetoothPhoneState: void access$500(com.android.phone.BluetoothHandsfree$BluetoothPhoneState,boolean,com.android.internal.telephony.Connection)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.contacts.SearchResultsActivity: boolean deleteSelection()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.test.mock.MockContentResolver: void setIsSyncable(android.accounts.Account,java.lang.String,int)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.bluetooth.IBluetooth$Stub: boolean enable()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.mms.data.Contact$ContactsCache$1: void run()>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.email.GroupMessagingListener: void loadMessageForViewStarted(long)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: java.util.List getConfiguredNetworks()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.mms.ui.ManageSimMessages$3: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.settings.wifi.WifiApSettings: void onCreate(android.os.Bundle)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.music.AudioPreview: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.VibratorService$VibrateThread: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.WifiManager: android.net.DhcpInfo getDhcpInfo()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.calendar.GoogleCalendarUriIntentFilter: void onCreate(android.os.Bundle)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.settings.AccessibilitySettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.model.VideoModel: void <init>(android.content.Context,java.lang.String,java.lang.String,com.android.mms.drm.DrmWrapper,com.android.mms.model.RegionModel)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void notifyServiceStateChanged(android.telephony.ServiceState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.cooliris.media.RenderView: void loadTexture(com.cooliris.media.Texture)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.server.WifiService: void setWifiEnabledState(int,int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.development.SyncAdapterDriver: void startSync(java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.mms.transaction.MessagingNotification: void blockingUpdateAllNotifications(android.content.Context)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.soundrecorder.SoundRecorder: void onConfigurationChanged(android.content.res.Configuration)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.BluetoothDevice: boolean setDeviceOutOfBandData(byte[],byte[])>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.media.RingtoneManager: void stopPreviousRingtone()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.FdnSetting: void updatePINChangeState(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.Settings: void onResume()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.bluetooth.IBluetooth$Stub$Proxy: boolean cancelDiscovery()>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.webkit.WebView$DragTrackerHandler: boolean draw(android.graphics.Canvas)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.view.WindowManagerPolicy: void init(android.content.Context,android.view.IWindowManager,android.os.LocalPowerManager)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.music.MusicBrowserActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.WifiWatchdogService: void registerForSettingsChanges()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.development.AppHwPref: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.transaction.RetrieveTransaction: void notifyObservers()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SMS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.development.Details: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.os.IVibratorService$Stub: void cancelVibrate(android.os.IBinder)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.providers.downloads.DownloadThread: void reportProgress(com.android.providers.downloads.DownloadThread$State,com.android.providers.downloads.DownloadThread$InnerState)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.settings.ApplicationSettings: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.music.IMediaPlaybackService$Stub$Proxy: void enqueue(long[],int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.provider.Calendar$Calendars: int delete(android.content.ContentResolver,java.lang.String,java.lang.String[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppObexSession: void start(android.os.Handler)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.HTML5VideoViewProxy$VideoPlayer: void play(java.lang.String,int,android.webkit.HTML5VideoViewProxy,android.webkit.WebChromeClient)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.WebView: void access$4200(android.webkit.WebView,int,int,boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.music.AlbumBrowserActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.cooliris.media.ActiveWallpaper: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.PackageManagerService: void replaceSystemPackageLI(android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package,int,int,java.lang.String,com.android.server.PackageManagerService$PackageInstalledInfo)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.settings.AccessibilitySettings: void onResume()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void dispose()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.NetworkQueryService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.exchange.adapter.ContactsSyncAdapter: void cleanup()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.app.IActivityManager: void setDebugApp(java.lang.String,boolean,boolean)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.SET_DEBUG_APP"
 ], 
 "<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendRawPdu(byte[],byte[],android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.PhoneUtils: void setAudioMode(com.android.internal.telephony.CallManager)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.provider.ContactsContract$RawContacts: android.net.Uri getContactLookupUri(android.content.ContentResolver,android.net.Uri)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.webkit.LoadListener: boolean handleSslErrorRequest(android.net.http.SslError)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.music.MusicPicker: void onPause()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: void setMasterSyncAutomatically(boolean)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState: void chooseUpstreamType(boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.InputMethodManagerService: boolean access$000(com.android.server.InputMethodManagerService)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.WindowManagerService: void startAppFreezingScreenLocked(com.android.server.WindowManagerService$AppWindowToken,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.svox.pico.GetSampleText: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.IBluetooth: boolean enable()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.mms.ui.ConversationList: boolean onContextItemSelected(android.view.MenuItem)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WRITE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.mms.util.Recycler: void deleteOldMessagesByThreadId(android.content.Context,long)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.vpn.VpnServiceBinder: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.sip.SipService: void close(java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_SIP"
 ], 
 "<com.android.server.WifiService: boolean access$2000(com.android.server.WifiService,boolean,boolean,int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.CHANGE_WIFI_MULTICAST_STATE"
 ], 
 "<com.android.development.AccountsTester: boolean onContextItemSelected(android.view.MenuItem)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.providers.calendar.CalendarProvider2: int updateInTransaction(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.settings.deviceinfo.Memory: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.ISms$Stub$Proxy: boolean enableCellBroadcastRange(int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.nfc.tech.NfcB: byte[] transceive(byte[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void access$3100(com.android.internal.telephony.gsm.GsmDataConnectionTracker)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_APN_SETTINGS"
 ], 
 "<com.android.server.WifiService: void startWifi()>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppBtEnablingActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.IConnectivityManager$Stub: void setNetworkPreference(int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.accounts.IAccountManager: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.phone.CallNotifier: void silenceRinger()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.nfc.IP2pInitiator$Stub: byte[] getGeneralBytes(int)>": [
  "android.permission.NFC"
 ], 
 "<android.webkit.WebView: boolean zoomIn()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.provider.Settings$System: void setShowGTalkServiceStatus(android.content.ContentResolver,boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.inputmethod.voice.VoiceInput$UiListener: void onVoiceResults(java.util.List,java.util.Map)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.mms.transaction.SmsReceiverService: void messageFailedToSend(android.net.Uri,int)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.contacts.ContactsUtils: java.lang.String querySuperPrimaryPhone(android.content.ContentResolver,long)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapService: void createPbapNotification(java.lang.String)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.google.common.io.MultiInputStream: int read()>": [
  "android.permission.INTERNET"
 ], 
 "<android.preference.PreferenceActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.AccountManagerService: void editProperties(android.accounts.IAccountManagerResponse,java.lang.String,boolean)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<android.content.ContextWrapper: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppLauncherActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.test.mock.MockApplication: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.deviceinfo.Status: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.cooliris.media.CropImage: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.calendar.DayView: void reloadEvents()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.server.WindowManagerService$InputMonitor: boolean interceptKeyBeforeDispatching(android.view.InputChannel,int,int,int,int,int,int,int)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.CHANGE_CONFIGURATION", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.contacts.ContactsListActivity: boolean callSelection()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.server.BluetoothService: int getRemoteClass(java.lang.String)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.camera.Camera: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: void setIsSyncable(android.accounts.Account,java.lang.String,int)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.mms.ui.SlideshowEditActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.WifiService: int addOrUpdateNetwork(android.net.wifi.WifiConfiguration)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.BackupManagerService$RunInitializeReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void handlePollStateResult(int,android.os.AsyncResult)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.music.RenamePlaylist: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.bluetooth.LocalBluetoothProfileManager$HeadsetProfileManager: int getPreferred(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: void onSearchTextChanged()>": [
  "android.permission.READ_SYNC_STATS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord addAppLocked(android.content.pm.ApplicationInfo)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.exchange.SyncManager: void access$1100(com.android.exchange.SyncManager,long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.voicedialer.VoiceDialerActivity$2: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.test.IsolatedContext: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.nfc.IP2pTarget$Stub$Proxy: byte[] transceive(int,byte[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.phone.BluetoothHandsfree$2: android.bluetooth.AtCommandResult headsetButtonPress()>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.webkit.CacheLoader: void load()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.location.LocationProviderInterface: void disable()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: void proceedAfterWaitChar()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.InCallScreen: android.view.View onCreatePanelView(int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.calendar.DismissAllAlarmsService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.sip.SipEditor: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.exchange.adapter.CalendarSyncAdapter$EasCalendarSyncParser: void wipe()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.internal.telephony.RI: void setRadioPower(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.BluetoothHeadset: boolean isConnected(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.accounts.AccountManager$9: android.accounts.AccountManagerFuture start()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.nfc.NfcService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.media.MediaScanner$MyMediaScannerClient: android.net.Uri doScanFile(java.lang.String,java.lang.String,long,long,boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.settings.bluetooth.DockEventReceiver: void beginStartingService(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.BluetoothHandsfree$4: android.bluetooth.AtCommandResult handleTestCommand()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.mms.transaction.RetryScheduler: void scheduleRetry(android.net.Uri)>": [
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.cooliris.media.RenderView: void drawMixed2D(com.cooliris.media.Texture,com.cooliris.media.Texture,float,float,float,float,float,float)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.contacts.ContactsLiveFolders$PhoneContacts: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: android.net.wifi.WifiConfiguration getWifiApConfiguration()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.sip.SipService$SipSessionGroupExt: void close()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$WifiStateTracker$1: java.lang.Object doInBackground(java.lang.Object[])>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.mms.ui.MessageListAdapter$AvatarCache$ContactData: boolean onContactIdLoaded(android.database.Cursor,int,int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.mms.transaction.TransactionService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.Phone: void getSmscAddress(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.NetworkManagementService: boolean getIpForwardingEnabled()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.calendar.DayView: void <init>(com.android.calendar.CalendarActivity)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.view.IWindowManager$Stub$Proxy: void prepareAppTransition(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.development.RunningProcesses: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: void fillData()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.view.IWindowManager: void setNewConfiguration(android.content.res.Configuration)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<android.app.ContextImpl: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.IP2pInitiator: byte[] getGeneralBytes(int)>": [
  "android.permission.NFC"
 ], 
 "<android.net.wifi.WifiStateTracker: void <init>(android.content.Context,android.os.Handler)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.bluetooth.BluetoothAdapter: boolean setScanMode(int,int)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: boolean haveSomethingToCopyToDrmProvider(long)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.mms.ui.SlideEditorActivity: boolean onOptionsItemSelected(android.view.MenuItem)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.speech.tts.ITts: int speak(java.lang.String,java.lang.String,int,java.lang.String[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.google.common.io.CharStreams$4: java.io.Reader getInput()>": [
  "android.permission.INTERNET"
 ], 
 "<android.webkit.WebView: void drawContent(android.graphics.Canvas)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.calendar.DeleteEventHelper: void deleteRepeatingEvent(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.settings.DeviceAdminSettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.policy.impl.GlobalActions$4: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.voicedialer.VoiceDialerActivity$CommandRecognizerClient$4: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.systemui.usb.UsbPermissionActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.bluetooth.BluetoothPermissionActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.commands.monkey.Monkey: void signalPersistentProcesses()>": [
  "android.permission.SIGNAL_PERSISTENT_PROCESSES"
 ], 
 "<com.android.phone.CdmaSystemSelectListPreference$MyHandler: void handleQueryCdmaRoamingPreference(android.os.Message)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.cooliris.media.GridInputProcessor: boolean onSingleTapUp(android.view.MotionEvent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.Controller$12: void run()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.nfc.INfcTag$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.settings.bluetooth.LocalBluetoothManager: void setBluetoothStateInt(int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.bluetooth.IBluetoothPbap: boolean isConnected(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.mms.data.Contact$ContactsCache: com.android.mms.data.Contact getContactInfoForPhoneNumber(java.lang.String)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void hangupAndPowerOff()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager$3: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.cooliris.picasa.PicasaContentProvider: void syncUserPhotos(com.cooliris.picasa.PicasaContentProvider$SyncContext,java.lang.String,android.content.SyncResult)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.INTERNET"
 ], 
 "<com.android.mms.transaction.ReadRecTransaction: void ensureRouteToHost(java.lang.String,com.android.mms.transaction.TransactionSettings)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: android.net.DhcpInfo getDhcpInfo()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GsmConnection: void hangup()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.TextToSpeechSettings: void loadEngines()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.content.SyncManager$SyncAlarmIntentReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<android.os.INetworkManagementService$Stub: void startUsbRNDIS()>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.soundrecorder.SoundRecorder: void onStateChanged(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.exchange.SyncManager$2: void updateFolderList(long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.INfcTag$Stub: int formatNdef(int,byte[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.music.ScanningProgress: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.webkit.WebView: boolean zoomOut()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.inputmethod.latin.LatinIMEDebugSettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.DebugIntentSender: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.providers.contacts.LegacyApiSupport: java.lang.String getType(android.net.Uri)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.net.sip.ISipService$Stub: void open(android.net.sip.SipProfile)>": [
  "android.permission.USE_SIP"
 ], 
 "<android.server.BluetoothService: boolean setDeviceOutOfBandData(java.lang.String,byte[],byte[])>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.browser.FindDialog: void dismiss()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.providers.media.MediaScannerService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.accounts.AccountManager: void addOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener,android.os.Handler,boolean)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.music.TrackBrowserActivity$7: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.AtCommandHandler: android.bluetooth.AtCommandResult handleReadCommand()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.view.IWindowManager$Stub: void prepareAppTransition(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.development.PermissionDetails: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.policy.impl.GlobalActions$2: void onToggle(boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.calendar.MonthActivity: void onResume()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.server.WifiWatchdogService: void access$1000(com.android.server.WifiWatchdogService,com.android.server.WifiWatchdogService$AccessPoint)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.settings.UserDictionarySettings: void onAddOrEditFinished(java.lang.String)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.settings.fuelgauge.BatteryHistoryDetail: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.DialtactsActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.Downloads$ById: android.os.ParcelFileDescriptor openDownload(android.content.Context,long,java.lang.String)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$WifiStateTracker: int getTriState(android.content.Context)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.ZonePicker: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.ContentResolver: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.contacts.ui.EditContactActivity$PersistTask: java.lang.Integer doInBackground(com.android.contacts.ui.EditContactActivity,com.android.contacts.model.EntitySet[])>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.SystemBackupAgent: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.calendar.AgendaActivity: void access$100(com.android.calendar.AgendaActivity)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.settings.IccLockSettings: void tryChangePin()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.IBluetoothPbap$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.contacts.ImportVCardActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.settings.SoundSettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.speech.tts.ITts$Stub: boolean synthesizeToFile(java.lang.String,java.lang.String,java.lang.String[],java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.InCallScreen: com.android.phone.InCallScreen$InCallInitStatus internalResolveIntent(android.content.Intent)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.util.HierarchicalStateMachine$HsmHandler$QuittingState: void enter()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.Connection: void proceedAfterWildChar(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.AccountsTester: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.music.TrackBrowserActivity: android.database.Cursor access$300(com.android.music.TrackBrowserActivity,com.android.music.TrackBrowserActivity$TrackListAdapter$TrackQueryHandler,java.lang.String,boolean)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.DeleteEventHelper$3: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<android.bluetooth.IBluetooth$Stub: boolean removeBond(java.lang.String)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.net.wifi.IWifiManager: android.net.wifi.WifiInfo getConnectionInfo()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.sip.SipService$ConnectivityReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.nfc.LlcpConnectionlessSocket: void close()>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void updateMessageWaitingIndicator(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void hangupWaitingOrBackground(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.RecentCallsListActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.quicksearchbox.google.GoogleSearch: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.nfc.NfcService$5: int sendTo(int,android.nfc.LlcpPacket)>": [
  "android.permission.NFC"
 ], 
 "<com.cooliris.media.CropImage: void onCreate(android.os.Bundle)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.INTERNET", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.os.INetworkManagementService: int getInterfaceRxThrottle(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.email.activity.setup.AccountSetupCheckSettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getSubscriberId()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: void refresh()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.mms.ui.RecipientsAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppTransferActivity: void setUpDialog()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.settings.applications.RunningServiceDetails: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.activity.FolderMessageList: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.SearchResultsActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_SYNC_STATS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.calendar.AlertActivity: void onResume()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.mms.ui.MmsThumbnailPresenter: void present()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.LockPatternUtils: byte[] passwordToHash(java.lang.String)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.connectivity.Tethering$TetherInterfaceSM$InitialState: void enter()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.bluetooth.IBluetoothHeadset: boolean startVoiceRecognition()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.ActivityPicker: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.os.INetworkManagementService$Stub: void enableNat(java.lang.String,java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<android.bluetooth.IBluetoothA2dp: boolean resumeSink(android.bluetooth.BluetoothDevice)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.InCallScreen: void updateAfterRadioTechnologyChange()>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.deviceinfo.Memory: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.MasterClear: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.inputmethod.latin.ExpandableDictionary$LoadDictionaryTask: java.lang.Object doInBackground(java.lang.Object[])>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.READ_CONTACTS", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<android.media.MediaPlayer: boolean suspend()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.ConversationList: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.cooliris.media.PhotoAppWidgetConfigure: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.Settings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void exitEmergencyCallbackMode()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.LocationManagerService: void loadProvidersLocked()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.exchange.EasOutboxService: int sendMessage(java.io.File,long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.MediaFormat: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.BackupManagerService$ActiveRestoreSession: int restorePackage(java.lang.String,android.app.backup.IRestoreObserver)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.inputmethod.latin.LatinIMEDebugSettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.webkit.StreamLoader: boolean sendData()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaDataConnection: void tearDownData(java.lang.Object)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.deskclock.AlarmClock$AlarmTimeAdapter$1: void onClick(android.view.View)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.settings.LocalePicker: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.wifi.WifiEnabler: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void onStart()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.webkit.CacheLoader: boolean setupStreamAndSendStatus()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.cooliris.media.MovieView: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.IMediaPlaybackService$Stub$Proxy: void stop()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.Network: void <init>(android.content.Context)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.nfc.NfcService$3: int close(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.music.AlbumBrowserActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.bluetooth.BluetoothNamePreference: void <init>(android.content.Context,android.util.AttributeSet)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.nfc.INfcTag$Stub: int connect(int,int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity$PduBodyCache: com.google.android.mms.pdu.PduBody getPduBody(android.content.Context,android.net.Uri)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.phone.Settings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.wifi.WifiSettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.IActivityManager: void unbroadcastIntent(android.app.IApplicationThread,android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.WifiService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_MULTICAST_STATE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.media.MediaPlayer: void access$300(android.media.MediaPlayer,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.InCallScreen$5: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IccProvider: boolean updateIccRecordInEf(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void handleCallSetupRequestFromSim(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.AppPicker: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.ContactsListActivity: void onSearchTextChanged()>": [
  "android.permission.READ_SYNC_STATS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.app.backup.BackupAgentHelper: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.IccCard: void changeIccFdnPassword(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.transaction.SmsMessageSender: boolean sendMessage(long)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS"
 ], 
 "<com.android.browser.BrowserActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.BluetoothDevice: int getServiceChannel(android.os.ParcelUuid)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.IccPhoneBookInterfaceManager: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.webkit.HTML5VideoViewProxy: void loadPoster(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void hangupForegroundResumeBackground(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.VibratorService$1: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.ContentResolver: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet,int,java.util.Map)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.server.WindowManagerService: void moveAppWindowsLocked(com.android.server.WindowManagerService$AppWindowToken,int,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.deskclock.AlarmKlaxon$3: boolean onError(android.media.MediaPlayer,int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetherableUsbRegexs()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.nfc.tech.IsoDep: byte[] transceive(byte[],boolean)>": [
  "android.permission.NFC"
 ], 
 "<com.android.calendar.AlertActivity$3: void onClick(android.view.View)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppNotification: void updateActiveNotification()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.UsimPhoneBookManager: void readIapFileAndWait(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.IBluetoothA2dp$Stub: boolean connectSinkInternal(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.nfc.tech.MifareClassic: void writeBlock(int,byte[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppIncomingFileConfirmActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.voicedialer.VoiceDialerActivity$CommandRecognizerClient: void onMicrophoneStart(java.io.InputStream)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getLine1Number()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.os.IPowerManager$Stub$Proxy: void releaseWakeLock(android.os.IBinder,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.providers.downloads.DownloadService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.view.VolumePanel: void onShowVolumeChanged(int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.settings.bluetooth.DockService: boolean createDialog(com.android.settings.bluetooth.DockService,android.bluetooth.BluetoothDevice,int,int)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.cooliris.media.GridDrawManager: void drawFocusItems(com.cooliris.media.RenderView,javax.microedition.khronos.opengles.GL11,float,boolean,float)>": [
  "android.permission.INTERNET"
 ], 
 "<android.location.ILocationManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_LOCATION_EXTRA_COMMANDS", 
  "android.permission.ACCESS_MOCK_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.calendar.WeekView: void setSelectedDay(android.text.format.Time)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: void onResume()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_SYNC_STATS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.speech.RecognitionService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.BluetoothHeadset: boolean setPriority(android.bluetooth.BluetoothDevice,int)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.sip.SipEditor: void access$500(com.android.phone.sip.SipEditor)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_SIP"
 ], 
 "<android.location.ILocationManager$Stub$Proxy: void setTestProviderEnabled(java.lang.String,boolean)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.internal.policy.impl.SimUnlockScreen: void checkPin()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.ConnectivityService$ConnectivityThread: void run()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.mms.ui.SlideEditorActivity$2: void onClick(android.view.View)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.server.BluetoothService: android.bluetooth.BluetoothDeviceProfileState addProfileState(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.development.SyncAdapterDriver: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.wifi.WifiApSettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.PrivacySettings: void setBackupEnabled(boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.telephony.gsm.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS"
 ], 
 "<com.android.inputmethod.latin.LatinKeyboardBaseView$UIHandler: void startKeyRepeatTimer(long,int,com.android.inputmethod.latin.PointerTracker)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<android.net.wifi.WifiManager: java.util.List getScanResults()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.launcher2.Launcher: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.WirelessSettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.BluetoothHandsfree$13: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.app.ChooserActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.INTERNET", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.vpn.L2tpIpsecPskService: void onError(int)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.email.Controller$LegacyListener: void loadAttachmentFinished(long,long,long)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void disableLocationUpdates()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.browser.HistoryItem$1: void onCheckedChanged(android.widget.CompoundButton,boolean)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.settings.Settings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.calendar.CalendarApplication: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.RuimCard: void broadcastIccStateChangedIntent(java.lang.String,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.policy.impl.LockScreen: boolean onKeyDown(int,android.view.KeyEvent)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.calendar.EventInfoActivity$1: void run()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.phone.BluetoothHandsfree: boolean audioOn()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.providers.contacts.LegacyApiSupport: int updatePhones(long,android.content.ContentValues)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.contacts.ui.EditContactActivity$PersistTask: void onPostExecute(java.lang.Object)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.email.activity.setup.AccountSettings: boolean onKeyDown(int,android.view.KeyEvent)>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.providers.downloads.DownloadService: void updateDownload(com.android.providers.downloads.DownloadInfo$Reader,com.android.providers.downloads.DownloadInfo,long)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.telephony.gsm.stk.RilMessageDecoder$StateCmdParamsReady: void exit()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.BatteryService: void sendIntent()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.DTMFTwelveKeyDialer: void startToneCdma(char)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.data.WorkingMessage: void access$700(com.android.mms.data.WorkingMessage,long,java.lang.String)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.phone.PhoneApp: void setBeginningCall(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setSuppServiceNotifications(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: void startQuery()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_SYNC_STATS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.LocationManagerService$Receiver: void onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.MessageListAdapter: void notifyImageLoaded(java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.browser.TabControl: boolean restoreState(android.os.Bundle)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET"
 ], 
 "<android.server.BluetoothService: java.lang.String getName()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.phone.OtaUtils: void onClickOtaActivateNextButton()>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.AccountSyncSettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.IMediaPlaybackService: int removeTracks(int,int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ITelephony$Stub: android.os.Bundle getCellLocation()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.app.WallpaperManager: void setResource(int)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.exchange.adapter.ContactsSyncAdapter$ContactOperations: void delete(long)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: void <init>(android.content.Context,android.bluetooth.BluetoothDevice)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.applications.InstalledAppDetails: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.WindowManagerService: void startFreezingDisplayLocked()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmConnection: boolean processPostDialChar(char)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getPreferredNetworkType(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.BaseCommands: void setRadioState(com.android.internal.telephony.CommandsInterface$RadioState)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.cooliris.media.Gallery: void initializeDataSource()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.speech.SpeechRecognizer: void stopListening()>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.mms.transaction.MessageStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.email.service.IEmailService: void stopSync(long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.voicedialer.BluetoothVoiceDialerActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.media.AsyncPlayer: void acquireWakeLock()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.certinstaller.CertFileList: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.ui.ManageSimMessages: void onCreate(android.os.Bundle)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.net.sip.SipAudioCall: void setSpeakerMode(boolean)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.settings.bluetooth.DockService: com.android.settings.bluetooth.CachedBluetoothDevice getCachedBluetoothDevice(android.content.Context,com.android.settings.bluetooth.LocalBluetoothManager,android.bluetooth.BluetoothDevice)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.policy.impl.LockPatternKeyguardView: void verifyUnlock()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.calendar.CalendarActivity$2: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.internal.policy.impl.RecentApplicationsDialog: void onStart()>": [
  "android.permission.GET_TASKS"
 ], 
 "<android.tts.TtsService: int stopAll(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.INfcTag$Stub$Proxy: int close(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.WifiService: boolean setWifiEnabledBlocking(boolean,boolean,int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.CHANGE_WIFI_MULTICAST_STATE"
 ], 
 "<android.webkit.WebView: void access$7000(android.webkit.WebView,boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.mms.model.SlideshowModel: com.google.android.mms.pdu.PduBody getPduBody(android.content.Context,android.net.Uri)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry$Stub: void notifyDataConnection(int,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,int,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.CallCard: void onImageLoadComplete(int,java.lang.Object,android.widget.ImageView,boolean)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.bluetooth.BluetoothDeviceProfileState$OutgoingHandsfree: boolean processMessage(android.os.Message)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.os.storage.IMountService: void setUsbMassStorageEnabled(boolean)>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: boolean isSyncActive()>": [
  "android.permission.READ_SYNC_STATS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.term.TermPreferences: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.content.IContentService$Stub$Proxy: boolean isSyncPending(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.systemui.usb.UsbResolverActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.InCallScreen: void endInCallScreenSession()>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.mms.ui.SlideView: void stopAudio()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.IP2pTarget$Stub$Proxy: byte[] getGeneralBytes(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.music.RenamePlaylist: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.music.ArtistAlbumBrowserActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.quicklaunch.QuickLaunchSettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.util.EmptyService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: void onLocalDisconnect()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: boolean handleEctIncallSupplementaryService(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void reRegisterNetwork(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.AudioService$2: void onServiceConnected()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.net.IThrottleManager$Stub$Proxy: long getPeriodStartTime(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: int getSummary()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.net.sip.ISipService$Stub: void close(java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_SIP"
 ], 
 "<com.android.server.WifiService: void enforceMulticastChangePermission()>": [
  "android.permission.CHANGE_WIFI_MULTICAST_STATE"
 ], 
 "<com.android.phone.CallFeaturesSetting: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.camera.Camera: void initializeFirstTime()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.test.RenamingDelegatingContext: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.activity.MessageView$ControllerResults: void loadMessageForViewCallback(com.android.email.mail.MessagingException,long,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.providers.downloads.DownloadInfo$Reader: com.android.providers.downloads.DownloadInfo newDownloadInfo(android.content.Context,com.android.providers.downloads.SystemFacade)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<android.webkit.WebView: void dumpRenderTree(boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.nfc.NfcService$7: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.email.service.IEmailService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.ConversationList: void startAsyncQuery()>": [
  "android.permission.READ_SMS"
 ], 
 "<android.net.wifi.IWifiManager$Stub: android.net.wifi.WifiInfo getConnectionInfo()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.inputmethod.latin.InputLanguageSelection: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.nfc.NfcService: void access$3700(com.android.nfc.NfcService)>": [
  "android.permission.NFC"
 ], 
 "<com.android.settings.wifi.WifiAPITest$3: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.net.wifi.IWifiManager$Stub: boolean releaseWifiLock(android.os.IBinder)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.content.PackageMonitor: void onSomePackagesChanged()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.google.common.io.CharStreams: java.lang.Object readLines(com.google.common.io.InputSupplier,com.google.common.io.LineProcessor)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.providers.calendar.CalendarDebug$FetchInfoTask: java.util.List doInBackground(java.lang.Void[])>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.phone.NetworkSetting: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.telephony.SmsManager: boolean updateMessageOnIcc(int,int,byte[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.camera.VideoCamera: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.widget.QuickContactBadge: void onClick(android.view.View)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.ConnectivityService: void handleConnect(android.net.NetworkInfo)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getIccSerialNumber()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.settings.AddAccountSettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.IBluetooth$Stub: int getScanMode()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.term.Term: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void <init>(com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface)>": [
  "android.permission.CHANGE_CONFIGURATION", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.media.MediaPlayer: void stayAwake(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.bluetooth.DockService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.ui.ShowOrCreateActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState: boolean turnOffMasterTetherSettings()>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.phone.SipCallOptionHandler: void access$200(com.android.phone.SipCallOptionHandler,android.net.sip.SipProfile)>": [
  "android.permission.USE_SIP", 
  "android.permission.CHANGE_CONFIGURATION", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.provider.Calendar$EventsEntity$EntityIteratorImpl: java.lang.Object next()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.browser.Tab$SubWindowClient: void onReceivedHttpAuthRequest(android.webkit.WebView,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.EmergencyDialer: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthTokenByFeatures(java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle,android.os.Bundle,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.phone.GsmUmtsCallForwardOptions: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.NotificationMgr$QueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.exchange.EasOutboxService: org.apache.http.HttpResponse sendHttpClientPost(java.lang.String,org.apache.http.HttpEntity)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.bluetooth.LocalBluetoothManager: void onScanningStateChanged(boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.providers.downloads.DownloadService: boolean access$900(com.android.providers.downloads.DownloadService,com.android.providers.downloads.DownloadInfo,boolean,boolean)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.music.MediaPlaybackService: void moveQueueItem(int,int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.AddAccountSettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void collapse()>": [
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.server.sip.SipService$SipSessionGroupExt: void onConnectivityChanged(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapObexServer: int createList(int,int,java.lang.String,java.lang.StringBuilder,java.lang.String)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.net.NetworkStateTracker: boolean setRadio(boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapService: void onDestroy()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.certinstaller.CertInstallerMain: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void setBandMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getIMSI(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.SimCard: void supplyPin2(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.IConnectivityManager$Stub: java.lang.String[] getTetheredIfaces()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.InCallScreenShowActivation: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.BluetoothHandsfree$29: android.bluetooth.AtCommandResult handleTestCommand()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.BackupManagerService$ActiveRestoreSession: int restoreAll(long,android.app.backup.IRestoreObserver)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.settings.bluetooth.RequestPermissionHelperActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.provision.DefaultActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.activity.MessageList$FindMailboxTask: java.lang.Object doInBackground(java.lang.Object[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.DayActivity: void goTo(android.text.format.Time,boolean)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.server.ThrottleService: java.lang.String getHelpUri()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.ManageAccountsSettings: void updateAuthDescriptions()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.nfc.LlcpSocket: int getRemoteSocketMiu()>": [
  "android.permission.NFC"
 ], 
 "<com.android.exchange.adapter.EmailSyncAdapter: void <init>(com.android.email.provider.EmailContent$Mailbox,com.android.exchange.EasSyncService)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.settings.wifi.WifiStatusTest: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.deviceinfo.Status: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.CdmaSubscriptionListPreference: void onDialogClosed(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.DayActivity: android.view.View makeView()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppNotification: void access$500(com.android.bluetooth.opp.BluetoothOppNotification)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.sip.SipService$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.Controller$Result: void loadMessageForViewCallback(com.android.email.mail.MessagingException,long,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.calendar.CalendarActivity: void onRestoreInstanceState(android.os.Bundle)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.settings.AccountPreferenceBase: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean suspendSink(android.bluetooth.BluetoothDevice)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.SMSDispatcher: void handleStatusReport(android.os.AsyncResult)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaDataConnection: void start()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.ChooseLockGeneric: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager: boolean disableCellBroadcast(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.phone.CallNotifier$1: void onMessageWaitingIndicatorChanged(boolean)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.calendar.CalendarView: void init(android.content.Context)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.phone.BluetoothHandsfree$20: android.bluetooth.AtCommandResult handleTestCommand()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.ThrottleService$MyHandler: void onPolicyChanged()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.email.activity.AccountFolderList: boolean onOptionsItemSelected(android.view.MenuItem)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.DevelopmentSettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.view.IApplicationToken$Stub: void windowsVisible()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.development.AppHwConfigList: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.BluetoothHeadset: boolean acceptIncomingConnect(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppTransferActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.IBluetoothHeadset$Stub$Proxy: android.bluetooth.BluetoothDevice getCurrentHeadset()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.gsm.stk.CommandParamsFactory: boolean processSelectItem(com.android.internal.telephony.gsm.stk.CommandDetails,java.util.List)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.ConversationListAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.browser.BrowserHistoryPage: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.PhoneSubInfo: java.lang.String getIccSerialNumber()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.development.BadBehaviorActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.Settings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.webkit.WebViewClient: void onReceivedHttpAuthRequest(android.webkit.WebView,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.browser.BrowserActivity: boolean pauseWebViewTimers()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.email.activity.AccountFolderList: void onRefresh(long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.IConnectivityManager: int startUsingNetworkFeature(int,java.lang.String,android.os.IBinder)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void fixTimeZone(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.browser.Tab$3: void access$1200(com.android.browser.Tab$3,boolean,android.os.Message)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.server.NetworkManagementService: void setDnsForwarders(java.lang.String[])>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.internal.app.RingtonePickerActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.ContentResolver: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.net.IThrottleManager$Stub: long getCliffThreshold(java.lang.String,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.cooliris.picasa.GDataClient: void callMethod(org.apache.http.client.methods.HttpUriRequest,com.cooliris.picasa.GDataClient$Operation)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.settings.DevelopmentSettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.BluetoothHandsfree$27: android.bluetooth.AtCommandResult handleReadCommand()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.app.WallpaperManager: void setStream(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.quicksearchbox.SearchWidgetConfigActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.OtaUtils: void onOtaProvisionStatusChanged(android.os.AsyncResult)>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.cooliris.media.Photographs: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.ConnectivityService: int stopUsingNetworkFeature(int,java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.settings.TestingSettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.CdmaVoicePrivacyCheckBoxPreference$MyHandler: void handleSetVPResponse(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity$4: void onTextChanged(java.lang.CharSequence,int,int,int)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.settings.ProxySelector: boolean saveToDb()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.location.GpsLocationProvider: void updateLocation(android.location.Location)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.IP2pTarget$Stub: byte[] getGeneralBytes(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.ITelephony: void call(java.lang.String)>": [
  "android.permission.CALL_PHONE"
 ], 
 "<com.android.phone.FdnSetting: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.inputmethodservice.InputMethodService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.speechrecorder.SpeechRecorderActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.inputmethod.latin.LatinKeyboardBaseView$PointerQueue: void releaseAllPointersExcept(com.android.inputmethod.latin.PointerTracker,long)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.settings.AccountSyncSettingsInAddAccount: void onCreate(android.os.Bundle)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.READ_SYNC_STATS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.settings.bluetooth.DockService: void processMessage(android.os.Message)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.widget.LockPatternUtils: boolean checkPassword(java.lang.String)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.WindowManagerService$2: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.os.PowerManager$WakeLock: void acquire(long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.htmlviewer.HTMLViewerActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.os.IDropBoxManagerService$Stub$Proxy: android.os.DropBoxManager$Entry getNextEntry(java.lang.String,long)>": [
  "android.permission.READ_LOGS"
 ], 
 "<com.android.settings.bluetooth.BluetoothNamePreference: void setSummaryToName()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.packageinstaller.InstallAppProgress: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.location.LocationManager: void setTestProviderEnabled(java.lang.String,boolean)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.browser.BrowserBookmarksAdapter$1: java.lang.Void doInBackground(java.lang.Void[])>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void handleCallSetupRequestFromSim(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.IBatteryStats$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.BATTERY_STATS", 
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.quicksearchbox.ChoiceActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.content.MutableContextWrapper: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.BandMode: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.inputmethod.latin.AutoDictionary: void addWord(java.lang.String,int)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<android.speech.tts.ITts$Stub$Proxy: int speak(java.lang.String,java.lang.String,int,java.lang.String[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.AbstractThreadedSyncAdapter$ISyncAdapterImpl: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.browser.Tab$SubWindowChromeClient: void onCloseWindow(android.webkit.WebView)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void setSmscAddress(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: void startMsgListQuery()>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.settings.vpn.VpnTypeSelection: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.ui.EditSlideDurationActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: void onSimStateChanged(com.android.internal.telephony.IccCard$State)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.am.ActivityStack: int startActivityMayWait(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.net.Uri[],int,android.os.IBinder,java.lang.String,int,boolean,boolean,android.app.IActivityManager$WaitResult,android.content.res.Configuration)>": [
  "android.permission.CHANGE_CONFIGURATION"
 ], 
 "<android.location.LocationManager: java.util.List getProviders(boolean)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.contacts.RecentCallsListActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.ConnectivityService: boolean getMobileDataEnabled()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.mms.util.Recycler: boolean checkForThreadsOverLimit(android.content.Context)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.spare_parts.SpareParts: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.wifi.IWifiManager: int[] getValidChannelCounts()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.cooliris.media.Layer: void onSurfaceCreated(com.cooliris.media.RenderView,javax.microedition.khronos.opengles.GL11)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.settings.wifi.WifiSettings: void access$000(com.android.settings.wifi.WifiSettings,android.content.Intent)>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.settings.VoiceInputOutputSettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.pim.vcard.VCardEntry: android.net.Uri pushIntoContentResolver(android.content.ContentResolver)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.browser.BrowserActivity$17: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipAudioCallAdapter: void onError(android.net.sip.SipAudioCall,int,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void hangupWaitingOrBackground(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.music.TrackBrowserActivity: boolean onOptionsItemSelected(android.view.MenuItem)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.ScoSocket: void onConnected(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.ContentResolver: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<android.net.sip.SipManager: void register(android.net.sip.SipProfile,int,android.net.sip.SipRegistrationListener)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.internal.telephony.RI: void setPreferredNetworkType(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.WindowManagerService: int addWindow(com.android.server.WindowManagerService$Session,android.view.IWindow,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.view.InputChannel)>": [
  "android.permission.SYSTEM_ALERT_WINDOW"
 ], 
 "<com.android.email.service.EasAuthenticatorService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.BluetoothA2dp: boolean setSinkPriority(android.bluetooth.BluetoothDevice,int)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.os.INetworkManagementService: void disableNat(java.lang.String,java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.test.SimulatedRadioControl: void shutdown()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.AudioManager: void startBluetoothSco()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.app.IActivityManager: android.content.Intent registerReceiver(android.app.IApplicationThread,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<android.app.backup.IBackupManager$Stub$Proxy: void restoreAtInstall(java.lang.String,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<android.test.RenamingDelegatingContext: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.nfc.tech.MifareUltralight: byte[] transceive(byte[],boolean)>": [
  "android.permission.NFC"
 ], 
 "<com.android.phone.PhoneApp: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.deskclock.AlarmClock: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.IBluetooth$Stub: int getBluetoothState()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.music.MediaPlaybackService$ServiceStub: void openFile(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.wifi.WifiConfigInfo: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.view.IWindowManager$Stub: void disableKeyguard(android.os.IBinder,java.lang.String)>": [
  "android.permission.DISABLE_KEYGUARD"
 ], 
 "<com.android.internal.app.ShutdownThread: void reboot(android.content.Context,java.lang.String,boolean)>": [
  "android.permission.VIBRATE", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: boolean reassociate()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.phone.FdnSetting: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.development.AccountsTester: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.sip.ISipService$Stub$Proxy: boolean isRegistered(java.lang.String)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.mms.ui.ManageSimMessages: void deleteFromSim(android.database.Cursor)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppBtErrorActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.DataConnection$DcDisconnectingBadDnsState: void exit()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.nfc.tech.NfcA: byte[] transceive(byte[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.nfc.TechListChooserActivity: void onCreate(android.os.Bundle,android.content.Intent,java.lang.CharSequence,android.content.Intent[],java.util.List,boolean)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.INTERNET", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.contacts.ui.QuickContactWindow: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.music.ArtistAlbumBrowserActivity: boolean onOptionsItemSelected(android.view.MenuItem)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.Service: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.PhoneUtils: boolean handleHeadsetHook(com.android.internal.telephony.Phone,android.view.KeyEvent)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.app.IActivityManager: void startRunning(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<android.webkit.WebView: void clearHelpers()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.exchange.EasOutboxService: com.android.exchange.adapter.ProvisionParser canProvision()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.telephony.SmsManager: boolean copyMessageToIcc(byte[],byte[],int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.view.WindowManagerPolicy$WindowState: boolean showLw(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.settings.DisplaySettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.WindowManagerService$1: void released()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.bluetooth.ScoSocket: void onClosed()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.SimSmsInterfaceManager: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS"
 ], 
 "<android.bluetooth.BluetoothAdapter: boolean setName(java.lang.String)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.calendar.AlertActivity$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.calendar.MonthView: boolean onKeyDown(int,android.view.KeyEvent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.internal.telephony.cdma.RuimRecords: void onRefresh(boolean,int[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.providers.settings.SettingsHelper: boolean restoreValue(java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.music.MusicBrowserActivity$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDeviceManager: void checkForDeviceRemoval(com.android.settings.bluetooth.CachedBluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.provider.Contacts$People: android.database.Cursor queryGroups(android.content.ContentResolver,long)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.development.Connectivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.quicksearchbox.SearchableItemsSettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.providers.userdictionary.UserDictionaryProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<android.content.IContentService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.READ_SYNC_STATS", 
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.exchange.CalendarSyncEnabler: java.lang.String enableEasCalendarSyncInternal()>": [
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.cooliris.media.ConcatenatedDataSource: void loadMediaSets(com.cooliris.media.MediaFeed)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void getSmscAddress(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.MediaScanner$MyMediaScannerClient: void setSettingIfNotSet(java.lang.String,android.net.Uri,long)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.phone.sip.SipEditor: void saveAndRegisterProfile(android.net.sip.SipProfile)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_SIP"
 ], 
 "<android.webkit.WebView: void access$5800(android.webkit.WebView,boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void setPropertiesByCarrier()>": [
  "android.permission.CHANGE_CONFIGURATION", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.bluetooth.BluetoothDeviceProfileState$IncomingHandsfree: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getSubscriberId()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.am.ServiceRecord$1: void run()>": [
  "android.permission.VIBRATE"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture removeAccount(android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.settings.AccountSyncSettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.exchange.EasSyncService: com.android.exchange.provider.GalResult searchGal(android.content.Context,long,java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.inputmethod.latin.LatinKeyboardBaseView: boolean openPopupIfRequired(int,com.android.inputmethod.latin.PointerTracker)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.email.activity.MessageView: void access$1900(com.android.email.activity.MessageView,com.android.email.provider.EmailContent$Message,boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.DataConnection$DcActivatingState: void enter()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$SetDnsForwardersErrorState: void exit()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.contacts.TwelveKeyDialer: void onPause()>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.phone.CallNotifier$EmergencyTonePlayerVibrator: void access$200(com.android.phone.CallNotifier$EmergencyTonePlayerVibrator)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.mms.ui.MessageListItem: void bind(com.android.mms.ui.MessageListAdapter$AvatarCache,com.android.mms.ui.MessageItem)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.cooliris.media.GridInputProcessor: boolean onTouchEvent(android.view.MotionEvent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.music.AudioPreview: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GsmSMSDispatcher: void dispatchPortAddressedPdus(byte[][],int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.IApplicationToken$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppTransferActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.providers.calendar.CalendarDebug: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.htmlviewer.HTMLViewerActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.content.AbstractThreadedSyncAdapter$ISyncAdapterImpl: void startSync(android.content.ISyncContext,java.lang.String,android.accounts.Account,android.os.Bundle)>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.settings.DeviceAdminSettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.calendar.WeekView: void drawAfterScroll(android.graphics.Canvas)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.voicedialer.BluetoothVoiceDialerActivity: void onStart()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.AccountsTester$GetAndInvalidateAuthTokenCallback: void run(android.accounts.AccountManagerFuture)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<android.net.wifi.IWifiManager$Stub: boolean enableNetwork(int,boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.RI: void getDeviceIdentity(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.AlarmManager: void setTimeZone(java.lang.String)>": [
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.nfc.NfcService$2: void disableForegroundDispatch(android.content.ComponentName)>": [
  "android.permission.NFC"
 ], 
 "<android.nfc.INfcAdapter$Stub$Proxy: android.nfc.INfcTag getNfcTagInterface()>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.IccRecords: void setMsisdnNumber(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ui.EditContactActivity$QueryEntitiesTask: com.android.contacts.model.EntitySet doInBackground(com.android.contacts.ui.EditContactActivity,android.content.Intent[])>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.calendar.CalendarView: void setSelectedDay(android.text.format.Time)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.settings.DateTimeSettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.content.pm.IPackageManager$Stub: void freeStorage(long,android.content.IntentSender)>": [
  "android.permission.CLEAR_APP_CACHE"
 ], 
 "<android.media.AudioService$AudioHandler$2: boolean onError(android.media.MediaPlayer,int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.SettingsSafetyLegalActivity$1: void onReceivedHttpAuthRequest(android.webkit.WebView,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.mms.ui.ConversationList$DeleteThreadListener: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity$RecipientsMenuClickListener: boolean onMenuItemClick(android.view.MenuItem)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.app.TabActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.Context: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.tech.Ndef: android.nfc.NdefMessage getNdefMessage()>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.app.RingtonePickerActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.calendar.AgendaActivity: void goTo(android.text.format.Time,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<android.bluetooth.IBluetooth$Stub$Proxy: boolean createBond(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.email.Email: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.providers.settings.SettingsHelper: void setAutoRestore(boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.bluetooth.ScoSocket: void releaseWakeLock()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.BluetoothHandsfree$24: android.bluetooth.AtCommandResult handleReadCommand()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.StatusBarManagerService: void expand()>": [
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<android.accounts.AccountManagerService: void checkManageAccountsOrUseCredentialsPermissions()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<android.app.backup.BackupAgent: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.development.DevelopmentSettings$8: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.mms.transaction.SmsSingleRecipientSender: void <init>(android.content.Context,java.lang.String[],java.lang.String,long)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.app.AlertActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.app.ExternalMediaFormatActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.development.ProcessInfo: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void queryCdmaRoamingPreference(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getLastDataCallFailCause(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.ConfirmLockPassword: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.activity.Debug: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.INetworkManagementEventObserver$Stub: void interfaceAdded(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: android.net.Uri getUriToQuery()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.music.MediaPickerActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.TetherSettings: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.development.Development: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.WeekSelector: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.activity.MessageList: void doFooterClick()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.cdma.RuimCard: void supplyNetworkDepersonalization(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.speech.tts.TextToSpeech: int playEarcon(java.lang.String,int,java.util.HashMap)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.PrivacySettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.ContactsListActivity: android.database.Cursor queryPhoneNumbers(long)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void pollStateDone()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.phone.CallCard: void displayOnHoldCallStatus(com.android.internal.telephony.CallManager,com.android.internal.telephony.Call)>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.inputmethod.latin.LatinIME: void addToDictionaries(java.lang.CharSequence,int)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<android.content.SyncManager: void scheduleSync(android.accounts.Account,java.lang.String,android.os.Bundle,long,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapService: int onStartCommand(android.content.Intent,int,int)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.AccountSyncSettingsInAddAccount: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.AgendaWindowAdapter$QueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.settings.DeviceAdminSettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.fuelgauge.PowerUsageSummary: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean allowIncomingConnect(android.bluetooth.BluetoothDevice,boolean)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.LocationManagerService: void incrementPendingBroadcasts()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.IBluetoothHeadset$Stub: boolean acceptIncomingConnect(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.os.INetworkManagementService$Stub: boolean getIpForwardingEnabled()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.SystemBackupAgent: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.calendar.DismissAllAlarmsService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.location.ILocationManager: void removeTestProvider(java.lang.String)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.phone.CallCard: void onClick(android.view.View)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.cooliris.media.Gallery: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.webkit.WebView: void invokeZoomPicker()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.contacts.ViewContactActivity: void access$400(com.android.contacts.ViewContactActivity)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.gsm.SIMRecords: void setVoiceMailNumber(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.systemui.usb.UsbStorageActivity: void checkStorageUsersAsync()>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
 ], 
 "<com.android.internal.app.ShutdownThread: void shutdown(android.content.Context,boolean)>": [
  "android.permission.VIBRATE", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.accounts.AccountManagerService: void getAccountsByFeatures(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[])>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.settings.TetherSettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.accounts.AccountManagerService: void updateCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<android.net.sip.ISipService: boolean isOpened(java.lang.String)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.mms.drm.DrmUtils: android.net.Uri insert(android.content.Context,com.android.mms.drm.DrmWrapper)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.providers.contacts.ContactsProvider2: android.accounts.Account getDefaultAccount()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.browser.Tab$2: void onReceivedHttpAuthRequest(android.webkit.WebView,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.WindowManagerService: boolean setTokenVisibilityLocked(com.android.server.WindowManagerService$AppWindowToken,android.view.WindowManager$LayoutParams,boolean,int,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<android.provider.Calendar$Events: android.database.Cursor query(android.content.ContentResolver,java.lang.String[])>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: void getAccountsByFeatures(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[])>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.launcher2.LauncherApplication: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.MusicUtils: void clearQueue()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.AdnRecordLoader: void updateEF(com.android.internal.telephony.AdnRecord,int,int,int,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.WebView: void stopLoading()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.email.activity.MessageView: void messageChanged()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.DefaultPhoneNotifier: void notifyDataConnection(com.android.internal.telephony.Phone,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.RI: void resetRadio(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.WebViewCore: void sendMessage(int,int,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.development.DevelopmentSettings: void access$1400(com.android.development.DevelopmentSettings)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.sip.SipPhone makeSipPhone(java.lang.String)>": [
  "android.permission.CHANGE_CONFIGURATION", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.phone.CallNotifier: void showMissedCallNotification(com.android.internal.telephony.Connection,long)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.phone.InCallScreen: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.ScoSocket: boolean connect(java.lang.String,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.PackageSummary: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.os.INetworkManagementService$Stub: void startTethering(java.lang.String[])>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.contacts.ContactOptionsActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.MonthActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.BluetoothHandsfree$5: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.providers.calendar.CalendarProvider2: void rescheduleMissedAlarms()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.development.SyncAdapterDriver: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$SetIpForwardingEnabledErrorState: void exit()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.browser.BrowserHistoryPage: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.service.IEmailServiceCallback: void syncMailboxStatus(long,int,int)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.server.BluetoothService: void setLinkTimeout(java.lang.String,int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.phone.BluetoothHandsfree$25: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.view.IApplicationToken$Stub$Proxy: boolean keyDispatchingTimedOut()>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.internal.telephony.gsm.GsmConnection: void onRemoteDisconnect(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void deactivateDefaultPDP(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: boolean onTrySetupData(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.activity.MessageView$PresenceCheckTask: java.lang.Object doInBackground(java.lang.Object[])>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.SMSDispatcher: void dispatchBroadcastPdus(byte[][],boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void setDataRoamingEnabled(boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.mms.data.Conversation: long getOrCreateThreadId(android.content.Context,com.android.mms.data.ContactList)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.InputMethodManagerService$MyPackageMonitor: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.accounts.AccountManagerService: void getAuthTokenLabel(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String)>": [
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.phone.BluetoothHandsfree$5: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.widget.SlidingTab: void vibrate(long)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.util.HierarchicalStateMachine$HsmHandler: void invokeExitMethods(com.android.internal.util.HierarchicalStateMachine$HsmHandler$StateInfo)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.ThrottleService$DataRecorder: java.io.File getDataFile()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.mms.ui.SlideshowEditActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.webkit.WebView: void dumpDomTree(boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppService: void access$2200(com.android.bluetooth.opp.BluetoothOppService,android.database.Cursor,int,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.net.wifi.WifiMonitor: void startMonitoring()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.BLUETOOTH", 
  "android.permission.CHANGE_WIFI_MULTICAST_STATE"
 ], 
 "<android.content.SyncManager$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.gsm.stk.IconLoader: void readClut()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.SlideEditorActivity: void showCurrentSlide()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void showGlobalActionsDialog()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.settings.bluetooth.BluetoothSettings: void access$100(com.android.settings.bluetooth.BluetoothSettings,int)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.calendar.MonthActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: boolean isMulticastEnabled()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void exitEmergencyCallbackMode()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.ConversationListAdapter: void onContentChanged()>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.mms.transaction.SmsRejectedReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.settings.quicklaunch.BookmarkPicker: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.SMSDispatcher: void dispatchPdus(byte[][])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.ILlcpSocket: int getLocalSocketMiu(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.settings.ApnSettings: void setSelectedApnKey(java.lang.String)>": [
  "android.permission.WRITE_APN_SETTINGS"
 ], 
 "<com.android.phone.OtaUtils: void otaShowProperScreen()>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: java.util.List getScanResults()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getVoiceMailAlphaTag()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.cooliris.media.ImageButton: void onSurfaceCreated(com.cooliris.media.RenderView,javax.microedition.khronos.opengles.GL11)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void enableLocationUpdates()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.INetworkManagementService$Stub$Proxy: int getInterfaceRxThrottle(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.webkit.HTML5Audio: void onCompletion(android.media.MediaPlayer)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.LogViewer: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.ui.DeliveryReportActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.WeekActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppTransferHistory: void updateNotificationWhenBtDisabled()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.gsm.SimSmsInterfaceManager$CellBroadcastRangeManager: boolean updateRanges()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.server.BluetoothService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapVcardManager: int getPhonebookSize(int)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.nfc.tech.MifareClassic: byte[] transceive(byte[],boolean)>": [
  "android.permission.NFC"
 ], 
 "<android.accounts.IAccountManager: void confirmCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,android.os.Bundle,boolean)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.settings.ApplicationSettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.UserDictionarySettings: void deleteWord(java.lang.String)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<android.nfc.tech.MifareClassic: void increment(int,int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.policy.impl.KeyguardUpdateMonitor: void access$300(com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.policy.impl.KeyguardUpdateMonitor$SimArgs)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.webkit.WebTextView: void lineUpScroll()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.contacts.ContactsListActivity: void afterTextChanged(android.text.Editable)>": [
  "android.permission.READ_SYNC_STATS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.settings.ZonePicker: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.activity.setup.AccountSettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.CdmaCallOptions: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.SyncActivityTooManyDeletes: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.browser.BrowserActivity: void showFindDialog()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.browser.DownloadTouchIcon: java.lang.Void doInBackground(java.lang.String[])>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.Connection dial(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.PhoneApp: void updateProximitySensorMode(com.android.internal.telephony.Phone$State)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.pim.vcard.VCardComposer: java.lang.String createOneEntryInternal(java.lang.String,java.lang.reflect.Method)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.mms.ui.ConversationList: void onStart()>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.mms.util.Recycler$MmsRecycler: void deleteOldMessages(android.content.Context)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.calendar.DayView: void setSelectedDay(android.text.format.Time)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void queryCdmaRoamingPreference(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.WebView$InvokeListBox$1: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.bluetooth.IBluetooth$Stub$Proxy: boolean setScanMode(int,int)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.IccProvider: java.util.ArrayList loadFromEf(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.sip.SipService$AutoRegistrationProcess: void onRegistrationTimeout(android.net.sip.ISipSession)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.bluetooth.opp.TestTcpServer: void run()>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.server.DeviceStorageMonitorService: void sendFullNotification()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.ui.SlideshowActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.connectivity.Tethering$TetherInterfaceSM$InitialState: void exit()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void hangupForegroundResumeBackground()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.WifiWatchdogService: void <init>(android.content.Context,android.net.wifi.WifiStateTracker)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.settings.RingerVolumePreference: boolean onKey(android.view.View,int,android.view.KeyEvent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmConnection: void <init>(android.content.Context,java.lang.String,com.android.internal.telephony.gsm.GsmCallTracker,com.android.internal.telephony.gsm.GsmCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.data.WorkingMessage: android.net.Uri saveAsMms(boolean)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.phone.Settings: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.phone.PhoneUtils: boolean hangup(com.android.internal.telephony.Call)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.LockScreen: void onAttachedToWindow()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.preference.VolumePreference: boolean onKey(android.view.View,int,android.view.KeyEvent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.Email: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.BluetoothA2dp: boolean isSinkConnected(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.contacts.ui.EditContactActivity: void buildJoinContactDiff(java.util.ArrayList,long,long)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.music.IMediaPlaybackService: void pause()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.google.common.io.Resources$1: java.io.InputStream getInput()>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.exchange.SyncManager: com.android.exchange.AbstractSyncService startManualSync(long,int,com.android.exchange.Request)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.Settings$MyHandler: void resetNetworkModeToDefault()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.quicksearchbox.SearchActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppLiveFolder: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: void dialRecipient()>": [
  "android.permission.CALL_PHONE"
 ], 
 "<android.content.SyncManager$3: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.music.MediaPlaybackActivity$8: void onClick(android.view.View)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IccRecords: void onAllRecordsLoaded()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean supplyPin(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void notifySignalStrength()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.exchange.ContactsSyncAdapterService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.exchange.ContactsSyncAdapterService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.AccelerometerListener: void onSensorEvent(double,double,double)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.AppWidgetPickActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.os.INetworkManagementService$Stub$Proxy: boolean getIpForwardingEnabled()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void createAllPdpList()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.email.Controller$LegacyListener: void loadMessageForViewFailed(long,java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.EmergencyDialer: boolean onLongClick(android.view.View)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.cooliris.media.MonitoredActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.INfcTag$Stub: android.nfc.NdefMessage ndefRead(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.location.LocationProviderInterface: void updateLocation(android.location.Location)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneBase: void simulateDataConnection(com.android.internal.telephony.Phone$DataState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.nfc.LlcpSocket: int getLocalSocketMiu()>": [
  "android.permission.NFC"
 ], 
 "<com.android.music.MediaPlaybackActivity: boolean onOptionsItemSelected(android.view.MenuItem)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getIccCardStatus(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.certinstaller.CertInstallerMain: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.inputmethod.latin.PointerTracker: void repeatKey(int)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.settings.SoundSettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.wifi.WifiSettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.DevelopmentSettings: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.google.common.io.Resources: byte[] toByteArray(java.net.UR)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.systemui.usb.UsbResolverActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.inputmethod.latin.UserDictionary: void addWord(java.lang.String,int)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.internal.telephony.cdma.CdmaDataConnectionTracker$2: void run()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.provider.Settings$Bookmarks: android.net.Uri add(android.content.ContentResolver,android.content.Intent,java.lang.String,java.lang.String,char,int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.location.ILocationManager: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_LOCATION_EXTRA_COMMANDS", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: java.lang.String getUserData(android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<android.bluetooth.IBluetoothHeadset: void disconnectHeadset(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.google.android.mms.util.PduCache: boolean put(android.net.Uri,com.google.android.mms.util.PduCacheEntry)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: void showLocked()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.phone.NetworkSetting: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.MediaPlaybackService: void addToPlayList(long[],int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.inputmethod.latin.LatinIME: void access$1000(com.android.inputmethod.latin.LatinIME,boolean)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.settings.vpn.VpnSettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.ContactsListActivity: android.graphics.Bitmap generatePhoneNumberIcon(android.net.Uri,int,int)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.TetherSettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.activity.AccountFolderList: boolean onContextItemSelected(android.view.MenuItem)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.fuelgauge.BatteryHistoryDetail: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.LanguageSettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getSubscriberId()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.camera.ui.CameraHeadUpDisplay: void restorePreferences(android.hardware.Camera$Parameters)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.ThrottleService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.webkit.WebView: void notifySelectDialogDismissed()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppBtEnableActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.transaction.SendTransaction: void ensureRouteToHost(java.lang.String,com.android.mms.transaction.TransactionSettings)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.server.StatusBarManagerService: void enforceExpandStatusBar()>": [
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.settings.bluetooth.LocalBluetoothProfileManager: int getSummary(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.calendar.AgendaByDayAdapter: void changeCursor(com.android.calendar.AgendaWindowAdapter$DayAdapterInfo)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onSetDataEnabled(boolean)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_APN_SETTINGS"
 ], 
 "<android.location.ILocationManager$Stub: void setTestProviderLocation(java.lang.String,android.location.Location)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.camera.VideoCamera: void initializeRecorder()>": [
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.mms.util.DownloadManager: void markState(android.net.Uri,int)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.phone.BluetoothHeadsetService$6: boolean acceptIncomingConnect(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.settings.VoiceInputOutputSettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.wifi.WifiStatusTest: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: boolean enableDataConnectivity()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppTransferHistory: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.activity.MessageView$LoadAttachmentsTask: void onPostExecute(com.android.email.provider.EmailContent$Attachment[])>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.providers.userdictionary.DictionaryBackupAgent: byte[] getDictionary()>": [
  "android.permission.READ_USER_DICTIONARY"
 ], 
 "<android.widget.VideoView$2: void onPrepared(android.media.MediaPlayer)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.sip.SipEditor: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.am.ActivityStack: void pauseIfSleepingLocked()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<android.nfc.ILlcpSocket$Stub: int getRemoteSocketMiu(int)>": [
  "android.permission.NFC"
 ], 
 "<android.provider.CallLog$Calls: java.lang.String getLastOutgoingCall(android.content.Context)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.settings.LocalePickerInSetupWizard: void onListItemClick(android.widget.ListView,android.view.View,int,long)>": [
  "android.permission.CHANGE_CONFIGURATION"
 ], 
 "<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask$1$1: void onResult(android.os.Bundle)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.phone.DataUsage: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.SpecialCharSequenceMgr: void showIMEIPanel(android.content.Context,boolean)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: boolean updateMessageOnIccEf(int,int,byte[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.settings.DevelopmentSettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onDataSetupComplete(android.os.AsyncResult)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_APN_SETTINGS"
 ], 
 "<com.android.providers.contacts.ContactsProvider2: int deleteInTransaction(android.net.Uri,java.lang.String,java.lang.String[])>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.contacts.ui.QuickContactActivity: void onNewIntent(android.content.Intent)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void getOutgoingCallerIdDisplay(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.util.HierarchicalStateMachine: void start()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.exchange.SyncManager: void stopManualSync(long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.BluetoothHandsfree$18: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.PackageManagerService: void installPackageLI(com.android.server.PackageManagerService$InstallArgs,boolean,com.android.server.PackageManagerService$PackageInstalledInfo)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.calendar.EventInfoActivity: void updateResponse(android.content.ContentResolver,long,long,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<android.nfc.INfcAdapter: void disableForegroundDispatch(android.content.ComponentName)>": [
  "android.permission.NFC"
 ], 
 "<com.android.development.PackageSummary: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.webkit.HttpAuthHandler: void proceed(java.lang.String,java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.CallNotifier: void sendCdmaCallWaitingReject()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.webkit.WebIconDatabase$EventHandler: void bulkRequestIcons(android.os.Message)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.settings.DateTimeSettingsSetupWizard: void setDateFormat(java.lang.String)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.music.MediaPlaybackService: void openCurrent()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.providers.downloads.DownloadService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.os.storage.IMountService$Stub$Proxy: void finishMediaUpdate()>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
 ], 
 "<com.android.inputmethod.latin.InputLanguageSelection: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.location.ILocationManager$Stub: void clearTestProviderLocation(java.lang.String)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.launcher2.Launcher: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.IntRangeManager: boolean finishUpdate()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$SyncStateTracker: void onActualStateChange(android.content.Context,android.content.Intent)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.deskclock.DeskClock: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.Application: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.BluetoothA2dp: boolean suspendSink(android.bluetooth.BluetoothDevice)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.os.INetworkManagementService$Stub$Proxy: void startUsbRNDIS()>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.server.vpn.VpnServiceBinder: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.activity.setup.AccountSetupOutgoing: void onActivityResult(int,int,android.content.Intent)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.settings.LocalePickerInSetupWizard: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.MessagingListener: void loadMessageForViewStarted(long)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.nfc.NfcAdapter$1: void onPaused(android.app.Activity)>": [
  "android.permission.NFC"
 ], 
 "<android.app.backup.IRestoreSession$Stub: int restorePackage(java.lang.String,android.app.backup.IRestoreObserver)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.settings.quicklaunch.QuickLaunchSettings: void onActivityResult(int,int,android.content.Intent)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.calendar.MenuHelper: boolean onOptionsItemSelected(android.app.Activity,android.view.MenuItem,com.android.calendar.Navigator)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<android.webkit.WebTextView: boolean dispatchKeyEvent(android.view.KeyEvent)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.PhoneBase: void notifyDataConnection(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.provider.Browser: void deleteHistoryWhere(android.content.ContentResolver,java.lang.String)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<android.server.BluetoothEventLoop: void onRequestPasskeyConfirmation(java.lang.String,int,int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.contacts.util.AccountSelectionUtil: void doImport(android.content.Context,int,android.accounts.Account)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.cooliris.media.BackgroundLayer: void onSurfaceCreated(com.cooliris.media.RenderView,javax.microedition.khronos.opengles.GL11)>": [
  "android.permission.INTERNET"
 ], 
 "<android.server.BluetoothService: boolean isBondingFeasible(java.lang.String)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.development.MediaScannerActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.Service: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.svox.pico.CheckVoiceData: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: void dispose()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.PackageManagerService: void scanDirLI(java.io.File,int,int,long)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.calendar.AgendaActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.IAccountManager$Stub: void hasFeatures(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String[])>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.IIccPhoneBook: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.SimUnlockScreen$1: void onSimLockChangedResponse(boolean)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.providers.downloads.Helpers: boolean discardPurgeableFiles(android.content.Context,long)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.telephony.test.SimulatedCommands: void supplyIccPin(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void enableLocationUpdates()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDeviceManager: void showUnbondMessage(android.bluetooth.BluetoothDevice,int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.cooliris.media.CropImage: void launchCropperOrFinish(android.content.Context,com.cooliris.media.MediaItem)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.development.Connectivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.sip.SipSettings$4: void run()>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.server.am.ActivityStack: void completePauseLocked()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.internal.telephony.ITelephony: boolean endCall()>": [
  "android.permission.CALL_PHONE"
 ], 
 "<com.android.music.AudioPreview: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.AccountPreferenceBase: void onAccountsUpdated(android.accounts.Account[])>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.email.activity.setup.AccountSetupOptions: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.soundrecorder.SoundRecorder: void updateUi()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.WindowManagerService: void setNewConfiguration(android.content.res.Configuration)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<android.net.http.EventHandler: void status(int,int,int,java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.cooliris.picasa.PicasaContentProvider: boolean isSyncEnabled(java.lang.String,com.cooliris.picasa.PicasaContentProvider$SyncContext)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.settings.deviceinfo.Status: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.DayView: void doFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void getPreferredNetworkType(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.sip.SipAudioCall: void close(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.fuelgauge.PowerUsageSummary: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.server.BluetoothService: boolean setRemoteOutOfBandData(java.lang.String)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.Connection dialThreeWay(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDeviceManager: void onUuidChanged(android.bluetooth.BluetoothDevice)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.os.INetworkManagementService$Stub$Proxy: java.lang.String[] listTetheredInterfaces()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipAudioCallAdapter: void onCallEnded(com.android.internal.telephony.Connection$DisconnectCause)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.inputmethod.pinyin.SoftKeyboardView: void tryVibrate()>": [
  "android.permission.VIBRATE"
 ], 
 "<android.bluetooth.BluetoothDevice: java.lang.String getName()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.net.wifi.IWifiManager$Stub: android.net.wifi.WifiConfiguration getWifiApConfiguration()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.net.wifi.IWifiManager$Stub: boolean setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.calendar.DayView: void doScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.settings.wifi.WifiConfigInfo: void onResume()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.phone.BluetoothHandsfree$21: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: void access$700(com.android.internal.policy.impl.KeyguardViewMediator)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.cooliris.media.GridLayer: void renderOpaque(com.cooliris.media.RenderView,javax.microedition.khronos.opengles.GL11)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.phone.DataUsage: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapService: void access$500(com.android.bluetooth.pbap.BluetoothPbapService)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<java.net.UR: java.io.InputStream openStream()>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.settings.AccessibilitySettings$4: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.accounts.IAccountManager: void invalidateAuthToken(java.lang.String,java.lang.String)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.email.Controller$3: void run()>": [
  "android.permission.VIBRATE"
 ], 
 "<android.net.sip.ISipService$Stub$Proxy: void open3(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_SIP"
 ], 
 "<android.nfc.tech.MifareUltralight: void reconnect()>": [
  "android.permission.NFC"
 ], 
 "<com.android.providers.settings.SettingsBackupAgent: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.music.QueryBrowserActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.service.wallpaper.WallpaperSettingsActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.FullBackupAgent: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.spare_parts.SpareParts: void writeFontSizePreference(java.lang.Object)>": [
  "android.permission.CHANGE_CONFIGURATION"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: int addOrUpdateNetwork(android.net.wifi.WifiConfiguration)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.bluetooth.IBluetoothHeadset: boolean disconnectHeadsetInternal(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.accounts.AccountManager$1: void doWork()>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.contacts.AttachImage: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.IBluetooth: boolean startDiscovery()>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.bluetooth.BluetoothPermissionActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.CallFeaturesSetting: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.phone.BluetoothHandsfree$10: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.browser.Tab$6: void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET"
 ], 
 "<android.app.backup.IBackupManager$Stub$Proxy: void setAutoRestore(boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean setSinkPriority(android.bluetooth.BluetoothDevice,int)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.sip.SipWakeLock: void acquire(long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.browser.WebStorageSizeManager: void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.view.IWindowManager$Stub: void setAnimationScale(int,float)>": [
  "android.permission.SET_ANIMATION_SCALE"
 ], 
 "<android.server.BluetoothA2dpService: java.util.Set lookupSinksMatchingStates(int[])>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.gsm.SimSmsInterfaceManager: void enforceReceiveAndSend(java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.email.activity.MessageCompose: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.nfc.INfcTag$Stub$Proxy: int formatNdef(int,byte[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.am.ActivityManagerService: void goingToSleep()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.internal.widget.ContactHeaderWidget: void bindFromEmail(java.lang.String)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.media.Ringtone: void play()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.PhoneUtils: java.lang.Boolean restoreMuteState()>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.settings.bluetooth.LocalBluetoothManager: void stopScanning()>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.quicksearchbox.ChoiceActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.connectivity.Tethering$TetherInterfaceSM$TetheredState: void exit()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.certinstaller.CertFileList: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.LocationManagerService: android.location.Location getLastKnownLocation(java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: void initialize(android.os.Bundle,long)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.email.service.EmailBroadcastProcessorService: void performOneTimeInitialization()>": [
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.contacts.ContactsUtils: long queryForContactId(android.content.ContentResolver,long)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.contacts.SearchResultsActivity: void onStart()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.calendar.MonthActivity: void goToToday()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.settings.ChooseLockGeneric: void updatePreferencesOrFinish()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void queryCdmaRoamingPreference(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.browser.Tab$2: void onUnhandledKeyEvent(android.webkit.WebView,android.view.KeyEvent)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.settings.bluetooth.RequestPermissionActivity$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.content.IContentService$Stub$Proxy: int getIsSyncable(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: void disconnect(com.android.settings.bluetooth.LocalBluetoothProfileManager$Profile)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.bluetooth.BluetoothAdapter: boolean setScanMode(int)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.gsm.stk.CommandParamsFactory: boolean processSetupCall(com.android.internal.telephony.gsm.stk.CommandDetails,java.util.List)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.ShutdownActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.app.RingtonePickerActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.mms.transaction.NotificationTransaction: byte[] getPdu(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void invokeOemRilRequestStrings(java.lang.String[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.transaction.Transaction: void ensureRouteToHost(java.lang.String,com.android.mms.transaction.TransactionSettings)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.calendar.SelectCalendarsActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.providers.settings.DatabaseHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.ActivityManagerNative: void broadcastStickyIntent(android.content.Intent,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.cooliris.media.RenderView: boolean bind(com.cooliris.media.Texture)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.browser.widget.BookmarkWidgetService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.SimContacts: void importOneSimContact(int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.exchange.SyncManager$AccountObserver$1: void run()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.phone.BluetoothHandsfree$29: android.bluetooth.AtCommandResult handleReadCommand()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDeviceManager: void onConnectingError(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.net.http.RequestQueue: void <init>(android.content.Context)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.webkit.WebView: boolean textFieldDrag(android.view.MotionEvent)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: void hangupAllConnections(com.android.internal.telephony.gsm.GsmCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.bluetooth.BluetoothPermissionRequest: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.VIBRATE", 
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.settings.vpn.VpnSettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.media.AsyncPlayer: void access$500(android.media.AsyncPlayer)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.PasswordUnlockScreen: void verifyPasswordAndUnlock()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.policy.impl.AccountUnlockScreen: void asyncCheckPassword()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.phone.TimeConsumingPreferenceActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.providers.telephony.MmsSmsProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.vpn.VpnServiceBinder: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void invokeOemRilRequestRaw(byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.pm.IPackageManager: void freeStorageAndNotify(long,android.content.pm.IPackageDataObserver)>": [
  "android.permission.CLEAR_APP_CACHE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: boolean access$400(com.android.internal.telephony.cdma.CdmaDataConnectionTracker,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.speech.tts.ITts$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.MessagingListener: void loadAttachmentStarted(long,long,long,boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.MasterClear: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getCDMASubscription(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo getCallerInfo(android.content.Context,java.lang.String)>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.settings.ProxySelector: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.CreatePlaylist: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.test.TestListActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.telephony.gsm.SmsManager: boolean deleteMessageFromSim(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.exchange.SyncManager$EasAccountsUpdatedListener: void onAccountsUpdated(android.accounts.Account[])>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.app.Activity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.DeleteFdnContactScreen: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.music.TouchInterceptor: boolean onTouchEvent(android.view.MotionEvent)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.activity.setup.AccountSecurity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.sip.SipSettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.providers.calendar.CalendarProvider2: java.lang.String getOwner(long)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.settings.TetherSettings: void updateState(java.lang.Object[],java.lang.Object[],java.lang.Object[])>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.RI: void getIMEISV(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactItemListAdapter: void onContentChanged()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_SYNC_STATS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.settings.fuelgauge.PowerUsageSummary: void refreshStats()>": [
  "android.permission.BATTERY_STATS", 
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.soundrecorder.SoundRecorder: void onPause()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.packageinstaller.UninstallAppProgress: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.media.AudioManager: void setMode(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.providers.calendar.CalendarProvider2: android.net.Uri insertInTransaction(android.net.Uri,android.content.ContentValues)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.settings.bluetooth.LocalBluetoothProfileManager$HeadsetProfileManager: boolean isConnected(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.browser.Tab$3: void onRequestFocus(android.webkit.WebView)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET"
 ], 
 "<android.content.ContentResolver: int getIsSyncable(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.phone.CellBroadcastSms: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.tts.TtsService: int stop(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: android.database.Cursor doFilter(java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.nfc.ILlcpSocket$Stub$Proxy: int getLocalSap(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.music.MediaPlaybackService$ServiceStub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.provider.Contacts$ContactMethods: void addPostalLocation(android.content.Context,long,double,double)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.voicedialer.BluetoothVoiceDialerActivity$CommandRecognizerClient$3: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.AgendaActivity: void goToToday()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.browser.BrowserBookmarksPage$1: java.lang.Object doInBackground(java.lang.Object[])>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.phone.CallFeaturesSetting: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.calendar.MonthActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.webkit.WebView: void scrollFocusedTextInput(float,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.BandMode: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.applications.InstalledAppDetails: void processClearMsg(android.os.Message)>": [
  "android.permission.GET_PACKAGE_SIZE"
 ], 
 "<com.android.exchange.SyncManager$3: void run()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.cooliris.media.RenderView$TextureLoadThread: void load(com.cooliris.media.Texture)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.development.Details: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.IBluetoothPbap$Stub: void disconnect()>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.webkit.WebViewCore: void resumeUpdatePicture(android.webkit.WebViewCore)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.ProxySelector: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.RuimFileHandler: void loadEFImgLinearFixed(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipConnection$1: void onCallBusy(android.net.sip.SipAudioCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.IBluetooth$Stub: byte[] readOutOfBandData()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.media.AudioService$AudioHandler: void persistVibrateSetting()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker: boolean setupData(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.nfc.NfcEnabler: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>": [
  "android.permission.NFC"
 ], 
 "<android.media.AsyncPlayer: void access$200(android.media.AsyncPlayer,android.media.AsyncPlayer$Command)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.InCallScreen: void access$2500(com.android.phone.InCallScreen)>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.music.TrackBrowserActivity$5: void remove(int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.google.common.io.Files: void copy(com.google.common.io.InputSupplier,java.io.File)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.systemui.usb.UsbResolverActivity: void onCreate(android.os.Bundle,android.content.Intent,java.lang.CharSequence,android.content.Intent[],java.util.List,boolean,boolean)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.INTERNET", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.calendar.EventInfoActivity: boolean saveResponse(android.content.ContentResolver)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.browser.SelectDialog$4: void onClick(android.view.View)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.gsm.SimCard: void supplyNetworkDepersonalization(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.CallNotifier$EmergencyTonePlayerVibrator: void start()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppLauncherActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.exchange.EasSyncService: org.apache.http.HttpResponse sendHttpClientPost(java.lang.String,byte[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.IContentService$Stub: void removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.webkit.WebViewCore$EventHub: void sendMessageAtFrontOfQueue(android.os.Message)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.net.sip.ISipService$Stub: void setRegistrationListener(java.lang.String,android.net.sip.ISipSessionListener)>": [
  "android.permission.USE_SIP"
 ], 
 "<android.webkit.ContentLoader: void sendHeaders()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.media.AudioService: void setMode(int,android.os.IBinder)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.email.mail.store.Pop3Store: android.os.Bundle autoDiscover(android.content.Context,java.lang.String,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.WindowManagerPolicy: int interceptKeyBeforeQueueing(long,int,int,int,int,int,boolean)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.VIBRATE", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CALL_PHONE", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.settings.ManageAccountsSettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.util.Recycler$SmsRecycler: void deleteOldMessagesByThreadId(android.content.Context,long)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.inputmethod.latin.ContactsDictionary: void addWord(java.lang.String,int)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.settings.wifi.AdvancedSettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.IBluetooth$Stub$Proxy: byte[] readOutOfBandData()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingRfcommOn(int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.provider.Settings$Secure: boolean putLong(android.content.ContentResolver,java.lang.String,long)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.launcher2.WallpaperChooser: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void enableEnhancedVoicePrivacy(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.BluetoothHeadsetService$6: android.bluetooth.BluetoothDevice getCurrentHeadset()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.calendar.DayActivity: void eventsChanged()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.os.IVibratorService$Stub$Proxy: void vibrate(long,android.os.IBinder)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.exchange.EasOutboxService: org.apache.http.HttpResponse postAutodiscover(org.apache.http.client.HttpClient,org.apache.http.client.methods.HttpPost,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.LockPatternView$OnPatternListener: void onPatternDetected(java.util.List)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.providers.media.MediaScannerService: android.net.Uri access$100(com.android.providers.media.MediaScannerService,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.exchange.SyncManager: void stopNonAccountMailboxSyncsForAccount(long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.SimCard: void access$000(com.android.internal.telephony.IccCard,android.os.AsyncResult)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean startVoiceRecognition()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.NotificationPlayer: void acquireWakeLock()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.activity.MessageView: void onClick(android.view.View)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS", 
  "android.permission.INTERNET", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.bluetooth.IBluetoothHeadset$Stub: boolean createIncomingConnect(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.music.MediaPlaybackActivity$7: void onClick(android.view.View)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.RecognitionManagerService$MyPackageMonitor: boolean onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$SyncStateTracker: void setCurrentState(android.content.Context,int)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.calendar.WeekView: boolean initNextView(int)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.server.DeviceStorageMonitorService: void sendNotification()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.gsm.stk.IconLoader: void loadIcon(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void setMute(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$GpsStateTracker: void setImageViewResources(android.content.Context,android.widget.RemoteViews)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void setPreferredNetworkType(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.wifi.WifiStatusTest: void access$200(com.android.settings.wifi.WifiStatusTest)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothSocket createRfcommSocketToServiceRecord(java.util.UUID)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.phone.NetworkQueryService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.AccountSyncSettingsInAddAccount: void updateAccountCheckboxes(android.accounts.Account[])>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.systemui.usb.UsbAccessoryUriActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean setPriority(android.bluetooth.BluetoothDevice,int)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.mms.transaction.NotificationTransaction: void <init>(android.content.Context,int,com.android.mms.transaction.TransactionSettings,com.google.android.mms.pdu.NotificationInd)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.MccTable: void setWifiChannelsFromMcc(com.android.internal.telephony.PhoneBase,int)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.DevicePolicyManagerService$MyPackageMonitor: boolean onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.settings.MediaFormat: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.Call: void hangup()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.WifiService: void setWifiApEnabledState(int,int,com.android.server.WifiService$DriverAction)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.bluetooth.BluetoothPairingDialog: void onCancel()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.email.activity.AccountShortcutPicker: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.os.BatteryStatsImpl: void doPlugLocked(long,long)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.music.QueryBrowserActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getDeviceIdentity(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.music.ScanningProgress: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.ui.MessageUtils: java.lang.String getMessageDetails(android.content.Context,android.database.Cursor,int)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipConnection$1: void onCallHeld(android.net.sip.SipAudioCall)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.app.ListActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.email.service.EasAuthenticatorServiceAlternate: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.am.ActivityManagerService: boolean removeProcessLocked(com.android.server.am.ProcessRecord,boolean)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.contacts.ui.QuickContactActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.am.ActivityManagerService: void wakingUp()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.PhoneInterfaceManager: void enforceReadPermission()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.phone.CallNotifier: void onUnknownConnectionAppeared(android.os.AsyncResult)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: boolean access$2500(com.android.mms.ui.ComposeMessageActivity,long)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.mms.data.Conversation: void access$800(android.content.Context)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.email.service.EasAuthenticatorService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.widget.VideoView: void access$2000(android.widget.VideoView)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.IBluetooth$Stub: boolean isDiscovering()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.calendar.AgendaActivity: long getSelectedTime()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.phone.PhoneUtils: boolean answerAndEndActive(com.android.internal.telephony.CallManager,com.android.internal.telephony.Call)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.view.IWindowSession$Stub: int add(android.view.IWindow,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.view.InputChannel)>": [
  "android.permission.SYSTEM_ALERT_WINDOW"
 ], 
 "<android.accounts.AccountManager$4: android.accounts.AccountManagerFuture start()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.test.mock.MockApplication: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void setNotification(int)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.os.INetworkManagementService: void stopAccessPoint()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.connectivity.Tethering: void access$900(com.android.server.connectivity.Tethering)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.music.MediaPlaybackService$MultiPlayer: void <init>(com.android.music.MediaPlaybackService)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.IWifiManager: boolean acquireWifiLock(android.os.IBinder,int,java.lang.String,android.os.WorkSource)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$SyncStateTracker: void setImageViewResources(android.content.Context,android.widget.RemoteViews)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.cooliris.media.Wallpaper: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.app.RingtonePickerActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.ui.SlideshowPresenter$2: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.MccTable: void setTimezoneFromMccIfNeeded(com.android.internal.telephony.PhoneBase,int)>": [
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.os.DropBoxManager: android.os.DropBoxManager$Entry getNextEntry(java.lang.String,long)>": [
  "android.permission.READ_LOGS"
 ], 
 "<com.android.quicksearchbox.SearchSettings: void registerShowWebSuggestionsSettingObserver(android.content.Context,android.database.ContentObserver)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter()>": [
  "android.permission.NFC"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: boolean copyMedia(long)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.server.BluetoothEventLoop: void onDeviceDisconnectRequested(java.lang.String)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$StateTracker: void requestStateChange(android.content.Context,boolean)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: boolean canAddToContacts(com.android.mms.data.Contact)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.phone.BluetoothHandsfree$4: android.bluetooth.AtCommandResult handleActionCommand()>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setTTYMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.SimUnlockScreen$CheckSimPin: void onSimLockChangedResponse(boolean)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.RI: void processResponse(android.os.Parcel)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.NotificationManager: void notify(java.lang.String,int,android.app.Notification)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.location.ILocationManager: void requestLocationUpdates(java.lang.String,android.location.Criteria,long,float,boolean,android.location.ILocationListener)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.phone.PhoneApp: void access$1000(com.android.phone.PhoneApp,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.DockSettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.browser.Tab$4: void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET"
 ], 
 "<com.cooliris.media.UriTexture: java.lang.String writeHttpDataInDirectory(android.content.Context,java.lang.String,java.lang.String)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.phone.BluetoothAtPhonebook: java.lang.String getLastDialledNumber()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.contacts.ui.EditContactActivity$QueryEntitiesTask: java.lang.Object doInBackground(java.lang.Object,java.lang.Object[])>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.voicedialer.VoiceDialerActivity: int playSound(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<android.app.FullBackupAgent: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.RepeatingImageButton: boolean onTouchEvent(android.view.MotionEvent)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.exchange.adapter.FolderSyncParser: boolean parse()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.activity.setup.AccountSettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.location.ILocationManager: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM: void start()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.cooliris.media.MovieViewControl: void onDestroy()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getIccSerialNumber()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.music.PlaylistBrowserActivity: void access$100(com.android.music.PlaylistBrowserActivity)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.WeekView: void reloadEvents()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.server.NetworkManagementService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.bluetooth.IBluetooth: int getRemoteClass(java.lang.String)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.phone.DeleteFdnContactScreen: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.nfc.INfcAdapter$Stub: android.nfc.NdefMessage localGet()>": [
  "android.permission.NFC"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppIncomingFileConfirmActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.providers.downloads.DownloadInfo: boolean isReadyToStart(long)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GsmMmiCode: void onQueryCfComplete(android.os.AsyncResult)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.ClassZeroActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.ContactsUtils: java.util.ArrayList queryForAllRawContactIds(android.content.ContentResolver,long)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.accounts.IAccountManager$Stub: void clearPassword(android.accounts.Account)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<android.net.sip.ISipService$Stub: boolean isOpened(java.lang.String)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void <init>(com.android.internal.telephony.gsm.GSMPhone)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.phone.BluetoothHandsfree$10: android.bluetooth.AtCommandResult handleReadCommand()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.music.RenamePlaylist: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.AccountManager: java.lang.String blockingGetAuthToken(android.accounts.Account,java.lang.String,boolean)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.inputmethod.latin.LatinIME$5: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.phone.CallNotifier$EmergencyTonePlayerVibrator: void access$300(com.android.phone.CallNotifier$EmergencyTonePlayerVibrator)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.settings.widget.SettingsAppWidgetProvider$BluetoothStateTracker: int getActualState(android.content.Context)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.app.IBatteryStats$Stub: long getAwakeTimePlugged()>": [
  "android.permission.BATTERY_STATS"
 ], 
 "<com.android.exchange.utility.CalendarUtilities: com.android.email.provider.EmailContent$Message createMessageForEventId(android.content.Context,long,int,java.lang.String,com.android.email.provider.EmailContent$Account)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.os.IPowerManager$Stub: void releaseWakeLock(android.os.IBinder,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.quicksearchbox.SearchWidgetConfigActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.activity.setup.AccountSetupCheckSettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.calendar.CalendarActivity: void onNewIntent(android.content.Intent)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.server.BluetoothService: boolean setScanMode(int,int)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.providers.contacts.LegacyApiSupport: long findFirstDataId(long,java.lang.String)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.settings.ConfirmLockPattern: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.BackupManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.webkit.WebView: void requestFocusNodeHref(android.os.Message)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.music.MediaPlaybackActivity: void access$1100(com.android.music.MediaPlaybackActivity)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.ContextWrapper: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.music.CreatePlaylist: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.webkit.WebView: void selectionDone()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.mms.ui.ConfirmRateLimitActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.IBluetoothHeadset$Stub: boolean connectHeadset(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.provision.DefaultActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.cooliris.media.CropImage: void access$100(android.content.Context,android.os.Bundle,java.lang.String)>": [
  "android.permission.INTERNET"
 ], 
 "<android.bluetooth.IBluetooth$Stub: java.lang.String getRemoteName(java.lang.String)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.PhoneSubInfo: java.lang.String getDeviceId()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.systemui.usb.UsbConfirmActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.calendar.EditEvent: boolean saveRemindersWithBackRef(java.util.ArrayList,int,java.util.ArrayList,java.util.ArrayList,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.calendar.DismissAllAlarmsService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.certinstaller.CertFile: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: boolean doLidChangeTq(boolean)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.gsm.SIMRecords: void handleFileUpdate(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.providers.contacts.LegacyApiSupport: int updateExtensions(long,android.content.ContentValues)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.commands.bmgr.Bmgr: void doRestoreAll(long)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void getDataCallList(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.BluetoothHandsfree$15: android.bluetooth.AtCommandResult handleReadCommand()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.webkit.HTML5VideoViewProxy: void pause()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.Phone: void setTTYMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDeviceManager: void onDeviceNameUpdated(android.bluetooth.BluetoothDevice)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.settings.quicklaunch.BookmarkPicker: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.providers.calendar.EmptyService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.app.PlatLogoActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.RI: void deactivateDataCall(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ContextImpl$ApplicationPackageManager: void freeStorageAndNotify(long,android.content.pm.IPackageDataObserver)>": [
  "android.permission.CLEAR_APP_CACHE"
 ], 
 "<android.location.ILocationManager$Stub: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.server.vpn.L2tpIpsecPskService: void access$600(com.android.server.vpn.VpnService,java.lang.Throwable)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.cooliris.media.RenderView: void draw2D(com.cooliris.media.Texture,int,int,int,int)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.contacts.ui.ContactsPreferencesActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.packageinstaller.UninstallerActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.LocationManagerService: void clearTestProviderLocation(java.lang.String)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.music.PlaylistBrowserActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.Downloads$ByUri: void removeAllDownloadsByPackage(android.content.Context,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.settings.ApplicationSettings: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.phone.CallNotifier: void showIncomingCall()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.quicksearchbox.SearchSettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.development.Development: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.ThrottleService: int getCliffLevel(java.lang.String,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onNVReady()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.TrackBrowserActivity: void moveItem(boolean)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.providers.settings.SettingsBackupAgent: void restoreSettings(android.app.backup.BackupDataInput,android.net.Uri)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.calendar.Event: void loadEvents(android.content.Context,java.util.ArrayList,long,int,int,java.util.concurrent.atomic.AtomicInteger)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.providers.downloads.DownloadThread: void executeDownload(com.android.providers.downloads.DownloadThread$State,android.net.http.AndroidHttpClient,org.apache.http.client.methods.HttpGet)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET"
 ], 
 "<android.app.FullBackupAgent: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.exchange.EasSyncService: void sendMeetingResponse(com.android.exchange.MeetingResponseRequest)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.data.WorkingMessage: com.android.mms.data.WorkingMessage load(com.android.mms.ui.ComposeMessageActivity,android.net.Uri)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.WifiService: void access$600(com.android.server.WifiService,java.util.ArrayList,java.util.ArrayList)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.AppWidgetPickActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.accounts.AccountManager$7: android.accounts.AccountManagerFuture start()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.net.wifi.WifiManager: boolean startScanActive()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.exchange.EasOutboxService: void validateAccount(java.lang.String,java.lang.String,java.lang.String,int,boolean,boolean,android.content.Context)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void pollState()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.email.activity.setup.AccountSetupBasics: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.nfc.INfcAdapter$Stub$Proxy: android.nfc.ILlcpConnectionlessSocket getLlcpConnectionlessInterface()>": [
  "android.permission.NFC"
 ], 
 "<android.net.sip.SipManager: void unregister(android.net.sip.SipProfile,android.net.sip.SipRegistrationListener)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.settings.ChooseLockGeneric: void onCreate(android.os.Bundle)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.speech.tts.ITts$Stub$Proxy: int playEarcon(java.lang.String,java.lang.String,int,java.lang.String[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.activity.MessageView$ControllerResults: void loadAttachmentCallback(com.android.email.mail.MessagingException,long,long,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.vpn.VpnServiceBinder: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.WallpaperManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SET_WALLPAPER_HINTS", 
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.test.mock.MockApplication: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.settings.UserDictionarySettings: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void disableSingleLocationUpdate()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.transaction.ReadRecTransaction: byte[] sendPdu(byte[],java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.NetworkManagementService: void enableNat(java.lang.String,java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppIncomingFileConfirmActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.os.INetworkManagementService: void enableNat(java.lang.String,java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.server.SystemBackupAgent: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.IBluetoothA2dp: android.bluetooth.BluetoothDevice[] getConnectedSinks()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void queryCdmaRoamingPreference(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.WifiStateTracker: void scheduleDisconnect()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.ILlcpSocket: int getRemoteSocketRw(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.browser.AddBookmarkPage: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.BluetoothHandsfree$27: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.PowerManagerService$4: void run()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.nfc.NfcService: void resetSeOnFirstBoot()>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void setMute(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: void pollCallsWhenSafe()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.WebView: void clearView()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.contacts.ContactsListActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.phone.ManageConferenceUtils: void updateManageConferenceRow(int,com.android.internal.telephony.Connection,boolean)>": [
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.music.MediaPlaybackActivity: void scanBackward(int,long)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.UiModeManagerService: void updateConfigurationLocked(boolean)>": [
  "android.permission.CHANGE_CONFIGURATION"
 ], 
 "<java.net.UR: java.lang.Object getContent()>": [
  "android.permission.INTERNET"
 ], 
 "<android.accounts.ChooseAccountActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.exchange.EasSyncService: org.apache.http.HttpResponse postAutodiscover(org.apache.http.client.HttpClient,org.apache.http.client.methods.HttpPost,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.music.MediaPlaybackActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.location.ILocationManager: void addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<android.accounts.AccountManager: android.accounts.Account[] getAccountsByType(java.lang.String)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.calendar.AgendaActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.music.RenamePlaylist: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: boolean callSelection()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.webkit.WebChromeClient: void onSelectionStart(android.webkit.WebView)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.speech.IRecognitionService$Stub$Proxy: void cancel(android.speech.IRecognitionListener)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.development.AccountsTester: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.IccCard: void handleIccCardStatus(com.android.internal.telephony.IccCardStatus)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManagerProxy: boolean disableCellBroadcastRange(int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.deskclock.AlarmKlaxon: void play(com.android.deskclock.Alarm)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.exchange.ContactsSyncAdapterService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.nfc.NfcService$6: int reconnect(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void getEnhancedVoicePrivacy(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.connectivity.Tethering$TetherInterfaceSM$TetheredState: void enter()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.RI: void getPreferredVoicePrivacy(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.NfcService$2: boolean enable()>": [
  "android.permission.NFC"
 ], 
 "<com.android.browser.BrowserBookmarksPage: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.wifi.IWifiManager$Stub: boolean removeNetwork(int)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.settings.ManageAccountsSettings: void onSyncStateUpdated()>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.providers.settings.SettingsBackupAgent: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.systemui.usb.UsbStorageActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.ui.ShowOrCreateActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.providers.contacts.ContactsProvider2: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppNotification: void updateCompletedNotification()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.WifiWatchdogService$WifiWatchdogHandler: void checkAp(com.android.server.WifiWatchdogService$AccessPoint)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.app.backup.IBackupManager$Stub$Proxy: void setBackupProvisioned(boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.phone.CdmaSubscriptionListPreference$CdmaSubscriptionButtonHandler: void handleSetCdmaSubscriptionMode(android.os.Message)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.voicedialer.VoiceContact: java.util.List getVoiceContacts(android.app.Activity)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.inputmethod.pinyin.PinyinDecoderService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.provider.Browser: void deleteHistoryTimeFrame(android.content.ContentResolver,long,long)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<android.nfc.ILlcpConnectionlessSocket: int sendTo(int,android.nfc.LlcpPacket)>": [
  "android.permission.NFC"
 ], 
 "<android.net.wifi.WifiStateTracker: boolean wifiManagerDisableNetwork(int)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.ConnectivityService: void reportInetCondition(int,int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.tts.TtsService$1SilenceThread: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.IBluetooth$Stub: boolean cancelBondProcess(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean createIncomingConnect(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.google.common.io.Files: boolean equal(java.io.File,java.io.File)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.phone.BluetoothHeadsetService: void onStart(android.content.Intent,int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.mms.util.Recycler$SmsRecycler: android.database.Cursor getAllThreads(android.content.Context)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.WifiWatchdogService: int getDns()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.tts.TtsService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.BluetoothDevice: boolean cancelPairingUserInput()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.cooliris.wallpaper.Slideshow$DataSource: android.graphics.Bitmap getBitmapForIndex(android.content.Context,int)>": [
  "android.permission.INTERNET"
 ], 
 "<android.net.IConnectivityManager$Stub$Proxy: boolean setRadio(int,boolean)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.ConnectivityService: int startUsingNetworkFeature(int,java.lang.String,android.os.IBinder)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.vpn.PptpService: void waitUntilConnectedOrTimedout()>": [
  "android.permission.VIBRATE"
 ], 
 "<android.accounts.AccountManager: android.accounts.Account[] getAccounts()>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.phone.PhoneUtils: boolean cancelMmiCode(com.android.internal.telephony.Phone)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.stk.IconLoader: void startLoadingIcon(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.development.InstrumentationList: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.browser.BrowserActivity: com.android.browser.Tab openTabAndShow(java.lang.String,boolean,java.lang.String)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<android.net.wifi.IWifiManager$Stub: boolean disconnect()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: boolean handleCallWaitingIncallSupplementaryService(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.bluetooth.LocalBluetoothProfileManager$A2dpProfileManager: boolean connect(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.nfc.INfcTag$Stub$Proxy: android.nfc.TransceiveResult transceive(int,byte[],boolean)>": [
  "android.permission.NFC"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: void onUuidChanged()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.media.MediaRecorder: void setAudioSource(int)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.browser.BrowserSettings: void clearCache(android.content.Context)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.certinstaller.CertInstaller: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.MountService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.MOUNT_UNMOUNT_FILESYSTEMS", 
  "android.permission.MOUNT_FORMAT_FILESYSTEMS"
 ], 
 "<com.cooliris.media.Gallery: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void enableSingleLocationUpdate()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.AppWidgetPickActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.INTERNET", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.deskclock.DeskClock: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.GetPin2Screen: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.tts.TtsService: int playSilence(java.lang.String,long,int,java.util.ArrayList)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.ILocationManager$Stub$Proxy: void addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.server.LocationManagerService: boolean isProviderEnabled(java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.contacts.ImportVCardActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.email.activity.UpgradeAccounts: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.DeviceInfoSettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.cooliris.picasa.PicasaService: boolean performSync(android.content.Context,android.accounts.Account,android.os.Bundle,android.content.SyncResult)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.view.WindowManagerPolicy: void exitKeyguardSecurely(android.view.WindowManagerPolicy$OnKeyguardExitResult)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.media.AudioService: void <init>(android.content.Context)>": [
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.nfc.NfcAdapter: void disableForegroundDispatch(android.app.Activity)>": [
  "android.permission.NFC"
 ], 
 "<com.svox.pico.DownloadVoiceData: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.browser.Tab: void putInBackground()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.wifi.WifiSettings: void enableNetworks()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.location.LocationManager: void addProximityAlert(double,double,float,long,android.app.PendingIntent)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.location.LocationManager: void clearTestProviderStatus(java.lang.String)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager$5: void run()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.email.Controller$LegacyListener: void loadAttachmentStarted(long,long,long,boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.providers.userdictionary.DictionaryBackupAgent: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>": [
  "android.permission.READ_USER_DICTIONARY"
 ], 
 "<com.android.contacts.ui.ContactsPreferencesActivity$DisplayAdapter: void <init>(android.content.Context)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.music.MediaPlaybackActivity$4: void onClick(android.view.View)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.exchange.CalendarSyncAdapterService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.webkit.HttpAuthHandler: void cancel()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.settings.quicklaunch.QuickLaunchSettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void switchWaitingOrHoldingAndActive(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.activity.Welcome: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.development.AccountsTester: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.exchange.EasSyncService: android.os.Bundle tryAutodiscover(java.lang.String,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.inputmethod.latin.LatinKeyboardView: boolean onTouchEvent(android.view.MotionEvent)>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<android.webkit.WebView: void goForward()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.WindowManagerService$WindowState: boolean hideLw(boolean,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.mms.transaction.PrivilegedSmsReceiver: void beginStartingService(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.CredentialInstaller: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.wifi.IWifiManager: int getNumAllowedChannels()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.app.backup.IBackupManager$Stub$Proxy: void clearBackupData(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.test.RenamingDelegatingContext: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.server.BluetoothService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.mms.MmsApp: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.ui.ConfirmRateLimitActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.RecentCallsListActivity: void resetNewCallsFlag()>": [
  "android.permission.WRITE_CONTACTS"
 ], 
 "<com.android.phone.BluetoothHeadsetService$6: boolean isConnected(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void access$000(com.android.internal.telephony.cdma.CdmaServiceStateTracker)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.mms.util.Recycler$SmsRecycler: boolean checkForThreadsOverLimit(android.content.Context)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.settings.ApnEditor: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.DataConnection: void onConnect(com.android.internal.telephony.DataConnection$ConnectionParams)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.PhoneInterfaceManager: void access$100(com.android.phone.PhoneInterfaceManager)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.settings.bluetooth.CachedBluetoothDevice: void unpair()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.app.RingtonePickerActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.IThrottleManager$Stub: int getCliffLevel(java.lang.String,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.voicedialer.VoiceDialerActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture hasFeatures(android.accounts.Account,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.development.UnderdevelopedSettings: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.cooliris.picasa.PicasaContentProvider: void syncUsersAndAlbums(boolean,android.content.SyncResult)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.INTERNET"
 ], 
 "<com.android.server.ThrottleService: long getByteCount(java.lang.String,int,int,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.webkit.WebViewCore: void sendMessageDelayed(int,java.lang.Object,long)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.launcher2.LauncherApplication: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.DemoThread: void run()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.LocationManagerService: void clearTestProviderEnabled(java.lang.String)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.phone.InCallScreen: void updateInCallTouchUi()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.app.backup.IRestoreSession$Stub: int restoreAll(long,android.app.backup.IRestoreObserver)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.bluetooth.pbap.BluetoothPbapService: void parseIntent(android.content.Intent)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.ManageConferenceUtils$2: void onClick(android.view.View)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.browser.widget.BookmarkWidgetService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.music.MediaPlaybackActivity$11: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppTransferHistory: void access$000(com.android.bluetooth.opp.BluetoothOppTransferHistory)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.packageinstaller.UninstallAppProgress: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.contacts.ContactsUtils: long queryForRawContactId(android.content.ContentResolver,long)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppLiveFolder: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.backup.BackupAgentHelper: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppNotification: void access$400(com.android.bluetooth.opp.BluetoothOppNotification)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.WifiService: boolean reassociate()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: boolean removeNetwork(int)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.settings.UsageStats: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.LocationManagerService: void updateProvidersLocked()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.mms.ui.ManageSimMessages$1: void onChange(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.phone.Ringer: void stopRing()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppNotification$NotificationUpdateThread: void run()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.PackageManagerService: void access$2200(com.android.server.PackageManagerService,com.android.server.PackageManagerService$InstallArgs,boolean,com.android.server.PackageManagerService$PackageInstalledInfo)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.server.LocationManagerService$Receiver: void decrementPendingBroadcastsLocked()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.INetworkManagementService: boolean getIpForwardingEnabled()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.accounts.AccountManager$2: void doWork()>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.email.activity.AccountFolderList: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.wifi.IWifiManager: boolean setNumAllowedChannels(int,boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.browser.BrowserActivity: void closeCurrentWindow()>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.providers.calendar.CalendarProvider2: int deleteInTransaction(android.net.Uri,java.lang.String,java.lang.String[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.settings.AccessibilitySettings: void handleEnableAccessibilityStateChange(android.preference.CheckBoxPreference)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.IActivityManager: void moveTaskBackwards(int)>": [
  "android.permission.REORDER_TASKS"
 ], 
 "<com.android.settings.VoiceInputOutputSettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.ViewContactActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewMediator: void <init>(android.content.Context,com.android.internal.policy.impl.PhoneWindowManager,android.os.LocalPowerManager)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GsmSMSDispatcher: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.inputmethod.latin.LatinIMEBackupAgent: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.sip.SipManager: android.net.sip.SipProfile[] getListOfProfiles()>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.calendar.MonthActivity: boolean onOptionsItemSelected(android.view.MenuItem)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: java.util.List getAdnRecordsInEf(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.server.BluetoothA2dpService: boolean isConnectSinkFeasible(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void setMute(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.webkit.WebView$PostScale: void run()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.os.INetworkManagementService: void tetherInterface(java.lang.String)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.providers.calendar.CalendarProvider2: void doProcessEventRawTimes(java.lang.String,java.lang.String)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.cooliris.picasa.PicasaContentProvider: void syncUsers(android.content.SyncResult)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.accounts.AccountManager$AmsTask: void doWork()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.calendar.WeekView: void access$300(com.android.calendar.CalendarView)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.media.AudioService$ScoClient: void binderDied()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.contacts.ui.QuickContactActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.systemui.usb.UsbConfirmActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.music.ArtistAlbumBrowserActivity: boolean onContextItemSelected(android.view.MenuItem)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.activity.MessageView: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.bluetooth.opp.BluetoothOppIncomingFileConfirmActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.cooliris.media.MovieView$1: void onDestroy()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void invokeOemRilRequestRaw(byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.ILocationManager$Stub$Proxy: void requestLocationUpdates(java.lang.String,android.location.Criteria,long,float,boolean,android.location.ILocationListener)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.telephony.TelephonyManager: java.lang.String getDeviceSoftwareVersion()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.BackupManagerService: void restoreAtInstall(java.lang.String,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.exchange.SyncManager: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.wifi.WifiManager: boolean startScan()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.phone.sip.SipEditor: void deleteAndUnregisterProfile(android.net.sip.SipProfile)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_SIP"
 ], 
 "<com.android.contacts.ContactsListActivity$JoinContactActivity: android.graphics.Bitmap loadContactPhoto(android.net.Uri,android.graphics.BitmapFactory$Options)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onVoiceCallStarted()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IccCard: void broadcastIccStateChangedIntent(java.lang.String,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.RI: void sendEnvelope(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.TetherSettings: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.BluetoothHandsfree$23: android.bluetooth.AtCommandResult handleReadCommand()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.bluetooth.IBluetoothA2dp: boolean disconnectSinkInternal(android.bluetooth.BluetoothDevice)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN", 
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.browser.BrowserActivity$4: java.lang.Void doInBackground(java.lang.Void[])>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.phone.CallNotifier: void startIncomingCallQuery(com.android.internal.telephony.Connection)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.providers.calendar.CalendarProvider2: int deleteEventInternal(long,boolean,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: void hasFeatures(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String[])>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.deskclock.SetAlarm: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.location.ILocationManager$Stub: void setTestProviderEnabled(java.lang.String,boolean)>": [
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.browser.CombinedBookmarkHistoryActivity$1: java.lang.Object doInBackground(java.lang.Object[])>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS"
 ], 
 "<com.android.mms.transaction.MessagingNotification: void notifyDownloadFailed(android.content.Context,long)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity$28: void onContentChanged(com.android.mms.ui.MessageListAdapter)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.browser.Tab$3: void onCloseWindow(android.webkit.WebView)>": [
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.contacts.ui.ContactsPreferencesActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.preference.VolumePreference: void onActivityStop()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.bluetooth.BluetoothSettings: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.location.LocationManager: android.location.LocationProvider getProvider(java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.contacts.SpecialCharSequenceMgr: boolean handleChars(android.content.Context,java.lang.String,android.widget.EditText)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.content.ContentService: boolean isSyncActive(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.phone.BluetoothHandsfree$22: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.accounts.AccountManager: void setPassword(android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<android.provider.Settings$Secure: void setLocationProviderEnabled(android.content.ContentResolver,java.lang.String,boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.nfc.tech.NfcV: byte[] transceive(byte[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.contacts.ContactsListActivity$ContactsSearchActivity: void returnPickerResult(android.database.Cursor,java.lang.String,android.net.Uri,int)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.app.ReceiverRestrictedContext: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void onRestrictedStateChanged(android.os.AsyncResult)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.settings.vpn.VpnEditor: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.term.TermPreferences: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.preference.VolumePreference$SeekBarVolumizer: void changeVolumeBy(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.phone.BluetoothHandsfree$2: android.bluetooth.AtCommandResult handleReadCommand()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.LocationManagerService: boolean isAllowedProviderSafe(java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.phone.BluetoothHandsfree$2: android.bluetooth.AtCommandResult handleActionCommand()>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.READ_CONTACTS", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.phone.BluetoothHandsfree$26: android.bluetooth.AtCommandResult handleReadCommand()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.InputMethodManagerService: boolean chooseNewDefaultIMELocked()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.IccPhoneBookInterfaceManager: java.util.List getAdnRecordsInEf(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.calendar.GoogleCalendarUriIntentFilter: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.LocationManagerService$Receiver: boolean callProviderEnabledLocked(java.lang.String,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.email.activity.FolderMessageList: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.policy.impl.KeyguardViewManager: void verifyUnlock()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.bluetooth.IBluetoothA2dp: boolean disconnectSink(android.bluetooth.BluetoothDevice)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.browser.BrowserHistoryPage: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.CdmaDataConnectionTracker$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void startDtmf(char)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.tech.IsoDep: void close()>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.MccTable: void updateMccMncConfiguration(com.android.internal.telephony.PhoneBase,java.lang.String)>": [
  "android.permission.CHANGE_CONFIGURATION", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.content.pm.PackageManager: void getPackageSizeInfo(java.lang.String,android.content.pm.IPackageStatsObserver)>": [
  "android.permission.GET_PACKAGE_SIZE"
 ], 
 "<com.android.music.MediaPlaybackService: int removeTrack(long)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.exchange.adapter.CalendarSyncAdapter$EasCalendarSyncParser: void addParser(com.android.exchange.adapter.CalendarSyncAdapter$CalendarOperations)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.cooliris.media.CropImage: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.ui.SlideshowEditActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.policy.impl.KeyguardScreenCallback: void takeEmergencyCallAction()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.settings.IccLockSettings: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.phone.DataUsage: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setPowerStateToDesired()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.cooliris.picasa.PicasaService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.mms.ui.ComposeMessageActivity: void editMessageItem(com.android.mms.ui.MessageItem)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.contacts.util.EmptyService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.view.IApplicationToken: boolean keyDispatchingTimedOut()>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.launcher2.AllApps3D: boolean onLongClick(android.view.View)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.cdma.RuimCard: void supplyPin(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.test.SimulatedCommands: void <init>()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.AccessibilitySettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.contacts.CallDetailActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.accounts.IAccountManager: void getAuthToken(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle)>": [
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.inputmethod.latin.LatinKeyboardView: void swipeDown()>": [
  "android.permission.READ_USER_DICTIONARY", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.server.sip.SipService$WakeupTimer: void execute(long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.quicksearchbox.SearchableItemsSettings: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.wifi.IWifiManager$Stub: boolean pingSupplicant()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.providers.downloads.DownloadThread: void transferData(com.android.providers.downloads.DownloadThread$State,com.android.providers.downloads.DownloadThread$InnerState,byte[],java.io.InputStream)>": [
  "android.permission.WRITE_EXTERNAL_STORAGE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.contacts.ContactsListActivity: boolean callOrSmsContact(android.database.Cursor,boolean)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.bluetooth.opp.TestActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.BluetoothAdapter: boolean cancelDiscovery()>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.connectivity.Tethering$StateReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.server.BluetoothService: boolean setPropertyInteger(java.lang.String,int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onEnableNewApn()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.connectivity.Tethering$TetherInterfaceSM$StartingState: void exit()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.phone.sip.SipEditor: void unregisterProfile(java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_SIP"
 ], 
 "<com.android.internal.telephony.gsm.SIMRecords: void onRecordLoaded()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.ThrottleService: long getResetTime(java.lang.String)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask$1: void run(android.accounts.AccountManagerFuture)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.settings.AccessibilitySettings: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.ConnectivityManager: int getNetworkPreference()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.nfc.INfcTag: void resetIsoDepTimeout()>": [
  "android.permission.NFC"
 ], 
 "<com.android.phone.SipCallOptionHandler: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.settings.DeviceAdminAdd: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.IBluetooth$Stub$Proxy: int getRemoteServiceChannel(java.lang.String,android.os.ParcelUuid)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.phone.GsmUmtsAdditionalCallOptions: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.cooliris.picasa.PicasaContentProvider: void syncUserAlbums(com.cooliris.picasa.PicasaContentProvider$SyncContext,com.cooliris.picasa.UserEntry,android.content.SyncResult)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS", 
  "android.permission.INTERNET"
 ], 
 "<com.android.server.am.ActivityStack: boolean moveTaskToBackLocked(int,com.android.server.am.ActivityRecord)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.music.PlaylistBrowserActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.deskclock.SetAlarm$4: void onClick(android.view.View)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.calendar.AlertService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.am.ActivityManagerService: void setDebugApp(java.lang.String,boolean,boolean)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.SET_DEBUG_APP"
 ], 
 "<com.android.contacts.ContactsListActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.policy.impl.LockPatternKeyguardView$AccountAnalyzer: void <init>(com.android.internal.policy.impl.LockPatternKeyguardView,android.accounts.AccountManager,com.android.internal.policy.impl.LockPatternKeyguardView$1)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.app.IWallpaperManager$Stub: android.os.ParcelFileDescriptor setWallpaper(java.lang.String)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.vpn.PptpService: boolean checkConnectivity()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.mms.transaction.NotificationTransaction: void notifyObservers()>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.WRITE_SMS", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.providers.calendar.CalendarDebug: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: int checkAddPermission(android.view.WindowManager$LayoutParams)>": [
  "android.permission.SYSTEM_ALERT_WINDOW"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void setCdmaSubscription(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.connectivity.Tethering$TetherInterfaceSM: void access$1000(com.android.server.connectivity.Tethering$TetherInterfaceSM,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.PackageManagerService: void freeStorageAndNotify(long,android.content.pm.IPackageDataObserver)>": [
  "android.permission.CLEAR_APP_CACHE"
 ], 
 "<com.android.phone.ChangeIccPinScreen: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.ReceiverRestrictedContext: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: boolean updateCurrentCarrierInProvider()>": [
  "android.permission.WRITE_APN_SETTINGS"
 ], 
 "<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingRfcommWithServiceRecord(java.lang.String,java.util.UUID)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.svox.pico.GetSampleText: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.preference.VolumePreference$SeekBarVolumizer: void sample()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.settings.bluetooth.BluetoothPairingDialog: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WAKE_LOCK", 
  "android.permission.BLUETOOTH", 
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.providers.contacts.ContactsProvider2: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteQueryBuilder,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.webkit.WebView: void onWindowFocusChanged(boolean)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ]
}
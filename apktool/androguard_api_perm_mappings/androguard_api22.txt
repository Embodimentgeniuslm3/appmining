{
 "<com.android.server.media.MediaSessionService$SessionManagerImpl: void dispatchMediaKeyEventLocked(android.view.KeyEvent,boolean,com.android.server.media.MediaSessionRecord)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.uicc.SIMRecords: void onLocked()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.DropBoxManager: void addData(java.lang.String,byte[],int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager: boolean disableCellBroadcastRange(int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.server.wifi.WifiController$ApEnabledState: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GsmConnection: void acquireWakeLock()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.BrightnessFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.net.NetworkStatsService$NetworkStatsSettings: long getUidTagPersistBytes(long)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.widget.LockPatternUtils: boolean isBiometricWeakLivelinessEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.InputMethodManagerService: android.util.Pair findLastResortApplicableShortcutInputMethodAndSubtypeLocked(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void <init>(com.android.internal.telephony.PhoneBase,com.android.internal.telephony.CommandsInterface,android.telephony.CellInfo)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordMinimumUpperCase(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.accessibility.CaptioningManager: boolean isEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor: void onPackageModified(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.wallpaper.WallpaperService$Engine: void setTouchEventsEnabled(boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.SYSTEM_ALERT_WINDOW", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: void appendAndPutEnabledInputMethodLocked(java.lang.String,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.job.JobService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceCategoryProgramHandler: java.lang.String toString()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.NfcActivityManager: void setReaderMode(android.os.Binder,int,android.os.Bundle)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.telephony.SubscriptionManager: void clearDefaultsForInactiveSubIds()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.util.AsyncService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: boolean setRoamingOverride(java.util.List,java.util.List,java.util.List,java.util.List)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.widget.TextView$ChangeWatcher: void beforeTextChanged(java.lang.CharSequence,int,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: void reevaluateStatusBarVisibility()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accessibility.TouchExplorer$SendHoverEnterAndMoveDelayed: void forceSendAndRemove()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.beam.BeamTransferManager: void setBluetoothTransferId(int)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.print.PrintJob: void restart()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.location.FlpHardwareProvider: void onGeofenceResume(int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.NfcActivityManager: void verifyNfcPermission()>": [
  "android.permission.NFC"
 ], 
 "<android.app.backup.BackupAgentHelper: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.MmsServiceBroker$BinderService: android.net.Uri importTextMessage(java.lang.String,java.lang.String,int,java.lang.String,long,boolean,boolean)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.ProxyController: void completeRadioCapabilityTransaction()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setNetworkSelectionModeAutomatic(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void separateConnection(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.SMSDispatcher: void sendSms(com.android.internal.telephony.SMSDispatcher$SmsTracker)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.internal.widget.LockPatternUtils: boolean checkVoldPassword()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: int getSupportedFeatures()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.provider.Settings$System: int getIntForUser(android.content.ContentResolver,java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.NativeActivity: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: int getWifiApEnabledState()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.app.admin.IDevicePolicyManager: void setLockTaskPackages(android.content.ComponentName,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.LomoishFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.BluetoothManagerService: void unregisterAdapter(android.bluetooth.IBluetoothManagerCallback)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.LocationManagerService: void removeGeofence(android.location.Geofence,android.app.PendingIntent,java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.accounts.ChooseTypeAndAccountActivity: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.DefaultPhoneNotifier: void notifyServiceState(com.android.internal.telephony.Phone)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.pm.IPackageManager: void getPackageSizeInfo(java.lang.String,int,android.content.pm.IPackageStatsObserver)>": [
  "android.permission.GET_PACKAGE_SIZE"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void <init>(java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.SearchView$SearchAutoComplete: boolean shouldSpeakPasswordsForAccessibility()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.ToRGBFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.voiceinteraction.VoiceInteractionManagerService: void onSwitchUser(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevicePlayback: boolean handleSetSystemAudioMode(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.Button: boolean access$1200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.WindowManagerGlobal: void addView(android.view.View,android.view.ViewGroup$LayoutParams,android.view.Display,android.view.Window)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.SYSTEM_ALERT_WINDOW", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.dataconnection.DctController: void onProcessRequest()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.INfcTag: android.nfc.TransceiveResult transceive(int,byte[],boolean)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.uicc.IsimUiccRecords: void handleIsimRefresh(com.android.internal.telephony.uicc.IccRefreshResponse)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.sip.SipAudioCall: void startAudioInternal()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.voice.VoiceInteractionSessionService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.sip.SipService$SipAutoReg: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.trust.TrustManagerService: void updateUserHasAuthenticated(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.util.StateMachine$SmHandler$QuittingState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.admin.IDevicePolicyManager: boolean getStorageEncryption(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.media.MediaBrowserService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.input.InputManagerService$WindowManagerCallbacks: void notifyLidSwitchChanged(long,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: com.android.internal.telephony.Connection dial(java.lang.String,int)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void notifyDataConnection(java.lang.String,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.WakeGestureListener: void onWakeUp()>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.sip.ISipService$Stub$Proxy: android.net.sip.SipProfile[] getListOfProfiles()>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.internal.widget.LockPatternUtils: boolean isTactileFeedbackEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void notifySignalStrength()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.ActivityManagerNative: void showBootMessage(java.lang.CharSequence,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.media.WebVttRenderingWidget: void onAttachedToWindow()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.base.CallbackFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.ImageStitcher: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.TechListChooserActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.sip.SipSessionGroup$SipSessionImpl$SipKeepAlive: void onError(android.net.sip.ISipSession,int,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.provider.Settings$Secure: float getFloat(android.content.ContentResolver,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.CantAddAccountActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.MutableContextWrapper: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.am.ActivityStackSupervisor$ActivityContainer: void onTaskListEmptyLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.WakeLockStateMachine: boolean handleSmsMessage(android.os.Message)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void expandNotificationsPanel()>": [
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.server.wifi.WifiController$2: void onChange(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.print.PrintManagerService$PrintManagerImpl$2: void onPackageModified(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.inputmethodservice.InputMethodService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.display.DisplayManagerService: int createVirtualDisplayInternal(android.hardware.display.IVirtualDisplayCallback,android.media.projection.IMediaProjection,int,java.lang.String,java.lang.String,int,int,int,android.view.Surface,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.commands.uiautomator.Launcher: void main(java.lang.String[])>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.InboundSmsHandler: void onUpdatePhoneObject(com.android.internal.telephony.PhoneBase)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.notification.CountdownConditionProvider: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.RI: void getBasebandVersion(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.cardemulation.CardEmulationManager$CardEmulationInterface: boolean removeAidGroupForService(int,android.content.ComponentName,java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.InboundSmsHandler: void dispatchSmsDeliveryIntent(byte[][],java.lang.String,int,android.content.BroadcastReceiver)>": [
  "android.permission.RECEIVE_SMS", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.am.ActivityStackSupervisor: void scheduleSleepTimeout()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.nfc.NfcAdapter: void enableForegroundDispatch(android.app.Activity,android.app.PendingIntent,android.content.IntentFilter[],java.lang.String[][])>": [
  "android.permission.NFC"
 ], 
 "<android.widget.NumberPicker: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.CropRectFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.content.pm.ILauncherApps$Stub: void startActivityAsUser(android.content.ComponentName,android.graphics.Rect,android.os.Bundle,android.os.UserHandle)>": [
  "android.permission.INTERNET"
 ], 
 "<android.accounts.IAccountManager$Stub: android.accounts.Account[] getAccountsAsUser(java.lang.String,int)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: void startNewDeviceAction(com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void updatePhoneObject(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.accounts.AccountManager$14: void doWork()>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<android.widget.ToggleButton: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.base.FrameBranch: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmConnection: void access$100(com.android.internal.telephony.gsm.GsmConnection)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.ImageStitcher: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: boolean setInternalDataEnabled(boolean,android.os.Message)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.LockSettingsService: boolean checkPassword(java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.RemoteViews$2: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.uicc.IccCardProxy: void setExternalState(com.android.internal.telephony.IccCardConstants$State,boolean)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: void startQueuedActions()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.view.IInputMethodManager: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.base.InputStreamSource: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.updates.CarrierProvisioningUrlsInstallReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void setDataProfilesAsNeeded()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneFactory: void setDefaultSubscription(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void updateSettings()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.util.List getAllCellInfo()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CellBroadcastHandler: void <init>(java.lang.String,android.content.Context,com.android.internal.telephony.PhoneBase)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.NfcRootActivity: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.SmsApplication$SmsPackageMonitor: void onSomePackagesChanged()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.display.AutomaticBrightnessController: void access$000(com.android.server.display.AutomaticBrightnessController)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.DateTimeView: boolean performLongClick()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.backup.FullBackupAgent: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.RI: void explicitCallTransfer(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.NfcService$NfcAdapterService: void invokeBeamInternal(android.nfc.BeamShareData)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.commands.monkey.MonkeyNetworkMonitor: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.wifi.WifiManager: void stopBatchedScan(android.net.wifi.BatchedScanSettings)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor: boolean onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.TextServicesManagerService: void access$800(com.android.server.TextServicesManagerService,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.DuotoneFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void removeActiveAdmin(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: com.android.server.wm.DisplayContent getDisplayContentLocked(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.NetworkScoreService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.appwidget.AppWidgetHostView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.sip.SipService: void updateWakeLocks()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.WindowManagerService: void detachStackLocked(com.android.server.wm.DisplayContent,com.android.server.wm.TaskStack)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.telecom.ConnectionService: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.view.View: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GsmCellBroadcastHandler: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.telephony.SubscriptionManager: int setDataRoaming(int,int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.media.AudioManager: void setSpeakerphoneOn(boolean)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.service.dreams.DreamService: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.base.InputStreamSource: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void init(android.content.Context,com.android.internal.telephony.PhoneNotifier)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.server.webkit.WebViewUpdateService: void onBootPhase(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.commands.bmgr.Bmgr: void doWipe()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.MediaScanner$MyMediaScannerClient: android.net.Uri doScanFile(java.lang.String,java.lang.String,long,long,boolean,boolean,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.AccountManager$5: void startTask()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.wm.WindowManagerService$SettingsObserver: void onChange(boolean,android.net.Uri)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.location.ILocationManager$Stub$Proxy: void clearTestProviderStatus(java.lang.String)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<android.location.LocationManager: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_LOCATION_EXTRA_COMMANDS", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.location.SettingInjectorService: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ProxyController: void onStartRadioCapabilityResponse(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.notification.NextAlarmTracker: void handleEvaluate()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.power.ShutdownThread: void reboot(android.content.Context,java.lang.String,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.filterpacks.imageproc.ResizeFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry$Stub: void notifyDataConnectionFailedForSubscriber(int,java.lang.String,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.wifi.WifiManager: boolean disconnect()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.filterpacks.imageproc.LomoishFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: void reassociate()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.hdmi.HdmiControlService: void onStandby()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void queryTTYMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.LocationManagerService$3: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.widget.LockPatternUtils: void clearLock(boolean,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.backup.BackupManagerService$FullRestoreEngine: boolean restoreOneFile(java.io.InputStream)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void enableEnhancedVoicePrivacy(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.WifiManager: android.net.wifi.WifiActivityEnergyInfo getControllerActivityEnergyInfo(int)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.net.wifi.WifiManager: java.util.List getPrivilegedConfiguredNetworks()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.AccountItemView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.policy.impl.PhoneWindow: boolean onKeyUp(int,int,android.view.KeyEvent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void dispose()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.ActivityStack: boolean startPausingLocked(boolean,boolean,boolean,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void enableLocationUpdates()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void setRadioPower(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterfw.core.FinalPort: void transfer(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ContactsListActivity: android.net.Uri getUriToQuery()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.statusbar.IStatusBarService: void expandNotificationsPanel()>": [
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: void setFrequencyBand(int,boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.widget.SimpleMonthView: java.lang.String getMonthAndYearString()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: android.accounts.Account[] getAccountsForPackage(java.lang.String,int)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.uicc.UiccCard: void update(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.uicc.IccCardStatus)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<java.net.ServerSocket: void <init>(int)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.widget.LockPatternUtils: java.lang.String getOwnerInfo(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.VideoView$7: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.WaveView: boolean onTouchEvent(android.view.MotionEvent)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager: android.os.Bundle getApplicationRestrictions(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ISub: int getDefaultDataSubId()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.backup.FullBackupJob: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.view.textservice.SpellCheckerSession: void close()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.location.ILocationManager: void requestGeofence(android.location.LocationRequest,android.location.Geofence,android.app.PendingIntent,java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void nvReadItem(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void notifyServiceStateChangedP(android.telephony.ServiceState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.am.BroadcastQueue: void setBroadcastTimeoutLocked(long)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void disableLocationUpdates()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.ChooseTypeAndAccountActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.print.PrintManager: android.print.PrintJob getPrintJob(android.print.PrintJobId)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GsmCellBroadcastHandler: void <init>(java.lang.String,android.content.Context,com.android.internal.telephony.PhoneBase)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.pm.LauncherAppsService: void onSwitchUser(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.app.ExpandableListActivity: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.admin.IDevicePolicyManager: void setMaximumFailedPasswordsForWipe(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.Spinner: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.util.AsyncService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.view.WindowManagerPolicy: int adjustSystemUiVisibilityLw(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.view.View: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void <init>(android.content.Context,com.android.internal.telephony.PhoneNotifier,com.android.internal.telephony.Phone)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.Button: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.IAccountManager$Stub: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: void processNextPostDialChar()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.notification.ConditionProviders: void <init>(android.content.Context,android.os.Handler,java.lang.Object,com.android.server.notification.ManagedServices$UserProfiles)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.trust.TrustManagerService: void updateTrust(int,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.INetworkScoreService: void disableScoring()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.RI: void writeSmsToRuim(int,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.ActionMenuPresenter$OverflowMenuButton: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.content.SyncStorageEngine: void setSyncableStateForEndPoint(com.android.server.content.SyncStorageEngine$EndPoint,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.PhoneBase: boolean setOperatorBrandOverride(java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void restartDataStallAlarm()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.SubscriptionInfoUpdater$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.internal.view.menu.ActionMenuItemView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.base.FrameSource: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipConnection$1: void onCallEnded(android.net.sip.SipAudioCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.IWallpaperManager$Stub: void setDisplayPadding(android.graphics.Rect)>": [
  "android.permission.SET_WALLPAPER_HINTS"
 ], 
 "<android.media.TtmlRenderingWidget: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.tech.NfcV: void connect()>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.am.ActivityManagerService$28: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void dispose()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.ContentResolver: void setIsSyncable(android.accounts.Account,java.lang.String,int)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.ISms$Stub: boolean disableCellBroadcastRangeForSubscriber(int,int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.inputmethodservice.ExtractEditText: void access$200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiController: void registerForWifiSleepPolicyChange(android.os.Handler)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.ProxyController: void clearTransaction()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.notification.NotificationManagerService$NotificationListeners: void onUserSwitched()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.TintFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.cat.CommandParamsFactory: boolean processSetUpIdleModeText(com.android.internal.telephony.cat.CommandDetails,java.util.List)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.videosink.MediaEncoderFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.AppWindowAnimator: boolean showAllWindowsLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.uicc.SIMFileHandler: void getEFLinearRecordSize(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.MultiAutoCompleteTextView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.content.SyncStorageEngine: void clearAndReadState()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.am.ActivityStackSupervisor: void findTaskToMoveToFrontLocked(com.android.server.am.TaskRecord,int,android.os.Bundle,java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.am.ActivityManagerService$12: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: java.lang.String getConfigFile()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.location.LocationBlacklist: void switchUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumNumeric(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: android.view.DisplayInfo getDefaultDisplayInfoLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.TextClock: void updateTextServicesLocaleLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: boolean handleInactiveSource(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$GroupNegotiationState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.widget.TextViewWithCircularIndicator: boolean access$1200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: int getPasswordMinimumUpperCase(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.ChooseTypeAndAccountActivity: java.util.ArrayList getAcceptableAccountChoices(android.accounts.AccountManager)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.print.PrintManagerService$PrintManagerImpl: void addPrintJobStateChangeListener(android.print.IPrintJobStateChangeListener,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.RecognitionService$RecognitionServiceBinder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.internal.telephony.UiccSmsController: void setPremiumSmsPermission(java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.content.ComponentName setGlobalProxy(android.content.ComponentName,java.lang.String,java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void restartDataStallAlarm()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GsmInboundSmsHandler: void onQuitting()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.PowerManagerInternal: void setScreenBrightnessOverrideFromWindowManager(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager: void sendStoredText(java.lang.String,android.net.Uri,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.internal.telephony.uicc.IsimFileHandler: void loadEFLinearFixedAll(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ISms: boolean enableCellBroadcastRange(int,int,int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.server.connectivity.Tethering$TetherInterfaceSM: java.lang.String getLogRecString(android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.SIMFileHandler: void loadEFImgTransparent(int,int,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.HeavyWeightSwitcherActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.IBluetoothManager$Stub$Proxy: java.lang.String getAddress()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.InboundSmsHandler$DefaultState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.wifi.IWifiManager$Stub: android.net.DhcpInfo getDhcpInfo()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.content.IContentService$Stub$Proxy: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String,android.content.ComponentName)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.nfc.cardemulation.PreferredServices: void onUserSwitched(int)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.notification.NextAlarmTracker: java.lang.String formatAlarm(long)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.base.InputStreamSource: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.am.ActivityStack: void updateTransitLocked(int,android.os.Bundle)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.UiccSmsController: boolean isSMSPromptEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void nvWriteItem(int,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void clearCrossProfileIntentFilters(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accounts.AccountManagerService: void getAccountsByFeatures(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[])>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.wm.WindowManagerService$LocalService: void setMagnificationSpec(android.view.MagnificationSpec)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wm.WindowManagerService: void rebuildAppWindowListLocked(com.android.server.wm.DisplayContent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.accounts.GrantCredentialsPermissionActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: void enforceChangePermission()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.telephony.TelephonyManager: java.lang.String getLine1AlphaTag()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.ISub$Stub$Proxy: int clearSubInfo()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void access$200(com.android.internal.telephony.gsm.GsmServiceStateTracker)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.Application: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.Service: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.am.ActivityStack: void backgroundResourcesReleased()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$GroupCreatedState: void enter()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.base.InputStreamSource: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.notification.ZenModeHelper$SettingsObserver: void update(android.net.Uri)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.NfcActivityManager: void disableReaderMode(android.app.Activity)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void exitEmergencyCallbackMode()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.DrawOverlayFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.location.GeofenceManager: void updateFences()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void getEnhancedVoicePrivacy(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.location.ComprehensiveCountryDetector$1: void onCountryDetected(android.location.Country)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.widget.ExpandableListView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.base.FrameStore: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.pm.PackageManagerService$InstallParams$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService: boolean readHighTextContrastEnabledSettingLocked(com.android.server.accessibility.AccessibilityManagerService$UserState)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accessibility.ScreenMagnifier$MagnificationController: void setScaleAndMagnifiedRegionCenter(float,float,float,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.media.projection.MediaProjectionManagerService: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.SupplicantStateTracker$DormantState: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.RECEIVE_WAP_PUSH", 
  "android.permission.WRITE_SMS", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.RECEIVE_MMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.READ_SMS"
 ], 
 "<android.filterpacks.imageproc.SimpleImageFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.SMSDispatcher: void sendMultipartText(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,android.net.Uri,java.lang.String)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.location.LocationBasedCountryDetector: android.location.Country detectCountry()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.wifi.WifiStateMachine: boolean setNetworkDetailedState(android.net.NetworkInfo$DetailedState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.InboundSmsHandler: int addTrackerToRawTableAndSendMessage(com.android.internal.telephony.InboundSmsTracker)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.PhoneBase: void enableEnhancedVoicePrivacy(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.view.menu.IconMenuView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void setCellInfoListRate(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.RemoteViewsService: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.TextServicesManagerService$TextServicesSettings: java.lang.String getSelectedSpellCheckerSubtype()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void nvReadItem(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: boolean updateCurrentCarrierInProvider()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.provider.Contacts$People: android.net.Uri addToMyContactsGroup(android.content.ContentResolver,long)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: boolean isDataPossible(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.commands.dpm.Dpm: void main(java.lang.String[])>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.KILL_BACKGROUND_PROCESSES", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.RESTART_PACKAGES", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void getSmscAddress(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.uicc.AdnRecordLoader: void updateEF(com.android.internal.telephony.uicc.AdnRecord,int,int,int,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accounts.AccountManagerService: void renameAccount(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine$DefaultState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.MmsServiceBroker: android.net.Uri access$800()>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.accessibility.ScreenMagnifier: void handleMotionEventStateDelegating(android.view.MotionEvent,android.view.MotionEvent,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.SubtitleController: android.media.SubtitleTrack getDefaultTrack()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.SystemServiceManager: void startBootPhase(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: int getAllowScansWithTraffic()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.dreams.DreamManagerService: void access$1600(com.android.server.dreams.DreamManagerService)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.INetworkScoreService: boolean updateScores(android.net.ScoredNetwork[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accessibility.ScreenMagnifier$MagnificationController: void setMagnificationSpec(android.view.MagnificationSpec)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.WiredAccessoryManager$WiredAccessoryObserver: void updateStateLocked(java.lang.String,java.lang.String,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.KeyguardManager$KeyguardLock: void reenableKeyguard()>": [
  "android.permission.DISABLE_KEYGUARD"
 ], 
 "<com.android.nfc.DeviceHost$DeviceHostListener: void onRemoteEndpointDiscovered(com.android.nfc.DeviceHost$TagEndpoint)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: java.util.List getAllCellInfo()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void enableSystemApp(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: java.util.ArrayList buildWaitingApns(java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.commands.media.Media: void run(java.lang.String[])>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.KILL_BACKGROUND_PROCESSES", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.RESTART_PACKAGES", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.media.effect.SingleFilterEffect: void release()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.ui.SurfaceRenderFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.AudioService: void setSpeakerphoneOn(boolean)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.ImageSlicer: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.dataconnection.DctController: void executeRequest(com.android.internal.telephony.dataconnection.DcSwitchAsyncChannel$RequestInfo)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.WebVttRenderingWidget: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.widget.AccessibleDateAnimator: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.GrainFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.widget.VideoView: void resume()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.Connection dialInternal(java.lang.String,com.android.internal.telephony.UUSInfo,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void iccIOForApp(int,int,java.lang.String,int,int,int,java.lang.String,java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.ToPackedGrayFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.pm.PackageManagerService$HandlerParams: boolean startCopy()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.inputmethod.InputMethodSubtypeSwitchingController$InputMethodAndSubtypeList: java.util.List getSortedInputMethodAndSubtypeList(boolean,boolean,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ServiceStateTracker: boolean onSignalStrengthResult(android.os.AsyncResult,boolean)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.videosrc.MediaSource: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.DropBoxManagerService: void add(android.os.DropBoxManager$Entry)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneBase: void invokeOemRilRequestStrings(java.lang.String[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.notification.NextAlarmTracker: void dump(java.io.PrintWriter,com.android.server.notification.NotificationManagerService$DumpFilter)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void getNetworkSelectionMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.LockPatternUtils: int getFallbackAppWidgetId()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.bluetooth.IBluetoothManager: java.lang.String getAddress()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.power.PowerManagerService: void handleBatteryStateChangedLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void requestShutdown()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.nfc.P2pEventManager: void onP2pHandoverNotSupported()>": [
  "android.permission.VIBRATE"
 ], 
 "<android.os.PowerManager$WakeLock: void release(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void updateCarrierMccMncConfiguration(java.lang.String,java.lang.String,android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoController: java.lang.String getVoiceMailNumber()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.notification.NextAlarmTracker: java.lang.String formatAlarm(long,java.lang.String,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.location.ILocationManager: android.location.Location getLastLocation(android.location.LocationRequest,java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.IntRangeManager: boolean enableRange(int,int,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.backup.PackageManagerBackupAgent: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.CertBlacklister$BlacklistObserver$1: void run()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.os.IHardwareService$Stub: void setFlashlightEnabled(boolean)>": [
  "android.permission.FLASHLIGHT"
 ], 
 "<com.android.server.power.PowerManagerService: void wakeUpInternal(long,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.CsimFileHandler: void updateEFLinearFixed(int,int,byte[],java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.LocalePicker: android.widget.ArrayAdapter constructAdapter(android.content.Context,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.VolumeControlAction: void addAndStartAction(com.android.server.hdmi.HdmiCecFeatureAction)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.content.ContentService: void setIsSyncable(android.accounts.Account,java.lang.String,int)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.RI: com.android.internal.telephony.RILRequest processSolicited(android.os.Parcel)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setUninstallBlocked(android.content.ComponentName,java.lang.String,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.DeviceDiscoveryAction$1: void onPollingFinished(java.util.List)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordHistoryLength(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.notification.DowntimeConditionProvider: void onConnected()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: com.android.server.wm.DisplayContent getDefaultDisplayContentLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.BluetoothManagerService: boolean access$300(com.android.server.BluetoothManagerService)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.ims.ImsCall: void processCallTerminated(com.android.ims.ImsReasonInfo)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.base.RetargetFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.content.PackageMonitor: void onPackageDisappeared(java.lang.String,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ImsSMSDispatcher: void <init>(com.android.internal.telephony.PhoneBase,com.android.internal.telephony.SmsStorageMonitor,com.android.internal.telephony.SmsUsageMonitor)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.IMms$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.READ_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.RECEIVE_MMS"
 ], 
 "<android.accessibilityservice.AccessibilityService: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.statusbar.StatusBarManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<android.app.backup.FullBackupAgent: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cat.RilMessageDecoder: void onQuitting()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.NegativeFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.dataconnection.DataConnection$DcDefaultState: boolean processMessage(android.os.Message)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.DhcpStateMachine$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.notification.NextAlarmConditionProvider: void notifyCondition(android.net.Uri,android.app.AlarmManager$AlarmClockInfo,int,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setDataAllowed(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.IPowerManager$Stub$Proxy: void setStayOnSetting(int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.media.RingtoneManager: android.net.Uri getActualDefaultRingtoneUri(android.content.Context,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.cardemulation.AppChooserActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.nfc.tech.NfcV: void reconnect()>": [
  "android.permission.NFC"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getKeyguardDisabledFeatures(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: void stopBatchedScan(android.net.wifi.BatchedScanSettings)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.pm.PackageManagerService: long getVerificationTimeout()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowList getWindowListLocked(android.view.Display)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.appwidget.AppWidgetService: void onSwitchUser(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.media.AudioManager: void setBluetoothScoOn(boolean)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: boolean getMasterSyncAutomatically()>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.server.webkit.WebViewUpdateService: void onWebViewUpdateInstalled()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.widget.PointerLocationView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.RI: void nvReadItem(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.IAccountManagerResponse$Stub$Proxy: void onResult(android.os.Bundle)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: java.util.List getChannelList()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void setCdmaSubscription(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void onCleanUpAllConnections(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.backup.LocalTransportService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void onQuitting()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.IAudioService: void startBluetoothScoVirtualCall(android.os.IBinder)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine: boolean access$3400(com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipConnection$1: void onError(android.net.sip.SipAudioCall,int,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.display.DisplayAdapter$2: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setActiveAdmin(android.content.ComponentName,boolean,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IMms$Stub: boolean deleteStoredConversation(java.lang.String,long)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.internal.view.RotationPolicy: void registerRotationPolicyListener(android.content.Context,com.android.internal.view.RotationPolicy$RotationPolicyListener,int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.WallpaperManager: void suggestDesiredDimensions(int,int)>": [
  "android.permission.SET_WALLPAPER_HINTS"
 ], 
 "<com.android.server.twilight.TwilightService$LocationHandler: void requestLocationUpdate()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: int enableSystemAppWithIntent(android.content.ComponentName,android.content.Intent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.EditText: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.RI: void hangupConnection(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.dataconnection.DctController: void onSubInfoReady()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.UUSInfo,int)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.server.wifi.RttService$RttServiceImpl$RttStateMachine$EnabledState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.pm.BackgroundDexOptService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.am.ActivityManagerService: void handleAppDiedLocked(com.android.server.am.ProcessRecord,boolean,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wm.WindowManagerService: void performLayoutAndPlaceSurfacesLockedInner(boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.ActivityChooserModel$DataModelPackageMonitor: void onPackageDisappeared(java.lang.String,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.TelephonyRegistry: void notifyDataConnection(int,boolean,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.NetworkCapabilities,int,boolean)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.String[] getAccountTypesWithManagementDisabledAsUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiAutoJoinController: boolean attemptAutoJoin()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: int handleAnimatingStoppedAndTransitionLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.Invert: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.IUiAutomationConnection: void disconnect()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.content.IContentService: int getIsSyncableAsUser(android.accounts.Account,java.lang.String,int)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.app.IBackupAgent$Stub: void doRestore(android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.ActivityGroup: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.nfc.P2pEventListener: void onP2pNfcTapRequested()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void setPropertiesByCarrier()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.AnalogClock: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.BlendFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cat.CommandParamsFactory: boolean processBIPClient(com.android.internal.telephony.cat.CommandDetails,java.util.List)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: void startArcAction(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmCellBroadcastHandler: java.lang.String toString()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterfw.core.FinalPort: void setFieldFrame(android.filterfw.core.Frame,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.renderscript.RSTextureView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.base.GLTextureSource: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.filterpacks.text.ToUpperCase: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.hardware.location.IGeofenceHardware: boolean resumeGeofence(int,int,int)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.hardware.location.IGeofenceHardware$Stub$Proxy: boolean removeGeofence(int,int)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.widget.ILockSettings: void setLockPassword(java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.GlobalActions: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.ISms: void sendDataForSubscriber(int,java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.ethernet.EthernetServiceImpl: void enforceChangePermission()>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.MccTable: void updateMccMncConfiguration(android.content.Context,java.lang.String,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.internal.telephony.RI: void stopDtmf(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.location.LocationBlacklist: void init()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.content.IContentService$Stub$Proxy: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: boolean handleNewDeviceAtTheTailOfActivePath(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: int getWifiEnabledState()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.widget.ActionBarContextView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: java.util.List getBatchedScanResults(java.lang.String)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.LockSettingsService: void setLockPassword(java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.sip.SipWakeLock: void acquire(java.lang.Object)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.inputmethodservice.InputMethodService: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.IContentService$Stub: void setMasterSyncAutomatically(boolean)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.server.accounts.AccountManagerService: void clearPassword(android.accounts.Account)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.server.net.NetworkStatsService: void removeUidsLocked(int[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.AccountAuthenticatorActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneConnection: void onConnectedInOrOut()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.voiceinteraction.SoundTriggerHelper: void stopAllRecognitions()>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.widget.RadioButton: boolean shouldSpeakPasswordsForAccessibility()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.input.InputManagerService$WindowManagerCallbacks: int interceptMotionBeforeQueueingNonInteractive(long,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: boolean dispatchMessageToAction(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiService: void onStartUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.IActivityManager: void showBootMessage(java.lang.CharSequence,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.dataconnection.DctController: void access$200(com.android.internal.telephony.dataconnection.DctController)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.voice.VoiceInteractionSessionService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.net.NetworkStatsService: void updateIfacesLocked()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.location.ComprehensiveCountryDetector: void stop()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.Phone: com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.statusbar.IStatusBarService$Stub: void collapsePanels()>": [
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.server.location.GeofenceManager: void access$000(com.android.server.location.GeofenceManager)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.app.IntentService: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.tech.NfcBarcode: void connect()>": [
  "android.permission.NFC"
 ], 
 "<android.filterpacks.imageproc.StraightenFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.notification.DowntimeConditionProvider: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.admin.IDevicePolicyManager: void setGlobalSetting(android.content.ComponentName,java.lang.String,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void onDataConnectionAttached()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.ContextWrapper: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.hdmi.RequestArcTerminationAction: void handleTimerEvent(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoController: java.lang.String getIccSerialNumber()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.backup.Trampoline: void restoreAtInstall(java.lang.String,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void setCdmaSubscription(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void setMute(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.InboundSmsHandler: void <init>(java.lang.String,android.content.Context,com.android.internal.telephony.SmsStorageMonitor,com.android.internal.telephony.PhoneBase,com.android.internal.telephony.CellBroadcastHandler)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.textservice.ITextServicesManager: boolean isSpellCheckerEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void nvWriteItem(int,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.ILocationManager$Stub: com.android.internal.location.ProviderProperties getProviderProperties(java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.media.AsyncPlayer: void startSound(android.media.AsyncPlayer$Command)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: void run(android.accounts.AccountManagerFuture)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean setDeviceOwner(java.lang.String,java.lang.String)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.filterfw.core.AsyncRunner$AsyncRunnerTask: void onPostExecute(java.lang.Object)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: boolean switchUser(android.content.ComponentName,android.os.UserHandle)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void beginLayoutLw(boolean,int,int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.commands.pm.Pm: int run(java.lang.String[])>": [
  "android.permission.CLEAR_APP_CACHE", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IIccPhoneBook$Stub: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void initSstIcc()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.ISub: void setDefaultDataSubId(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void onVoiceCallStarted()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void createAllApnList()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.ChooseAccountTypeActivity: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.view.SurfaceView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.wifi.IWifiManager: android.net.wifi.WifiActivityEnergyInfo reportActivityInfo()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.am.ActivityStack: android.graphics.Bitmap screenshotActivities(com.android.server.am.ActivityRecord)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.print.PrinterDiscoverySession: void <init>(android.print.IPrintManager,android.content.Context,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.BlackWhiteFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.text.format.DateFormat: char[] getDateFormatOrder(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.base.NullFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.notification.DowntimeConditionProvider: void onRequestConditions(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cat.RilMessageDecoder$StateCmdParamsReady: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.filterpacks.imageproc.CropRectFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.InputMonitor: long notifyANR(com.android.server.input.InputApplicationHandle,com.android.server.input.InputWindowHandle,java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.WifiController: void <init>(android.content.Context,com.android.server.wifi.WifiServiceImpl,android.os.Looper)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.dreams.DreamManagerService: android.content.ComponentName[] getDreamComponentsForUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager$MyWakeGestureListener: void onWakeUp()>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.RI: void setupDataCall(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.display.DisplayBlanker: void requestDisplayState(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void sendEnvelopeWithStatus(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getSubscriberIdForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void setAutoTimeRequired(android.content.ComponentName,int,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.IWifiManager$Stub: java.util.List getScanResults(java.lang.String)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.wm.WindowManagerService: void reconfigureDisplayLocked(com.android.server.wm.DisplayContent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterfw.core.AsyncRunner: void close()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.backup.BackupAgentHelper: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.base.GLTextureTarget: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void setCdmaSubscription(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accessibility.ScreenMagnifier: boolean access$3000(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.net.NetworkStatsService: void <init>(android.content.Context,android.os.INetworkManagementService,android.app.IAlarmManager)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.hardware.location.IGeofenceHardware$Stub$Proxy: boolean unregisterForMonitorStateChangeCallback(int,android.hardware.location.IGeofenceHardwareMonitorCallback)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.policy.impl.EnableAccessibilityController: boolean canEnableAccessibilityViaGesture(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IIccPhoneBook$Stub: int[] getAdnRecordsSize(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.bluetooth.IBluetoothManager: void unregisterAdapter(android.bluetooth.IBluetoothManagerCallback)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.pm.PackageManagerService: int access$4000(com.android.server.pm.PackageManagerService,java.lang.String,int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.handover.ConfirmConnectActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void iccIO(int,int,java.lang.String,int,int,int,java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.WiredAccessoryManager: void updateLocked(java.lang.String,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterfw.core.FieldPort: void transfer(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void queryFacilityLock(java.lang.String,java.lang.String,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.IAccountManager: void hasFeatures(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String[])>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.gsm.GsmConnection: void processNextPostDialChar()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.print.UserState: void enableSystemPrintServicesLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.ActivityManagerNative: boolean startUserInBackground(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.filterpacks.imageproc.GrainFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.WindowManagerService: void enableScreenAfterBoot()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.wifi.WifiManager: java.util.List getBatchedScanResults()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.accounts.ChooseAccountTypeActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.hardware.location.GeofenceHardwareService: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.os.BaseCommand: void onRun()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.KILL_BACKGROUND_PROCESSES", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.RESTART_PACKAGES", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.filterpacks.imageproc.LomoishFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.InputMethodManagerService: boolean setCurrentInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.bluetooth.IBluetoothManager: boolean disable(boolean)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.nfc.NfcApplication: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.NfcAdapter: void setBeamPushUrisCallback(android.nfc.NfcAdapter$CreateBeamUrisCallback,android.app.Activity)>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask: void initiateOneRestore(android.content.pm.PackageInfo,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean setApplicationHidden(android.content.ComponentName,java.lang.String,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.wallpaper.WallpaperService: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.widget.LockPatternUtils: long getLong(java.lang.String,long,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.DockObserver: void onStartUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.WifiManager: void disableEphemeralNetwork(java.lang.String)>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean processPendingRadioPowerOffAfterDataOff()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ProxyController: void issueFinish(int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.net.NetworkPolicyManagerService: void setRestrictBackground(boolean)>": [
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.LocationManagerService: void applyRequirementsLocked(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.ILocationManager$Stub$Proxy: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_LOCATION_EXTRA_COMMANDS", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void handleSrvccStateChanged(int[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.view.menu.ExpandedMenuView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.BlackWhiteFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.media.AudioService: void onSystemReady()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.BLUETOOTH"
 ], 
 "<android.telephony.TelephonyManager: java.lang.String getLine1AlphaTagForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.wifi.WifiSettingsStore: boolean getPersistedAirplaneModeOn()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccount(android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthTokenLabel(java.lang.String,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.backup.PackageManagerBackupAgent: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.CropFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.print.IPrintManager: void validatePrinters(java.util.List,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin getDeviceOwnerAdmin()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.UsimFileHandler: void loadEFImgLinearFixed(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ContextImpl: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void powerOffRadioSafely(com.android.internal.telephony.dataconnection.DcTrackerBase)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.ContextWrapper: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.wm.WindowAnimator: void animateLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.UiccSmsController: void sendTextForSubscriber(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void access$500(com.android.server.devicepolicy.DevicePolicyManagerService,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.NetworkIdentity: android.net.NetworkIdentity buildNetworkIdentity(android.content.Context,android.net.NetworkState)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: java.lang.String toString()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.power.PowerManagerService: void access$1100(com.android.server.power.PowerManagerService)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.location.ILocationManager$Stub: void reportLocation(android.location.Location,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.view.menu.ActionMenuItemView: boolean access$1200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.handover.ConfirmConnectActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.VibratorService: void vibrate(int,java.lang.String,long,int,android.os.IBinder)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.view.ContextThemeWrapper: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.filterpacks.base.NullFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.content.SyncManager$4: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.IMms$Stub: void setAutoPersisting(java.lang.String,boolean)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.sip.SipWakeLock: void release(java.lang.Object)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.test.SimulatedCommands: void setRadioState(com.android.internal.telephony.CommandsInterface$RadioState)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.TextureView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.wifi.IWifiManager: java.util.List getChannelList()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcController$DccDefaultState: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.hdmi.HdmiControlService: void onStart()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.GridLayout: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.PhoneBase: void notifySignalStrength()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ISms: boolean disableCellBroadcastRange(int,int,int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.view.accessibility.IAccessibilityManager$Stub: void registerUiTestAutomationService(android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.RotateFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityManagerService: void startProcessLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: void startScan(android.net.wifi.ScanSettings,android.os.WorkSource)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.location.FlpHardwareProvider: void <init>(android.content.Context)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: com.android.internal.telephony.dataconnection.DcAsyncChannel checkForCompatibleConnectedApnContext(com.android.internal.telephony.dataconnection.ApnContext)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.location.LocationManager: void clearTestProviderLocation(java.lang.String)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<android.filterpacks.imageproc.BitmapSource: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.base.GLTextureTarget: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.nfc.INfcAdapter$Stub: void invokeBeamInternal(android.nfc.BeamShareData)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.filterpacks.imageproc.SaturateFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.NetInitiatedActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.nfc.cardemulation.CardEmulationManager$CardEmulationInterface: android.nfc.cardemulation.AidGroup getAidGroupForService(int,android.content.ComponentName,java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.SmsStorageMonitor$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.uicc.IsimUiccRecords: void handleFileUpdate(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.RedEyeFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.AudioService: void readAudioSettings(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: int getPasswordMinimumLowerCase(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.server.power.PowerManagerService$2: void onProximityPositive()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.Phone: void setNetworkSelectionModeAutomatic(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.DialerFilter: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.text.format.DateFormat: boolean is24HourFormat(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.pm.PackageManagerService: void loadMediaPackages(android.util.ArrayMap,int[])>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.dataconnection.DctController: void onReleaseRequest(com.android.internal.telephony.dataconnection.DcSwitchAsyncChannel$RequestInfo)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: boolean removeAccountExplicitly(android.accounts.Account)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.server.TelephonyRegistry$2: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.Chronometer: void updateTextServicesLocaleLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.RecognitionService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.wifi.WifiManager: int updateNetwork(android.net.wifi.WifiConfiguration)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.filterpacks.videosink.MediaEncoderFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.notification.ConditionProviders: void disableNonexistentServices(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.IAccountManager: void renameAccount(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void notifyDataConnectionFailed(java.lang.String,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$ErrorState: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.net.wifi.IWifiManager: void reconnect()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void handlePasswordExpirationNotification(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.INfcCardEmulation$Stub$Proxy: boolean unsetPreferredService()>": [
  "android.permission.VIBRATE", 
  "android.permission.NFC"
 ], 
 "<android.app.ContextImpl: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.wifi.IWifiManager: void stopBatchedScan(android.net.wifi.BatchedScanSettings)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getCompleteVoiceMailNumber()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.view.RotationPolicy: boolean isRotationLocked(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.widget.DialogTitle: boolean shouldSpeakPasswordsForAccessibility()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.SubscriptionController: int getDefaultDataSubId()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceCategoryProgramHandler: java.lang.String getLogRecString(android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void notifyCameraLensCoverSwitchChanged(long,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.commands.dpm.Dpm: void run(java.lang.String[])>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.KILL_BACKGROUND_PROCESSES", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.RESTART_PACKAGES", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.PhoneSubInfo: java.lang.String getIsimChallengeResponse(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void setLockTaskPackages(android.content.ComponentName,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.DuotoneFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.NfcService$NfcAdapterService: void setP2pModes(int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.SharpenFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: void initializeMulticastFiltering()>": [
  "android.permission.CHANGE_WIFI_MULTICAST_STATE"
 ], 
 "<com.android.ims.ImsManager: boolean isVolteEnabledByPlatform(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.content.ContentService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.READ_SYNC_STATS", 
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.internal.widget.AbsActionBarView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.ClosedCaptionWidget: void <init>(android.content.Context,android.util.AttributeSet,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.accessibility.IAccessibilityManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.handover.PeripheralHandoverService: boolean doPeripheralHandover(android.os.Bundle)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.nfc.INfcAdapter$Stub: void removeNfcUnlockHandler(android.nfc.INfcUnlockHandler)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry$Stub: void notifyServiceStateForPhoneId(int,int,android.telephony.ServiceState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.app.ChooserActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.net.NetworkPolicyManagerService: void updateRulesForGlobalChangeLocked(boolean)>": [
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.MountServiceIdler: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void startDtmf(char)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneBase: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.notification.ManagedServices$SettingsObserver: void observe()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.ims.ImsEcbm$ImsEcbmListenerProxy: void enteredECBM()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.os.storage.StorageManager: long getStorageFullBytes(java.io.File)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ImsSMSDispatcher: void processSendSmsResponse(com.android.internal.telephony.SMSDispatcher$SmsTracker,int,int)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.am.ActivityManagerService: void updatePersistentConfiguration(android.content.res.Configuration)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wm.WindowManagerService: int getBaseDisplayDensity(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.RI: void getNeighboringCids(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl: android.os.Messenger getP2pStateMachineMessenger()>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.media.AudioManager: void playSoundEffect(int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: boolean isKeyguardSecure()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: boolean checkBootAnimationCompleteLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.wifi.IWifiManager: void releaseMulticastLock()>": [
  "android.permission.CHANGE_WIFI_MULTICAST_STATE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: boolean getAutoTimeRequired()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.telephony.SmsManager: boolean enableCellBroadcast(int,int)>": [
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.accessibilityservice.AccessibilityService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.location.PassiveProvider: void updateLocation(android.location.Location)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.IWifiManager: boolean saveConfiguration()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.speech.SpeechRecognizer: void cancel()>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void dispose()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: boolean isApplicationHidden(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.videosrc.SurfaceTextureTarget: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager: boolean removeUser(android.content.ComponentName,android.os.UserHandle)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.FillLightFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.view.IWindowSession$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.SYSTEM_ALERT_WINDOW", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.telecom.TelecomLoaderService: void onStartUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.preference.SeekBarVolumizer: void onStartSample()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.String[] getLockTaskPackages(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.Ringtone: java.lang.String getTitle(android.content.Context,android.net.Uri,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.BlendFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IccProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DataConnection$DcActiveState: void enter()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: int dispatchNormalMessage(com.android.internal.telephony.SmsMessageBase)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.LocationManagerService$UpdateRecord: void disposeLocked(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.tech.MifareClassic: boolean authenticateSectorWithKeyB(int,byte[])>": [
  "android.permission.NFC"
 ], 
 "<android.app.backup.IRestoreSession$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.hardware.location.IGeofenceHardware$Stub: boolean registerForMonitorStateChangeCallback(int,android.hardware.location.IGeofenceHardwareMonitorCallback)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.widget.WeightedLinearLayout: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.opengl.GLSurfaceView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wm.WindowManagerService: void showEmulatorDisplayOverlay()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.IMms: boolean deleteStoredMessage(java.lang.String,android.net.Uri)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.internal.util.AsyncService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.ims.ImsCall$Listener: void onCallHoldFailed(com.android.ims.ImsCall,com.android.ims.ImsReasonInfo)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevicePlayback: com.android.server.hdmi.HdmiCecLocalDevice create(com.android.server.hdmi.HdmiControlService,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GsmSMSDispatcher: void access$100(com.android.internal.telephony.SMSDispatcher,com.android.internal.telephony.SMSDispatcher$SmsTracker,int,int)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.internal.widget.multiwaveview.GlowPadView: void handleDown(android.view.MotionEvent)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.telephony.SmsManager: android.net.Uri addTextMessageDraft(java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.view.WindowManagerPolicy: void notifyLidSwitchChanged(long,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void handleScreenStateChanged(boolean,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmConnection: boolean update(com.android.internal.telephony.DriverCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityStackSupervisor: boolean shutdownLocked(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.view.IWindowSession$Stub$Proxy: int addToDisplayWithoutInputChannel(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.SYSTEM_ALERT_WINDOW", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.ListActivity: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.InputMethodManagerService$7: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.SubscriptionController: void setDefaultVoiceSubId(int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.sip.SipAudioCall: boolean isWifiOn()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.content.IContentService$Stub$Proxy: boolean getMasterSyncAutomatically()>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.media.effect.EffectContext: void release()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager: void addPersistentPreferredActivity(android.content.ComponentName,android.content.IntentFilter,android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getMsisdn()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: void doManualPortSwitching(int,android.hardware.hdmi.IHdmiControlCallback)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void invokeOemRilRequestStrings(java.lang.String[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.provider.ContactsContract$Contacts: android.net.Uri getLookupUri(android.content.ContentResolver,android.net.Uri)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.UiccSmsController: java.lang.String getImsSmsFormat()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.IAccountManager$Stub: void getAccountsByFeatures(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[])>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.content.IContentService$Stub: void setIsSyncable(android.accounts.Account,java.lang.String,int)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.server.InputMethodManagerService$SettingsObserver: void onChange(boolean,android.net.Uri)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.UUSInfo,int)>": [
  "android.permission.USE_SIP"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: boolean addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void nvWriteItem(int,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.HdmiControlService: void initializeCec(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.ClosedCaptionWidget$CCLayout: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.performance.ThroughputFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.speech.tts.TextToSpeech: java.lang.String getDefaultEngine()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.ColorTemperatureFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean isUninstallBlocked(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.RI: void invokeOemRilRequestStrings(java.lang.String[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.dataconnection.DataConnection: android.net.NetworkCapabilities access$2600(com.android.internal.telephony.dataconnection.DataConnection)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.TtmlRenderer: android.media.SubtitleTrack createTrack(android.media.MediaFormat)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.pm.PackageManagerService$MeasureParams: boolean startCopy()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GsmMmiCode: void sendUssd(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.WakeLockStateMachine$IdleState: boolean processMessage(android.os.Message)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaSMSDispatcher: boolean denyIfQueueLimitReached(com.android.internal.telephony.SMSDispatcher$SmsTracker)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.media.MediaSessionService$SessionManagerImpl$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.WindowManagerService: void setCurrentUser(int,int[])>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.bluetooth.IBluetoothManager: void registerStateChangeCallback(android.bluetooth.IBluetoothStateChangeCallback)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.media.ClosedCaptionWidget$CCLayout: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.ContentResolver: int getIsSyncableAsUser(android.accounts.Account,java.lang.String,int)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.app.backup.IRestoreSession$Stub$Proxy: int getAvailableRestoreSets(android.app.backup.IRestoreObserver)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.LocationManager: void removeAllGeofences(android.app.PendingIntent)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.LocationManagerService: void requestLocationUpdatesLocked(android.location.LocationRequest,com.android.server.LocationManagerService$Receiver,int,int,java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager$6: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setGlobalSetting(android.content.ComponentName,java.lang.String,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.handover.ConfirmConnectActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.filterpacks.text.ToUpperCase: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getNaiForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.net.NetworkStatsService$NetworkStatsSettings: long getXtPersistBytes(long)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.tts.TextToSpeech$Connection: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String,boolean,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.telephony.TelephonyManager: java.lang.String getImei(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.speech.RecognitionService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void onSetDependencyMet(java.lang.String,boolean)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DctController: void onExecuteRequest(com.android.internal.telephony.dataconnection.DcSwitchAsyncChannel$RequestInfo)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.IAccountManager: void removeAccount(android.accounts.IAccountManagerResponse,android.accounts.Account,boolean)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.uicc.AdnRecordLoader: void loadFromEF(int,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IccPhoneBookInterfaceManager: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.InboundSmsHandler$DefaultState: boolean processMessage(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.ILocationManager: void clearTestProviderStatus(java.lang.String)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<android.content.pm.LauncherApps: void startMainActivity(android.content.ComponentName,android.os.UserHandle,android.graphics.Rect,android.os.Bundle)>": [
  "android.permission.INTERNET"
 ], 
 "<android.nfc.NfcActivityManager: void setOnNdefPushCompleteCallback(android.app.Activity,android.nfc.NfcAdapter$OnNdefPushCompleteCallback)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.RI: void sendScreenState(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.ActivityChooserView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.InboundSmsHandler$StartupState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.webkit.WebViewUpdateService: void onStartUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.NfcService$NfcAdapterService: boolean enable()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.SIMRecords: void handleSimRefresh(com.android.internal.telephony.uicc.IccRefreshResponse)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.LockPatternUtils: boolean getPowerButtonInstantlyLocks()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.LocationManagerService$Receiver: boolean callStatusChangedLocked(java.lang.String,int,android.os.Bundle)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine: void access$7100(com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void updatePasswordExpirationsLocked(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.RI: void setDataAllowed(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.accessibility.IAccessibilityManager: void registerUiTestAutomationService(android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void updateServiceLocation()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: void addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.server.wm.WindowManagerService: void resizeStack(int,android.graphics.Rect)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager$4: void run()>": [
  "android.permission.VIBRATE", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.SEND_SMS", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.BlackWhiteFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.restrictions.RestrictionsManagerService: void onBootPhase(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: boolean releaseWifiLock(android.os.IBinder)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.Vibrator: void cancel()>": [
  "android.permission.VIBRATE"
 ], 
 "<android.widget.Switch: boolean performLongClick()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.UiccPhoneBookController: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ISms: java.util.List getAllMessagesFromIccEfForSubscriber(int,java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.internal.telephony.RI: void dial(java.lang.String,int,com.android.internal.telephony.UUSInfo,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.speech.tts.TextToSpeechService: void onCreate()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.inputmethodservice.ExtractEditLayout: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void stopDhcp()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.LocationManagerService: void setTestProviderEnabled(java.lang.String,boolean)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.server.notification.ZenModeHelper: void readZenModeFromSetting()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.cardemulation.AppChooserActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.base.FrameFetch: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.telephony.TelephonyManager: int getDefaultPhone()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GsmInboundSmsHandler: boolean processMessagePart(com.android.internal.telephony.InboundSmsTracker)>": [
  "android.permission.RECEIVE_WAP_PUSH", 
  "android.permission.WRITE_SMS", 
  "android.permission.RECEIVE_MMS", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.uicc.RuimFileHandler: void loadEFImgLinearFixed(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.MultiAutoCompleteTextView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CallManager: void hangupForegroundResumeBackground(com.android.internal.telephony.Call)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyServiceStateForPhoneId(int,int,android.telephony.ServiceState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.location.GpsLocationProvider: void handleUpdateNetworkState(int,android.net.NetworkInfo)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.FlipFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: void deviceSelect(int,android.hardware.hdmi.IHdmiControlCallback)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<java.net.MulticastSocket: void <init>(int)>": [
  "android.permission.INTERNET"
 ], 
 "<android.speech.IRecognitionService$Stub: void stopListening(android.speech.IRecognitionListener)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1: void onSomePackagesChanged()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.widget.EditText: void updateTextServicesLocaleLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.widget.LockPatternUtils: long getLockoutAttemptDeadline()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.notification.NotificationManagerService$SettingsObserver: void observe()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IccPhoneBookInterfaceManager: int[] getAdnRecordsSize(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothSocket createInsecureRfcommSocketToServiceRecord(java.util.UUID)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.os.IVibratorService: void vibrate(int,java.lang.String,long,int,android.os.IBinder)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void explicitCallTransfer()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.InputMethodManagerService: void access$200(com.android.server.InputMethodManagerService,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.DocumentaryFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.SettingInjectorService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void enableEnhancedVoicePrivacy(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.SMSDispatcher: void sendMultipartSms(com.android.internal.telephony.SMSDispatcher$SmsTracker)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<android.widget.YearPickerView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.content.SyncManager: void access$1100(com.android.server.content.SyncManager)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.cardemulation.AppChooserActivity: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: int getKeyguardDisabledFeatures(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.AudioService: void readDockAudioSettings(android.content.ContentResolver)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ISms$Stub$Proxy: java.util.List getAllMessagesFromIccEfForSubscriber(int,java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.server.hdmi.RequestArcAction: void handleTimerEvent(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.EditText: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.Phone: void setBandMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.ConsumerIrService: int[] getCarrierFrequencies()>": [
  "android.permission.TRANSMIT_IR"
 ], 
 "<android.gesture.GestureOverlayView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.location.LocationManager: void requestLocationUpdates(long,float,android.location.Criteria,android.location.LocationListener,android.os.Looper)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.updates.IntentFirewallInstallReceiver: java.security.cert.X509Certificate getCert(android.content.ContentResolver)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.TintFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ActivityManagerNative: void bootAnimationComplete()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.cardemulation.OffHostApduService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.server.am.ActivityManagerService: void startProcessLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.handover.PeripheralHandoverService: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void phoneObjectUpdater(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.telephony.SubscriptionManager: void setDefaultVoiceSubId(int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.power.PowerManagerService: void handleWakeLockDeath(com.android.server.power.PowerManagerService$WakeLock)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void getCallWaiting(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.P2pEventListener: void onP2pReceiveComplete(boolean)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.widget.TableRow: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.TimePicker: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.nfc.tech.NfcBarcode: byte[] transceive(byte[],boolean)>": [
  "android.permission.NFC"
 ], 
 "<android.widget.RemoteViewsAdapter$RemoteViewsFrameLayout: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.base.OutputStreamTarget: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.content.SyncManager: void doDatabaseCleanup()>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.filterpacks.videosink.MediaEncoderFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.BluetoothManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.google.android.mms.util.AbstractCache: boolean put(java.lang.Object,java.lang.Object)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.accounts.AccountManager$6: android.accounts.AccountManagerFuture start()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.server.wm.WindowManagerService: void performLayoutAndPlaceSurfacesLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: long getMaximumTimeToLock(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DctController: void processRequests()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.ResizeFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.IWindowSession$Stub: boolean performDrag(android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.wifi.WifiManager: boolean setWifiEnabled(boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: void startLocationRestrictedScan(android.os.WorkSource)>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.print.IPrintManager$Stub$Proxy: void createPrinterDiscoverySession(android.print.IPrinterDiscoveryObserver,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.IccRecords: void onRecordLoaded()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.ActivityManagerService$29: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.WifiController: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.test.InstrumentationTestRunner: void onStart()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.content.SyncManager: void onUserRemoved(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.RI: void setCellInfoListRate(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoController: java.lang.String getVoiceMailNumberForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.ProxyController: void unregisterForAllDataDisconnected(int,android.os.Handler)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiScanningService: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.location.LocationManager: void removeProximityAlert(android.app.PendingIntent)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.filterpacks.videosink.MediaEncoderFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.MediaPlayer: void addTimedTextSource(android.content.Context,android.net.Uri,java.lang.String)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.SearchView$SearchAutoComplete: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.IWifiManager$Stub: int getFrequencyBand()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.hardware.location.GeofenceHardware: boolean resumeGeofence(int,int,int)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.CallForwardInfo[] handleCfQueryResult(com.android.ims.ImsCallForwardInfo[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.RequestArcTerminationAction: void addAndStartAction(com.android.server.hdmi.HdmiCecFeatureAction)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.RestrictionsPinActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.filterpacks.base.FrameBranch: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.WindowManagerService: void updateTokenInPlaceLocked(com.android.server.wm.AppWindowToken,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.BitmapOverlayFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void setTTYMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: boolean getMasterSyncAutomaticallyAsUser(int)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.server.hdmi.HdmiControlService: void registerContentObserver()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.videosrc.CameraSource: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: boolean processPendingRadioPowerOffAfterDataOff()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void loadSettingsLocked(com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.IWallpaperManager$Stub$Proxy: void setDimensionHints(int,int)>": [
  "android.permission.SET_WALLPAPER_HINTS"
 ], 
 "<com.android.server.TextServicesManagerService: void finishSpellCheckerService(com.android.internal.textservice.ISpellCheckerSessionListener)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List getEnabledInputMethodListLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<java.net.NetworkInterface: void <init>(int)>": [
  "android.permission.INTERNET"
 ], 
 "<android.net.wifi.IWifiManager: android.net.wifi.WifiConfiguration getWifiApConfiguration()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.uicc.IsimFileHandler: void loadEFImgLinearFixed(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.DownloadManager: long enqueue(android.app.DownloadManager$Request)>": [
  "android.permission.INTERNET"
 ], 
 "<android.nfc.INfcCardEmulation$Stub$Proxy: boolean isDefaultServiceForAid(int,android.content.ComponentName,java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<com.android.server.BluetoothManagerService: boolean isBluetoothPersistedStateOnBluetooth()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.ActivityManagerService: boolean makeAppCrashingLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.provider.Settings$Global: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.ToggleButton: void updateTextServicesLocaleLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.MmsServiceBroker: void onStartUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.power.PowerManagerService: void access$5000(com.android.server.power.PowerManagerService,long,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.accessibility.ScreenMagnifier: void handleOnUserContextChanged()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean packageHasActiveAdmins(java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.trust.TrustManagerService$3: void onSomePackagesChanged()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiServiceImpl$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.IsimUiccRecords: java.lang.String getIccSimChallengeResponse(int,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.BitmapOverlayFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.textservice.ITextServicesManager: android.view.textservice.SpellCheckerSubtype getCurrentSpellCheckerSubtype(java.lang.String,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.notification.NotificationListenerService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.IActivityManager: void bootAnimationComplete()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.KeyguardManager: void exitKeyguardSecurely(android.app.KeyguardManager$OnKeyguardExitResult)>": [
  "android.permission.DISABLE_KEYGUARD"
 ], 
 "<com.android.server.job.JobServiceContext$JobServiceHandler: void handleOpTimeoutH()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityManagerService: void makeAppNotRespondingLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.handover.HandoverDataParser: com.android.nfc.handover.HandoverDataParser$IncomingHandoverData getIncomingHandoverData(android.nfc.NdefMessage)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.wm.WindowManagerService: void assignLayersLocked(com.android.server.wm.WindowList)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.WifiWatchdogStateMachine: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.print.UserState: boolean readEnabledPrintServicesLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.HdmiControlService: boolean dispatchMessageToLocalDevice(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.Ringtone: boolean playFallbackRingtone()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.notification.NotificationManagerService$NotificationListeners: void disableNonexistentServices(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.bluetooth.BluetoothA2dp: void <init>(android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.widget.multiwaveview.GlowPadView$1: void onAnimationEnd(android.animation.Animator)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: void changeSystemAudioMode(boolean,android.hardware.hdmi.IHdmiControlCallback)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.AudioService: void resetBluetoothSco()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.BLUETOOTH"
 ], 
 "<android.net.sip.SipManager: void open(android.net.sip.SipProfile)>": [
  "android.permission.USE_SIP"
 ], 
 "<android.webkit.WebViewFactory: void createRelroFile(boolean,java.lang.String[])>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.app.ExternalMediaFormatActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void setUiTTYMode(int,android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.power.PowerManagerService: void releaseWakeLockInternal(android.os.IBinder,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.backup.BackupManagerService$PerformInitializeTask: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ISms: boolean disableCellBroadcastRangeForSubscriber(int,int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.server.dreams.DreamManagerService$LocalService: void startDream(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.INfcCardEmulation$Stub$Proxy: boolean setPreferredService(android.content.ComponentName)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void collapsePanels()>": [
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<android.filterpacks.imageproc.VignetteFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.bluetooth.BluetoothHeadsetClient: void close()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.widget.TabHost: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityWindowInfo getWindow(int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.provider.Settings$Secure: long getLong(android.content.ContentResolver,java.lang.String,long)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.IAudioService: void setBluetoothScoOn(boolean)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.server.sip.SipService: void stopPortMappingMeasurement()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry: void notifySignalStrength(android.telephony.SignalStrength)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getScreenCaptureDisabled(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.backup.BackupManagerService$Lifecycle: void onBootPhase(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.FlipFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.voiceinteraction.VoiceInteractionManagerService: void onStartUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.base.FrameFetch: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.ISms$Stub$Proxy: java.util.List getAllMessagesFromIccEf(java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.app.admin.IDevicePolicyManager: android.content.ComponentName getGlobalProxyAdmin(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.ActivityStackSupervisor: void moveTaskToStackLocked(int,int,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.DISABLE_KEYGUARD", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void handleCallSetupRequestFromSim(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.effect.effects.LomoishEffect: void release()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void sendDtmf(char,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void getSignalStrength(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ISms: void sendTextForSubscriber(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.internal.backup.LocalTransportService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceCategoryProgramHandler$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.SimpleMonthView: void drawMonthTitle(android.graphics.Canvas)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.dreams.DreamManagerService: void finishSelfInternal(android.os.IBinder,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.LockPatternUtils: boolean isBiometricWeakEverChosen()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: int getRecoveryAction()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.google.android.mms.pdu.PduPersister: android.database.Cursor getPendingMessages(long)>": [
  "android.permission.READ_SMS"
 ], 
 "<android.location.LocationManager: void removeGeofence(android.location.Geofence,android.app.PendingIntent)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.widget.ActivityChooserModel$DataModelPackageMonitor: void onPackageRemoved(java.lang.String,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.IWindowManager$Stub$Proxy: boolean isRotationFrozen()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.notification.ManagedServices$SettingsObserver: void update(android.net.Uri)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.SMSDispatcher: void processSendSmsResponse(com.android.internal.telephony.SMSDispatcher$SmsTracker,int,int)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<android.os.storage.StorageManager: long getStorageBytesUntilLow(java.io.File)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<java.net.Socket: void <init>(int)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.telephony.RI: void supplyIccPinForApp(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void rejectCall()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.LockSettingsService: boolean getBoolean(java.lang.String,boolean,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.OneTouchPlayAction: void addAndStartAction(com.android.server.hdmi.HdmiCecFeatureAction)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.backup.FullBackupAgent: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.textservice.ITextServicesManager: android.view.textservice.SpellCheckerInfo[] getEnabledSpellCheckers()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.backup.BackupManagerService$BackupRestoreTask: void execute()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.ContextImpl: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.am.ActivityManagerService: void appDiedLocked(com.android.server.am.ProcessRecord,int,android.app.IApplicationThread)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.PosterizeFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.widget.WeightedLinearLayout: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.DhcpStateMachine: java.lang.String toString()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.IWifiManager: int getAggressiveHandover()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.view.IWindowManager$Stub$Proxy: boolean inputMethodClientHasFocus(com.android.internal.view.IInputMethodClient)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.am.ActivityManagerService: void moveTaskToBack(int)>": [
  "android.permission.REORDER_TASKS"
 ], 
 "<com.android.internal.telephony.RI: void iccTransmitApduHelper(int,int,int,int,int,int,int,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.NullVibrator: void vibrate(long,android.media.AudioAttributes)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneFactory: com.android.internal.telephony.imsphone.ImsPhone makePhone(android.content.Context,com.android.internal.telephony.PhoneNotifier,com.android.internal.telephony.Phone)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.content.SyncManager: void sendSyncAlarmMessage()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.nfc.NfcActivityManager: void requestNfcServiceCallback()>": [
  "android.permission.NFC"
 ], 
 "<android.app.Application: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.accounts.AccountManagerService: void setPassword(android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.IccPhoneBookInterfaceManager: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.base.InputStreamSource: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.ContextWrapper: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getVoiceRadioTechnology(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.IApplicationToken$Stub$Proxy: void windowsVisible()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.sip.ISipService: android.net.sip.ISipSession createSession(android.net.sip.SipProfile,android.net.sip.ISipSessionListener)>": [
  "android.permission.USE_SIP"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setCrossProfileCallerIdDisabled(android.content.ComponentName,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.effect.effects.CropEffect: void release()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.server.ethernet.EthernetService: void onSwitchUser(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.app.ActivityManagerNative: boolean bindBackupAgent(android.content.pm.ApplicationInfo,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: void setAllowScansWithTraffic(int)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.content.pm.IPackageManager$Stub: void performBootDexOpt()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.pm.IPackageManager$Stub$Proxy: void getPackageSizeInfo(java.lang.String,int,android.content.pm.IPackageStatsObserver)>": [
  "android.permission.GET_PACKAGE_SIZE"
 ], 
 "<com.android.server.content.SyncManager$2: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.view.View$AttachInfo$Callbacks: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiStateMachine$DriverStartedState: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.tts.TextToSpeechService$SynthesisToFileOutputStreamSpeechItemV1: void <init>(android.speech.tts.TextToSpeechService,java.lang.Object,int,int,android.os.Bundle,java.lang.String,java.lang.CharSequence)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void restoreSavedNetworkSelection(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void getCDMASubscription(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getAvailableNetworks(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.commands.uiautomator.Launcher$Command: void run(java.lang.String[])>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.beam.BeamTransferManager: void sendBluetoothCancelIntentAndUpdateState()>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.app.admin.IDevicePolicyManager: void setCrossProfileCallerIdDisabled(android.content.ComponentName,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.effect.FilterGraphEffect: void release()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.ContentResolver: java.util.List getCurrentSyncs()>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.internal.app.HeavyWeightSwitcherActivity: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.ToRGBFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.app.backup.IRestoreSession$Stub: int getAvailableRestoreSets(android.app.backup.IRestoreObserver)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.search.SearchManagerService$MyPackageMonitor: void onPackageRemoved(java.lang.String,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.ContentResolver: void requestSyncAsUser(android.accounts.Account,java.lang.String,int,android.os.Bundle)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.nfc.NfcService$NfcAdapterService: boolean enableNdefPush()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.provider.Browser: android.database.Cursor getAllBookmarks(android.content.ContentResolver)>": [
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.server.LocationManagerService: int access$600(com.android.server.LocationManagerService,int,int)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void setMaximumTimeToLock(android.content.ComponentName,long,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.SepiaFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.SubscriptionController: android.telephony.SubscriptionInfo getActiveSubscriptionInfoForIccId(java.lang.String)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.accounts.AccountManager$AmsTask$Response: void onResult(android.os.Bundle)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$FrequencyConflictState: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.ContrastFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.backup.BackupManagerService: void handleTimeout(int,java.lang.Object)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.CropFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean processPostDialChar(char)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.backup.LocalTransportService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getSubscriberIdForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.filterpacks.imageproc.DocumentaryFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityManagerService: boolean forceStopPackageLocked(java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void onDisconnectDcRetrying(int,android.os.AsyncResult)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: android.net.DhcpInfo getDhcpInfo()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.wm.DragState: void unregister()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void requestShutdown()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.test.SimulatedCommands: void getRadioCapability(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.beam.BeamSendService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void setScreenCaptureDisabled(android.content.ComponentName,int,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.util.NtpTrustedTime: android.util.NtpTrustedTime getInstance(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.content.SyncManager$ActiveSyncContext: void onServiceDisconnected(android.content.ComponentName)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: boolean hasGrantedPolicy(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager: int getPasswordMinimumLowerCase(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void setLockTaskPackages(android.content.ComponentName,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.IWifiManager: boolean isMulticastEnabled()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.nfc.INfcCardEmulation$Stub$Proxy: android.nfc.cardemulation.AidGroup getAidGroupForService(int,android.content.ComponentName,java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void setNetworkSelectionModeAutomatic(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.WakeGestureListener$2: void run()>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void setPasswordMinimumUpperCase(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.tts.ITextToSpeechService$Stub$Proxy: int synthesizeToFileDescriptor(android.os.IBinder,java.lang.CharSequence,android.os.ParcelFileDescriptor,android.os.Bundle,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getMsisdnForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.provider.Browser: void truncateHistory(android.content.ContentResolver)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.nfc.NfcService$NfcAdapterService: void removeNfcUnlockHandler(android.nfc.INfcUnlockHandler)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setFacilityLock(java.lang.String,boolean,java.lang.String,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.print.IPrintManager: android.os.Bundle print(java.lang.String,android.print.IPrintDocumentAdapter,android.print.PrintAttributes,java.lang.String,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.DISABLE_KEYGUARD", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.AccountManager$7: void doWork()>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: com.android.internal.telephony.dataconnection.ApnSetting fetchDunApn()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipConnection$1: void onError(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.WindowManagerPolicy: void wakingUp()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.provider.ContactsContract$Groups$EntityIteratorImpl: java.lang.Object next()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.server.BatteryService: void processValuesLocked(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.base.GLTextureSource: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.pm.IPackageManager$Stub$Proxy: void systemReady()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.MountServiceIdler: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.INfcTag$Stub: boolean isNdef(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.app.PlatLogoActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.hdmi.HdmiControlService: void initializeLocalDevices(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.WebVttRenderingWidget: void onLayout(boolean,int,int,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.WifiManager: boolean startScan(android.os.WorkSource)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.filterpacks.imageproc.CropRectFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.IWifiManager$Stub: java.lang.String getConfigFile()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.ISub$Stub$Proxy: android.telephony.SubscriptionInfo getActiveSubscriptionInfo(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.filterpacks.imageproc.FlipFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.base.ObjectSource: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void explicitCallTransfer(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingInsecureRfcommWithServiceRecord(java.lang.String,java.util.UUID)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.inputmethodservice.AbstractInputMethodService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.os.SystemVibrator: void vibrate(long)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.notification.CountdownConditionProvider: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void nvWriteItem(int,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.ChooseTypeAndAccountActivity: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wm.WindowManagerService$DragInputEventReceiver: void onInputEvent(android.view.InputEvent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: void separate(com.android.internal.telephony.gsm.GsmConnection)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void updatePhoneObject(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: java.util.List privatizeCellInfoList(java.util.List)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.notification.CountdownConditionProvider: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.PhoneBase: void handleSrvccStateChanged(int[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.notification.NotificationManagerService: void listenForCallState()>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.widget.DateTimeView$ReceiverInfo: void register(android.content.Context)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker$1: void onChange(boolean)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.AccountManager: android.accounts.AccountManagerFuture editProperties(java.lang.String,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<android.hardware.location.GeofenceHardwareService$1: boolean pauseGeofence(int,int)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.nfc.ConfirmConnectToWifiNetworkActivity$3: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.telephony.PhoneNumberUtils: boolean isVoiceMailNumber(int,java.lang.String)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.ISub$Stub: int getSimStateForSubscriber(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void onSetInternalDataEnabled(boolean,android.os.Message)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.MultiAutoCompleteTextView: void updateTextServicesLocaleLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.INfcTag: int close(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<com.android.server.webkit.WebViewUpdateService: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.ims.ImsEcbm$ImsEcbmListenerProxy: void exitedECBM()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void queryTTYMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.TintFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.notification.CountdownConditionProvider: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String,boolean,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: int getIsSyncableAsUser(android.accounts.Account,java.lang.String,int)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.widget.TableRow: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.dataconnection.DataConnection: void access$1200(com.android.internal.telephony.dataconnection.DataConnection)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.NfcService$NfcAdapterService: void invokeBeam()>": [
  "android.permission.VIBRATE", 
  "android.permission.NFC"
 ], 
 "<android.telephony.SubscriptionManager: int getDefaultSmsPhoneId()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.tech.MifareClassic: byte[] readBlock(int)>": [
  "android.permission.NFC"
 ], 
 "<android.widget.GridView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.IntentService: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.nfc.cardemulation.RegisteredAidCache: void generateAidCacheLocked()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.nfc.handover.BluetoothPeripheralHandover: void nextStepConnect()>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.accounts.AccountManagerService: void checkManageAccountsOrUseCredentialsPermissions()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<android.os.NullVibrator: void vibrate(long)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: boolean setOperatorBrandOverride(java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.filterpacks.base.FrameFetch: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void iccCloseLogicalChannel(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accounts.AccountManagerService$TestFeaturesSession: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: void setCurrentSpellCheckerSubtype(java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.inputmethodservice.AbstractInputMethodService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: android.util.Pair getLastInputMethodAndSubtypeLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.base.FrameSource: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.filterpacks.imageproc.DuotoneFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.BluetoothManagerService: boolean isAirplaneModeOn()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityWindowInfo getWindow()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.accounts.ChooseAccountTypeActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.am.ActivityManagerService: void trimApplications()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.view.WindowManagerImpl: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.SYSTEM_ALERT_WINDOW", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager: boolean enableGsmBroadcastRange(int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.accounts.AccountManager: android.accounts.AccountManagerFuture addAccount(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.server.trust.TrustManagerService: void access$1600(com.android.server.trust.TrustManagerService,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void deleteFromRawTable(java.lang.String,java.lang.String[])>": [
  "android.permission.WRITE_SMS"
 ], 
 "<android.app.TabActivity: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void sendSMS(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.InputMethodManagerService: void resetAllInternalStateLocked(boolean,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.trust.TrustAgentWrapper: boolean updateDevicePolicyFeatures()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.Invert: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setMasterVolumeMuted(android.content.ComponentName,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.AbsListView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.statusbar.IStatusBarService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.server.am.ActivityStack: void moveTaskToFrontLocked(com.android.server.am.TaskRecord,com.android.server.am.ActivityRecord,android.os.Bundle,java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoController: java.lang.String getLine1NumberForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.widget.ZoomButtonsController$Container: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isActivePasswordSufficient(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.InputMethodManagerService$MyPackageMonitor: void onPackageDisappeared(java.lang.String,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.SharpenFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.base.GLTextureSource: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void setFrequencyBand()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.AutoCompleteTextView: boolean shouldSpeakPasswordsForAccessibility()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.RttService$RttServiceImpl$RttStateMachine: java.lang.String toString()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.AudioService: boolean getBluetoothHeadset()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: void onDoubleTap(android.view.MotionEvent,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.text.StringSource: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: int addTrackerToRawTableAndSendMessage(com.android.internal.telephony.InboundSmsTracker)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.bluetooth.BluetoothServerSocket: void <init>(int,boolean,boolean,int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: void pollBatchedScan()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoController: java.lang.String getIsimIst()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.location.GpsLocationProvider: void requestUtcTime()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.PosterizeFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.NetworkScorerAppManager: android.net.NetworkScorerAppManager$NetworkScorerAppData getActiveScorer(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.text.StringSource: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: boolean handlePinMmi(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.updates.ConfigUpdateInstallReceiver: java.security.cert.X509Certificate access$000(com.android.server.updates.ConfigUpdateInstallReceiver,android.content.ContentResolver)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.preference.PreferenceActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.storage.DeviceStorageMonitorService: void sendNotification()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.service.trust.TrustAgentService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.WallpaperManager: void setDisplayPadding(android.graphics.Rect)>": [
  "android.permission.SET_WALLPAPER_HINTS"
 ], 
 "<com.android.server.hdmi.ActiveSourceHandler: void process(com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void getDataRegistrationState(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ISms: void sendMultipartText(java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>": [
  "android.permission.SEND_SMS", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SMS"
 ], 
 "<android.filterpacks.imageproc.DrawOverlayFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.widget.Button: boolean performLongClick()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void init(android.content.Context,android.view.IWindowManager,android.view.WindowManagerPolicy$WindowManagerFuncs)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.numeric.SinWaveFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.SMSDispatcher$SettingsObserver: void onChange(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.notification.ManagedServices$SettingsObserver: void <init>(com.android.server.notification.ManagedServices,android.os.Handler)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: void startRoutingControl(int,int,boolean,android.hardware.hdmi.IHdmiControlCallback)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.SupplicantStateTracker$UninitializedState: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.RECEIVE_WAP_PUSH", 
  "android.permission.WRITE_SMS", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.RECEIVE_MMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.READ_SMS"
 ], 
 "<android.filterpacks.imageproc.FixedRotationFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.RotateFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.sip.SipService$MyExecutor: void executeInternal(java.lang.Runnable)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.AsyncPlayer: void stop()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.am.ActivityStack: void removeTask(com.android.server.am.TaskRecord,java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.DISABLE_KEYGUARD", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.bluetooth.IBluetoothManager$Stub: void unregisterStateChangeCallback(android.bluetooth.IBluetoothStateChangeCallback)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.net.wifi.IWifiManager$Stub: int getWifiEnabledState()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.VibratorService$Vibration: void binderDied()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void listen(java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.location.GpsLocationProvider: void access$200(com.android.server.location.GpsLocationProvider,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.SubscriptionController: int getSubIdUsingPhoneId(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GsmMmiCode: void processCode()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.notification.ManagedServices: void onBootPhaseAppsCanStart()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.location.LocationManager: void requestLocationUpdates(android.location.LocationRequest,android.app.PendingIntent)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.filterpacks.base.FrameStore: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiWatchdogStateMachine$LinkMonitoringState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: java.util.List getAllCellInfo()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.inputmethodservice.AbstractInputMethodService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.uicc.RuimRecords: void onRefresh(boolean,int[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.IPowerManager$Stub: void updateWakeLockWorkSource(android.os.IBinder,android.os.WorkSource,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IMms$Stub$Proxy: android.net.Uri addTextMessageDraft(java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.trust.TrustManagerService: void resetAgent(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.view.menu.ExpandedMenuView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: boolean getSyncAutomaticallyAsUser(android.accounts.Account,java.lang.String,int)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.BlendFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: android.os.Bundle getApplicationRestrictions(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean update(com.android.ims.ImsCall,com.android.internal.telephony.Call$State)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.MmsServiceBroker$BinderService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.READ_SMS", 
  "android.permission.WRITE_SMS", 
  "android.permission.RECEIVE_MMS"
 ], 
 "<android.app.admin.IDevicePolicyManager: int getPasswordMinimumLength(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.IccCardProxy: void supplyPuk(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CellBroadcastHandler: void onQuitting()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.notification.ValidateNotificationPeople$PeopleRankingReconsideration: void work()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.PhoneNotifier: void notifySignalStrength(com.android.internal.telephony.Phone)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.backup.BackupAgent$BackupServiceBinder: void doFullBackup(android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.admin.IDevicePolicyManager: java.util.List getActiveAdmins(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.SystemServer: void run()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.CLEAR_APP_CACHE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.ISub: void clearDefaultsForInactiveSubIds()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean setProfileOwner(android.content.ComponentName,java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.content.ContentService: boolean isSyncPending(android.accounts.Account,java.lang.String,android.content.ComponentName)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<android.filterpacks.base.InputStreamSource: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void getPreferredNetworkType(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.ContextThemeWrapper: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.view.WindowManagerInternal: void setMagnificationCallbacks(android.view.WindowManagerInternal$MagnificationCallbacks)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.BlendFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.nfc.BeamShareActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.accounts.AccountManagerService$4: void run()>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.widget.TextView: boolean shouldSpeakPasswordsForAccessibility()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.location.GpsLocationProvider: void xtraDownloadRequest()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void sendConnectedState()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: boolean getCrossProfileCallerIdDisabled(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.SystemServiceManager: com.android.server.SystemService startService(java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.CLEAR_APP_CACHE", 
  "android.permission.READ_PROFILE", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService: void access$3300(com.android.server.accessibility.AccessibilityManagerService)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.Editor$HandleView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccountAsUser(android.accounts.Account,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.server.content.ContentService: void removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void saveCdmaSubscriptionSource(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void enableLocationUpdates()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.VideoView: void access$2100(android.widget.VideoView)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.print.PrintManagerService$PrintManagerImpl: void restartPrintJob(android.print.PrintJobId,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.cardemulation.TapAgainDialog: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.ToRGBAFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.IContentService$Stub: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String,android.content.ComponentName)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void setCellInfoListRate(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void setBandMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.BitmapOverlayFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.P2pLinkManager$SendTask: java.lang.Void doInBackground(java.lang.Void[])>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.media.MediaSessionService$SessionManagerImpl$KeyEventWakeLockReceiver: void releaseWakeLockLocked()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void onRadioAvailable()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void notifyLocationChanged()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List loadInputMethodAndSubtypeHistoryLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.SMSDispatcher: void sendSmsByPstn(com.android.internal.telephony.SMSDispatcher$SmsTracker)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.sip.SipSessionGroup$SipSessionImpl: void processCommand(java.util.EventObject)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.IWindowManager$Stub$Proxy: void getInitialDisplaySize(int,android.graphics.Point)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.media.AudioService$ScoClient: void decCount()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.BLUETOOTH"
 ], 
 "<android.app.admin.IDevicePolicyManager: void setAccountManagementDisabled(android.content.ComponentName,java.lang.String,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ProxyController: void enableDataConnectivity(int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.pm.PackageManagerService: boolean deletePackageLI(java.lang.String,android.os.UserHandle,boolean,int[],boolean[],int,com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.notification.CountdownConditionProvider: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: boolean getDataRoamingEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.MediaRouteButton: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void queryCallForwardStatus(int,int,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.ViewFlipper: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.ims.ImsManager: void setEnhanced4gLteModeSetting(android.content.Context,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getIccSimChallengeResponse(int,int,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.MmsServiceBroker$BinderService: void sendMessage(int,java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle,android.app.PendingIntent)>": [
  "android.permission.SEND_SMS"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: void handleRemoveActiveRoutingPath(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.provider.Contacts$People: android.net.Uri addToGroup(android.content.ContentResolver,long,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.filterpacks.imageproc.CropRectFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.service.trust.TrustAgentService: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.IBluetoothManager$Stub$Proxy: void unregisterStateChangeCallback(android.bluetooth.IBluetoothStateChangeCallback)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.nfc.beam.BeamReceiveService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.provider.CalendarContract$CalendarAlerts: android.net.Uri insert(android.content.ContentResolver,long,long,long,long,int)>": [
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry: void notifyDataConnectionFailed(java.lang.String,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: void sendDelayedMotionEvents()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void writeSmsToRuim(int,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.display.DisplayManagerService: void handleDisplayDeviceAddedLocked(com.android.server.display.DisplayDevice)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.PhoneBase: void restoreSavedNetworkSelection(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.NativeActivity$NativeContentView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void rejectCall()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.content.ContentService: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: void releaseWakeLock()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.speech.tts.TextToSpeechService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.app.HeavyWeightSwitcherActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.pm.PackageManagerService: void updateExternalMediaStatusInner(boolean,boolean,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: com.android.internal.telephony.Connection dialInternal(java.lang.String,com.android.internal.telephony.UUSInfo,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.preference.SeekBarVolumizer: void onStopSample()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityManagerService: void finishUserBoot(com.android.server.am.UserStartedState)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.NfcService$ReaderModeDeathRecipient: void binderDied()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.power.PowerManagerService$BinderService: void setStayOnSetting(int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.notification.NextAlarmTracker: void rescheduleAlarm(long)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.net.NetworkStatsService$NetworkStatsSettings: com.android.server.net.NetworkStatsService$NetworkStatsSettings$Config getUidTagConfig()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.telephony.TelephonyManager: void listen(android.telephony.PhoneStateListener,int)>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.accounts.ChooseAccountActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.ISub$Stub$Proxy: android.telephony.SubscriptionInfo getActiveSubscriptionInfoForIccId(java.lang.String)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.accounts.AccountManager$14: android.accounts.AccountManagerFuture start()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<android.view.accessibility.IAccessibilityManager: void temporaryEnableAccessibilityStateUntilKeyguardRemoved(android.content.ComponentName,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.RecognitionService: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.INetworkPolicyManager$Stub: void setRestrictBackground(boolean)>": [
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.backup.PackageManagerBackupAgent: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.location.ILocationManager: void requestLocationUpdates(android.location.LocationRequest,android.location.ILocationListener,android.app.PendingIntent,java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.notification.DowntimeConditionProvider: void init()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.DocumentaryFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.telephony.PhoneNumberUtils: int getDefaultVoiceSubId()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.beam.BeamTransferManager: void processFiles()>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.test.mock.MockContentResolver: void cancelSync(android.content.SyncRequest)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.net.wifi.p2p.IWifiP2pManager$Stub$Proxy: android.os.Messenger getP2pStateMachineMessenger()>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void setInternalDataEnabled(boolean)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.UiAutomationConnection: void unregisterUiTestAutomationServiceLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void switchWaitingOrHoldingAndActive()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.display.DisplayManagerService: void setDisplayPropertiesInternal(int,boolean,float,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.PhoneBase: android.net.NetworkCapabilities getNetworkCapabilities(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneBase: java.util.List getAllCellInfo()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.backup.IBackupManager$Stub$Proxy: void opComplete(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void setWifiState(int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.wifi.WifiManager: boolean setWifiApConfiguration(android.net.wifi.WifiConfiguration)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.app.admin.IDevicePolicyManager: void setPasswordQuality(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.cardemulation.CardEmulationManager$CardEmulationInterface: boolean setPreferredService(android.content.ComponentName)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<android.widget.CompoundButton: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.AccountManager: boolean removeAccountExplicitly(android.accounts.Account)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<android.filterpacks.base.CallbackFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.dataconnection.DataConnection$DcActiveState: boolean processMessage(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: java.util.List privatizeCellInfoList(java.util.List)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.pm.BackgroundDexOptService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.UiccSmsController: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void <init>(java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: void setAppVisibility(android.os.IBinder,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.location.ILocationManager$Stub$Proxy: void clearTestProviderLocation(java.lang.String)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<android.net.NetworkPolicyManager: void setRestrictBackground(boolean)>": [
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: void activityIdleInternal(com.android.server.am.ActivityRecord)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.notification.CountdownConditionProvider: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: int processCdmaWapPdu(byte[],int,java.lang.String,long)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String getEnabledInputMethodsStr()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.notification.ZenModeHelper$SettingsObserver: void observe()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.LomoishFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accounts.AccountManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<android.widget.TimePickerSpinnerDelegate: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.text.format.DateUtils: java.lang.String formatDateTime(android.content.Context,long,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void nvReadItem(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.backup.PackageManagerBackupAgent: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: int getWifiApEnabledState()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.service.wallpaper.WallpaperService: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.uicc.IsimFileHandler: void loadEFTransparent(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.TextViewWithCircularIndicator: boolean shouldSpeakPasswordsForAccessibility()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.TextView: void access$200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.BlendFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.BroadcastQueue: void broadcastTimeoutLocked(boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void pollState()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.internal.telephony.DefaultPhoneNotifier: void notifyDataConnectionFailed(com.android.internal.telephony.Phone,java.lang.String,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.WifiStateMachine$InitialState: void enter()>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.view.IWindowManager$Stub$Proxy: void keyguardGoingAway(boolean,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.DISABLE_KEYGUARD", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.backup.LocalTransportService: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.media.IAudioService$Stub: void setMode(int,android.os.IBinder)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.BLUETOOTH"
 ], 
 "<android.test.mock.MockApplication: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.TextServicesManagerService$TextServicesSettings: java.lang.String getSelectedSpellChecker()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.pm.IPackageManager$Stub$Proxy: void performBootDexOpt()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService: boolean readEnhancedWebAccessibilityEnabledChangedLocked(com.android.server.accessibility.AccessibilityManagerService$UserState)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: void stopFreezingDisplayLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.uicc.CsimFileHandler: void loadEFImgTransparent(int,int,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.WebVttRenderingWidget: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.trust.TrustManagerService$3: void onPackageModified(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.sip.SipService: boolean isRegistered(java.lang.String)>": [
  "android.permission.USE_SIP"
 ], 
 "<android.widget.SpellChecker: void resetSession()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.display.DisplayManagerService$DisplayAdapterListener: void onTraversalRequested()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.CrossProcessFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.test.mock.MockContentResolver: int getIsSyncable(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.PhoneBase: android.telephony.CellLocation getCellLocation()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void getPreferredNetworkType(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.RotarySelector: void dispatchTriggerEvent(int)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.TextClock: void <init>(android.content.Context,android.util.AttributeSet)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IMms: void sendMessage(int,java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle,android.app.PendingIntent)>": [
  "android.permission.SEND_SMS"
 ], 
 "<com.android.internal.util.StateMachine$SmHandler: void invokeExitMethods(com.android.internal.util.StateMachine$SmHandler$StateInfo)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getIccSerialNumberForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void setPasswordMinimumNumeric(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.notification.ConditionProviderService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreFileRunnable: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.CountryDetectorService$2: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.service.media.MediaBrowserService: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.power.PowerManagerService: void updateIsPoweredLocked(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.DigitalClock: void <init>(android.content.Context,android.util.AttributeSet)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void queryCdmaRoamingPreference(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterfw.core.Filter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.provider.Downloads: void removeAllDownloadsByPackage(android.content.Context,java.lang.String,java.lang.String)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.telephony.TelephonyDevController: void registerRIL(com.android.internal.telephony.CommandsInterface)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.TelephonyRegistry: void listen(java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.content.IContentService: boolean getSyncAutomaticallyAsUser(android.accounts.Account,java.lang.String,int)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.app.IActivityManager: boolean shutdown(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.videosrc.SurfaceTextureSource: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService: void updateWindowsForAccessibilityCallbackLocked(com.android.server.accessibility.AccessibilityManagerService$UserState)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.cardemulation.CardEmulationManager: android.content.ComponentName getDefaultServiceForCategory(int,java.lang.String,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.os.storage.ExternalStorageFormatter: void onDestroy()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService: boolean access$5700(com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: boolean installCaCert(android.content.ComponentName,byte[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.ActivityManagerService: boolean removeTaskByIdLocked(int,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.InboundSmsHandler: void handleNewSms(android.os.AsyncResult)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.hardware.input.InputManager$InputDeviceVibrator: void vibrate(int,java.lang.String,long,android.media.AudioAttributes)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.MmsServiceBroker: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pService: void onSwitchUser(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.am.ActivityManagerService: java.util.List getRecentTasks(int,int,int)>": [
  "android.permission.GET_TASKS"
 ], 
 "<android.net.wifi.IWifiManager: void enableAggressiveHandover(int)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: boolean getDataEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.job.JobSchedulerService$JobSchedulerStub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: void cancelSync(android.content.SyncRequest)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.server.MountService: void access$2000(com.android.server.MountService)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void updateDataConnectionTracker()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.usb.UsbService: void systemReady()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setSmscAddress(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.print.IPrintManager$Stub$Proxy: android.os.Bundle print(java.lang.String,android.print.IPrintDocumentAdapter,android.print.PrintAttributes,java.lang.String,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.RadioButton: boolean access$1200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.ethernet.EthernetService: void onStartUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.AudioService$VolumeStreamState: void <init>(android.media.AudioService,java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.content.SyncManager: void scheduleSync(android.content.ComponentName,int,int,android.os.Bundle,long,long)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: int getPasswordMinimumNonLetter(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.app.NetInitiatedActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.wifi.WifiNotificationController$NotificationEnabledSettingObserver: boolean getValue()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: boolean isGlobalAccessibilityGestureEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService$2: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void disableSingleLocationUpdate()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.pm.Installer: void onStartUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.hardware.location.GeofenceHardwareImpl: void reportGeofenceAddStatus(int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.RemoteViewsService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.INetworkPolicyManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.accounts.IAccountManager: void clearPassword(android.accounts.Account)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<android.widget.AdapterViewFlipper: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DataConnection: void onQuitting()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.IEthernetManager$Stub$Proxy: void setConfiguration(android.net.IpConfiguration)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.server.pm.PackageManagerService$6: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.uicc.UsimFileHandler: void loadEFTransparent(int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.test.SyncBaseInstrumentation: void cancelSyncsandDisableAutoSync()>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GsmCellBroadcastHandler: android.telephony.SmsCbMessage handleGsmBroadcastSms(android.os.AsyncResult)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.app.RestrictionsPinActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.media.tv.TvView$3: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneProxy: java.util.List getAllCellInfo()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.EthernetManager: boolean isAvailable()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.net.INetworkStatsService$Stub: android.net.NetworkStats getDataLayerSnapshotForUid(int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.net.wifi.IWifiManager: boolean enableNetwork(int,boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.location.GeofenceManager: void sendIntentExit(android.app.PendingIntent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.am.ActivityManagerService: void enableScreenAfterBoot()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.app.DisableCarModeActivity: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: void access$1700(com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler,android.view.MotionEvent,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.telecom.InCallService: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordExpirationTimeout(android.content.ComponentName,long,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.base.OutputStreamTarget: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.service.textservice.SpellCheckerService: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.view.accessibility.CaptioningManager: void registerObserver(java.lang.String)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.DhcpStateMachine$StoppedState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.RI: void sendImsCdmaSms(byte[],int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.service.wallpaper.WallpaperSettingsActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor: void onPackageRemoved(java.lang.String,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.ProgressBar: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.InputMethodManagerService: void access$1100(com.android.server.InputMethodManagerService)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.ui.SurfaceRenderFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.tech.NfcF: void reconnect()>": [
  "android.permission.NFC"
 ], 
 "<android.filterpacks.base.FrameStore: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.base.NullFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.nfc.ForegroundUtils: void handleUidToBackground(int)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getCLIR(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.ResolverActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.WifiStateMachine$ConnectModeState: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: int access$1900(com.android.internal.policy.impl.PhoneWindowManager)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.text.ToUpperCase: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.uicc.UsimFileHandler: void loadEFLinearFixedAll(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void deactivateDataCall(int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setBandMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getRadioCapability(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.WifiManager: void setFrequencyBand(int,boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager: java.util.List getAdnRecordsInEf(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.BaseCommands: void setDataAllowed(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void conference(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.uicc.IccFileHandler: void getEFLinearRecordSize(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accessibility.DisplayAdjustmentUtils: boolean hasAdjustments(android.content.Context,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void getPreferredNetworkType(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.ILocationManager$Stub$Proxy: boolean addGpsNavigationMessageListener(android.location.IGpsNavigationMessageListener,java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.wm.WindowState: boolean hideLw(boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void handleLongPressOnHome()>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.IccFileHandler: void loadEFLinearFixedAll(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.IWifiManager: android.net.wifi.WifiConnectionStatistics getConnectionStatistics()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.backup.SystemBackupAgent: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.widget.NumberPicker$CustomEditText: boolean shouldSpeakPasswordsForAccessibility()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.telephony.gsm.SmsManager: void sendDataMessage(java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS"
 ], 
 "<android.widget.AppSecurityPermissions$PermissionItemView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.IBackupAgent: void doRestore(android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.display.DisplayPowerController: void access$1000(com.android.server.display.DisplayPowerController,long,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.ImageEncoder: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void queryFacilityLockForApp(java.lang.String,java.lang.String,int,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.SamplingProfilerService: void registerSettingObserver(android.content.Context)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.TabActivity: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.uicc.SIMRecords: java.lang.String getIccSimChallengeResponse(int,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getIccSerialNumberForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.ActivityGroup: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.search.SearchManagerService$MyPackageMonitor: void onPackageDisappeared(java.lang.String,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiController: void readWifiSleepPolicy()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.DockObserver: void onSwitchUser(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.app.TabActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.connectivity.PacManager: void longSchedule()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.IWindowManager: void getBaseDisplaySize(int,android.graphics.Point)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.IccCard: void supplyPuk2(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager: boolean setCdmaBroadcastConfig(com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.IWindowManager: void setNewConfiguration(android.content.res.Configuration)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void restoreSavedNetworkSelection(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.uicc.IccRecords: void setVoiceMailNumber(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.ui.SurfaceRenderFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.widget.VideoView: void setVideoPath(java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.test.InstrumentationCoreTestRunner: void finish(int,android.os.Bundle)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.content.SyncManager$SyncHandler: void cancelActiveSyncLocked(com.android.server.content.SyncStorageEngine$EndPoint,android.os.Bundle)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.ISms$Stub: java.lang.String getImsSmsFormat()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void sendEnvelope(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.VideoView$7: void surfaceCreated(android.view.SurfaceHolder)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: void <init>(com.android.server.wm.AccessibilityController$DisplayMagnifier)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.content.SyncStorageEngine: void setMasterSyncAutomatically(boolean,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.content.pm.IPackageManager: int getInstallLocation()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.hardware.location.GeofenceHardwareService$1: boolean addCircularFence(int,android.hardware.location.GeofenceHardwareRequestParcelable,android.hardware.location.IGeofenceHardwareCallback)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.widget.TextProgressBar: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.AccountManager$8: android.accounts.AccountManagerFuture start()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.server.InputMethodManagerService: com.android.internal.view.InputBindResult startInputUncheckedLocked(com.android.server.InputMethodManagerService$ClientState,com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.PhoneBase: boolean setRoamingOverride(java.util.List,java.util.List,java.util.List,java.util.List)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.server.print.UserState: boolean readConfigurationLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.AccountManager: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.server.LocationManagerService: void access$1400(com.android.server.LocationManagerService,com.android.server.LocationManagerService$Receiver)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.videosrc.SurfaceTextureTarget: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.filterpacks.imageproc.CropRectFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: boolean setDeviceOwner(java.lang.String,java.lang.String)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.ethernet.EthernetNetworkFactory$LocalNetworkFactory: void releaseNetworkFor(android.net.NetworkRequest)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.tech.MifareClassic: void decrement(int,int)>": [
  "android.permission.NFC"
 ], 
 "<android.nfc.tech.MifareClassic: boolean authenticateSectorWithKeyA(int,byte[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void onRadioOffOrNotAvailable()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.TtmlRenderingWidget: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void getRemoveWarning(android.content.ComponentName,android.os.RemoteCallback,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.location.ComprehensiveCountryDetector: void stopLocationBasedDetector()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void setProfileName(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.Editor$SelectionEndHandleView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.ISub$Stub$Proxy: void setDefaultSmsSubId(int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$3: void onCallHoldFailed(com.android.ims.ImsCall,com.android.ims.ImsReasonInfo)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager: void setPasswordHistoryLength(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.IActivityManager: void setProcessLimit(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: void enforceAccessPermission()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.filterpacks.imageproc.DuotoneFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.ImageStitcher: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.display.DisplayManagerService$DisplayAdapterListener: void onDisplayDeviceEvent(com.android.server.display.DisplayDevice,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void <init>(java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.ServiceWatcher$2: void onPackageModified(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: int interceptMotionBeforeQueueingNonInteractive(long,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.CantAddAccountActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.admin.IDevicePolicyManager: boolean setPermittedInputMethods(android.content.ComponentName,java.util.List)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService: boolean access$5400(com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void queryCdmaRoamingPreference(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CallerInfoAsyncQuery: com.android.internal.telephony.CallerInfoAsyncQuery startQuery(int,android.content.Context,java.lang.String,com.android.internal.telephony.CallerInfoAsyncQuery$OnQueryCompleteListener,java.lang.Object,int)>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneConnection: void processNextPostDialChar()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accessibility.TouchExplorer: void sendMotionEvent(android.view.MotionEvent,int,int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void shutdownRadio()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.pm.PackageManagerService: int getInstallLocation()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.Activity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.VibratorService: void doVibratorOff()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.usb.UsbDeviceManager$UsbHandler: void updateUsbState()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.hdmi.DeviceDiscoveryAction: void handleTimerEvent(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.MediaPlayer: void stop()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: void requestSyncAsUser(android.accounts.Account,java.lang.String,int,android.os.Bundle)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.server.wifi.WifiController$FullLockHeldState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.am.UserSwitchingDialog: void onWindowShown()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.filterpacks.imageproc.ImageEncoder: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: void <init>(android.content.Context,com.android.internal.telephony.cdma.CdmaCallWaitingNotification,com.android.internal.telephony.cdma.CdmaCallTracker,com.android.internal.telephony.cdma.CdmaCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.service.voice.VoiceInteractionSessionService: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: void acquireWakeLock()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.IActivityManager: void handleApplicationCrash(android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.String[] getAccountTypesWithManagementDisabledAsUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.DrawOverlayFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.SystemAudioAutoInitiationAction: void handleSystemAudioModeStatusTimeout()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.location.GpsLocationProvider$8: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.WindowManagerService: int getPreferredOptionsPanelGravity()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.RI: void iccOpenLogicalChannel(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: int getSelectedInputMethodSubtypeId(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.WindowManagerPolicy: void screenTurningOn(android.view.WindowManagerPolicy$ScreenOnListener)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.UsimPhoneBookManager: void readIapFileAndWait(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.accessibility.CaptioningManager$CaptionStyle: android.view.accessibility.CaptioningManager$CaptionStyle getCustomStyle(android.content.ContentResolver)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void revertToNitzTime()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.ISyncAdapter$Stub$Proxy: void startSync(android.content.ISyncContext,java.lang.String,android.accounts.Account,android.os.Bundle)>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: void <init>(android.content.Context,com.android.internal.telephony.DriverCall,com.android.internal.telephony.cdma.CdmaCallTracker,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.AccountManager$12: void doWork()>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<android.app.job.IJobScheduler$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<android.location.LocationManager: boolean addGpsStatusListener(android.location.GpsStatus$Listener)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.app.ActivityManagerNative: void killApplicationWithAppId(java.lang.String,int,java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.ServiceStateTracker: void hangupAndPowerOff()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.P2pEventListener: void onP2pInRange()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.location.GpsLocationProvider: void updateNetworkState(int,android.net.NetworkInfo)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void getAvailableNetworks(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.ImageStitcher: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.provider.Settings$System: long getLong(android.content.ContentResolver,java.lang.String,long)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void onRoamingOff()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.HdmiControlService: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.ActivityManagerNative: void updateConfiguration(android.content.res.Configuration)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: boolean setPermittedAccessibilityServices(android.content.ComponentName,java.util.List)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.LocationManagerService: boolean isAllowedByUserSettingsLocked(java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.MountServiceIdler: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.widget.DigitalClock: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.ToRGBFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiStateMachine$WaitForP2pDisableState: boolean processMessage(android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.location.GpsLocationProvider: void reportLocation(int,double,double,double,float,float,float,long)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager: boolean getCrossProfileCallerIdDisabled(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.IContentService$Stub$Proxy: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String,android.content.ComponentName)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.view.WindowManagerPolicy: void goingToSleep(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.text.StringSource: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.uicc.IsimFileHandler: void loadEFImgTransparent(int,int,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.provider.Settings$System: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.base.RetargetFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.AlarmManagerService$ResultReceiver: void onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.WindowManagerService: boolean detectSafeMode()>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void setCdmaRoamingPreference(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.print.PrintManagerService$PrintManagerImpl: void createPrinterDiscoverySession(android.print.IPrinterDiscoveryObserver,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.text.StringSource: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiScanningServiceImpl$WifiScanningStateMachine: void onQuitting()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void getLastDataCallFailCause(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void access$16600(com.android.server.wifi.WifiStateMachine,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.AlphaBlendFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoController: java.lang.String getIsimImpi()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.cardemulation.OffHostApduService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.content.SyncActivityTooManyDeletes: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.print.PrintManagerService$PrintManagerImpl$2: boolean onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.WakeLockStateMachine: void onQuitting()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiNotificationController: void <init>(android.content.Context,com.android.server.wifi.WifiStateMachine)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.accounts.AccountManagerService: void addAccount(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.test.SimulatedCommands: void shutdown()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.TextClock: void <init>(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.backup.LocalTransportService: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.backup.Trampoline: void initialize(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getVoiceMailAlphaTagForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.view.IWindowManager$Stub: boolean inputMethodClientHasFocus(com.android.internal.view.IInputMethodClient)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.print.IPrintManager$Stub: java.util.List getEnabledPrintServices(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiAutoJoinController: int addToScanCache(java.util.List)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.SimpleImageFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.NetInitiatedActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.test.SimulatedRadioControl: void shutdown()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager: boolean resetPassword(java.lang.String,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accessibility.ScreenMagnifier$MagnificationController: void setMagnifiedRegionCenter(float,float,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.widget.LockPatternUtils: void setOwnerInfo(java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.content.ContentService: void setMasterSyncAutomatically(boolean)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.accounts.AccountManager$3: void doWork()>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.content.IContentService: void setMasterSyncAutomatically(boolean)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.server.media.MediaSessionService$SessionManagerImpl$KeyEventWakeLockReceiver: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.LocationManagerService: boolean access$800(com.android.server.LocationManagerService,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.NfcBackupAgent: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.search.SearchManagerService$GlobalSearchProviderObserver: void <init>(com.android.server.search.SearchManagerService,android.content.ContentResolver)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.speech.tts.TextToSpeechService: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService$Service$2: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.AutoCompleteTextView: void access$200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.handover.BluetoothPeripheralHandover: void <init>(android.content.Context,android.bluetooth.BluetoothDevice,java.lang.String,int,com.android.nfc.handover.BluetoothPeripheralHandover$Callback)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ISms$Stub$Proxy: void sendStoredMultipartText(int,java.lang.String,android.net.Uri,java.lang.String,java.util.List,java.util.List)>": [
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void access$19300(com.android.server.wifi.WifiStateMachine)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.widget.LockPatternUtils: boolean usingBiometricWeak(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.RI: void nvWriteItem(int,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: void onAddressAllocated(int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accounts.AccountManagerService$RemoveAccountSession: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.location.LocationBasedCountryDetector: void unregisterListener(android.location.LocationListener)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.nfc.INfcAdapter: void verifyNfcPermission()>": [
  "android.permission.NFC"
 ], 
 "<com.android.nfc.cardemulation.TapAgainDialog: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.wifi.WifiManager: int getAggressiveHandover()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void invokeOemRilRequestRaw(byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.sip.ISipService: boolean isOpened(java.lang.String)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.internal.widget.ILockSettings: long getLong(java.lang.String,long,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.commands.am.Am: void onRun()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.KILL_BACKGROUND_PROCESSES", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.RESTART_PACKAGES"
 ], 
 "<android.accounts.AccountManager: void invalidateAuthToken(java.lang.String,java.lang.String)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.server.dreams.DreamManagerService: android.content.ComponentName access$1200(com.android.server.dreams.DreamManagerService,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.RI: void sendUSSD(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void <init>(android.content.Context,com.android.internal.telephony.PhoneNotifier,android.net.sip.SipProfile)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.GrantCredentialsPermissionActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.widget.ScrollingTabContainerView$TabView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo getCallerInfo(android.content.Context,java.lang.String,int)>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.textservice.ITextServicesManager$Stub: void setCurrentSpellCheckerSubtype(java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void setSafeMode(boolean)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ISms: java.lang.String getImsSmsFormat()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.ActivityChooserModel$DataModelPackageMonitor: void onPackageModified(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.power.PowerManagerService: void setUserActivityTimeoutOverrideFromWindowManagerInternal(long)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.tts.TextToSpeechService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: void enableAggressiveHandover(int)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.media.AudioService: void access$1500(android.media.AudioService,int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: void handleAddressAllocated(int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.LocationManager: void requestLocationUpdates(android.location.LocationRequest,android.location.LocationListener,android.os.Looper,android.app.PendingIntent)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.net.INetworkPolicyManager: void setRestrictBackground(boolean)>": [
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.view.WindowManagerPolicy$WindowManagerFuncs: void reevaluateStatusBarVisibility()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IMms$Stub$Proxy: void setAutoPersisting(java.lang.String,boolean)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.display.DisplayPowerState$PhotonicModulator: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.UUSInfo)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.service.notification.ZenModeConfig: android.service.notification.Condition toTimeCondition(android.content.Context,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiStateMachine$DriverStoppingState: boolean processMessage(android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.ActivityManagerService: void cleanUpRemovedTaskLocked(com.android.server.am.TaskRecord,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.hdmi.HdmiControlService: void changeInputForMhl(int,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.SamplingProfilerService$SamplingProfilerSettingsObserver: void onChange(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void setCdmaSubscription(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.Vibrator: void vibrate(long,android.media.AudioAttributes)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.ISub$Stub: int setDataRoaming(int,int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.net.sip.SipManager: android.net.sip.SipAudioCall makeAudioCall(android.net.sip.SipProfile,android.net.sip.SipProfile,android.net.sip.SipAudioCall$Listener,int)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.server.display.DisplayPowerController: boolean requestPowerState(android.hardware.display.DisplayManagerInternal$DisplayPowerRequest,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.am.ActivityManagerService: boolean deliverPreBootCompleted(java.lang.Runnable,java.util.ArrayList,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.WifiController$ScanOnlyLockHeldState: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.RECEIVE_WAP_PUSH", 
  "android.permission.WRITE_SMS", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.RECEIVE_MMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.hdmi.DeviceDiscoveryAction: void addAndStartAction(com.android.server.hdmi.HdmiCecFeatureAction)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void disableLocationUpdates()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry: void notifyDataConnectionFailedForSubscriber(int,java.lang.String,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean isActivePasswordSufficient(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: void moveStackWindowsLocked(com.android.server.wm.DisplayContent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.IRecognitionService$Stub$Proxy: void cancel(android.speech.IRecognitionListener)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<android.media.RingtoneManager: android.media.Ringtone getRingtone(android.content.Context,android.net.Uri)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.InputMethodManagerService: java.util.List getShortcutInputMethodsAndSubtypes()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.SystemService: void onStartUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.view.IInputMethodManager: android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.provider.Browser: void deleteHistoryWhere(android.content.ContentResolver,java.lang.String)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<android.print.PrintManager: void removePrintJobStateChangeListener(android.print.PrintManager$PrintJobStateChangeListener)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.bluetooth.BluetoothAdapter: boolean disable()>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.widget.TextView: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.IWifiManager$Stub: void setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.TelephonyRegistry: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.nfc.tech.MifareUltralight: void reconnect()>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.PhoneBase: void nvReadItem(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: boolean getAutoTime()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.power.PowerManagerService: void handleUserActivityTimeout()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ServiceStateTracker: boolean notifySignalStrength()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,android.net.Uri,java.lang.String)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<android.telephony.TelephonyManager: java.lang.String getMsisdn()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.wifi.WifiController$NoLockHeldState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.MountService$3: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void updateDataConnectionTracker()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getSmscAddress(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.INfcTag: android.nfc.NdefMessage ndefRead(int)>": [
  "android.permission.NFC"
 ], 
 "<android.nfc.cardemulation.CardEmulation: boolean isDefaultServiceForAid(android.content.ComponentName,java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.NFC"
 ], 
 "<com.android.server.am.ActivityManagerService$Lifecycle: void onBootPhase(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.base.FrameBranch: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.BluetoothHeadset: void <init>(android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.net.IEthernetManager: boolean isAvailable()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.widget.AbsListView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.ToRGBAFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.InputMethodManagerService$3: void onUserSwitching(int,android.os.IRemoteCallback)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accessibility.AccessibilityInputFilter$1: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipConnection$1: void onCallBusy(android.net.sip.SipAudioCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: boolean allowedToSetDeviceOwnerOnDevice()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService: void <init>(android.content.Context)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.inputmethod.InputMethodSubtypeSwitchingController: void resetCircularListLocked(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.base.FrameBranch: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.ISub$Stub: int getActiveSubInfoCount()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.media.effect.effects.BlackWhiteEffect: void apply(int,int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.bluetooth.BluetoothA2dp: void finalize()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.widget.LockPatternUtils: void deleteGallery(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void setPreferredNetworkType(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.ImageSwitcher: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void sendEmergencyCallbackModeChange()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.util.StateMachine$SmHandler: void performTransitions(com.android.internal.util.State,android.os.Message)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.net.sip.ISipService: void open(android.net.sip.SipProfile)>": [
  "android.permission.USE_SIP"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordMinimumLetters(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.InboundSmsHandler: void notifyAndAcknowledgeLastIncomingSms(boolean,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cat.CatService: void sendMenuSelection(int,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.calendar.AgendaWindowAdapter: android.net.Uri buildQueryUri(int,int)>": [
  "android.permission.READ_CALENDAR", 
  "android.permission.WRITE_CALENDAR"
 ], 
 "<com.android.server.TelephonyRegistry: void notifyServiceStateForPhoneId(int,int,android.telephony.ServiceState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void access$600(com.android.internal.policy.impl.PhoneWindowManager,long,boolean,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.notification.ConditionProviders: void dump(java.io.PrintWriter,com.android.server.notification.NotificationManagerService$DumpFilter)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void access$000(com.android.internal.telephony.cdma.CdmaServiceStateTracker)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone getGsmPhone(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.carrier.CarrierMessagingService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.location.ILocationManager$Stub$Proxy: boolean addGpsMeasurementsListener(android.location.IGpsMeasurementsListener,java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void supplyIccPukForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: boolean isDataAllowed(com.android.internal.telephony.dataconnection.ApnContext)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: int getMaximumFailedPasswordsForWipe(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.IContentService$Stub: void syncAsUser(android.content.SyncRequest,int)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.accessibilityservice.IAccessibilityServiceConnection: android.view.accessibility.AccessibilityWindowInfo getWindow(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.base.GLTextureSource: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.effect.effects.FillLightEffect: void release()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.connectivity.PacManager: java.lang.String getPacChangeDelay()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService: boolean access$6000(com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.CsimFileHandler: void updateEFTransparent(int,byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterfw.core.Filter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.CompoundButton: boolean access$1200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void cleanUpAllConnections(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService$Lifecycle: void onBootPhase(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.hardware.location.GeofenceHardwareService: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.app.HeavyWeightSwitcherActivity: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.location.LocationManager: void removeUpdates(android.app.PendingIntent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.content.IIntentReceiver$Stub$Proxy: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void notifyDataConnection(java.lang.String,java.lang.String,com.android.internal.telephony.PhoneConstants$DataState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.RI: void getCdmaBroadcastConfig(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: void startTimerRecording(int,int,byte[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.IWifiManager$Stub: void startScan(android.net.wifi.ScanSettings,android.os.WorkSource)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.CallerInfoAsyncQuery$CallerInfoAsyncQueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.provider.VoicemailContract$Voicemails: android.net.Uri buildSourceUri(java.lang.String)>": [
  "com.android.voicemail.permission.ADD_VOICEMAIL"
 ], 
 "<android.media.IAudioService$Stub$Proxy: void startBluetoothSco(android.os.IBinder,int)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.accounts.GrantCredentialsPermissionActivity: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.app.ChooserActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.LockSettingsService: void migrateOldData()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.StackView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.am.ActivityManagerService: void finishInstrumentationLocked(com.android.server.am.ProcessRecord,int,android.os.Bundle)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.trust.TrustManagerService: void updateTrustAll()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: android.view.accessibility.AccessibilityWindowInfo getWindow(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.MediaPlayer: void selectTrack(int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.dataconnection.DcSwitchStateMachine$IdleState: void enter()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void setPropertiesByCarrier()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager: void setActiveAdmin(android.content.ComponentName,boolean,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: android.accounts.Account[] getAccountsByType(java.lang.String)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void setSmscAddress(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.FillLightFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.BluetoothHeadset: void close()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: int getVerboseLoggingLevel()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: void finishSpellCheckerService(com.android.internal.textservice.ISpellCheckerSessionListener)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void startDataStallAlarm(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.CsimFileHandler: void loadEFLinearFixed(int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void <init>(java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.MmiCode: void cancel()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.BatteryService: void access$900(com.android.server.BatteryService,android.os.BatteryProperties)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager: boolean installKeyPair(android.content.ComponentName,byte[],byte[],java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.SMSDispatcher: void handleConfirmShortCode(boolean,com.android.internal.telephony.SMSDispatcher$SmsTracker)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<android.nfc.cardemulation.CardEmulation: boolean registerAidsForService(android.content.ComponentName,java.lang.String,java.util.List)>": [
  "android.permission.VIBRATE", 
  "android.permission.NFC"
 ], 
 "<android.media.effect.effects.GrayscaleEffect: void apply(int,int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getImeiForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.print.PrintManager: android.print.PrinterDiscoverySession createPrinterDiscoverySession()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.StraightenFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.ConsumerIrService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.TRANSMIT_IR"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void enableSingleLocationUpdate()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingRfcommWithServiceRecord(java.lang.String,java.util.UUID)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.notification.ZenModeHelper: void <init>(android.content.Context,android.os.Looper)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.content.SyncStorageEngine: void setIsSyncable(android.accounts.Account,int,java.lang.String,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoController: java.lang.String getSubscriberIdForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: int getFrequencyBand()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: android.content.SyncInfo getCurrentSync()>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.internal.widget.ILockSettings: boolean checkPassword(java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.content.ContentService: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String,android.content.ComponentName)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.nfc.cardemulation.PreferredServices: void <init>(android.content.Context,com.android.nfc.cardemulation.RegisteredServicesCache,com.android.nfc.cardemulation.RegisteredAidCache,com.android.nfc.cardemulation.PreferredServices$Callback)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: void clearPassword(android.accounts.Account)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<android.accounts.AccountManager$Future2Task: android.accounts.AccountManager$Future2Task start()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.nfc.tech.NfcA: byte[] transceive(byte[],boolean)>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.location.LocationBasedCountryDetector: void registerListener(java.lang.String,android.location.LocationListener)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.filterpacks.imageproc.SepiaFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.restrictions.RestrictionsManagerService: void onSwitchUser(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.hdmi.HdmiControlService$4: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceCategoryProgramHandler: com.android.internal.telephony.cdma.CdmaServiceCategoryProgramHandler makeScpHandler(android.content.Context,com.android.internal.telephony.CommandsInterface)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.LomoishFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isMasterVolumeMuted(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.widget.SubtitleView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void setActiveAdmin(android.content.ComponentName,boolean,int,android.os.Bundle)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: boolean getSampleEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.BrightnessFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.content.ContentResolver: void cancelSync(android.content.SyncRequest)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.server.accessibility.ScreenMagnifier: float getPersistedScale()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: void setSpellCheckerEnabled(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.IContentService: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.IIccPhoneBook: java.util.List getAdnRecordsInEfForSubscriber(int,int)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<java.net.UR: java.net.URLConnection openConnection()>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void nvWriteCdmaPrl(byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$StopTetheringErrorState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.ImageCombineFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.uicc.IccCardProxy: void broadcastInternalIccStateChangedIntent(java.lang.String,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.ContrastFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.LockPatternUtils: boolean getBoolean(java.lang.String,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.Switch: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void reRegisterNetwork(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: int getPasswordHistoryLength(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.updates.TZInfoInstallReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.app.AlertActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.widget.SlidingTab: void dispatchTriggerEvent(int)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.backup.BackupAgent: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.IUiAutomationConnection$Stub$Proxy: void disconnect()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.power.PowerManagerService: void handleSandman()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void uninstallCaCert(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.p2p.WifiP2pManager: android.os.Messenger getP2pStateMachineMessenger()>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.policy.impl.GlobalActions$SinglePressAction: void onPress()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.ImsSMSDispatcher: void access$100(com.android.internal.telephony.SMSDispatcher,com.android.internal.telephony.SMSDispatcher$SmsTracker,int,int)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<android.filterpacks.imageproc.TintFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.IAccountManager: boolean addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<android.hardware.IConsumerIrService$Stub$Proxy: void transmit(java.lang.String,int,int[])>": [
  "android.permission.TRANSMIT_IR"
 ], 
 "<com.android.server.net.NetworkPolicyManagerService: boolean isTemplateRelevant(android.net.NetworkTemplate)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.filterpacks.imageproc.ResizeFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.os.IPowerManager: void setStayOnSetting(int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.LocationManagerService$4: void onPackageDisappeared(java.lang.String,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: int setStorageEncryption(android.content.ComponentName,boolean,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.telephony.SubscriptionManager: android.telephony.SubscriptionInfo getActiveSubscriptionInfoForIccIndex(java.lang.String)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void invokeOemRilRequestStrings(java.lang.String[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.print.IPrintManager: void cancelPrintJob(android.print.PrintJobId,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.bluetooth.BluetoothPbap: void close()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase$4: void onSubscriptionsChanged()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: void detachLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: void enableAggressiveHandover(int)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.wm.WindowManagerService: void setNewConfiguration(android.content.res.Configuration)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.INetworkPolicyManager$Stub$Proxy: android.net.NetworkPolicy[] getNetworkPolicies()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void getPreferredNetworkType(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager$HideNavInputEventReceiver: void onInputEvent(android.view.InputEvent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.AdapterViewAnimator: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.content.ISyncAdapter: void startSync(android.content.ISyncContext,java.lang.String,android.accounts.Account,android.os.Bundle)>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getIsimChallengeResponse(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.AlertActivity: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.net.NetworkStatsService$4: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.backup.BackupAgent: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.INfcCardEmulation$Stub$Proxy: boolean setDefaultServiceForCategory(int,android.content.ComponentName,java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<com.android.server.TextServicesManagerService$TextServicesMonitor: void onSomePackagesChanged()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: android.os.Bundle getApplicationRestrictions(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.NfcApplication: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.media.effect.effects.FisheyeEffect: void apply(int,int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.uicc.CsimFileHandler: void loadEFImgLinearFixed(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.GlobalActions$2: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.commands.monkey.Monkey: int runMonkeyCycles()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.VideoView: void setVideoURI(android.net.Uri)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.widget.ILockSettings$Stub: boolean checkVoldPassword(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void setImsRegistrationState(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.nfc.ConfirmConnectToWifiNetworkActivity: void access$300(com.android.nfc.ConfirmConnectToWifiNetworkActivity,android.net.wifi.WifiManager)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.content.SyncManager$SyncHandler: void onBootCompleted()>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.power.PowerManagerService$DreamReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.pm.BackgroundDexOptService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.notification.NextAlarmConditionProvider: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.view.IWindowManager$Stub: int getBaseDisplayDensity(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.widget.LockPatternUtils: int[] getAppWidgets(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.sip.SipService$SipAutoReg: void onRegistrationTimeout(android.net.sip.ISipSession)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.IContentService: void setIsSyncable(android.accounts.Account,java.lang.String,int)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.server.BluetoothManagerService: boolean enableNoAutoConnect()>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getCrossProfileWidgetProviders(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ImsSMSDispatcher: void sendSubmitPdu(com.android.internal.telephony.SMSDispatcher$SmsTracker)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SMS"
 ], 
 "<android.filterpacks.base.RetargetFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void invokeOemRilRequestStrings(java.lang.String[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wallpaper.WallpaperManagerService: void setDimensionHints(int,int)>": [
  "android.permission.SET_WALLPAPER_HINTS"
 ], 
 "<com.android.internal.telephony.DefaultPhoneNotifier: void notifyCellLocation(com.android.internal.telephony.Phone)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ISub$Stub: int setDisplayNumber(java.lang.String,int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.am.ActivityManagerService: void removeTasksByPackageNameLocked(java.lang.String,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.GrainFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ImsSMSDispatcher: void sendMultipartSms(com.android.internal.telephony.SMSDispatcher$SmsTracker)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<android.filterpacks.imageproc.DocumentaryFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.AccessibilityController: void onRotationChangedLocked(com.android.server.wm.DisplayContent,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.policy.impl.PhoneWindow: void reopenMenu(boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.os.Vibrator: void vibrate(long[],int)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.filterpacks.imageproc.LomoishFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.DateTimeView: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.BootReceiver: void removeOldUpdatePackages(android.content.Context)>": [
  "android.permission.INTERNET"
 ], 
 "<android.filterpacks.imageproc.ImageEncoder: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: int getUserRotationMode()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: long getPasswordExpirationTimeout(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.telephony.gsm.SmsManager: boolean updateMessageOnSim(int,int,byte[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void access$400(com.android.internal.policy.impl.PhoneWindowManager)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.StackView$StackFrame: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.policy.impl.BarController: boolean checkHiddenLw()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.UiccSmsController: void sendStoredText(int,java.lang.String,android.net.Uri,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SMS"
 ], 
 "<android.filterpacks.imageproc.PosterizeFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.WindowManagerService: int adjustWallpaperWindowsLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.SupplicantStateTracker$DisconnectedState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.NetworkScoreManager: boolean requestScores(android.net.NetworkKey[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.AccountAuthenticatorActivity: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.util.AsyncService: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.backup.IBackupManager$Stub: void restoreAtInstall(java.lang.String,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.LocationManagerService: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_LOCATION_EXTRA_COMMANDS", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setMaximumTimeToLock(android.content.ComponentName,long,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.WifiManager: boolean isWifiApEnabled()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.WakeLockStateMachine$WaitingState: boolean processMessage(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.UiccSmsController: boolean enableCellBroadcastRange(int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.server.content.ContentService: void setMasterSyncAutomaticallyAsUser(boolean,int)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.internal.policy.impl.PhoneWindow: void onMenuModeChange(com.android.internal.view.menu.MenuBuilder)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.content.SyncStorageEngine: void setIsTargetServiceActive(android.content.ComponentName,int,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.net.sip.SipManager: void setRegistrationListener(java.lang.String,android.net.sip.SipRegistrationListener)>": [
  "android.permission.USE_SIP"
 ], 
 "<android.media.MediaScanner$MyMediaScannerClient: android.net.Uri endFile(android.media.MediaScanner$FileEntry,boolean,boolean,boolean,boolean,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: boolean notifySignalStrength()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setActivePasswordState(int,int,int,int,int,int,int,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.ColorTemperatureFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.am.ActivityStack: void releaseBackgroundResources()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.NsdService: boolean access$100(com.android.server.NsdService)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.Connection: void cancelPostDial()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.ethernet.EthernetServiceImpl: android.net.IpConfiguration getConfiguration()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void <init>(java.lang.String,android.content.Context,com.android.internal.telephony.SmsStorageMonitor,com.android.internal.telephony.PhoneBase,com.android.internal.telephony.CellBroadcastHandler)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.backup.BackupManagerService$ActiveRestoreSession: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.http.SslCertificate: android.view.View inflateCertificateView(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.voice.VoiceInteractionService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.base.OutputStreamTarget: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.SubscriptionController: void updateAllDataConnectionTrackers()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.bluetooth.BluetoothAdapter: boolean enableNoAutoConnect()>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.net.DhcpStateMachine$RunningState: boolean processMessage(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void <init>(java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.GlobalActions$PowerAction: boolean onLongPress()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.notification.NotificationManagerService: void dumpImpl(java.io.PrintWriter,com.android.server.notification.NotificationManagerService$DumpFilter)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase$3: void run()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void queryAvailableBandMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.commands.wm.Wm: void main(java.lang.String[])>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.KILL_BACKGROUND_PROCESSES", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.RESTART_PACKAGES", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.app.admin.IDevicePolicyManager: void setPasswordMinimumNumeric(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.tech.NfcB: void close()>": [
  "android.permission.NFC"
 ], 
 "<android.telephony.SmsManager: void setAutoPersisting(boolean)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void notifyDataConnection(java.lang.String,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.Connection dialInternal(java.lang.String,com.android.internal.telephony.UUSInfo,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void sendDtmf(char)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.SMSDispatcher$SmsTracker: void onSent(android.content.Context)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.internal.telephony.ISms$Stub: void setPremiumSmsPermission(java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.IWifiManager$Stub: void acquireMulticastLock(android.os.IBinder,java.lang.String)>": [
  "android.permission.CHANGE_WIFI_MULTICAST_STATE"
 ], 
 "<com.android.server.power.PowerManagerService$WakeLock: void binderDied()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void setImsRegistrationState(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: java.util.List getCurrentSyncsAsUser(int)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<android.net.IEthernetManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.net.NetworkStatsService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.media.effect.effects.PosterizeEffect: void release()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void notifyServiceStateChanged(android.telephony.ServiceState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.widget.RadioGroup: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void exitEmergencyCallbackMode()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: void release()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void operationComplete()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.hardware.location.IGeofenceHardware$Stub: boolean resumeGeofence(int,int,int)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void selectNetworkManually(com.android.internal.telephony.OperatorInfo,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: android.content.ComponentName getCurInteractor(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.NetworkTimeUpdateService: void access$300(com.android.server.NetworkTimeUpdateService,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo markAsVoiceMail()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.net.wifi.IWifiManager: boolean requestBatchedScan(android.net.wifi.BatchedScanSettings,android.os.IBinder,android.os.WorkSource)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.sip.SipService$SipAutoReg: void start(com.android.server.sip.SipSessionGroup)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void restoreSavedNetworkSelection(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.provider.Telephony$Sms$Sent: android.net.Uri addMessage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void <init>(java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.UiccCard: void iccCloseLogicalChannel(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.TimerRecordingAction: void addAndStartAction(com.android.server.hdmi.HdmiCecFeatureAction)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.pm.IPackageManager$Stub: void freeStorageAndNotify(long,android.content.pm.IPackageDataObserver)>": [
  "android.permission.CLEAR_APP_CACHE"
 ], 
 "<com.android.server.display.DisplayManagerService: void handleDisplayDeviceRemoved(com.android.server.display.DisplayDevice)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.telephony.SubscriptionManager: void clearSubscriptionInfo()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: boolean getDataEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.IRecognitionService$Stub$Proxy: void stopListening(android.speech.IRecognitionListener)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<android.inputmethodservice.ExtractButton: void updateTextServicesLocaleLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.backup.RestoreSession: int getAvailableRestoreSets(android.app.backup.RestoreObserver)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void update()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine: boolean setWfdInfo(android.net.wifi.p2p.WifiP2pWfdInfo)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.am.ActivityManagerService: void finishUserSwitch(com.android.server.am.UserStartedState)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.media.projection.MediaProjectionManagerService: void onStartUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.Phone: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneSubInfo: java.lang.String getMsisdn()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.widget.ActionMenuView$MenuBuilderCallback: void onMenuModeChange(com.android.internal.view.menu.MenuBuilder)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void dispatchMediaKeyWithWakeLock(android.view.KeyEvent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.ContentResolver: boolean isSyncPending(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.server.wifi.SupplicantStateTracker$CompletedState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.IContentService: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String,android.content.ComponentName)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<android.filterpacks.imageproc.Invert: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.SettingInjectorService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.policy.impl.GlobalActions$10: void onChange(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.hardware.location.GeofenceHardwareService$1: boolean registerForMonitorStateChangeCallback(int,android.hardware.location.IGeofenceHardwareMonitorCallback)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.RI: void iccIOForApp(int,int,java.lang.String,int,int,int,java.lang.String,java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.videosrc.MediaSource: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.test.mock.MockContentResolver: void startSync(android.net.Uri,android.os.Bundle)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.filterpacks.videosink.MediaEncoderFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.ISub: void setDefaultSmsSubId(int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.WifiStateMachine$SupplicantStoppingState: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.WifiManager: boolean isWifiEnabled()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void handleBatchedScanPollRequest()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.Context: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.videoproc.BackDropperFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.uicc.CsimFileHandler: void loadEFLinearFixedAll(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.net.NetworkPolicyManagerService: boolean isNetworkMetered(android.net.NetworkState)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.app.IntentForwarderActivity: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker$2: void onChange(boolean)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getLine1AlphaTag()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.restrictions.RestrictionsManagerService: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.telephony.SmsManager: android.net.Uri addMultimediaMessageDraft(android.net.Uri)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.power.PowerManagerService: void userActivityInternal(long,int,int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.AlphaBlendFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager: void sendText(java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.am.ActivityStackSupervisor: void onDisplayChanged(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.print.PrintManagerService$PrintManagerImpl: android.os.Bundle print(java.lang.String,android.print.IPrintDocumentAdapter,android.print.PrintAttributes,java.lang.String,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accessibility.TouchExplorer$SendHoverExitDelayed: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.display.DisplayPowerState: void <init>(com.android.server.display.DisplayBlanker,com.android.server.lights.Light,com.android.server.display.ColorFade)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.WifiWatchdogStateMachine$ConnectedState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.WakeLockStateMachine$IdleState: void exit()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void <init>(com.android.internal.telephony.PhoneBase,com.android.internal.telephony.CommandsInterface,android.telephony.CellInfo)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.am.ActivityManagerService: void setPackageScreenCompatMode(java.lang.String,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.media.AudioService$SettingsObserver: void <init>(android.media.AudioService)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void updateImsPhone()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.uicc.SIMRecords: void setVoiceMessageWaiting(int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.notification.CountdownConditionProvider: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.media.MediaSessionService: void onBootPhase(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void hangupAndPowerOff()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.P2pLinkManager$SendTask: java.lang.Object doInBackground(java.lang.Object[])>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.location.ILocationManager: java.util.List getProviders(android.location.Criteria,boolean)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.nfc.beam.BeamTransferManager: void cancel()>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.UiModeManagerService: void sendConfigurationLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void syncClirSetting()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.IActivityManager: void startInPlaceAnimationOnFrontMostApplication(android.app.ActivityOptions)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry: void listenForSubscriber(int,java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.filterpacks.imageproc.Invert: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.widget.QuickContactBadge: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.content.pm.IPackageManager: boolean setInstallLocation(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: int getCellLocationId()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.printservice.PrintService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.tech.MifareClassic: void reconnect()>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.notification.DowntimeConditionProvider: void access$900(com.android.server.notification.DowntimeConditionProvider,android.app.AlarmManager$AlarmClockInfo,long,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.AccountManager$7: void startTask()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.app.ChooserActivity: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.print.IPrintManager: java.util.List getEnabledPrintServices(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.commands.am.Am: void run(java.lang.String[])>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.KILL_BACKGROUND_PROCESSES", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.RESTART_PACKAGES", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.print.IPrintManager$Stub: void addPrintJobStateChangeListener(android.print.IPrintJobStateChangeListener,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getDeviceSvnUsingSubId(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.media.MediaPlayer: void reset()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.ILocationManager: void addTestProvider(java.lang.String,com.android.internal.location.ProviderProperties)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.internal.view.IInputMethodManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cat.IconLoader: void postIcon()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: boolean isUninstallBlocked(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.SaturateFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.wifi.WifiController$DefaultState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ISms$Stub: boolean copyMessageToIccEf(java.lang.String,int,byte[],byte[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.app.IActivityManager: void updateConfiguration(android.content.res.Configuration)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.UiccSmsController: boolean copyMessageToIccEfForSubscriber(int,java.lang.String,int,byte[],byte[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.server.wifi.WifiStateMachine$WpsRunningState: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.tts.ITextToSpeechService$Stub$Proxy: java.lang.String[] getClientDefaultLanguage()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.IntentService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void notifyServiceStateChanged(android.telephony.ServiceState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.statusbar.IStatusBarService: void expandSettingsPanel()>": [
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<android.filterpacks.videosrc.SurfaceTextureTarget: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.provider.CalendarContract$CalendarAlerts: boolean alarmExists(android.content.ContentResolver,long,long,long)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.server.accessibility.ScreenMagnifier: void onUserContextChanged()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.DropBoxManagerService$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.print.IPrintManager$Stub$Proxy: android.print.PrintJobInfo getPrintJobInfo(android.print.PrintJobId,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void initializeHdmiState()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void sendDtmf(char)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.videosrc.MediaSource: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.connectivity.PacManager: void reschedule()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.ims.ImsCall$Listener: void onCallResumed(com.android.ims.ImsCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.notification.DowntimeConditionProvider: void access$300(com.android.server.notification.DowntimeConditionProvider)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.telephony.SmsManager: android.net.Uri importTextMessage(java.lang.String,int,java.lang.String,long,boolean,boolean)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.provider.Contacts$People: long tryGetMyContactsGroupId(android.content.ContentResolver)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.test.IsolatedContext: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.display.AutomaticBrightnessController: void configure(boolean,float,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.JobSchedulerImpl: int schedule(android.app.job.JobInfo)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<android.filterpacks.imageproc.Invert: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.AlertController$RecycleListView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isUninstallBlocked(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.TextSwitcher: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.UiccSmsController: boolean disableCellBroadcastRangeForSubscriber(int,int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.internal.telephony.UiccPhoneBookController: int getDefaultSubscription()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.tts.TextToSpeechService: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.SmsStorageMonitor: void handleIccFull()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.bluetooth.BluetoothSocket: void initSocketFromFdNative(int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.pm.PackageManagerService$HandlerParams: void handleStartCopy()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.DatePicker$DatePickerSpinnerDelegate: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.INetworkPolicyManager$Stub: android.net.NetworkQuotaInfo getNetworkQuotaInfo(android.net.NetworkState)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.dreams.DreamManagerService: void cleanupDreamLocked()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.Connection dial(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.DisableCarModeActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.widget.Switch: boolean shouldSpeakPasswordsForAccessibility()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.numeric.SinWaveFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.IWifiManager$Stub: android.net.wifi.WifiActivityEnergyInfo reportActivityInfo()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.power.PowerManagerService: void updateDreamLocked(int,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void nvReadItem(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.ExpandableListView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: int getRecoveryAction()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.UiccCardApplication: void update(com.android.internal.telephony.uicc.IccCardApplicationStatus,android.content.Context,com.android.internal.telephony.CommandsInterface)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void requestIsimAuthentication(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.backup.LocalTransportService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.content.IContentService$Stub$Proxy: void removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.server.LocationManagerService: com.android.server.LocationManagerService$Receiver getReceiverLocked(android.app.PendingIntent,int,int,java.lang.String,android.os.WorkSource,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager$CdmaBroadcastRangeManager: boolean finishUpdate()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterfw.core.SyncRunner: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.RI: void setCdmaSubscriptionSource(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void setGsmBroadcastActivation(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.SubscriptionController: void enforceSubscriptionPermission()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.ISms: boolean enableCellBroadcastForSubscriber(int,int,int)>": [
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void acknowledgeIncomingGsmSmsWithPdu(boolean,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.IWifiManager$Stub: boolean pingSupplicant()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void separateConnection(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: boolean hasMatchedTetherApnSetting()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.EnableAccessibilityController: boolean onInterceptTouchEvent(android.view.MotionEvent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService: void registerUiTestAutomationService(android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.LocationManagerService$1: void onOpChanged(int,java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void access$000(com.android.server.devicepolicy.DevicePolicyManagerService,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService: boolean access$5500(com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.cardemulation.CardEmulationManager$CardEmulationInterface: boolean setDefaultForNextTap(int,android.content.ComponentName)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.uicc.IsimUiccRecords: void onReady()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.LocalePicker: void onActivityCreated(android.os.Bundle)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.AlarmManagerService: void onBootPhase(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.inputmethod.InputMethodSubtypeSwitchingController: void <init>(com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings,android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.power.PowerManagerService: void updateSettingsLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.app.AlertController$RecycleListView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.RI: void reportSmsMemoryStatus(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.BluetoothManagerService: void registerStateChangeCallback(android.bluetooth.IBluetoothStateChangeCallback)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.app.AliasActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.MmsServiceBroker$BinderService: boolean deleteStoredMessage(java.lang.String,android.net.Uri)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<android.filterpacks.numeric.SinWaveFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiController$DeviceActiveState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void nvWriteCdmaPrl(byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.GpsNavigationMessageListenerTransport: boolean add(java.lang.Object)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyDataConnectionForSubscriber(int,int,boolean,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.NetworkCapabilities,int,boolean)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.nfc.handover.PeripheralHandoverService: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevicePlayback: boolean handleRecordTvScreen(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setRadioPower(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.WifiManager: int addOrUpdateNetwork(android.net.wifi.WifiConfiguration)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.widget.CalendarView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.VideoView: boolean onKeyDown(int,android.view.KeyEvent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.ZoomButtonsController$Container: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: void onRemoteDisconnect(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.IHardwareService: void setFlashlightEnabled(boolean)>": [
  "android.permission.FLASHLIGHT"
 ], 
 "<com.android.internal.telephony.Phone: void nvReadItem(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.telephony.gsm.SmsManager: boolean copyMessageToSim(byte[],byte[],int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.server.TextServicesManagerService$TextServicesMonitor: void onPackageDisappeared(java.lang.String,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: boolean applyAnimationLocked(com.android.server.wm.AppWindowToken,android.view.WindowManager$LayoutParams,int,boolean,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.IUiAutomationConnection$Stub$Proxy: void connect(android.accessibilityservice.IAccessibilityServiceClient)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.notification.ManagedServices$SettingsObserver: void access$100(com.android.server.notification.ManagedServices$SettingsObserver)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: com.android.server.net.NetworkStatsService$NetworkStatsSettings$Config getXtConfig()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.content.SyncManager: void access$3400(com.android.server.content.SyncManager,com.android.server.content.SyncManager$ActiveSyncContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.base.ObjectSource: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.ILocationManager: boolean addGpsMeasurementsListener(android.location.IGpsMeasurementsListener,java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.accessibility.TouchExplorer: void handleMotionEventStateDelegating(android.view.MotionEvent,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.bluetooth.BluetoothAdapter: boolean disable(boolean)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.connectivity.Tethering$TetherInterfaceSM$UnavailableState: void enter()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wm.WindowManagerService: android.content.res.Configuration updateOrientationFromAppTokensLocked(android.content.res.Configuration,android.os.IBinder)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.cardemulation.AidRoutingManager: boolean configureRouting(java.util.HashMap)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.PhoneSubInfo: java.lang.String getIccSimChallengeResponse(int,int,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: android.accounts.Account[] getAccountsAsUser(int)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.accounts.AccountAuthenticatorActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.dreams.DreamManagerService: void stopDozingInternal(android.os.IBinder)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.ui.SurfaceTargetFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.effect.effects.GrainEffect: void apply(int,int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.filterpacks.imageproc.DrawRectFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.widget.ActionBarView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.hdmi.HdmiCecController: void handleIncomingCecCommand(int,int,byte[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.AnalogClock: void updateContentDescription(android.text.format.Time)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CallManager: boolean sendBurstDtmf(java.lang.String,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.Editor$InsertionHandleView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevicePlayback: boolean handleActiveSource(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.IWifiManager$Stub: void setAllowScansWithTraffic(int)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.util.AsyncService: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IccProvider: android.database.MatrixCursor loadFromEf(int,int)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: java.lang.String getPassword(android.accounts.Account)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$3: void onCallHeld(com.android.ims.ImsCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getVoiceMailNumberForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.app.ChooserActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.wifi.WifiController$StaDisabledWithScanState: boolean processMessage(android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.HdmiControlService$BinderService$12: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.service.notification.ConditionProviderService: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.AccountManager: android.accounts.Account[] getAccountsAsUser(int)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.widget.DigitalClock: void updateTextServicesLocaleLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.WiredAccessoryManager$WiredAccessoryObserver: void init()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.Chronometer: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void onCleanUpAllConnections(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.view.inputmethod.InputMethodManager: java.util.List getEnabledInputMethodSubtypeList(android.view.inputmethod.InputMethodInfo,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getMsisdn()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.backup.SystemBackupAgent: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.view.IInputMethodManager$Stub$Proxy: boolean setCurrentInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.UsimFileHandler: void updateEFLinearFixed(int,int,byte[],java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.WindowManagerPolicy: int interceptMotionBeforeQueueingNonInteractive(long,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.IAudioService$Stub: void startBluetoothScoVirtualCall(android.os.IBinder)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.server.input.InputManagerService$WindowManagerCallbacks: long interceptKeyBeforeDispatching(com.android.server.input.InputWindowHandle,android.view.KeyEvent,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: void saveCurrentInputMethodAndSubtypeToHistory(java.lang.String,android.view.inputmethod.InputMethodSubtype)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.textservice.TextServicesManager: void setSpellCheckerEnabled(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.ClosedCaptionWidget$CCLineBox: void access$200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.dhimpl.NativeNfcTag: void startPresenceChecking(int,com.android.nfc.DeviceHost$TagDisconnectedCallback)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.cardemulation.TapAgainDialog: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.power.PowerManagerService: void updateUserActivitySummaryLocked(long,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void disableSingleLocationUpdate()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IccCard: void setIccFdnEnabled(boolean,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.ResolverActivity$1: boolean onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.RecognitionService$RecognitionServiceBinder: void startListening(android.content.Intent,android.speech.IRecognitionListener)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.server.wm.WindowManagerService: void access$800(com.android.server.wm.WindowManagerService,int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void getSmscAddress(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.widget.VideoView: void pause()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneBase: void queryCdmaRoamingPreference(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.location.GpsLocationProvider: void startNavigating(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setProfileEnabled(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.ColorTemperatureFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.test.mock.MockContentResolver: boolean isSyncPending(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.server.hdmi.HdmiControlService$CecMessageBuffer$1: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.AliasActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.policy.impl.GlobalActions: void access$1500(com.android.internal.policy.impl.GlobalActions)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.WifiManager: boolean isScanAlwaysAvailable()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GsmInboundSmsHandler: com.android.internal.telephony.gsm.GsmInboundSmsHandler makeInboundSmsHandler(android.content.Context,com.android.internal.telephony.SmsStorageMonitor,com.android.internal.telephony.PhoneBase)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void sendTerminalResponse(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmMmiCode: void processSsData(android.os.AsyncResult)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.sip.SipManager: boolean isOpened(java.lang.String)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.internal.view.IInputMethodManager$Stub: java.util.List getShortcutInputMethodsAndSubtypes()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.sip.ISipService$Stub$Proxy: void setRegistrationListener(java.lang.String,android.net.sip.ISipSessionListener)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.server.InputMethodManagerService: void setSelectedInputMethodAndSubtypeLocked(android.view.inputmethod.InputMethodInfo,int,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.Phone: boolean setRoamingOverride(java.util.List,java.util.List,java.util.List,java.util.List)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.net.sip.ISipService: void close(java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_SIP"
 ], 
 "<com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.view.IInputMethodManager$Stub: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ISub$Stub: int[] getSubId(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void applyNewState(com.android.internal.telephony.dataconnection.ApnContext,boolean,boolean)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.FixedRotationFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.widget.ScrollingTabContainerView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.IActivityManager: void killAllBackgroundProcesses()>": [
  "android.permission.KILL_BACKGROUND_PROCESSES"
 ], 
 "<android.media.AudioService$AudioHandler$1: void onCompletion(android.media.MediaPlayer)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.sip.SipSessionGroup$KeepAliveProcessCallbackProxy$2: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.service.textservice.SpellCheckerService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.ISms$Stub$Proxy: void sendData(java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SMS"
 ], 
 "<android.view.IWindowManager: int getBaseDisplayDensity(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void handleExitEmergencyCallbackMode(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.media.ClosedCaptionWidget$CCLineBox: void updateTextServicesLocaleLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.INfcTag: int ndefMakeReadOnly(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: android.os.UserHandle createAndInitializeUser(android.content.ComponentName,java.lang.String,java.lang.String,android.content.ComponentName,android.os.Bundle)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.BitmapOverlayFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accessibility.ScreenMagnifier$StateViewportDraggingHandler: void onMotionEvent(android.view.MotionEvent,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.accessibility.TouchExplorer: void clear(android.view.MotionEvent,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.MediaController: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: void stopBatchedScan(android.net.wifi.BatchedScanSettings)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.filterpacks.base.FrameStore: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: long interceptKeyBeforeDispatching(android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void setNetworkSelectionModeAutomatic(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.telecom.InCallService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.widget.RadialTimePickerView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager: boolean copyMessageToIccEf(java.lang.String,int,byte[],byte[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.internal.telephony.IntRangeManager: boolean disableRange(int,int,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.VideoView: void suspend()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.multiwaveview.GlowPadView: void vibrate()>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.AudioService$SettingsObserver: void onChange(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.RI: void iccIO(int,int,java.lang.String,int,int,int,java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.net.NetworkStatsService$3: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.PreferenceImageView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.beam.BeamTransferManager: void finishTransfer(boolean,android.net.Uri,java.lang.String)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevice: void onHotplug(int,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void <init>(java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.IAudioService$Stub$Proxy: void startBluetoothScoVirtualCall(android.os.IBinder)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void setExpirationAlarmCheckLocked(android.content.Context,com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.RI: void getLastCallFailCause(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.connectivity.Tethering: void sendTetherStateChangedBroadcast()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.print.PrintManager: java.util.List getEnabledPrintServices()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.RI: void deleteSmsOnSim(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.BaseCommands: void setUiccSubscription(int,int,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void sendTerminalResponse(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: void setWifiApConfiguration(android.net.wifi.WifiConfiguration)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.wm.WindowManagerService: void startFreezingScreen(int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.view.ContextThemeWrapper: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.app.RestrictionsPinActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: void access$1800(com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: boolean getStorageEncryption(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.widget.ScrollingTabContainerView$TabView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void dial(java.lang.String,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.LockPatternUtils: void updateCryptoUserInfo()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void setSmscAddress(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getLine1NumberForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: boolean hasMatchedTetherApnSetting()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.hardware.location.GeofenceHardwareService$1: boolean removeGeofence(int,int)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.NetworkScoreManager: boolean updateScores(android.net.ScoredNetwork[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.tv.TvInputService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.UiAutomation: void connect()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.hdmi.DeviceDiscoveryAction: void handleVendorId(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.MediaHTTPConnection: long getSize()>": [
  "android.permission.INTERNET"
 ], 
 "<android.hardware.location.IGeofenceHardware: boolean removeGeofence(int,int)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.net.wifi.IWifiManager: boolean isScanAlwaysAvailable()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.app.ActivityManager: java.util.List getRunningTasks(int)>": [
  "android.permission.GET_TASKS"
 ], 
 "<android.net.wifi.IWifiManager$Stub: android.os.Messenger getWifiServiceMessenger()>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: void addAccount(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<android.telephony.TelephonyManager: java.lang.String getLine1Number()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine: void access$10800(com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine,int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.ColorTemperatureFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.filterpacks.imageproc.AlphaBlendFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.sip.SipService: void onConnectivityChanged(android.net.NetworkInfo)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.AbsoluteLayout: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.twilight.TwilightService: void onBootPhase(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.voiceinteraction.SoundTriggerHelper: void onServiceDied()>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void handleStartNetStatPoll(com.android.internal.telephony.DctConstants$Activity)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.SubscriptionController: android.telephony.SubscriptionInfo getSubInfoRecord(android.database.Cursor)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.RI: void setCLIR(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.ChooseAccountActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: void setFrequencyBand(int,boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.media.IMediaHTTPConnection: long getSize()>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.app.PlatLogoActivity: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setPreferredNetworkType(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void addPersistentPreferredActivity(android.content.ComponentName,android.content.IntentFilter,android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.AudioService: void createStreamStates()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void onRadioOffOrNotAvailable()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.content.ComponentName getGlobalProxyAdmin(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void acceptCall(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.Toolbar: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setRadioPower(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.RIL$1: void onDisplayChanged(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean resetPassword(java.lang.String,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager$SettingsObserver: void observe()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.text.ToUpperCase: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.media.SubtitleTrack: void show()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService$1: void onPackageModified(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DataConnection: java.lang.String getLogRecString(android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.sip.SipService$SipAutoReg: void onResponse(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.BluetoothManagerService$2: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.Editor$InsertionHandleView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.service.notification.NotificationListenerService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.wifi.IWifiManager$Stub: void setWifiApConfiguration(android.net.wifi.WifiConfiguration)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.ISms: boolean updateMessageOnIccEf(java.lang.String,int,int,byte[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.server.wm.WindowManagerService: void performBootTimeout()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService: void updateInputFilter(com.android.server.accessibility.AccessibilityManagerService$UserState)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.nfc.tech.NfcF: void close()>": [
  "android.permission.NFC"
 ], 
 "<android.location.ILocationManager$Stub: boolean addGpsMeasurementsListener(android.location.IGpsMeasurementsListener,java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.filterpacks.imageproc.DuotoneFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.INetworkScoreService$Stub$Proxy: boolean updateScores(android.net.ScoredNetwork[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DctController: int releaseNetwork(android.net.NetworkRequest)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.tech.MifareUltralight: byte[] transceive(byte[])>": [
  "android.permission.NFC"
 ], 
 "<android.accounts.IAccountManager$Stub: android.accounts.Account[] getAccountsForPackage(java.lang.String,int)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.nfc.cardemulation.OffHostApduService: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.hdmi.HotplugDetectionAction: void removeDevice(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.videosrc.SurfaceTextureSource: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.app.Presentation$1: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.app.NetInitiatedActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.base.FrameSource: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: java.util.List getConfiguredNetworks()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.power.PowerManagerService: void access$3300(com.android.server.power.PowerManagerService,android.os.IBinder,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: void conference()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture confirmCredentialsAsUser(android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<android.filterpacks.imageproc.AlphaBlendFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmSMSDispatcher: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,android.net.Uri,java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.voiceinteraction.VoiceInteractionManagerService: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.view.menu.ActionMenuItemView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.location.LocationFudger: float access$000(com.android.server.location.LocationFudger)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.TelephonyRegistry: void addOnSubscriptionsChangedListener(java.lang.String,com.android.internal.telephony.IOnSubscriptionsChangedListener)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.ims.internal.IImsCallSessionListener: void callSessionHoldFailed(com.android.ims.internal.IImsCallSession,com.android.ims.ImsReasonInfo)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.uicc.SIMRecords: void handleFileUpdate(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.MediaPlayer: void access$600(android.media.MediaPlayer)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingInsecureRfcommOn(int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: boolean updateAdnRecordsInEfBySearchForSubscriber(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void getDataCallList(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void updateServiceLocation()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.provider.BrowserContract$SyncState: android.content.ContentProviderOperation newSetOperation(android.accounts.Account,byte[])>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevice: boolean handleSetStreamPath(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.DigitalClock: void initClock()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.notification.ValidateNotificationPeople: void initialize(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.wallpaper.WallpaperService$Engine: void attach(android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.SYSTEM_ALERT_WINDOW", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getGroupIdLevel1()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.lights.LightsService: void onStartUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.TelephonyRegistry: void notifySignalStrengthForSubscriber(int,android.telephony.SignalStrength)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager: boolean access$100(com.android.internal.telephony.IccSmsInterfaceManager,com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void getCdmaSubscriptionSource(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: void updateArcFeatureStatus(int,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void handleInjectSms(android.os.AsyncResult)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.hardware.location.GeofenceHardware: boolean registerForMonitorStateChangeCallback(int,android.hardware.location.GeofenceHardwareMonitorCallback)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.accessibility.ScreenMagnifier: void access$100(com.android.server.accessibility.ScreenMagnifier,int,int,int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: int setStorageEncryption(android.content.ComponentName,boolean,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.commands.monkey.MonkeySourceNetwork: com.android.commands.monkey.MonkeyEvent getNextEvent()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.ims.ImsCall$ImsCallSessionListenerProxy: void callSessionProgressing(com.android.ims.internal.ImsCallSession,com.android.ims.ImsStreamMediaProfile)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List getEnabledInputMethodSubtypeListLocked(android.view.inputmethod.InputMethodInfo)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ISms$Stub$Proxy: boolean copyMessageToIccEfForSubscriber(int,java.lang.String,int,byte[],byte[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.internal.telephony.gsm.GsmInboundSmsHandler: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ISub$Stub: android.telephony.SubscriptionInfo getActiveSubscriptionInfo(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.power.PowerManagerService: void setMaximumScreenOffTimeoutFromDeviceAdminInternal(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.Tag: android.nfc.Tag rediscover()>": [
  "android.permission.NFC"
 ], 
 "<android.printservice.PrintService: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.tech.MifareClassic: void transfer(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.accessibility.TouchExplorer: void sendHoverExitAndTouchExplorationGestureEndIfNeeded(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.nfc.INfcTag$Stub: int ndefWrite(int,android.nfc.NdefMessage)>": [
  "android.permission.NFC"
 ], 
 "<android.accounts.IAccountManager$Stub: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<android.media.effect.effects.AutoFixEffect: void apply(int,int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.location.FlpHardwareProvider: void onGeofenceAdd(int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.CheckedTextView: boolean shouldSpeakPasswordsForAccessibility()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.backup.FullBackupAgent: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.am.ActivityStackSupervisor$ActivityContainer: void release()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getIsimDomain()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcSwitchStateMachine: void onQuitting()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.NfcBackupAgent: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.commands.am.Am: void runKillAll()>": [
  "android.permission.KILL_BACKGROUND_PROCESSES"
 ], 
 "<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: void onPackageDisappeared(java.lang.String,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.handover.PeripheralHandoverService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.gsm.GsmMmiCode: java.lang.CharSequence makeCFQueryResultMessage(com.android.internal.telephony.CallForwardInfo,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.display.DisplayManagerService: void setDisplayInfoOverrideFromWindowManagerInternal(int,android.view.DisplayInfo)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.accounts.IAccountManager: java.lang.String getPassword(android.accounts.Account)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.server.LockSettingsService: java.lang.String getString(java.lang.String,java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.AlphaBlendFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager: boolean setCdmaBroadcastActivation(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: boolean setPermittedInputMethods(android.content.ComponentName,java.util.List)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.FixedRotationFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.IContentService$Stub: android.content.SyncStatusInfo getSyncStatusAsUser(android.accounts.Account,java.lang.String,android.content.ComponentName,int)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.nfc.cardemulation.CardEmulationManager$CardEmulationInterface: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void access$1500(com.android.internal.policy.impl.PhoneWindowManager)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void restartRadio()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$InactiveState: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.widget.Space: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.media.AudioManager: void reloadAudioSettings()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accounts.AccountManagerService: android.accounts.Account[] getAccountsByTypeForPackage(java.lang.String,java.lang.String)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void deleteSmsOnRuim(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.squareup.okhttp.internal.http.JavaApiConverter: com.squareup.okhttp.Response createOkResponse(java.net.URI,java.net.URLConnection)>": [
  "android.permission.INTERNET"
 ], 
 "<android.media.IAudioService$Stub$Proxy: void stopBluetoothSco(android.os.IBinder)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.server.location.GpsLocationProvider: void handleSetRequest(com.android.internal.location.ProviderRequest,android.os.WorkSource)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void screenTurningOn(android.view.WindowManagerPolicy$ScreenOnListener)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void setMaximumFailedPasswordsForWipe(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCommandInterface: void setUiccSubscription(int,int,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.base.GLTextureSource: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.NegativeFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.input.InputManagerService: int getShowTouchesSetting(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.wallpaper.WallpaperService$Engine: void updateSurface(boolean,boolean,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.SYSTEM_ALERT_WINDOW", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.text.StringLogger: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.widget.DateTimeView$ReceiverInfo: void addView(android.widget.DateTimeView)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.inputmethodservice.AbstractInputMethodService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.FillLightFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.HeavyWeightSwitcherActivity$1: void onClick(android.view.View)>": [
  "android.permission.REORDER_TASKS"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getNai()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.content.SyncStorageEngine: void setSyncAutomatically(android.accounts.Account,int,java.lang.String,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.wm.WindowManagerService: android.os.IBinder prepareDragSurface(android.view.IWindow,android.view.SurfaceSession,int,int,int,android.view.Surface)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.NumberPicker$CustomEditText: boolean performLongClick()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.ActivityView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.widget.LockPatternUtils: boolean isPatternEverChosen()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.ethernet.EthernetServiceImpl: void setConfiguration(android.net.IpConfiguration)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService: void onUserStateChangedLocked(com.android.server.accessibility.AccessibilityManagerService$UserState)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accessibility.AccessibilityInputFilter: void onInstalled()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$2: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.ZoomControls: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.hdmi.SystemAudioActionFromTv: boolean processCommand(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getCellInfoList(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.ContextThemeWrapper: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.InboundSmsHandler: void onQuitting()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.PasswordEntryKeyboardView: boolean onTouchEvent(android.view.MotionEvent)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.test.LaunchPerformanceBase: void finish(int,android.os.Bundle)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv$2: void onDeviceDiscoveryDone(java.util.List)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.text.method.PasswordTransformationMethod: void onTextChanged(java.lang.CharSequence,int,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.RotateFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.dreams.DreamManagerService: android.content.ComponentName getDozeComponent()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ProxyController: void sendRadioCapabilityRequest(int,int,int,int,java.lang.String,int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void reportSmsMemoryStatus(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: boolean isMasterVolumeMuted(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.notification.NotificationManagerService: void buzzBeepBlinkLocked(com.android.server.notification.NotificationRecord)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void sendImsCdmaSms(byte[],int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.Vibrator: void vibrate(long[],int,android.media.AudioAttributes)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoController: java.lang.String[] getIsimImpu()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager: void setPasswordMinimumNonLetter(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.tech.IsoDep: void connect()>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void notifyServiceStateChangedP(android.telephony.ServiceState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.SMSDispatcher: void access$100(com.android.internal.telephony.SMSDispatcher,com.android.internal.telephony.SMSDispatcher$SmsTracker,int,int)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getIMEISV(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.test.ActivityUnitTestCase$MockParent: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.os.PowerManager$WakeLock: void acquireLocked()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.ui.SurfaceRenderFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cat.RilMessageDecoder$StateStart: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.sip.SipService: void open(android.net.sip.SipProfile)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void onSetInternalDataEnabled(boolean)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.widget.ToggleButton: boolean shouldSpeakPasswordsForAccessibility()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.SubscriptionController: int setDisplayNameUsingSrc(java.lang.String,int,long)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.test.IsolatedContext: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.speech.tts.TextToSpeechService$SynthesisToFileOutputStreamSpeechItemV1: int getSpeechRate()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ISub$Stub$Proxy: int getDefaultSmsSubId()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.telephony.TelephonyManager: java.lang.String getNai(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.ISub: int setDataRoaming(int,int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.accounts.AccountManagerService$6: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.app.admin.IDevicePolicyManager: void clearPackagePersistentPreferredActivities(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.ActivityManagerService: void backgroundServicesFinishedLocked(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.widget.WaveView: void waveUpdateFrame(float,float,boolean)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.RedEyeFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.power.ShutdownThread: void access$000(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.speech.tts.TextToSpeechService$1: java.lang.String[] getClientDefaultLanguage()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: boolean isApnTypeAvailable(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.view.IInputMethodManager: boolean switchToLastInputMethod(android.os.IBinder)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.NumberPicker$AccessibilityNodeProviderImpl: void sendAccessibilityEventForVirtualText(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.IWifiManager: android.net.DhcpInfo getDhcpInfo()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.wifi.WifiNetworkScoreCache: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.media.IAudioService$Stub$Proxy: void setMicrophoneMute(boolean,java.lang.String)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.filterpacks.performance.ThroughputFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.nfc.tech.IsoDep: int getTimeout()>": [
  "android.permission.NFC"
 ], 
 "<android.app.admin.IDevicePolicyManager: boolean removeCrossProfileWidgetProvider(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.RI: void setNetworkSelectionModeAutomatic(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.AccountManager$5: android.accounts.AccountManager$Future2Task start()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.nfc.NfcService: void applyRouting(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.sip.ISipService$Stub$Proxy: android.net.sip.ISipSession createSession(android.net.sip.SipProfile,android.net.sip.ISipSessionListener)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String getDisabledSystemInputMethods()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void getNetworkSelectionMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.WifiManager: android.os.Messenger getWifiServiceMessenger()>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: boolean updateCurrentCarrierInProvider()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean hasUserSetupCompleted()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getCdmaSubscriptionSource(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.view.IInputMethodManager: java.util.List getEnabledInputMethodSubtypeList(java.lang.String,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.print.PrinterDiscoverySession: void startPrinterStateTracking(android.print.PrinterId)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.AliasActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceCategoryProgramHandler: boolean handleSmsMessage(android.os.Message)>": [
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.test.mock.MockApplication: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordQuality(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.DateTimeView: boolean access$1200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.BluetoothManagerService: java.lang.String getAddress()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.filterpacks.base.RetargetFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.view.menu.IconMenuItemView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.SystemService: void onBootPhase(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.AccountManager: android.accounts.Account[] getAccountsByTypeForPackage(java.lang.String,java.lang.String)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.BootReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.INTERNET"
 ], 
 "<android.filterfw.core.FilterFunction: void close()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.speech.tts.TextToSpeechService$1: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine: void updatePersistentNetworks(boolean)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void showGlobalActionsInternal()>": [
  "android.permission.VIBRATE", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.SEND_SMS", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.hardware.location.GeofenceHardwareImpl: void acquireWakeLock()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.view.IInputMethodManager: java.util.List getEnabledInputMethodList()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.MediaFocusControl: void dispatchMediaKeyEventForCalls(android.view.KeyEvent,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.ImageStitcher: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.BluetoothMap: void <init>(android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.ISub: int clearSubInfo()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.filterpacks.text.StringLogger: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.AlarmManagerService: void setWakelockWorkSource(android.app.PendingIntent,android.os.WorkSource,int,java.lang.String,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord addAppLocked(android.content.pm.ApplicationInfo,boolean,java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.speech.SpeechRecognizer: void setRecognitionListener(android.speech.RecognitionListener)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.server.input.InputManagerService: void start()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.notification.NextAlarmTracker: java.lang.String formatAlarmDebug(long)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.RI: void queryCallWaiting(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.content.ComponentName getRestrictionsProvider(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.LomoishFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setDataProfile(com.android.internal.telephony.dataconnection.DataProfile[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.location.GpsLocationProvider: void reportGeofenceTransition(int,int,double,double,double,float,float,float,long,int,long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void selectNetworkManually(com.android.internal.telephony.OperatorInfo,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.InputMonitor: void notifyCameraLensCoverSwitchChanged(long,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevicePlayback: void sendKeyEvent(int,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cat.CommandParamsFactory: boolean processSelectItem(com.android.internal.telephony.cat.CommandDetails,java.util.List)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: long getPasswordExpirationTimeout(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.ui.SurfaceTargetFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.http.SslCertificate: java.lang.String formatCertificateDate(android.content.Context,java.util.Date)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.IRecognitionService: void startListening(android.content.Intent,android.speech.IRecognitionListener)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void requestShutdown()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void listenForSubscriber(int,java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.provider.Contacts$People: void markAsContacted(android.content.ContentResolver,long)>": [
  "android.permission.WRITE_CONTACTS"
 ], 
 "<com.android.internal.widget.LockPatternUtils: boolean isOwnerInfoEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.tech.NfcA: void connect()>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.SharpenFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.net.NetworkStatsService$NetworkStatsSettings: long getDevPersistBytes(long)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.location.GpsLocationProvider: void requestSetID(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void setPasswordExpirationTimeout(android.content.ComponentName,long,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void setTTYMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiStateMachine$ObtainingIpState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.numeric.SinWaveFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.filterpacks.imageproc.StraightenFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.Phone: boolean hasMatchedTetherApnSetting()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.bluetooth.BluetoothAvrcpController: void close()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getPermittedAccessibilityServices(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcController: java.lang.String getLogRecString(android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void cleanUpAllConnections(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.widget.ActionBarOverlayLayout: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: int getAggressiveHandover()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.widget.multiwaveview.GlowPadView: void switchToState(int,float,float)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.telecom.TelecomLoaderService: void onSwitchUser(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.print.PrintManagerService$PrintManagerImpl$1: void onChange(boolean,android.net.Uri,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevice: boolean handleSetSystemAudioMode(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiWatchdogStateMachine$WatchdogEnabledState: boolean processMessage(android.os.Message)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.location.ILocationManager$Stub: void requestGeofence(android.location.LocationRequest,android.location.Geofence,android.app.PendingIntent,java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.sip.SipSessionGroup$SipSessionCallReceiverImpl: void processCommand(java.util.EventObject)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevice: boolean handleInactiveSource(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.CropFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.effect.SizeChangeEffect: void apply(int,int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.BatteryService: void onStartUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.AccountManager: void clearPassword(android.accounts.Account)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<android.view.ContextThemeWrapper: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.content.IContentService$Stub$Proxy: void sync(android.content.SyncRequest)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.accounts.CantAddAccountActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.SmsApplication: com.android.internal.telephony.SmsApplication$SmsApplicationData getApplication(android.content.Context,boolean,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.notification.ManagedServices: void onUserSwitched()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.provider.VoicemailContract$Status: android.net.Uri buildSourceUri(java.lang.String)>": [
  "com.android.voicemail.permission.ADD_VOICEMAIL"
 ], 
 "<com.android.server.connectivity.Tethering$TetherInterfaceSM$TetheredState: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.util.StateMachine$SmHandler$HaltingState: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.filterpacks.imageproc.AutoFixFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.hardware.location.GeofenceHardwareService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.content.Context: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: int getMaximumFailedPasswordsForWipe(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.accessibility.CaptioningManager: void notifyUserStyleChanged()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.AudioManager: void setMicrophoneMute(boolean)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.server.accounts.AccountManagerService: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<android.printservice.PrintService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.input.InputManagerService$WiredAccessoryCallbacks: void systemReady()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.QuickContactBadge$QueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getIMSIForApp(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.test.ActivityUnitTestCase$MockParent: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.connectivity.Tethering$TetherInterfaceSM$StartingState: void enter()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.content.SyncStorageEngine: void requestSync(com.android.server.content.SyncStorageEngine$AuthorityInfo,int,android.os.Bundle)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.filterpacks.base.CallbackFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.WindowManagerPolicy: void setSafeMode(boolean)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneBase: void setRadioCapability(com.android.internal.telephony.RadioCapability,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.LocationManagerService$4: void onPackageModified(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowAnimator: int getPendingLayoutChanges(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager: void markMessagesAsRead(java.util.ArrayList)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.TintFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager: java.lang.String[] getAccountTypesWithManagementDisabledAsUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.ContrastFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: boolean isDataPossible(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService: boolean readTouchExplorationGrantedAccessibilityServicesLocked(com.android.server.accessibility.AccessibilityManagerService$UserState)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$P2pEnabledState: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.SubscriptionController: void setDefaultDataSubId(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.DateTimeView: boolean shouldSpeakPasswordsForAccessibility()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.IWifiManager: int addOrUpdateNetwork(android.net.wifi.WifiConfiguration)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: void doWork()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.wm.WindowManagerService$2: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.NetworkFactory: void evalRequest(android.net.NetworkFactory$NetworkRequestInfo)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.SubscriptionController: java.lang.String getSubscriptionCountryIso(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$GroupCreatedState: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IMms$Stub$Proxy: boolean archiveStoredConversation(java.lang.String,long,boolean)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<android.app.admin.IDevicePolicyManager: java.util.List getPermittedInputMethods(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void changeIccPin(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.HdmiControlService: void oneTouchPlay(android.hardware.hdmi.IHdmiControlCallback)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.HotplugDetectionAction: void mayDisableSystemAudioAndARC(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.UiAutomation: void disconnect()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.ISms: boolean isSMSPromptEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.bluetooth.BluetoothAdapter: boolean enable()>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void restartRadio()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.appwidget.AppWidgetHostView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.CalendarViewLegacyDelegate$WeekView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.ISub$Stub$Proxy: java.util.List getActiveSubscriptionInfoList()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.am.ActivityManagerService: boolean updateConfigurationLocked(android.content.res.Configuration,com.android.server.am.ActivityRecord,boolean,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: boolean setInternalDataEnabled(boolean)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.util.State: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.RECEIVE_WAP_PUSH", 
  "android.permission.WRITE_SMS", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.RECEIVE_MMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.wifi.WifiStateMachine$VerifyingLinkState: void enter()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.widget.NumberPicker$CustomEditText: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void dispatchSmsDeliveryIntent(byte[][],java.lang.String,int,android.content.BroadcastReceiver)>": [
  "android.permission.RECEIVE_SMS", 
  "android.permission.WRITE_SMS"
 ], 
 "<android.os.IHardwareService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.FLASHLIGHT"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void exitEmergencyCallbackMode()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.PasswordEntryKeyboardHelper: void handleModeChange()>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.location.ILocationManager: void removeUpdates(android.location.ILocationListener,android.app.PendingIntent,java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.filterpacks.base.GLTextureSource: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.telephony.SubscriptionManager: java.util.List getAllSubscriptionInfoList()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.accounts.AccountManager$2: android.accounts.AccountManager$Future2Task start()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.nfc.handover.ConfirmConnectActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.view.menu.ActionMenuItemView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: boolean updateRotationUncheckedLocked(boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getVoiceMailNumber()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: void requestSync(android.accounts.Account,java.lang.String,android.os.Bundle)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.widget.TabWidget: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.RI: void exitEmergencyCallbackMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager: void setActivePasswordState(int,int,int,int,int,int,int,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.String[] getLockTaskPackages(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.tech.NfcF: void connect()>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.PhoneFactory: boolean isSMSPromptEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.UsimPhoneBookManager: java.util.ArrayList loadEfFilesFromUsim()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.SepiaFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.provider.UserDictionary$Words: void addWord(android.content.Context,java.lang.String,int,java.lang.String,java.util.Locale)>": [
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.internal.policy.impl.BarController: void adjustSystemUiVisibilityLw(int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver: void computeChangedWindows()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.PhoneBase: void nvWriteItem(int,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.FlipFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.ServiceStateTracker: void handlePollStateResult(int,android.os.AsyncResult)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.server.display.DisplayPowerController: void animateScreenBrightness(int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.hardware.ConsumerIrManager: android.hardware.ConsumerIrManager$CarrierFrequencyRange[] getCarrierFrequencies()>": [
  "android.permission.TRANSMIT_IR"
 ], 
 "<com.android.server.am.ActivityManagerService$15: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.provider.Telephony$Sms$Sent: android.net.Uri addMessage(int,android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.net.wifi.IWifiManager$Stub: void reconnect()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.updates.TZInfoInstallReceiver: java.security.cert.X509Certificate getCert(android.content.ContentResolver)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.inputmethodservice.KeyboardView: boolean access$400(android.inputmethodservice.KeyboardView,android.view.MotionEvent)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void requestIccSimAuthentication(int,java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.Application: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.tech.IsoDep: void setTimeout(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.commands.bmgr.Bmgr: void doRestore()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.Phone: void queryTTYMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.tech.NfcB: void connect()>": [
  "android.permission.NFC"
 ], 
 "<android.media.IAudioService: void startBluetoothSco(android.os.IBinder,int)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.server.NetworkScoreService: boolean clearScores()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.provider.ContactsContract$Contacts: void markAsContacted(android.content.ContentResolver,long)>": [
  "android.permission.WRITE_CONTACTS"
 ], 
 "<android.filterpacks.imageproc.DrawOverlayFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.BroadcastQueue: void skipCurrentReceiverLocked(com.android.server.am.ProcessRecord)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.os.IVibratorService$Stub: void vibratePattern(int,java.lang.String,long[],int,int,android.os.IBinder)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.webkit.WebViewUpdateService: void access$000(com.android.server.webkit.WebViewUpdateService)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.WifiStateMachine$DriverStartedState: boolean processMessage(android.os.Message)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.ApplicationPackageManager: void freeStorageAndNotify(long,android.content.pm.IPackageDataObserver)>": [
  "android.permission.CLEAR_APP_CACHE"
 ], 
 "<android.app.MediaRouteButton: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.beam.BeamReceiveService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getLine1Number()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.view.IWindowManager: void setAppVisibility(android.os.IBinder,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void getNetworkSelectionMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.beam.BeamTransferManager: void updateFileProgress(float)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.nfc.cardemulation.DefaultRemovedActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.content.SyncStorageEngine: void requestSync(android.accounts.Account,int,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.PhoneBase: void notifyDataConnection(java.lang.String,java.lang.String,com.android.internal.telephony.PhoneConstants$DataState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.media.MediaSessionService: boolean isEnabledNotificationListener(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.videosink.MediaEncoderFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void access$1700(com.android.internal.policy.impl.PhoneWindowManager,android.view.WindowManagerPolicy$WindowState)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: int[] getAdnRecordsSize(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.MediaHTTPConnection: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.INTERNET"
 ], 
 "<android.test.ActivityUnitTestCase$MockParent: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.media.effect.effects.GrainEffect: void release()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.PhoneWindow: void openPanel(com.android.internal.policy.impl.PhoneWindow$PanelFeatureState,android.view.KeyEvent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.location.ILocationManager$Stub$Proxy: boolean addGpsStatusListener(android.location.IGpsStatusListener,java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.wifi.WifiController$FullLockHeldState: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.RECEIVE_WAP_PUSH", 
  "android.permission.WRITE_SMS", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.RECEIVE_MMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.VibratorService: void doCancelVibrateLocked()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.UiccPhoneBookController: com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy getIccPhoneBookInterfaceManagerProxy(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.location.GpsLocationProvider: void <init>(android.content.Context,android.location.ILocationManager,android.os.Looper)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.MountService: void onDaemonConnected()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: boolean saveConfiguration()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.am.ActivityManagerService: void killUid(int,java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.telephony.gsm.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS"
 ], 
 "<android.service.notification.NotificationListenerService: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: void processDelayedActiveSource(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.view.menu.IconMenuItemView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.DocumentaryFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.ISms: boolean enableCellBroadcast(int,int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.speech.tts.TextToSpeechService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.uicc.IccCardProxy: void supplyPuk2(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void setRadioCapability(com.android.internal.telephony.RadioCapability,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.pm.PackageManagerService: void installNewPackageLI(android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.RotateFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accessibilityservice.IAccessibilityServiceConnection: java.util.List getWindows()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.BlackWhiteFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.AutoFixFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.base.RetargetFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: boolean dispatchMessage(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.DateTimeView: void access$200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: boolean isDeviceProvisioned()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoController: java.lang.String getVoiceMailAlphaTag()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.test.mock.MockApplication: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void setImsRegistrationState(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.tech.MifareClassic: void restore(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.app.DisableCarModeActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.view.accessibility.AccessibilityInteractionClient: java.util.List getWindows(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.dataconnection.DctController$TelephonyNetworkFactory: void needNetworkFor(android.net.NetworkRequest,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.fingerprint.FingerprintUtils: int[] getFingerprintIdsForUser(android.content.ContentResolver,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.print.PrintManagerService$PrintManagerImpl: void registerContentObservers()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.IActivityManager: void setPackageScreenCompatMode(java.lang.String,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.AlarmManagerService$2: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void requestTransientBars(android.view.WindowManagerPolicy$WindowState)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.nsd.INsdManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.Connection dialInternal(java.lang.String,com.android.internal.telephony.UUSInfo,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.SmsUsageMonitor$SettingsObserver: void onChange(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.content.SyncManager: void access$800(com.android.server.content.SyncManager,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.wifi.WifiController$ScanOnlyLockHeldState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.voiceinteraction.SoundTriggerHelper: int stopRecognition(int,android.hardware.soundtrigger.IRecognitionStatusCallback)>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: int focusChangedLw(android.view.WindowManagerPolicy$WindowState,android.view.WindowManagerPolicy$WindowState)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.location.ILocationManager$Stub$Proxy: void removeTestProvider(java.lang.String)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<android.speech.tts.TextToSpeechService$SynthesisSpeechItemV1: int getSpeechRate()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.storage.DeviceStorageMonitorService: void onStartUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: boolean removeUser(android.content.ComponentName,android.os.UserHandle)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.PosterizeFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.ImageButton: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.bluetooth.IBluetoothManager$Stub: boolean enable()>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.pm.PackageManagerService: android.content.pm.PackageParser$Package scanPackageDirtyLI(android.content.pm.PackageParser$Package,int,int,long,android.os.UserHandle)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: boolean getCrossProfileCallerIdDisabled(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.IEthernetManager: void removeListener(android.net.IEthernetServiceListener)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.accounts.IAccountManager: void addAccountAsUser(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle,int)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<android.location.ILocationManager$Stub$Proxy: java.lang.String getBestProvider(android.location.Criteria,boolean)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.RI: void setCallWaiting(boolean,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.tech.MifareClassic: void close()>": [
  "android.permission.NFC"
 ], 
 "<android.view.IWindowSession: boolean performDrag(android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.NumberPicker$CustomEditText: void updateTextServicesLocaleLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.BluetoothManagerService: boolean disable(boolean)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setCdmaBroadcastActivation(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.INfcAdapter$Stub$Proxy: boolean enable()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void setProfileEnabled(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.INetworkPolicyManager: android.net.NetworkQuotaInfo getNetworkQuotaInfo(android.net.NetworkState)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.media.IAudioService$Stub: void setSpeakerphoneOn(boolean)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.nfc.handover.BluetoothPeripheralHandover: void nextStepDisconnect()>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.widget.multiwaveview.GlowPadView: void doFinish()>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void updatePhoneObject(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.internal.telephony.IMms$Stub: android.net.Uri addMultimediaMessageDraft(java.lang.String,android.net.Uri)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getMsisdn()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.view.WindowManagerPolicy: boolean performHapticFeedbackLw(android.view.WindowManagerPolicy$WindowState,int,boolean)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CellBroadcastHandler: java.lang.String getLogRecString(android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.inputmethodservice.KeyboardView: boolean onLongPress(android.inputmethodservice.Keyboard$Key)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.RI: void onRadioAvailable()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.SupplicantStateTracker$ScanState: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.RECEIVE_WAP_PUSH", 
  "android.permission.WRITE_SMS", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.RECEIVE_MMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.ims.ImsCall: void setListener(com.android.ims.ImsCall$Listener,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.IWallpaperManager$Stub$Proxy: android.os.ParcelFileDescriptor setWallpaper(java.lang.String)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.ActivityManager: void setPackageScreenCompatMode(java.lang.String,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.media.AudioService$AudioHandler: void onPlaySoundEffect(int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: boolean isApnTypeAvailable(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.Space: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.SimpleImageFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.IBatteryStats$Stub: void noteBluetoothOn()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getVoiceMailAlphaTag()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: boolean hasMatchedTetherApnSetting()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.ContextImpl: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.inputmethodservice.AbstractInputMethodService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.content.SyncManager: void sendSyncFinishedOrCanceledMessage(com.android.server.content.SyncManager$ActiveSyncContext,android.content.SyncResult)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.am.BroadcastQueue: void processNextBroadcast(boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.handover.ConfirmConnectActivity: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.telephony.SmsManager: boolean updateStoredMessageStatus(android.net.Uri,android.content.ContentValues)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<android.app.Service: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.media.ClosedCaptionWidget$CCLineBox: boolean performLongClick()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.content.ContentService: void systemReady()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.content.IContentService: void syncAsUser(android.content.SyncRequest,int)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void updateImsPhone()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.SubscriptionController: java.util.List getSubInfoUsingSlotIdWithCheck(int,boolean)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: void setMute(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.CantAddAccountActivity: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void notifyDataConnection(java.lang.String,java.lang.String,com.android.internal.telephony.PhoneConstants$DataState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.print.IPrintManager$Stub: void destroyPrinterDiscoverySession(android.print.IPrinterDiscoveryObserver,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.view.menu.IconMenuItemView: void updateTextServicesLocaleLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IccProvider: boolean addIccRecordToEf(int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,int)>": [
  "android.permission.WRITE_CONTACTS"
 ], 
 "<android.nfc.INfcCardEmulation: boolean isDefaultServiceForAid(int,android.content.ComponentName,java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.NFC"
 ], 
 "<com.android.commands.bmgr.Bmgr: void doRestoreAll(long,java.util.HashSet)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActiveServices: void serviceTimeout(com.android.server.am.ProcessRecord)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.sip.ISipService$Stub$Proxy: boolean isOpened(java.lang.String)>": [
  "android.permission.USE_SIP"
 ], 
 "<android.os.SystemVibrator: void vibrate(long,android.media.AudioAttributes)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.IccCard: void supplyPin(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.AliasActivity: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.dataconnection.DataConnection$DcActivatingState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ISms$Stub: void sendMultipartTextForSubscriber(int,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>": [
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void setRadioCapability(com.android.internal.telephony.RadioCapability,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.commands.am.Am: void runStartUserInBackground()>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.os.IPowerManager: void releaseWakeLock(android.os.IBinder,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ISms$Stub: void sendMultipartText(java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>": [
  "android.permission.SEND_SMS", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.hdmi.SendKeyAction: void addAndStartAction(com.android.server.hdmi.HdmiCecFeatureAction)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.CalendarView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: boolean handlePinMmi(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void onRoamingOn()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void onSetPhoneRCDone(java.util.ArrayList)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.Session: int addWithoutInputChannel(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.SYSTEM_ALERT_WINDOW", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.accessibility.EventStreamTransformation: void clear()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.Connection: void separate()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void fixTimeZone(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.preference.PreferenceFrameLayout: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void queryAvailableBandMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.print.PrintManagerService$PrintManagerImpl: void destroyPrinterDiscoverySession(android.print.IPrinterDiscoveryObserver,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry: void notifyDataConnection(int,boolean,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.NetworkCapabilities,int,boolean)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: boolean getGlobalBoolean(java.lang.String,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager: void setPasswordMinimumLength(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: void onActionTapAndHold(android.view.MotionEvent,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.IntentService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.filterpacks.imageproc.ToRGBFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.INfcTag$Stub$Proxy: int setTimeout(int,int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.sip.SipSessionGroup: void processIOException(javax.sip.IOExceptionEvent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.uicc.RuimFileHandler: void updateEFLinearFixed(int,int,byte[],java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.MediaHTTPConnection: void seekTo(long)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.server.connectivity.PacManager: void access$700(com.android.server.connectivity.PacManager)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.widget.LockPatternUtils: void clearLock(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.Invert: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.service.wallpaper.WallpaperService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.view.WindowManagerPolicy: void applyPostLayoutPolicyLw(android.view.WindowManagerPolicy$WindowState,android.view.WindowManager$LayoutParams,android.view.WindowManagerPolicy$WindowState)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void invokeOemRilRequestStrings(java.lang.String[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.INfcTag$Stub: void resetTimeouts()>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.PhoneBase: void setUiTTYMode(int,android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.uicc.IsimFileHandler: void loadEFLinearFixed(int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.CompatModeDialog$1: void onCheckedChanged(android.widget.CompoundButton,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void setUiTTYMode(int,android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture editProperties(java.lang.String,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$1: void onDeleteGroup(int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ServiceStateTracker: void reRegisterNetwork(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: java.util.List getAllCellInfo()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void cancelPendingUssd(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cat.RilMessageDecoder$StateStart: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.ims.internal.IImsEcbmListener$Stub: void exitedECBM()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.am.ActivityManagerService: boolean killPackageProcessesLocked(java.lang.String,int,int,int,boolean,boolean,boolean,boolean,java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.NsdService$NsdStateMachine: void <init>(com.android.server.NsdService,java.lang.String)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.LinearLayout: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterfw.core.FilterGraph: void tearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.INfcAdapter: void setP2pModes(int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void finalize()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.lights.LightsService: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.content.ContentService: com.android.server.content.SyncManager getSyncManager()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void handleCallWaitingInfo(com.android.internal.telephony.cdma.CdmaCallWaitingNotification)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.tv.TvInputService: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.app.NetInitiatedActivity: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.view.IWindowManager: void disableKeyguard(android.os.IBinder,java.lang.String)>": [
  "android.permission.DISABLE_KEYGUARD"
 ], 
 "<com.android.internal.telephony.SubscriptionController: int setIconTint(int,int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService$1$1: void run()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.BaseCommands: void getRadioCapability(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void getCallWaiting(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.connectivity.DataConnectionStats: void startMonitoring()>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.print.PrintManagerService$PrintManagerImpl: void startPrinterStateTracking(android.print.PrinterId,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.view.menu.ActionMenuItemView: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.sip.ISipService: android.net.sip.SipProfile[] getListOfProfiles()>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.internal.telephony.UiccPhoneBookController: java.util.List getAdnRecordsInEf(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.filterpacks.videosrc.SurfaceTextureSource: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.content.IContentService$Stub: void cancelRequest(android.content.SyncRequest)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.internal.view.menu.IconMenuItemView: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture updateCredentials(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.server.hdmi.HdmiControlService: void onHotplug(int,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: android.content.res.Configuration computeNewConfiguration()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.INfcAdapter$Stub: boolean enable()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void setMute(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.location.LocationBasedCountryDetector: android.location.Location getLastKnownLocation()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void handleCdmaSubscriptionSource(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.internal.telephony.gsm.GsmConnection: void releaseWakeLock()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.EthernetManager: void addListener(android.net.EthernetManager$Listener)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void onCleanUpConnection(boolean,int,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.tech.NfcF: int getTimeout()>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.notification.DowntimeConditionProvider: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.Connection dial(java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.FixedRotationFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.IWifiManager: boolean releaseWifiLock(android.os.IBinder)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.hardware.IConsumerIrService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.TRANSMIT_IR"
 ], 
 "<com.android.server.VibratorService: void access$300(com.android.server.VibratorService)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<android.app.backup.BackupAgent: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.display.RampAnimator$Listener: void onAnimationEnd()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.TextClock: void setFormat24Hour(java.lang.CharSequence)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.telecom.ConnectionService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.app.AlertActivity: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.WifiScanningServiceImpl$WifiScanningStateMachine: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.AlarmManagerService$AlarmThread: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.AccountManager$10: android.accounts.AccountManagerFuture start()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<android.net.IEthernetManager: void addListener(android.net.IEthernetServiceListener)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.gsm.UsimPhoneBookManager: void readPbrFileAndWait()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmInboundSmsHandler: void notifyAndAcknowledgeLastIncomingSms(boolean,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.ToGrayFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevice: boolean onMessage(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService: boolean access$5800(com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: void enableScreenIfNeeded()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.FlipFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.IContentService: boolean isSyncActive(android.accounts.Account,java.lang.String,android.content.ComponentName)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<android.hardware.location.IGeofenceHardware$Stub$Proxy: boolean registerForMonitorStateChangeCallback(int,android.hardware.location.IGeofenceHardwareMonitorCallback)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.gsm.GsmConnection: void finalize()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityStackSupervisor: void handleDisplayAddedLocked(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.location.ILocationManager$Stub$Proxy: void removeUpdates(android.location.ILocationListener,android.app.PendingIntent,java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.filterpacks.base.OutputStreamTarget: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.BlendFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: void launchRoutingControl(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void queryTTYMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.uicc.SIMRecords: void onReady()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IMms: android.net.Uri addTextMessageDraft(java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.ISms$Stub$Proxy: void setPremiumSmsPermission(java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.print.PrintManagerService: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.inputmethod.InputMethodSubtypeSwitchingController$InputMethodAndSubtypeList: java.util.List getSortedInputMethodAndSubtypeList()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipConnection$1: void onCallEnded(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accessibility.ScreenMagnifier$ScreenStateObserver: void handleOnScreenStateChange(java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.cardemulation.TapAgainDialog: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.VibratorService: void doVibratorOn(long,int,int)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: void renameAccount(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.uicc.RuimRecords: void onAllRecordsLoaded()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.cardemulation.CardEmulation: boolean setDefaultServiceForCategory(android.content.ComponentName,java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.NFC"
 ], 
 "<android.bluetooth.BluetoothPan: void finalize()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.speech.tts.TextToSpeechService$SynthesisSpeechItemV1: void setRequestParams(android.speech.tts.SynthesisRequest)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.sip.SipService$SipAutoReg: boolean notCurrentSession(android.net.sip.ISipSession)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void setRadioCapability(com.android.internal.telephony.RadioCapability,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void setRadioCapability(com.android.internal.telephony.RadioCapability,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.NegativeFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.uicc.SIMRecords: void getSpnFsm(boolean,android.os.AsyncResult)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.commands.wm.Wm: void runDisplayDensity()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.notification.NotificationIntrusivenessExtractor$1: void run()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.pm.PackageManagerService: void getPackageSizeInfo(java.lang.String,int,android.content.pm.IPackageStatsObserver)>": [
  "android.permission.GET_PACKAGE_SIZE"
 ], 
 "<android.location.ILocationManager$Stub$Proxy: void reportLocation(android.location.Location,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.power.PowerManagerService$BinderService: void acquireWakeLock(android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.effect.effects.ContrastEffect: void apply(int,int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.wifi.WifiWatchdogStateMachine$WatchdogDisabledState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.textservice.ITextServicesManager$Stub: void setCurrentSpellChecker(java.lang.String,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.job.JobServiceContext$JobServiceHandler: void handleFinishedH(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.CrossProcessFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.gsm.GsmSMSDispatcher: void sendSms(com.android.internal.telephony.SMSDispatcher$SmsTracker)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.internal.view.IInputMethodManager$Stub: boolean setCurrentInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.carrier.CarrierMessagingService: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.PhoneFactory: int getSMSSubscription()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.WebVttRenderingWidget$SpanLayout: void setStyle(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.app.PlatLogoActivity$1: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.media.SubtitleController: void doSelectTrack(android.media.SubtitleTrack)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wm.WindowManagerService: void setOverscanLocked(com.android.server.wm.DisplayContent,int,int,int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.TextClock: boolean is24HourModeEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.app.ResolverActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setImsRegistrationState(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.pm.PackageManagerService: void <init>(android.content.Context,com.android.server.pm.Installer,boolean,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.content.SyncManager$8: void onServiceChanged(android.content.SyncAdapterType,int,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.TextServicesManagerService: void setSpellCheckerEnabled(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.cardemulation.OffHostApduService: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.IAccountManager: void addAccount(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.uiautomator.core.UiAutomationShellWrapper: void connect()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.NumberPicker$CustomEditText: boolean access$1200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.effect.effects.DuotoneEffect: void release()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.ShutdownActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.nfc.cardemulation.CardEmulationManager$CardEmulationInterface: boolean isDefaultServiceForCategory(int,android.content.ComponentName,java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<com.android.server.am.ActivityStack: void setVisibile(com.android.server.am.ActivityRecord,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.FrameLayout: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void enableLocationUpdates()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.IBluetoothManager$Stub$Proxy: boolean disable(boolean)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.accounts.AccountManager: android.accounts.AccountManagerFuture addAccountAsUser(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.server.sip.SipService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_SIP"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void supplyIccPin(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.commands.monkey.Monkey: boolean getSystemInterfaces()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.SepiaFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.ChooseAccountTypeActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.SupplicantStateTracker$DefaultState: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.media.IAudioService$Stub: void stopBluetoothSco(android.os.IBinder)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.server.wm.WindowManagerService: void setHoldScreenLocked(com.android.server.wm.Session)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.MmsServiceBroker: android.net.Uri access$1000()>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.am.ActivityManagerService: boolean handleAppCrashLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wm.WindowManagerService: void handleDisplayChangedLocked(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.ISub: int getDefaultSubId()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.DnsPinger: java.net.InetAddress getDefaultDns()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.ChooseAccountTypeActivity: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.am.ActivityManagerService: void killApplicationWithAppId(java.lang.String,int,java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.IEthernetManager$Stub$Proxy: void removeListener(android.net.IEthernetServiceListener)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.test.mock.MockContentResolver: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.server.wifi.SupplicantStateTracker: java.lang.String toString()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void setPowerStateToDesired()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.InputMethodManagerService: void updateKeyboardFromSettingsLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.IWallpaperManager: void setDimensionHints(int,int)>": [
  "android.permission.SET_WALLPAPER_HINTS"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void stopDtmf()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void setAndBroadcastNetworkSetTime(long)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void finishScreenTurningOn()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.IUiAutomationConnection: void connect(android.accessibilityservice.IAccessibilityServiceClient)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.NsdService$NsdStateMachine: java.lang.String getLogRecString(android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.widget.ILockSettings$Stub$Proxy: void setLockPassword(java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.display.DisplayManagerService: void access$4100(com.android.server.display.DisplayManagerService,int,android.view.DisplayInfo)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.hdmi.NewDeviceAction: boolean mayProcessCommandIfCached(int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.DigitalClock: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.effect.effects.StraightenEffect: void apply(int,int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void setPasswordMinimumNonLetter(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getImeiForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.media.tv.TvInputInfo$TvInputSettings: java.util.Set getHiddenTvInputIds(android.content.Context,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.location.LocationBasedCountryDetector: java.util.List getEnabledProviders()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void updateImsPhone()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.content.SyncManager: void updateRunningAccounts()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.accessibilityservice.AccessibilityService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.INfcAdapter$Stub: void invokeBeam()>": [
  "android.permission.VIBRATE", 
  "android.permission.NFC"
 ], 
 "<com.android.server.hdmi.RequestArcAction: boolean processCommand(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accessibility.ScreenMagnifier: void handleOnRectangleOnScreenRequested(int,int,int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.content.IContentService$Stub: void sync(android.content.SyncRequest)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.server.wm.WindowManagerService: void performLayoutLockedInner(com.android.server.wm.DisplayContent,boolean,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.telephony.TelephonyManager: int getDefaultSim()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: void setForcedDisplaySizeLocked(com.android.server.wm.DisplayContent,int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindow$DecorView: boolean dispatchKeyEvent(android.view.KeyEvent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: boolean getAnyDataEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.INfcAdapter: boolean enableNdefPush()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.input.InputManagerService: long interceptKeyBeforeDispatching(com.android.server.input.InputWindowHandle,android.view.KeyEvent,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.text.StringSource: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.nfc.INfcAdapter$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.BLUETOOTH", 
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void getSubscriptionInfoAndStartPollingThreads()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.nfc.cardemulation.CardEmulationManager: boolean isServiceRegistered(int,android.content.ComponentName)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<com.android.server.content.SyncManager: void cancelActiveSync(com.android.server.content.SyncStorageEngine$EndPoint,android.os.Bundle)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.filterpacks.imageproc.PosterizeFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.test.mock.MockContentResolver: int getIsSyncableAsUser(android.accounts.Account,java.lang.String,int)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.filterpacks.base.FrameFetch: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager: boolean setCellBroadcastConfig(com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.updates.SELinuxPolicyInstallReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.power.PowerManagerService: void access$4800(com.android.server.power.PowerManagerService,float)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.PhoneBase: void shutdownRadio()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: android.content.Entity next()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.filterpacks.imageproc.ToGrayFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void setSecureSetting(android.content.ComponentName,java.lang.String,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.Session: int add(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.SYSTEM_ALERT_WINDOW", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.accessibility.TouchExplorer: void access$1700(com.android.server.accessibility.TouchExplorer,android.view.MotionEvent,int,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.RemoteViewsService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceCategoryProgramHandler: void onQuitting()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.service.wallpaper.WallpaperSettingsActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.ResizeFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<java.net.DatagramSocket: void <init>(int)>": [
  "android.permission.INTERNET"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: boolean isSyncPending(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<android.test.mock.MockContentResolver: void requestSyncAsUser(android.accounts.Account,java.lang.String,int,android.os.Bundle)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.media.effect.effects.NegativeEffect: void release()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.DisableCarModeActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.UsimDataDownloadHandler: void sendSmsAckForEnvelopeResponse(com.android.internal.telephony.uicc.IccIoResult,int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.Invert: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.net.wifi.IWifiManager$Stub: void disableEphemeralNetwork(java.lang.String)>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.app.NativeActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.notification.ValidateNotificationPeople: com.android.server.notification.ValidateNotificationPeople$LookupResult resolveEmailContact(android.content.Context,java.lang.String)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.net.NetworkPolicyManager: android.net.NetworkPolicy[] getNetworkPolicies()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.pm.PackageManagerService: void access$2300(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallArgs,com.android.server.pm.PackageManagerService$PackageInstalledInfo)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.view.accessibility.IAccessibilityManager: void unregisterUiTestAutomationService(android.accessibilityservice.IAccessibilityServiceClient)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.GhostView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.QuickContactBadge: void onClick(android.view.View)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.app.IntentService: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wm.WindowManagerService: void requestTraversal()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.LomoishFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.widget.LockPatternUtils: java.lang.String getSalt(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.os.IDropBoxManagerService: void add(android.os.DropBoxManager$Entry)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.RequestArcTerminationAction: void disableArcTransmission()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneSubInfo: java.lang.String getVoiceMailAlphaTag()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.wifi.WifiStateMachine$ScanModeState: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService$LocalService: void setMagnificationCallbacks(android.view.WindowManagerInternal$MagnificationCallbacks)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.admin.IDevicePolicyManager: void addCrossProfileIntentFilter(android.content.ComponentName,android.content.IntentFilter,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.RemoteViewsService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.pm.IPackageManager$Stub: boolean setInstallLocation(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$3: void onCallProgressing(com.android.ims.ImsCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.pm.Installer: void onBootPhase(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void invokeOemRilRequestStrings(java.lang.String[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.WifiManager: boolean isWifiScannerSupported()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.nfc.INfcTag$Stub$Proxy: int reconnect(int)>": [
  "android.permission.NFC"
 ], 
 "<android.app.Service: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void setRadioCapability(com.android.internal.telephony.RadioCapability,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.display.DisplayManagerService$LocalService: void initPowerManagement(android.hardware.display.DisplayManagerInternal$DisplayPowerCallbacks,android.os.Handler,android.hardware.SensorManager)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void access$4300(com.android.server.wifi.WifiStateMachine,int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void onVoiceCallEnded()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.TelephonyRegistry: void notifyDataConnectionFailedForSubscriber(int,java.lang.String,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wm.WindowManagerService: int handleAppTransitionReadyLocked(com.android.server.wm.WindowList)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.provider.Contacts$Settings: java.lang.String getSetting(android.content.ContentResolver,java.lang.String,java.lang.String)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.widget.CheckedTextView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.notification.NotificationManagerService: void access$3700(com.android.server.notification.NotificationManagerService,com.android.server.notification.NotificationRecord)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.provider.ContactsContract$PinnedPositions: void pin(android.content.ContentResolver,long,int)>": [
  "android.permission.WRITE_CONTACTS"
 ], 
 "<android.os.SystemVibrator: void vibrate(int,java.lang.String,long,android.media.AudioAttributes)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.net.IEthernetManager: android.net.IpConfiguration getConfiguration()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.provider.Settings$System: void getConfiguration(android.content.ContentResolver,android.content.res.Configuration)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.telephony.SmsManager: boolean disableCellBroadcastRange(int,int,int)>": [
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.server.content.SyncManager$ActiveSyncContext: void <init>(com.android.server.content.SyncManager,com.android.server.content.SyncOperation,long,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.DhcpStateMachine: java.lang.String getLogRecString(android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.notification.NextAlarmConditionProvider: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager$9: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.LocationManagerService: boolean addGpsMeasurementsListener(android.location.IGpsMeasurementsListener,java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.power.PowerManagerService$BinderService: void updateWakeLockWorkSource(android.os.IBinder,android.os.WorkSource,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ReceiverRestrictedContext: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.media.effect.effects.RotateEffect: void apply(int,int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.Phone: void setSmscAddress(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.provider.Telephony$Sms$Draft: android.net.Uri addMessage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.ProxyController: void <init>(android.content.Context,com.android.internal.telephony.PhoneProxy[],com.android.internal.telephony.uicc.UiccController,com.android.internal.telephony.CommandsInterface[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getHardwareConfig(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityRecord activityIdleInternalLocked(android.os.IBinder,boolean,android.content.res.Configuration)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.admin.IDevicePolicyManager: void setApplicationRestrictions(android.content.ComponentName,java.lang.String,android.os.Bundle)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.backup.FullBackupJob: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.media.AsyncPlayer: void enqueueLocked(android.media.AsyncPlayer$Command)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.content.SyncManager: void access$100(com.android.server.content.SyncManager)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.SMSDispatcher: boolean denyIfQueueLimitReached(com.android.internal.telephony.SMSDispatcher$SmsTracker)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.accessibility.ScreenMagnifier: void onDestroy()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.VideoView: void openVideo()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.NfcService$TagService: int getTimeout(int)>": [
  "android.permission.NFC"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordMinimumLowerCase(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void setUiTTYMode(int,android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiApConfigStore$ActiveState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.backup.FullBackupJob: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.view.IWindowManager$Stub: void setAppVisibility(android.os.IBinder,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getDeviceSvn()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.nfc.NfcAdapter: boolean disableNdefPush()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void finishKeyguardDrawn()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void access$17600(com.android.server.wifi.WifiStateMachine)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wm.WindowManagerService: boolean checkWaitingForWindowsLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.IIccPhoneBook$Stub: int[] getAdnRecordsSizeForSubscriber(int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accessibility.TouchExplorer: void sendTouchExplorationGestureStartAndHoverEnterIfNeeded(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.net.NetworkStatsService: android.net.NetworkStats getDataLayerSnapshotForUid(int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void hangupAndPowerOff()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: int getPasswordMinimumLength(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager: void setMasterVolumeMuted(android.content.ComponentName,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: java.lang.String getUserData(android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.server.notification.DowntimeConditionProvider: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ISub$Stub$Proxy: android.telephony.SubscriptionInfo getActiveSubscriptionInfoForSimSlotIndex(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void handleSrvccStateChanged(int[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$GroupNegotiationState: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.uicc.RuimRecords: void setLocaleFromCsim()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiStateMachine$TetheringState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.text.StringSource: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.speech.RecognitionService: boolean access$700(android.speech.RecognitionService,android.speech.IRecognitionListener)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<android.hardware.location.GeofenceHardwareImpl: int getAllowedResolutionLevel(int,int)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.notification.ValidateNotificationPeople$2: void run()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.cat.RilMessageDecoder: java.lang.String getLogRecString(android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.Phone: void setUiTTYMode(int,android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.webkit.WebViewFactory: void prepareWebViewInSystemServer()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.FisheyeFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.VideoView: int getAudioSessionId()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.SharpenFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void initForUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.TtmlTrack: void hide()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.backup.BackupManagerService$FullBackupEngine: int backupOnePackage(android.content.pm.PackageInfo)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.sip.SipAudioCall$1: void onCallEstablished(android.net.sip.SipSession,java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.provider.Settings$System: long getLongForUser(android.content.ContentResolver,java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.backup.BackupAgentHelper: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.content.SyncManager$SyncHandler: void runBoundToAdapter(com.android.server.content.SyncManager$ActiveSyncContext,android.os.IBinder)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.accessibilityservice.AccessibilityService: java.util.List getWindows()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.wifi.IWifiManager$Stub: boolean disableNetwork(int)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.app.HeavyWeightSwitcherActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.wifi.WifiAutoJoinController: boolean haveRecentlySeenScoredBssid(android.net.wifi.WifiConfiguration)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv$1: void onInputAdded(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.AccountAuthenticatorActivity: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.backup.FullBackupJob: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.provider.Browser: void deleteFromHistory(android.content.ContentResolver,java.lang.String)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS"
 ], 
 "<android.filterpacks.imageproc.DrawOverlayFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.beam.BeamSendService: void onTransferComplete(com.android.nfc.beam.BeamTransferManager,boolean)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.WapPushOverSms: boolean isDuplicateNotification(android.content.Context,com.google.android.mms.pdu.NotificationInd)>": [
  "android.permission.READ_SMS"
 ], 
 "<android.widget.TextViewWithCircularIndicator: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.backup.BackupManagerService$ProvisionedObserver: void onChange(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.provider.CallLog$Calls: android.net.Uri addCall(com.android.internal.telephony.CallerInfo,android.content.Context,java.lang.String,int,int,int,android.telecom.PhoneAccountHandle,long,int,java.lang.Long)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine: java.lang.String getPersistedDeviceName()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.videosrc.SurfaceTextureSource: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IIccPhoneBook$Stub: boolean updateAdnRecordsInEfByIndexForSubscriber(int,int,java.lang.String,java.lang.String,int,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.WakeLockStateMachine$WaitingState: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.policy.impl.GlobalActions: void onAirplaneModeChanged()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accounts.AccountManagerService$11: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.inputmethodservice.ExtractEditText: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.bluetooth.BluetoothAvrcpController: void <init>(android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.app.IAlarmManager$Stub: void setTimeZone(java.lang.String)>": [
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void setPasswordHistoryLength(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipCommandInterface: void setRadioCapability(com.android.internal.telephony.RadioCapability,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: int getSupportedFeatures()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.nfc.NfcService$TagService: void resetTimeouts()>": [
  "android.permission.NFC"
 ], 
 "<android.net.sip.SipAudioCall: void startAudio()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.policy.impl.GlobalActions$GlobalActionsDialog: void onStart()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getPreferredVoicePrivacy(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.effect.effects.FillLightEffect: void apply(int,int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.nfc.tech.MifareUltralight: byte[] readPages(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: boolean onDisconnect(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ImsSMSDispatcher: void sendRawPdu(com.android.internal.telephony.SMSDispatcher$SmsTracker)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SMS"
 ], 
 "<android.filterpacks.imageproc.ToRGBAFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IMms$Stub$Proxy: boolean updateStoredMessageStatus(java.lang.String,android.net.Uri,android.content.ContentValues)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.internal.telephony.dataconnection.DctController: int access$600(com.android.internal.telephony.dataconnection.DctController,android.net.NetworkRequest,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: int adjustSystemUiVisibilityLw(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.RI: void getIccCardStatus(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.backup.IBackupManager$Stub: void clearBackupData(java.lang.String,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.handover.ConfirmConnectActivity: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.media.AudioManager: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void switchUser(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.os.PowerManager$WakeLock: void finalize()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ISms$Stub$Proxy: void sendDataForSubscriber(int,java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.WiredAccessoryManager$WiredAccessoryObserver: void onUEvent(android.os.UEventObserver$UEvent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void setDataOnRoamingEnabled(boolean)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.ims.ImsCall: void processMergeComplete()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.backup.BackupManagerService$RunInitializeReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.ContrastFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.content.ContentService: boolean isSyncActive(android.accounts.Account,java.lang.String,android.content.ComponentName)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: void executeMessage(android.os.Message)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.SYSTEM_ALERT_WINDOW", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void setMaximumTimeToLock(android.content.ComponentName,long,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.connectivity.NetworkMonitor$DefaultState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.widget.DateTimeView: java.text.DateFormat getDateFormat()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.lights.LightsService: void onBootPhase(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.SpeechRecognizer: void startListening(android.content.Intent)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.RECORD_AUDIO"
 ], 
 "<android.filterpacks.imageproc.NegativeFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: boolean handleInCallMmiCommands(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.BroadcastQueue: void deliverToRegisteredReceiverLocked(com.android.server.am.BroadcastRecord,com.android.server.am.BroadcastFilter,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.content.pm.IPackageManager$Stub$Proxy: boolean setInstallLocation(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void setTTYMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.BluetoothSocket: void initSocketNative()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.usb.UsbSettingsManager$MyPackageMonitor: void onPackageModified(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.notification.NotificationListenerService: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.TextServicesManagerService: void setCurrentSpellCheckerLocked(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcSwitchStateMachine$AttachingState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.ActivityManagerNative: java.util.List getTasks(int,int)>": [
  "android.permission.GET_TASKS"
 ], 
 "<android.widget.EditText: void access$200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.SystemServer: void startBootstrapServices()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.CLEAR_APP_CACHE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.hdmi.HdmiCecController: void handleHotplug(int,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.ChooseAccountActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.IContentService$Stub$Proxy: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.widget.DigitalClock: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.sip.SipAudioCall: void grabWifiHighPerfLock()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.MmsServiceBroker$BinderService: android.net.Uri importMultimediaMessage(java.lang.String,android.net.Uri,java.lang.String,long,boolean,boolean)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.pm.PackageManagerService$14: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.VibratorService: void systemReady()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.NfcService$TagService: int ndefWrite(int,android.nfc.NdefMessage)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.app.ResolverActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordMinimumNumeric(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.FlipFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.job.JobServiceContext$JobServiceHandler: void closeAndCleanupJobH(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.AdapterView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.UsimDataDownloadHandler: void acknowledgeSmsWithError(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService: void access$2100(com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.ImageEncoder: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityManagerService$Lifecycle: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.videosrc.CameraSource: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setScreenCaptureDisabled(android.content.ComponentName,int,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.sip.SipSessionGroup$SipSessionImpl: void access$1600(com.android.server.sip.SipSessionGroup$SipSessionImpl,java.util.EventObject)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void acknowledgeLastIncomingGsmSms(boolean,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityRecord: void setTask(com.android.server.am.TaskRecord,com.android.server.am.TaskRecord)>": [
  "android.permission.SEND_SMS", 
  "android.permission.DISABLE_KEYGUARD", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.telephony.TelephonyManager: java.lang.String getVoiceMailAlphaTag(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.content.ContentService: void syncAsUser(android.content.SyncRequest,int)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.net.wifi.IWifiManager: void enableVerboseLogging(int)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.content.SyncActivityTooManyDeletes: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.sip.ISipService: void open3(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_SIP"
 ], 
 "<com.android.server.wifi.WifiController$NoLockHeldState: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.RECEIVE_WAP_PUSH", 
  "android.permission.WRITE_SMS", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.RECEIVE_MMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.READ_SMS"
 ], 
 "<android.provider.Settings$Secure: float getFloat(android.content.ContentResolver,java.lang.String,float)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.cardemulation.HostApduService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.display.WifiDisplayController$1: void onChange(boolean,android.net.Uri)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.WifiManager: boolean isPasspointSupported()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: void <init>(android.content.Context,java.lang.String,com.android.internal.telephony.cdma.CdmaCallTracker,com.android.internal.telephony.cdma.CdmaCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.provider.Contacts$People: android.net.Uri addToGroup(android.content.ContentResolver,long,long)>": [
  "android.permission.WRITE_CONTACTS"
 ], 
 "<com.android.server.location.GpsLocationProvider$4: void run()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: boolean removeAccountExplicitly(android.accounts.Account)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.server.ethernet.EthernetServiceImpl: void removeListener(android.net.IEthernetServiceListener)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.server.BluetoothA2dpService: boolean suspendSink(android.bluetooth.BluetoothDevice)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.widget.Button: boolean shouldSpeakPasswordsForAccessibility()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.IAccountManager: android.accounts.Account[] getAccountsByTypeForPackage(java.lang.String,java.lang.String)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.commands.bmgr.Bmgr: void doList()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.SmsBroadcastUndelivered: void run()>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.preference.PreferenceActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.admin.IDevicePolicyManager: boolean installCaCert(android.content.ComponentName,byte[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiStateMachine$WaitForP2pDisableState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.backup.BackupManagerService: boolean deviceIsProvisioned()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.commands.monkey.Monkey: int run(java.lang.String[])>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: android.view.textservice.SpellCheckerInfo[] getEnabledSpellCheckers()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IMms: void sendStoredMessage(int,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent)>": [
  "android.permission.SEND_SMS"
 ], 
 "<android.nfc.INfcTag$Stub: int[] getTechList(int)>": [
  "android.permission.NFC"
 ], 
 "<android.filterpacks.imageproc.ToPackedGrayFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.nfc.cardemulation.OffHostApduService: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void <init>(java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipAudioCallAdapter: void onError(android.net.sip.SipAudioCall,int,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.RestrictionsPinActivity: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.IAccountManager: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.PhoneNotifier: void notifyServiceState(com.android.internal.telephony.Phone)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCall: void hangup()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiStateMachine$SupplicantStartedState: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.Chronometer: boolean shouldSpeakPasswordsForAccessibility()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.AdnRecordCache: void updateAdnByIndex(int,com.android.internal.telephony.uicc.AdnRecord,int,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void acknowledgeLastIncomingCdmaSms(boolean,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.power.PowerManagerService: void napInternal(long,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DctController: int getTopPriorityRequestPhoneId()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.usb.UsbService$Lifecycle: void onStart()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.RotateFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.uicc.IccRecords: void setVoiceCallForwardingFlag(int,boolean,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.LockPatternUtils: void saveLockPassword(java.lang.String,int,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.location.SettingInjectorService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void supplyNetworkDepersonalization(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.IVibratorService$Stub$Proxy: void vibrate(int,java.lang.String,long,int,android.os.IBinder)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: android.content.Entity getEntityAndIncrementCursor(android.database.Cursor)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.UsimDataDownloadHandler: void handleDataDownload(com.android.internal.telephony.gsm.SmsMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.print.IPrintManager$Stub$Proxy: void stopPrinterDiscovery(android.print.IPrinterDiscoveryObserver,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.pm.IPackageManager: void performBootDexOpt()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cat.CommandParamsFactory: boolean processSetupCall(com.android.internal.telephony.cat.CommandDetails,java.util.List)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry: void notifyDataConnectionForSubscriber(int,int,boolean,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.NetworkCapabilities,int,boolean)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.ReceiverRestrictedContext: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.print.IPrintManager: void restartPrintJob(android.print.PrintJobId,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.SpeechRecognizer: void handleStopMessage()>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.server.am.BroadcastQueue$AppNotResponding: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.dhimpl.NativeNfcManager: void notifyNdefMessageListeners(com.android.nfc.dhimpl.NativeNfcTag)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.hardware.location.IGeofenceHardware: boolean addCircularFence(int,android.hardware.location.GeofenceHardwareRequestParcelable,android.hardware.location.IGeofenceHardwareCallback)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.app.backup.IBackupManager: void clearBackupData(java.lang.String,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.CursorEntityIterator: android.content.Entity getEntityAndIncrementCursor(android.database.Cursor)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.net.wifi.IWifiManager: java.util.List getScanResults(java.lang.String)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.power.PowerManagerService$BatteryReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.nfc.cardemulation.CardEmulation: boolean setDefaultForNextTap(android.content.ComponentName)>": [
  "android.permission.VIBRATE", 
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyDataConnection(int,boolean,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.NetworkCapabilities,int,boolean)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.WifiStateMachine$DefaultState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.LocationManagerService: java.util.List getProviders(android.location.Criteria,boolean)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevice: boolean handleReportPhysicalAddress(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.content.PackageMonitor: void onSomePackagesChanged()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setCallForward(int,int,int,java.lang.String,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneSubInfo: java.lang.String getLine1Number()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.LocationManagerService: void removeUpdatesLocked(com.android.server.LocationManagerService$Receiver)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiStateMachine$SupplicantStartingState: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.uicc.RuimRecords: void onRecordLoaded()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.IContentService$Stub$Proxy: boolean isSyncPending(android.accounts.Account,java.lang.String,android.content.ComponentName)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: long getMaximumTimeToLock(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CallTracker: void pollCallsWhenSafe()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.Phone: void queryCdmaRoamingPreference(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IIccPhoneBook$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.view.IInputMethodManager$Stub$Proxy: java.util.List getEnabledInputMethodSubtypeList(java.lang.String,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IMms$Stub: android.net.Uri importTextMessage(java.lang.String,java.lang.String,int,java.lang.String,long,boolean,boolean)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.filterpacks.ui.SurfaceRenderFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.backup.FullBackupJob: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void setDataAllowed(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityManagerService: void appNotResponding(com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,boolean,java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.INetworkPolicyManager$Stub: void setNetworkPolicies(android.net.NetworkPolicy[])>": [
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.ISub$Stub$Proxy: int setDataRoaming(int,int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.os.IVibratorService: void cancelVibrate(android.os.IBinder)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.Phone: java.util.List getAllCellInfo()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IntRangeManager: boolean finishUpdate()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.telecom.InCallService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.statusbar.IStatusBarService$Stub: void expandSettingsPanel()>": [
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<android.view.WindowManagerPolicy: void beginPostLayoutPolicyLw(int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.os.storage.ExternalStorageFormatter: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getDataRegistrationState(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.IAccountManager: void confirmCredentialsAsUser(android.accounts.IAccountManagerResponse,android.accounts.Account,android.os.Bundle,boolean,int)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.CellBroadcastHandler: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.ExpandableListActivity: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.RI: void nvResetConfig(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.view.IInputMethodManager$Stub: java.util.List getEnabledInputMethodList()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: void setUniverseTransformLocked(com.android.server.wm.WindowState,float,float,float,float,float,float,float)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.provider.Telephony$Sms$Outbox: android.net.Uri addMessage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean,long)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.print.IPrintManager$Stub: android.os.Bundle print(java.lang.String,android.print.IPrintDocumentAdapter,android.print.PrintAttributes,java.lang.String,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.display.DisplayPowerController: void debounceProximitySensor()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.CertBlacklister: void registerObservers(android.content.ContentResolver)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.hardware.location.GeofenceHardwareImpl: void access$100(android.hardware.location.GeofenceHardwareImpl)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.tech.NfcBarcode: void close()>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.sip.SipService: void access$1300(com.android.server.sip.SipService,android.net.sip.SipProfile,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void access$200(com.android.server.devicepolicy.DevicePolicyManagerService,java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.preference.PreferenceActivity: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.dataconnection.DataConnection: java.lang.String toStringSimple()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.AudioService: void access$7800(android.media.AudioService)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.sip.SipSessionGroup$SipSessionImpl$SipKeepAlive: boolean process(java.util.EventObject)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: int getPasswordMinimumSymbols(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiStateMachine$DisconnectingState: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.usb.UsbSettingsManager$MyPackageMonitor: void onPackageDisappeared(java.lang.String,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getGroupIdLevel1()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.display.DisplayPowerController: void updatePowerState()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService$Service: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.wifi.IWifiManager: int getSupportedFeatures()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.nfc.NfcService$TagService: android.nfc.NdefMessage ndefRead(int)>": [
  "android.permission.NFC"
 ], 
 "<android.app.job.JobService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.input.InputManagerService: void notifySwitch(long,int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.AudioService$AudioHandler: void cleanupPlayer(android.media.MediaPlayer)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.VibratorService: void onInputDeviceRemoved(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.backup.BackupAgent$BackupServiceBinder: void doBackup(android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.content.Context: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.os.RuntimeInit: void wtf(java.lang.String,java.lang.Throwable,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.P2pLinkManager$ConnectTask: void onPostExecute(java.lang.Boolean)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.content.MutableContextWrapper: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: boolean removeNetwork(int)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.policy.impl.RecentApplicationsBackground: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.widget.SlidingTab: boolean onTouchEvent(android.view.MotionEvent)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.usb.UsbDeviceManager$UsbHandler: void updateState(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.IContentService$Stub$Proxy: java.util.List getCurrentSyncs()>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.internal.widget.DialogTitle: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.MediaHTTPConnection: int readAt(long,byte[],int)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.server.am.ActivityManagerService: int access$200(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void setPowerStateToDesired()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.RedEyeFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.SMSDispatcher: void sendRawPdu(com.android.internal.telephony.SMSDispatcher$SmsTracker)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.internal.telephony.dataconnection.DctController: com.android.internal.telephony.dataconnection.DctController makeDctController(com.android.internal.telephony.PhoneProxy[])>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.SubscriptionController: int getActiveSubInfoCount()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.net.wifi.WifiManager: java.util.List getChannelList()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.media.MediaSessionService$SessionManagerImpl$KeyEventWakeLockReceiver: void onTimeout()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cat.CommandParamsFactory: boolean processGetInput(com.android.internal.telephony.cat.CommandDetails,java.util.List)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor: void onPackageDisappeared(java.lang.String,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.AccountManager: android.accounts.AccountManagerFuture updateCredentials(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<android.widget.CheckedTextView: boolean access$1200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiStateMachine$TetheredState: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.tech.NfcB: void reconnect()>": [
  "android.permission.NFC"
 ], 
 "<android.net.sip.ISipService$Stub$Proxy: android.net.sip.ISipSession getPendingSession(java.lang.String)>": [
  "android.permission.USE_SIP"
 ], 
 "<android.filterfw.core.FilterFunction: android.filterfw.core.Frame execute(android.filterfw.core.KeyValueMap)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.RI: void sendEnvelopeWithStatus(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.PosterizeFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.hardware.ConsumerIrManager: void transmit(int,int[])>": [
  "android.permission.TRANSMIT_IR"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void setAndBroadcastNetworkSetTime(long)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.notification.NotificationManagerService: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.INfcCardEmulation: boolean removeAidGroupForService(int,android.content.ComponentName,java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<android.provider.Settings$Secure: long getLongForUser(android.content.ContentResolver,java.lang.String,long,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.MediaFocusControl: void filterMediaKeyEvent(android.view.KeyEvent,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.Vibrator: void vibrate(int,java.lang.String,long[],int,android.media.AudioAttributes)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.dataconnection.DataConnection: android.net.NetworkCapabilities getCopyNetworkCapabilities()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.display.DisplayManagerService: void handleDisplayDeviceChanged(com.android.server.display.DisplayDevice)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.app.ShutdownActivity: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void queryCdmaRoamingPreference(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.tech.MifareClassic: void writeBlock(int,byte[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.nfc.cardemulation.PreferredServices: boolean registerPreferredForegroundService(android.content.ComponentName,int)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void setCdmaRoamingPreference(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void setupDataOnConnectableApns(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.TextClock: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.CheckBox: boolean performLongClick()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.PersistentDataBlockService: void onSwitchUser(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.IccProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.content.SyncManager: void sendCancelSyncsMessage(com.android.server.content.SyncStorageEngine$EndPoint,android.os.Bundle)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.nfc.TechListChooserActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.dataconnection.DataConnection: java.lang.String toString()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindow$RotationWatcher: void dispatchRotationChanged()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.updates.IntentFirewallInstallReceiver: java.security.cert.X509Certificate access$000(com.android.server.updates.ConfigUpdateInstallReceiver,android.content.ContentResolver)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.IWifiManager$Stub: void enableVerboseLogging(int)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.hardware.location.GeofenceHardware: boolean removeGeofence(int,int)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.ISms$Stub: boolean enableCellBroadcast(int,int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.filterpacks.imageproc.ToRGBFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.TelephonyRegistry: void checkListenerPermission(int)>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: android.accounts.AccountManagerFuture start()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<android.view.IWindowManager$Stub$Proxy: int getBaseDisplayDensity(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.content.SyncActivityTooManyDeletes: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setApplicationRestrictions(android.content.ComponentName,java.lang.String,android.os.Bundle)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.ImageSlicer: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.hardware.location.GeofenceHardwareImpl: void reportGeofenceResumeStatus(int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiStateMachine$DefaultState: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.filterpacks.imageproc.GrainFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.DeviceHost$DeviceHostListener: void onLlcpFirstPacketReceived(com.android.nfc.DeviceHost$NfcDepEndpoint)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.ProxyController$RadioCapabilityRunnable: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.location.MockProvider: void setLocation(android.location.Location)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void sendAdminCommandToSelfAndProfilesLocked(java.lang.String,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.inputmethodservice.ExtractEditText: void updateTextServicesLocaleLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.tv.TvInputService: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void onQuitting()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.DatePickerDialog: void updateTitle(int,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.net.NetworkStatsService$2: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void getEnhancedVoicePrivacy(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.IAccountManager: java.lang.String getUserData(android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.uicc.SIMRecords: void setVoiceCallForwardingFlag(int,boolean,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void fixTimeZone(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void queryFacilityLockForApp(java.lang.String,java.lang.String,int,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.effect.effects.BrightnessEffect: void apply(int,int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.provider.Telephony$Sms$Inbox: android.net.Uri addMessage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.INativeDaemonConnectorCallbacks: void onDaemonConnected()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.telephony.SubscriptionManager: int getDefaultSubId()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.RecognitionService: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.dataconnection.DataConnection$DcDisconnectionErrorCreatingConnection: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.location.LocationManager: void removeTestProvider(java.lang.String)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.server.wifi.SupplicantStateTracker$DefaultState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.admin.IDevicePolicyManager: void getRemoveWarning(android.content.ComponentName,android.os.RemoteCallback,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: int getPasswordMinimumLetters(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.app.ShutdownActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.LocationManagerService: void handleLocationChangedLocked(android.location.Location,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.LauncherActivity: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.DocumentaryFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.WifiManager: boolean reassociate()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.location.GpsLocationProvider: void access$3600(com.android.server.location.GpsLocationProvider)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void cancelPendingUssd(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void notifySignalStrength()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.hdmi.HdmiControlService$BinderService$4: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.LocationManagerService: void reportLocation(android.location.Location,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void access$11200(com.android.server.wifi.WifiStateMachine)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.CrossProcessFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.ContextWrapper: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.net.NetworkStatsService: void registerPollAlarmLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.pm.IPackageManager: void freeStorage(long,android.content.IntentSender)>": [
  "android.permission.CLEAR_APP_CACHE"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void restoreSavedNetworkSelection(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.CantAddAccountActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.TelephonyRegistry: void broadcastDataConnectionFailed(java.lang.String,java.lang.String,int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.media.IAudioService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.BLUETOOTH"
 ], 
 "<android.test.IsolatedContext: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevice: com.android.server.hdmi.HdmiCecLocalDevice create(com.android.server.hdmi.HdmiControlService,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneNotifier: void notifyDataConnectionFailed(com.android.internal.telephony.Phone,java.lang.String,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.app.ChooserActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.NetworkTimeUpdateService: void onPollNetworkTime(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.ims.ImsCall$Listener: void onCallProgressing(com.android.ims.ImsCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.power.Notifier: void playWirelessChargingStartedSound()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.inputmethodservice.InputMethodService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.dataconnection.DcSwitchStateMachine$AttachedState: boolean processMessage(android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.QuickContactBadge: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.pm.PackageManagerService: void installPackageLI(com.android.server.pm.PackageManagerService$InstallArgs,com.android.server.pm.PackageManagerService$PackageInstalledInfo)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.view.WindowManagerPolicy$WindowManagerFuncs: void rebootSafeMode(boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.snep.SnepServer$Callback: com.android.nfc.snep.SnepMessage doGet(int,android.nfc.NdefMessage)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: void acquireMulticastLock(android.os.IBinder,java.lang.String)>": [
  "android.permission.CHANGE_WIFI_MULTICAST_STATE"
 ], 
 "<android.media.IAudioService$Stub$Proxy: void reloadAudioSettings()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean setPermittedInputMethods(android.content.ComponentName,java.util.List)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.videosink.MediaEncoderFilter: void startRecording(android.filterfw.core.FilterContext)>": [
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.media.MediaScanner: android.net.Uri scanSingleFile(java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.print.IPrintManager$Stub: void validatePrinters(java.util.List,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.job.JobSchedulerService$JobSchedulerStub: int schedule(android.app.job.JobInfo)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.server.wifi.WifiSettingsStore: boolean getPersistedScanAlwaysAvailable()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.TaskRecord: android.app.ActivityManager$TaskThumbnail getTaskThumbnailLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.BluetoothManagerService: java.lang.String getName()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.widget.DatePickerCalendarDelegate: void setCurrentView(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void notifyCellInfo(java.util.List)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.SystemAudioActionFromAvr: void addAndStartAction(com.android.server.hdmi.HdmiCecFeatureAction)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.beam.BeamReceiveService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.nfc.INfcTag$Stub$Proxy: int ndefMakeReadOnly(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: void onMotionEvent(android.view.MotionEvent,android.view.MotionEvent,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.usb.UsbService$Lifecycle: void onStartUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setAndBroadcastNetworkSetTimeZone(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.net.wifi.IWifiManager$Stub: int getAllowScansWithTraffic()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.wifi.WifiStateMachine$DriverStoppedState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.IAccountManager$Stub: void addAccount(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<android.view.IWindowManager$Stub: void enableScreenIfNeeded()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.am.ActivityStack: void ensureActivitiesVisibleLocked(com.android.server.am.ActivityRecord,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.uicc.IccCardProxy: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface,int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void setDataOnRoamingEnabled(boolean)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.media.ClosedCaptionTrack: void hide()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void enableSingleLocationUpdate()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.ethernet.EthernetNetworkFactory$1: void run()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.media.effect.FilterGraphEffect: void apply(int,int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.accounts.AccountManager$11: android.accounts.AccountManagerFuture start()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<android.filterpacks.imageproc.BitmapOverlayFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.notification.NotificationManagerService$NotificationListeners: void rebindServices()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiWatchdogStateMachine: java.lang.String toString()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.UiAutomationConnection: void connect(android.accessibilityservice.IAccessibilityServiceClient)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.nfc.INfcCardEmulation$Stub$Proxy: boolean setDefaultForNextTap(int,android.content.ComponentName)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<com.android.internal.policy.impl.PhoneWindow: void togglePanel(int,android.view.KeyEvent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.tv.TvInputManagerService: void onStartUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.trust.TrustManagerService$Receiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getCdmaBroadcastConfig(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiScanningServiceImpl$WifiScanningStateMachine: java.lang.String getLogRecString(android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.SmsUsageMonitor$SettingsObserver: void <init>(android.os.Handler,android.content.Context,java.util.concurrent.atomic.AtomicBoolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.UiModeManagerService: void access$100(com.android.server.UiModeManagerService,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void handlePostDhcpSetup()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.print.PrintManagerService: void onBootPhase(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.base.RetargetFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.view.IWindowManager: void startFreezingScreen(int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.ethernet.EthernetServiceImpl: void addListener(android.net.IEthernetServiceListener)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.hdmi.HdmiControlService$BinderService$1: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.NumberPicker$AccessibilityNodeProviderImpl: void sendAccessibilityEventForVirtualView(int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.FillLightFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void setPreferredNetworkType(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.IContentService$Stub: boolean getSyncAutomaticallyAsUser(android.accounts.Account,java.lang.String,int)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.server.trust.TrustManagerService: void refreshDeviceLockedForUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.ActiveServices$ServiceMap: void rescheduleDelayedStarts()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: java.util.List privatizeCellInfoList(java.util.List)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void <init>(java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.backup.BackupManagerService$ActiveRestoreSession: int getAvailableRestoreSets(android.app.backup.IRestoreObserver)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IMms$Stub$Proxy: android.net.Uri addMultimediaMessageDraft(java.lang.String,android.net.Uri)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.BatteryService: void updateBatteryWarningLevelLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void notifyDataConnection(java.lang.String,java.lang.String,com.android.internal.telephony.PhoneConstants$DataState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipConnection: void separate()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.nfc.INfcCardEmulation$Stub$Proxy: boolean isDefaultServiceForCategory(int,android.content.ComponentName,java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<com.android.server.backup.BackupManagerService: void clearBackupData(java.lang.String,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void wipeDataLocked(boolean,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.ContentResolver: boolean isSyncActive(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<android.nfc.INfcAdapter$Stub$Proxy: void invokeBeam()>": [
  "android.permission.VIBRATE", 
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.base.InputStreamSource: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.filterpacks.imageproc.DrawOverlayFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.NetworkScoreService: void systemReady()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.lights.LightsService$1: void setFlashlightEnabled(boolean)>": [
  "android.permission.FLASHLIGHT"
 ], 
 "<com.android.server.wifi.WifiWatchdogStateMachine: java.lang.String getLogRecString(android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.usb.UsbDeviceManager$AdbSettingsObserver: void onChange(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.ethernet.EthernetServiceImpl: boolean isAvailable()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: void enableVerboseLogging(int)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.cat.IconLoader: void readIconData()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.updates.SELinuxPolicyInstallReceiver: java.security.cert.X509Certificate getCert(android.content.ContentResolver)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.videosrc.MediaSource: boolean setupMediaPlayer(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void setNotification(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setSecureSetting(android.content.ComponentName,java.lang.String,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiController$ApEnabledState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.print.PrintManager: void cancelPrintJob(android.print.PrintJobId)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.IContentService: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.app.AliasActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.view.IWindowSession$Stub$Proxy: boolean performDrag(android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void setCellInfoListRate(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ExpandableListActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.filterpacks.imageproc.SepiaFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.uicc.UsimFileHandler: void updateEFTransparent(int,byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.IAudioService: void reloadAudioSettings()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry$Stub: void notifySignalStrength(android.telephony.SignalStrength)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.am.ActivityStackSupervisor: void setLockTaskModeLocked(com.android.server.am.TaskRecord,boolean,java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.DISABLE_KEYGUARD", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void clearPackagePersistentPreferredActivities(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.app.PlatLogoActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.media.AudioManager: void stopBluetoothSco()>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.server.twilight.TwilightService: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: android.content.ComponentName getRestrictionsProvider(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.PersistentDataBlockService: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getNaiForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.commands.dpm.Dpm: void runSetActiveAdmin()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void goingToSleep(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.LocationManagerService$4: void onSomePackagesChanged()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.RI: void getCurrentCalls(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiStateMachine$DriverStartingState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceCategoryProgramHandler$1: void sendScpResults()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.power.PowerManagerService: void onBootPhase(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.printservice.PrintService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.printservice.PrintService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.AlarmManagerService: void sendNextAlarmClockChanged()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.IccCardProxy: void setVoiceRadioTech(int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver: void performComputeChangedWindowsNotLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void setGlobalSetting(android.content.ComponentName,java.lang.String,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.InboundSmsHandler: android.net.Uri writeInboxMessage(android.content.Intent)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<android.provider.Contacts$People: android.net.Uri createPersonInMyContactsGroup(android.content.ContentResolver,android.content.ContentValues)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void nvReadItem(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<java.net.URLConnection: java.io.InputStream getInputStream()>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.server.am.ActivityStackSupervisor$ActivityContainer: void detachLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.media.IMediaHTTPConnection$Stub: java.lang.String getMIMEType()>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.telephony.RI: void supplyNetworkDepersonalization(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.base.FrameStore: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ProxyController: boolean setRadioCapability(android.telephony.RadioAccessFamily[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.os.BaseCommand: void run(java.lang.String[])>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.KILL_BACKGROUND_PROCESSES", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.RESTART_PACKAGES", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: boolean enableNetwork(int,boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.am.ActivityStackSupervisor: void onDisplayRemoved(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.telecom.ConnectionService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.ISms$Stub$Proxy: void sendMultipartText(java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>": [
  "android.permission.SEND_SMS", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SMS"
 ], 
 "<android.provider.ContactsContract$Data: android.net.Uri getContactLookupUri(android.content.ContentResolver,android.net.Uri)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.dataconnection.DataConnection$DcActivatingState: boolean processMessage(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.AccountManager: boolean addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<android.widget.TwoLineListItem: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void handleSrvccStateChanged(int[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.ILockSettings: java.lang.String getString(java.lang.String,java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.bluetooth.IBluetoothManager$Stub$Proxy: void registerStateChangeCallback(android.bluetooth.IBluetoothStateChangeCallback)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.notification.DowntimeConditionProvider: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.WifiStateMachine$DriverStoppedState: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.net.wifi.IWifiManager: void startScan(android.net.wifi.ScanSettings,android.os.WorkSource)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getVoiceMailNumber()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindow$DecorView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: boolean handleInitiateArc(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager: boolean isMasterVolumeMuted(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accessibility.ScreenMagnifier: void access$000(com.android.server.accessibility.ScreenMagnifier,android.graphics.Region)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.speech.tts.AudioPlaybackQueueItem: void finish()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.PowerManagerInternal: void setMaximumScreenOffTimeoutFromDeviceAdmin(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.ListActivity: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.sip.SipSessionGroup$SipSessionImpl: boolean process(java.util.EventObject)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.IAudioService$Stub$Proxy: void setMode(int,android.os.IBinder)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.BLUETOOTH"
 ], 
 "<android.view.WindowManagerPolicy: int focusChangedLw(android.view.WindowManagerPolicy$WindowState,android.view.WindowManagerPolicy$WindowState)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordMinimumNonLetter(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.textservice.ITextServicesManager$Stub: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.MultiAutoCompleteTextView: void access$200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void handlePollCalls(android.os.AsyncResult)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.service.textservice.SpellCheckerService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.uicc.UiccCard: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.uicc.IccCardStatus)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.ImageEncoder: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.WindowManagerService: void <init>(android.content.Context,com.android.server.input.InputManagerService,boolean,boolean,boolean,com.android.server.wm.WindowManagerService$1)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccountAsUser(android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.SubscriptionInfoUpdater: void setDisplayNameForNewSub(java.lang.String,int,int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.location.GeofenceManager: void scheduleUpdateFencesLocked()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.wifi.WifiStateMachine$SoftApStartingState: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.os.NullVibrator: void vibrate(long[],int,android.media.AudioAttributes)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.net.NetworkPolicyManagerService: void addNetworkPolicyLocked(android.net.NetworkPolicy)>": [
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.sip.SipSessionGroup$KeepAliveProcessCallback: void onError(int,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: boolean wakeUp(long,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.commands.appops.AppOpsCommand: void main(java.lang.String[])>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.KILL_BACKGROUND_PROCESSES", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.RESTART_PACKAGES", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.view.WindowManagerPolicy: int getUserRotationMode()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.IsimUiccRecords: void setVoiceCallForwardingFlag(int,boolean,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.PosterizeFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.SurfaceView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.LocationManagerService: void addTestProvider(java.lang.String,com.android.internal.location.ProviderProperties)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.server.am.ActivityManagerService: void killBackgroundProcesses(java.lang.String,int)>": [
  "android.permission.RESTART_PACKAGES", 
  "android.permission.KILL_BACKGROUND_PROCESSES"
 ], 
 "<android.nfc.cardemulation.HostApduService: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.LocationManagerService$Receiver: void incrementPendingBroadcastsLocked()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.ILocationManager$Stub: boolean addGpsNavigationMessageListener(android.location.IGpsNavigationMessageListener,java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.net.wifi.WifiManager: void init()>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.display.DisplayManagerService: void access$1500(com.android.server.display.DisplayManagerService,com.android.server.display.DisplayDevice)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.content.ISyncAdapter: void initialize(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.location.LocationManager: java.util.List getProviders(boolean)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.wifi.WifiScanningService: void onStartUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.text.ToUpperCase: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setCLIR(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.content.SyncStorageEngine: void readAndDeleteLegacyAccountInfoLocked()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.hdmi.HdmiControlService$BinderService$6: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.UiModeManagerService$3: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.IWifiManager$Stub: boolean saveConfiguration()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneFactory: int getVoiceSubscription()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager: boolean hasGrantedPolicy(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: int finishPostLayoutPolicyLw()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.hardware.location.GeofenceHardwareService: void access$200(android.hardware.location.GeofenceHardwareService,int,int,int)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void getNetworkSelectionMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiWatchdogStateMachine$VerifyingLinkState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.WifiSettingsStore: int getPersistedWifiState()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: boolean isRotationFrozen()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.ToRGBFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.TextServicesManagerService: boolean isSpellCheckerEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.handover.PeripheralHandoverService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.BluetoothManagerService: void <init>(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.AccountManager$AmsTask: android.accounts.AccountManagerFuture start()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<android.printservice.PrintService: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.ContextWrapper: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine$StationaryState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.job.JobService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.updates.TZInfoInstallReceiver: java.security.cert.X509Certificate access$000(com.android.server.updates.ConfigUpdateInstallReceiver,android.content.ContentResolver)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.ISyncContext$Stub$Proxy: void onFinished(android.content.SyncResult)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.filterpacks.videoproc.BackDropperFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.ims.internal.IImsEcbmListener: void enteredECBM()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.wifi.WifiManager: java.util.List getConfiguredNetworks()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.view.menu.IconMenuView$1: void onClick(android.view.View)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void notifyServiceStateChanged(android.telephony.ServiceState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.textservice.ITextServicesManager: void setSpellCheckerEnabled(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.content.SyncManager$SyncHandler: boolean dispatchSyncOperation(com.android.server.content.SyncOperation)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.InputMethodManagerService: void resetStateIfCurrentLocaleChangedLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accessibility.EventStreamTransformation: void onMotionEvent(android.view.MotionEvent,android.view.MotionEvent,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.DhcpStateMachine$RunningState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.IEthernetManager$Stub: void addListener(android.net.IEthernetServiceListener)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.RI: void getVoiceRegistrationState(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.IContentService$Stub$Proxy: boolean getSyncAutomaticallyAsUser(android.accounts.Account,java.lang.String,int)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.bluetooth.BluetoothA2dp: void close()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.LocationManagerService: boolean addGpsStatusListener(android.location.IGpsStatusListener,java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.Connection dial(java.lang.String,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.ims.ImsEcbmStateListener: void onECBMExited()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.Phone: void shutdownRadio()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GsmSMSDispatcher: void handleSendComplete(android.os.AsyncResult)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<android.filterpacks.imageproc.CropFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void setAndBroadcastNetworkSetTimeZone(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.internal.telephony.uicc.IccFileHandler: void loadEFImgLinearFixed(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.handover.PeripheralHandoverService: void onCreate()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.filterpacks.base.FrameFetch: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.Connection dial(java.lang.String)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.internal.telephony.RI: void reportStkServiceIsRunning(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneFactory: int calculatePreferredNetworkType(android.content.Context,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.INfcTag: int connect(int,int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager: boolean updateMessageOnIccEf(java.lang.String,int,int,byte[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.internal.telephony.cat.IconLoader: void readId()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager: void uninstallCaCert(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: void updateCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<java.net.ServerSocket: void bind(java.net.SocketAddress)>": [
  "android.permission.INTERNET"
 ], 
 "<android.widget.DayPickerView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.RI: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.notification.ManagedServices: void disableNonexistentServices()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.Phone: void invokeOemRilRequestStrings(java.lang.String[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.TextServicesManagerService: android.view.textservice.SpellCheckerSubtype getCurrentSpellCheckerSubtype(java.lang.String,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void lockNow()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.net.NetworkPolicyManagerService: void updateNotificationsLocked()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.view.IApplicationToken$Stub: void windowsVisible()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.UiModeManagerService$4: void onTwilightStateChanged()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.view.IInputMethodManager$Stub$Proxy: java.util.List getShortcutInputMethodsAndSubtypes()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.notification.NextAlarmConditionProvider: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.backup.BackupManagerService$PerformAdbRestoreTask: boolean restoreOneFile(java.io.InputStream,byte[])>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.dataconnection.DctController: void access$000(com.android.internal.telephony.dataconnection.DctController)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.IContentService: boolean isSyncPending(android.accounts.Account,java.lang.String,android.content.ComponentName)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.commands.am.Am$IntentReceiver: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.INetworkPolicyManager: android.net.NetworkPolicy[] getNetworkPolicies()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.widget.SizeAdaptiveLayout: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.location.LocationManager: void removeUpdates(android.location.LocationListener)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoController: java.lang.String getLine1Number()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.filterpacks.base.FrameSource: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.content.SyncStorageEngine: void <init>(android.content.Context,java.io.File)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.HashMap getExplicitlyOrImplicitlyEnabledInputMethodsAndSubtypeListLocked(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingEncryptedRfcommWithServiceRecord(java.lang.String,java.util.UUID)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture confirmCredentials(android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.nfc.BeamShareActivity: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.am.ActivityManagerService$25: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.RI: void supplyIccPin(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.WifiManager: int getWifiApState()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.RI: void setRadioCapability(com.android.internal.telephony.RadioCapability,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void hangup(com.android.internal.telephony.imsphone.ImsPhoneConnection)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.trust.TrustManagerService: void updateDevicePolicyFeatures()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.IWifiManager: void setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.wifi.WifiController: void registerForWifiIdleTimeChange(android.os.Handler)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService: void ensureWindowsAvailableTimed()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.telephony.TelephonyManager: java.lang.String getImei()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.ims.internal.IImsEcbmListener$Stub$Proxy: void enteredECBM()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wm.WindowStateAnimator: void cancelExitAnimationForNextAnimationLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.DeviceHost$DeviceHostListener: void onRemoteFieldActivated()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.print.PrintManagerService$PrintManagerImpl: void cancelPrintJob(android.print.PrintJobId,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.notification.NotificationManagerService$NotificationListeners: void access$600(com.android.server.notification.ManagedServices)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.BeamShareActivity: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getIccSerialNumber()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.app.backup.BackupAgentHelper: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.WifiController: void updateBatteryWorkSource()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.RequestArcTerminationAction$1: void onSendCompleted(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.notification.NotificationManagerService: void handleRankingReconsideration(android.os.Message)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.widget.AbsActionBarView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: android.net.wifi.WifiActivityEnergyInfo reportActivityInfo()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.wm.AccessibilityController: void onSomeWindowResizedOrMovedLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.CropFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.MultiAutoCompleteTextView: boolean performLongClick()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.CropFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setCdmaBroadcastConfig(com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void setActivePasswordState(int,int,int,int,int,int,int,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.pm.PackageManagerService: void replacePackageLI(android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.accounts.AccountManager$1: void startTask()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.IMms$Stub$Proxy: android.net.Uri importMultimediaMessage(java.lang.String,android.net.Uri,java.lang.String,long,boolean,boolean)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaMmiCode: void processCode()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.MountServiceIdler: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ISms$Stub: boolean enableCellBroadcastRangeForSubscriber(int,int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void nvResetConfig(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.IWindowManager$Stub$Proxy: void disableKeyguard(android.os.IBinder,java.lang.String)>": [
  "android.permission.DISABLE_KEYGUARD"
 ], 
 "<com.android.server.power.PowerManagerService$LocalService: void setMaximumScreenOffTimeoutFromDeviceAdmin(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.widget.ILockSettings$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.NetworkScoreManager: java.lang.String getActiveScorerPackage()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void requestShutdown(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiController: void registerForStayAwakeModeChange(android.os.Handler)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.admin.IDevicePolicyManager: java.util.List getCrossProfileWidgetProviders(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.DrawOverlayFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setUiccSubscription(int,int,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.ims.ImsCall$Listener: void onCallMerged(com.android.ims.ImsCall,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.storage.DeviceStorageMonitorService: void cancelNotification()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.admin.IDevicePolicyManager: void setPasswordExpirationTimeout(android.content.ComponentName,long,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setRecommendedGlobalProxy(android.content.ComponentName,android.net.ProxyInfo)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.MediaFocusControl: void startVoiceBasedInteractions(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.IWindowManager$Stub: int getInitialDisplayDensity(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.media.MediaSessionService: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiStateMachine$UntetheringState: boolean processMessage(android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.pm.BackgroundDexOptService: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.provider.Browser: void updateVisitedHistory(android.content.ContentResolver,java.lang.String,boolean)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<android.widget.AutoCompleteTextView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void dial(java.lang.String,int,com.android.internal.telephony.UUSInfo,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityStack: void finishAllActivitiesLocked(boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: void switchWaitingOrHoldingAndActive()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.notification.RankingReconsideration: void work()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.nfc.tech.NfcV: byte[] transceive(byte[],boolean)>": [
  "android.permission.NFC"
 ], 
 "<android.inputmethodservice.InputMethodService: void onCreate()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.MediaFocusControl: void access$1400(android.media.MediaFocusControl)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.SpeechRecognizer: void destroy()>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<android.text.method.QwertyKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.dreams.DreamManagerInternal: void startDream(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void setTTYMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.MccTable: boolean canUpdateLocale(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cat.CatService: void updateIccAvailability()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.IPowerManager$Stub: void acquireWakeLock(android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.handover.BluetoothPeripheralHandover: boolean start()>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.UiccSmsController: boolean disableCellBroadcastForSubscriber(int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.media.ClosedCaptionWidget$CCLineBox: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void setCdmaSubscription(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.inputmethod.InputMethodUtils: void setNonSelectedSystemImesDisabledUntilUsed(android.content.pm.PackageManager,java.util.List)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.IWifiManager$Stub: int getVerboseLoggingLevel()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.widget.multiwaveview.GlowPadView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.GridView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.textservice.ITextServicesManager: void getSpellCheckerService(java.lang.String,java.lang.String,com.android.internal.textservice.ITextServicesSessionListener,com.android.internal.textservice.ISpellCheckerSessionListener,android.os.Bundle)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.location.LocalListenerHelper: boolean registerWithServer()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.net.wifi.IWifiManager$Stub: int getSupportedFeatures()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.RI: void iccTransmitApduBasicChannel(int,int,int,int,int,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void <init>(java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.DownloadManager: java.lang.Long getRecommendedMaxBytesOverMobile(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.power.Notifier$2: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager: void sendData(java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: void proceedAfterWildChar(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void <init>(com.android.internal.telephony.PhoneBase)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.BaseCommands: void requestShutdown(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void <init>(java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.pm.PackageManagerService$11: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.DrawRectFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.sip.SipService: void restartPortMappingLifetimeMeasurement(android.net.sip.SipProfile,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.DigitalClock: boolean access$1200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.IWallpaperManager$Stub: void setDimensionHints(int,int)>": [
  "android.permission.SET_WALLPAPER_HINTS"
 ], 
 "<android.view.TextureView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService$SettingsObserver: void <init>(com.android.server.wm.WindowManagerService)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.SubscriptionInfoUpdater: void broadcastSimStateChanged(int,java.lang.String,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.WifiWatchdogStateMachine$OnlineWatchState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void updatePhoneObject(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.accounts.IAccountManager$Stub: void updateCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.server.display.RampAnimator: boolean animateTo(int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.accessibility.TouchExplorer: void access$2400(com.android.server.accessibility.TouchExplorer,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.speech.IRecognitionService$Stub$Proxy: void startListening(android.content.Intent,android.speech.IRecognitionListener)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<android.filterpacks.imageproc.GrainFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneConnection: void proceedAfterWaitChar()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.NfcService$TagService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<com.android.server.notification.DowntimeConditionProvider: void notifyCondition(android.service.notification.ZenModeConfig$DowntimeInfo)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.bluetooth.IBluetoothManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.filterpacks.videosrc.CameraSource: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.commands.am.Am: void main(java.lang.String[])>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.KILL_BACKGROUND_PROCESSES", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.RESTART_PACKAGES", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void setRadioCapability(com.android.internal.telephony.RadioCapability,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.NfcActivityManager: void setNdefPushContentUriCallback(android.app.Activity,android.nfc.NfcAdapter$CreateBeamUrisCallback)>": [
  "android.permission.NFC"
 ], 
 "<android.service.wallpaper.WallpaperService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void exitEmergencyCallbackMode()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.DialogTitle: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setFacilityLockForApp(java.lang.String,boolean,java.lang.String,int,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void clearProfileOwner(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.ActivityManagerService: void processStartTimedOutLocked(com.android.server.am.ProcessRecord)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.content.ContentResolver: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.service.wallpaper.WallpaperSettingsActivity: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.wifi.IWifiManager$Stub: android.net.wifi.WifiConnectionStatistics getConnectionStatistics()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: java.lang.String[] getAccountTypesWithManagementDisabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void setPreferredNetworkType(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.notification.NotificationManagerService$SettingsObserver: void update(android.net.Uri)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.content.SyncManager: void onUserStarting(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.filterpacks.imageproc.CropFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void setSmscAddress(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.ConfirmConnectToWifiNetworkActivity: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void startProvisioningApnAlarm()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.provider.Telephony$Sms$Inbox: android.net.Uri addMessage(int,android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.provider.Settings$System: float getFloat(android.content.ContentResolver,java.lang.String,float)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.sip.SipAudioCall: void access$1300(android.net.sip.SipAudioCall,int,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager: void setProfileName(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.textservice.TextServicesManager: void setCurrentSpellChecker(android.view.textservice.SpellCheckerInfo)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.sip.SipService: android.net.sip.ISipSession getPendingSession(java.lang.String)>": [
  "android.permission.USE_SIP"
 ], 
 "<android.widget.VideoView: void stopPlayback()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService$1: void onPackageDisappeared(java.lang.String,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IIccPhoneBook$Stub: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.ZoomButton: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.service.wallpaper.WallpaperSettingsActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.IEthernetManager$Stub: boolean isAvailable()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.app.AliasActivity: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ISms$Stub: boolean updateMessageOnIccEf(java.lang.String,int,int,byte[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.server.print.PrintManagerService$PrintManagerImpl: java.util.List getPrintJobInfos(int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean isApplicationHidden(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.effect.effects.GrayscaleEffect: void release()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.content.SyncManager$7: void onSyncRequest(com.android.server.content.SyncStorageEngine$EndPoint,int,android.os.Bundle)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.app.admin.IDevicePolicyManager: void setScreenCaptureDisabled(android.content.ComponentName,int,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.provider.Settings$Secure: float getFloatForUser(android.content.ContentResolver,java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.FixedRotationFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.tech.BasicTagTechnology: void close()>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.InputMethodManagerService: void systemRunning(com.android.server.statusbar.StatusBarManagerService)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void nvResetConfig(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cat.IconLoader: void loadIcons(int[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.uicc.SIMFileHandler: void loadEFLinearFixed(int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.HeavyWeightSwitcherActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.accounts.AccountManager: android.accounts.AccountManagerFuture copyAccountToUser(android.accounts.Account,android.os.UserHandle,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: void releaseMulticastLock()>": [
  "android.permission.CHANGE_WIFI_MULTICAST_STATE"
 ], 
 "<android.content.IContentService$Stub: java.util.List getCurrentSyncsAsUser(int)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<android.filterpacks.imageproc.SaturateFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.net.EthernetManager: android.net.IpConfiguration getConfiguration()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void saveCdmaSubscriptionSource(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void setCdmaRoamingPreference(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.print.IPrintManager: java.util.List getInstalledPrintServices(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.handover.BluetoothPeripheralHandover: void complete(boolean)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.server.wm.AccessibilityController$DisplayMagnifier: void <init>(com.android.server.wm.WindowManagerService,android.view.WindowManagerInternal$MagnificationCallbacks)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.uicc.IccCardProxy: void setIccLockEnabled(boolean,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.print.PrintManagerService$PrintManagerImpl$3: void run()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.effect.effects.SaturateEffect: void release()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.AccountManager$8: void doWork()>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.ims.internal.IImsEcbmListener$Stub: void enteredECBM()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.wifi.WifiManager: boolean isEnhancedPowerReportingSupported()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoController: java.lang.String getDeviceSvnUsingSubId(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.Connection dial(java.lang.String,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.SimpleImageFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.InputMethodManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.tech.NdefFormatable: void reconnect()>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.location.GpsLocationProvider: void disable()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.pm.PackageManagerService: boolean isPackageDeviceAdmin(java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.power.PowerManagerService: boolean updateDisplayPowerStateLocked(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: void onTaskListEmptyLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.provider.CallLog$Calls: void updateDataUsageStatForData(android.content.ContentResolver,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS"
 ], 
 "<android.service.wallpaper.WallpaperService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.AutoFixFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.display.DisplayManagerService: void access$3700(com.android.server.display.DisplayManagerService,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.os.storage.ExternalStorageFormatter: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.VignetteFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.telephony.SubscriptionManager: int getAllSubscriptionInfoCount()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.filterpacks.imageproc.ImageCombineFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.ImageSlicer: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.IBackupAgent$Stub$Proxy: void doRestore(android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.power.PowerManagerService: void updateScreenBrightnessBoostLocked(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: boolean requestBatchedScan(android.net.wifi.BatchedScanSettings,android.os.IBinder,android.os.WorkSource)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void access$7000(com.android.server.wifi.WifiStateMachine)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void handlePackagesChanged(java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.RequestArcInitiationAction: void addAndStartAction(com.android.server.hdmi.HdmiCecFeatureAction)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.SepiaFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ISms$Stub$Proxy: boolean enableCellBroadcastRange(int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.server.am.ActivityManagerService$29: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.AdapterViewAnimator: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void disableLocationUpdates()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ISms: boolean disableCellBroadcast(int,int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.internal.widget.RotarySelector: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.TechListChooserActivity: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.base.OutputStreamTarget: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.media.effect.effects.FlipEffect: void apply(int,int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.uicc.IsimRecords: java.lang.String getIsimChallengeResponse(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.numeric.SinWaveFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: java.util.List getTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.test.InstrumentationCoreTestRunner: void onStart()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: void <init>(android.content.Context)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.test.mock.MockContentResolver: android.content.SyncInfo getCurrentSync()>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver: void <init>(com.android.server.wm.WindowManagerService,android.view.WindowManagerInternal$WindowsForAccessibilityCallback)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.performance.ThroughputFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.hardware.input.InputManager: int getPointerSpeed(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.UiccSmsController: int getPreferredSmsSubscription()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: android.accounts.Account[] getAccountsByTypeForPackage(java.lang.String,java.lang.String)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.am.ActivityManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.REORDER_TASKS", 
  "android.permission.KILL_BACKGROUND_PROCESSES", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.GET_TASKS", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.RESTART_PACKAGES", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.TextClock: boolean performLongClick()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.util.StateMachine$SmHandler: void invokeEnterMethods(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.filterfw.core.AsyncRunner$AsyncRunnerTask: android.filterfw.core.AsyncRunner$RunnerResult doInBackground(android.filterfw.core.SyncRunner[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.server.display.DisplayAdapter$Listener: void onDisplayDeviceEvent(com.android.server.display.DisplayDevice,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void deactivateDataCall(int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.DeviceDiscoveryAction: void startVendorIdStage()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.WebVttRenderingWidget: void <init>(android.content.Context,android.util.AttributeSet,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void handleReachSentLimit(com.android.internal.telephony.SMSDispatcher$SmsTracker)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.power.PowerManagerService: void boostScreenBrightnessInternal(long,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IMms$Stub: boolean archiveStoredConversation(java.lang.String,long,boolean)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<android.widget.ActionMenuView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void handleEnterEmergencyCallbackMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void setWifiApState(int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.hdmi.RequestArcInitiationAction: void handleTimerEvent(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.util.StateMachine$SmHandler$HaltingState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.view.WindowManagerPolicy$WindowState: boolean hideLw(boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void <init>(java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void setBandMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks: void onSwipeFromBottom()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.MutableContextWrapper: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ISms$Stub$Proxy: void sendTextForSubscriber(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.am.ActiveServices$ServiceMap: void ensureNotStartingBackground(com.android.server.am.ServiceRecord)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.notification.NextAlarmConditionProvider: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.LocationManagerService: void applyAllProviderRequirementsLocked()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.display.DisplayManagerService: void onSwitchUser(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.Connection dial(java.lang.String,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager: void wipeData(int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevicePlayback: boolean dispatchMessageToAction(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: int getKeyguardDisabledFeatures(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IccProvider: android.database.Cursor loadAllSimContacts(int)>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getGroupIdLevel1()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.IIccPhoneBook: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS"
 ], 
 "<com.android.nfc.NfcRootActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.base.InputStreamSource: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.EditText: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.location.FlpHardwareProvider: void onGeofenceRemove(int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.backup.SystemBackupAgent: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.location.ILocationManager: void setTestProviderEnabled(java.lang.String,boolean)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.nfc.beam.BeamSendService: void onCreate()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.job.JobServiceContext$JobServiceHandler: void sendStopMessageH()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.squareup.okhttp.HttpResponseCache: java.net.CacheRequest put(java.net.URI,java.net.URLConnection)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void setInternalDataEnabled(boolean,android.os.Message)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.SupplicantStateTracker$HandshakeState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.app.ChooserActivity: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.RotateFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneBase: void updateImsPhone()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wm.WindowStateAnimator: void applyEnterAnimationLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.UiccSmsController: boolean copyMessageToIccEf(java.lang.String,int,byte[],byte[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.server.display.DisplayAdapter$Listener: void onTraversalRequested()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.NfcService: void onLlcpFirstPacketReceived(com.android.nfc.DeviceHost$NfcDepEndpoint)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.uicc.IccFileHandler: void updateEFTransparent(int,byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowList getWindowListLocked(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.uicc.UiccCardApplication: void supplyPuk(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.InboundSmsHandler$WaitingState: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.uicc.UiccCardApplication: void setIccLockEnabled(boolean,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.IUiAutomationConnection$Stub$Proxy: void shutdown()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.content.IIntentReceiver: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.AlarmManagerService: void interactiveStateChangedLocked(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void queueNextSignalStrengthPoll()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void acceptCall(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: android.accounts.Account[] getAccounts(java.lang.String)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.accounts.AccountManager$16: android.accounts.AccountManagerFuture start()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.internal.telephony.PhoneNotifier: void notifyCellLocation(com.android.internal.telephony.Phone)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.NativeDaemonConnector: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$4: void onCallProgressing(com.android.ims.ImsCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.text.StringSource: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.beam.BeamTransferManager$Callback: void onTransferComplete(com.android.nfc.beam.BeamTransferManager,boolean)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.pm.PackageManagerService: void access$4500(com.android.server.pm.PackageManagerService,boolean,boolean,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.location.LocationManager: void setTestProviderEnabled(java.lang.String,boolean)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<android.widget.Switch: void access$200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void setAccountManagementDisabled(android.content.ComponentName,java.lang.String,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.updates.CertPinInstallReceiver: java.security.cert.X509Certificate access$000(com.android.server.updates.ConfigUpdateInstallReceiver,android.content.ContentResolver)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.print.IPrintManager$Stub$Proxy: void cancelPrintJob(android.print.PrintJobId,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ISms$Stub: void sendTextForSubscriber(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService$1: boolean onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.RuimRecords: java.lang.String getIccSimChallengeResponse(int,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.RemoteViews$2: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setLocationUpdates(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ActivityManagerNative: void broadcastStickyIntent(android.content.Intent,java.lang.String,int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.am.BatteryStatsService: void noteBluetoothOn()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.service.textservice.SpellCheckerService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: boolean resetPassword(java.lang.String,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.IContentService$Stub: boolean getMasterSyncAutomaticallyAsUser(int)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getLastPdpFailCause(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.telephony.SmsManager: android.net.Uri importMultimediaMessage(android.net.Uri,java.lang.String,long,boolean,boolean)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.filterpacks.text.StringLogger: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void notifyCellInfo(java.util.List)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.net.NetworkPolicyManagerService$9: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.webkit.WebViewUpdateService: void onSwitchUser(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.nfc.tech.MifareClassic: boolean authenticate(int,byte[],boolean)>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.wifi.WifiNotificationController$NotificationEnabledSettingObserver: void onChange(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager: void setProfileEnabled(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void hangupConnection(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo doSecondaryLookupIfNecessary(android.content.Context,java.lang.String,com.android.internal.telephony.CallerInfo)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.telecom.ConnectionService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.WifiWatchdogStateMachine: void registerForSettingsChanges()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.PhoneBase: void exitEmergencyCallbackMode()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isLockTaskPermitted(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.test.RenamingDelegatingContext: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.widget.LockPatternUtils: boolean isPermanentlyLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accessibilityservice.AccessibilityService: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumSymbols(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.TextClock: void <init>(android.content.Context,android.util.AttributeSet,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.INfcCardEmulation$Stub: boolean setDefaultForNextTap(int,android.content.ComponentName)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<com.android.server.LocationManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_MOCK_LOCATION", 
  "android.permission.ACCESS_LOCATION_EXTRA_COMMANDS", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.dreams.DreamService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.dreams.DreamManagerService: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.power.ShutdownThread$5: void run()>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.wifi.WifiService: void onBootPhase(int)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: java.util.List getWindows()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.hardware.location.IGeofenceHardware: boolean registerForMonitorStateChangeCallback(int,android.hardware.location.IGeofenceHardwareMonitorCallback)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.LocationManagerService: void checkMockPermissionsSafe()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.server.VibratorService: void startNextVibrationLocked()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<android.hardware.location.GeofenceHardware: boolean pauseGeofence(int,int)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.widget.ActionBarView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.media.MediaSessionService: void enforceMediaPermissions(android.content.ComponentName,int,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.ContentResolver: android.content.SyncInfo getCurrentSync()>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getIMEI(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.LockSettingsService: void checkReadPermission(java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.usb.UsbDeviceManager: void systemReady()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.widget.DigitalClock: void access$300(android.widget.DigitalClock)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.net.NetworkPolicyManagerService: void readPolicyLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.Presentation$1: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.filterpacks.imageproc.VignetteFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.IWifiManager$Stub: boolean acquireWifiLock(android.os.IBinder,int,java.lang.String,android.os.WorkSource)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void setMaximumFailedPasswordsForWipe(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.accessibility.CaptioningManager: void notifyLocaleChanged()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiController: void access$000(com.android.server.wifi.WifiController)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void setInitialAttachApn()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.uicc.IccRecords: void onRefresh(boolean,int[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.provider.Settings$Secure: boolean isLocationProviderEnabledForUser(android.content.ContentResolver,java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.notification.ConditionProviderService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.hardware.location.GeofenceHardwareImpl: void releaseWakeLock()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.power.PowerManagerService: void scheduleSandmanLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.SupplicantStateTracker$InactiveState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.ContentResolver: void requestSync(android.accounts.Account,java.lang.String,android.os.Bundle)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.server.am.ActivityManagerService: boolean shutdown(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.nfc.INfcAdapter: void setReaderMode(android.os.IBinder,android.nfc.IAppCallback,int,android.os.Bundle)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.CursorEntityIterator: java.lang.Object next()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.server.backup.BackupManagerService$PerformBackupTask: void execute()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.admin.IDevicePolicyManager: int getPasswordMinimumNumeric(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.notification.ConditionProviderService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.uicc.IccCardProxy: void broadcastIccStateChangedIntent(java.lang.String,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ISms: boolean enableCellBroadcastRangeForSubscriber(int,int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.filterpacks.imageproc.ContrastFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$4: void onCallHoldFailed(com.android.ims.ImsCall,com.android.ims.ImsReasonInfo)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.text.format.DateUtils: java.lang.CharSequence getRelativeDateTimeString(android.content.Context,long,long,long,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.cardemulation.HostApduService: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.InboundSmsHandler$StartupState: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.filterpacks.videoproc.BackDropperFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.nfc.INfcAdapter$Stub$Proxy: void setAppCallback(android.nfc.IAppCallback)>": [
  "android.permission.NFC"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void uninstallCaCert(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CallManager: com.android.internal.telephony.Connection dial(com.android.internal.telephony.Phone,java.lang.String,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.uicc.CsimFileHandler: void loadEFTransparent(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.WindowManagerService$LocalService: void requestTraversalFromDisplayManager()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.media.AudioService$ScoClient: void incCount(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.BLUETOOTH"
 ], 
 "<android.nfc.INfcAdapter: void removeNfcUnlockHandler(android.nfc.INfcUnlockHandler)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.P2pEventListener: void onP2pHandoverBusy()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.AlarmManagerService: java.lang.String formatNextAlarm(android.content.Context,android.app.AlarmManager$AlarmClockInfo,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.Presentation$1: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: boolean getDataRoamingEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.RedEyeFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.service.wallpaper.WallpaperSettingsActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.policy.impl.PhoneWindow: void onKeyUpPanel(int,android.view.KeyEvent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.location.LocationBlacklist: void reloadBlacklist()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneSubInfo: java.lang.String getLine1AlphaTag()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.bluetooth.BluetoothAdapter: void finalize()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.provider.Settings$Global: long getLong(android.content.ContentResolver,java.lang.String,long)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.tts.TextToSpeechService$1: int synthesizeToFileDescriptor(android.os.IBinder,java.lang.CharSequence,android.os.ParcelFileDescriptor,android.os.Bundle,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void notifyNoData(com.android.internal.telephony.dataconnection.DcFailCause,com.android.internal.telephony.dataconnection.ApnContext)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getImsRegistrationState(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.commands.monkey.MonkeyNetworkMonitor: void register(android.app.IActivityManager)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wm.WindowManagerService: void updateWallpaperVisibilityLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cat.CommandParamsFactory: void make(com.android.internal.telephony.cat.BerTlv)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.input.InputManagerService$WindowManagerCallbacks: void notifyCameraLensCoverSwitchChanged(long,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.webkit.WebViewUpdateService$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.DateTimeView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void setInternalDataEnabled(boolean,android.os.Message)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.base.ObjectSource: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.input.InputManagerService: void registerPointerSpeedSettingObserver()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.wifi.IWifiManager$Stub: void enableAggressiveHandover(int)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.WapPushOverSms: long getDeliveryOrReadReportThreadId(android.content.Context,com.google.android.mms.pdu.GenericPdu)>": [
  "android.permission.READ_SMS"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: android.os.UserHandle createUser(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.net.NetworkStatsService$5: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.ContrastFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: int getVerboseLoggingLevel()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.ISms: void setPremiumSmsPermission(java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: java.util.List getAllCellInfo()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.ActiveServices: void stopServiceLocked(com.android.server.am.ServiceRecord)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.ims.internal.ImsCallSession$IImsCallSessionListenerProxy: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void access$100(com.android.internal.telephony.cdma.CdmaServiceStateTracker)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.internal.telephony.ServiceStateTracker: void pollState()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.server.hdmi.HdmiCecFeatureAction: void addAndStartAction(com.android.server.hdmi.HdmiCecFeatureAction)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getLastCallFailCause(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.PlatLogoActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.provider.Settings$System: float getFloatForUser(android.content.ContentResolver,java.lang.String,float,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.ActiveServices: void bringDownServiceIfNeededLocked(com.android.server.am.ServiceRecord,boolean,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.notification.NotificationManagerService: void onStart()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$4: void onCallMerged(com.android.ims.ImsCall,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void getIMEI(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.BitmapSource: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipCommandInterface: void setUiccSubscription(int,int,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.job.JobServiceContext: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ISms$Stub$Proxy: boolean updateMessageOnIccEf(java.lang.String,int,int,byte[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.filterpacks.base.FrameBranch: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.media.MediaFocusControl$2: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.dataconnection.DctController: int access$400(com.android.internal.telephony.dataconnection.DctController,android.net.NetworkRequest)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: boolean setOperatorBrandOverride(java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.filterpacks.imageproc.BlackWhiteFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.uicc.SIMRecords: void onAllRecordsLoaded()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.IWindowSession$Stub: int add(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.SYSTEM_ALERT_WINDOW", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.accounts.AccountManager$6: void doWork()>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<android.view.IWindowManager$Stub$Proxy: void dismissKeyguard()>": [
  "android.permission.DISABLE_KEYGUARD"
 ], 
 "<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long,long,long)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.test.ActivityUnitTestCase$MockParent: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void pollState()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.service.notification.NotificationListenerService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.nfc.NfcService$TagService: int ndefMakeReadOnly(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: boolean teardownForDun()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager: boolean setCellBroadcastActivation(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.LockPatternUtils: boolean isLockPasswordEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.AbsSeekBar: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void <init>(java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.IWindowManager$Stub$Proxy: int getPreferredOptionsPanelGravity()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.Instrumentation: void finish(int,android.os.Bundle)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneConnection: void <init>(android.content.Context,java.lang.String,com.android.internal.telephony.imsphone.ImsPhoneCallTracker,com.android.internal.telephony.imsphone.ImsPhoneCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IMms: boolean deleteStoredConversation(java.lang.String,long)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.internal.app.ExternalMediaFormatActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.AlarmManagerService: void access$600(com.android.server.AlarmManagerService)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: void showEmulatorDisplayOverlayIfNeeded()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.sip.SipService: void unregisterReceivers()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IMms$Stub: void downloadMessage(int,java.lang.String,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent)>": [
  "android.permission.RECEIVE_MMS"
 ], 
 "<com.android.server.print.PrintManagerService$PrintManagerImpl: java.util.List getInstalledPrintServices(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.DelayedMessageBuffer: void processActiveSource(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: boolean setApplicationHidden(android.content.ComponentName,java.lang.String,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void switchImplementationIfNeededLocked(boolean)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.filterpacks.imageproc.BitmapSource: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void restoreSavedNetworkSelection(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.performance.ThroughputFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.MutableContextWrapper: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.filterpacks.base.GLTextureSource: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.notification.DowntimeConditionProvider: void setConfig(android.service.notification.ZenModeConfig)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.tech.MifareUltralight: void setTimeout(int)>": [
  "android.permission.NFC"
 ], 
 "<android.app.backup.FullBackupAgent: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void startDataStallAlarm(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.handover.BluetoothPeripheralHandover: void startBonding()>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.policy.impl.PhoneWindow: void openPanel(int,android.view.KeyEvent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.ReceiverRestrictedContext: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getSubscriberId()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.app.PlatLogoActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.IBluetoothManager$Stub$Proxy: boolean enableNoAutoConnect()>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.ConnectivityService$SettingsObserver: void observe(android.content.Context)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.service.wallpaper.WallpaperService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.media.AudioService: void setBluetoothScoOn(boolean)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.internal.telephony.uicc.SIMRecords: void setVoiceMailNumber(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.ChooseTypeAndAccountActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.bluetooth.IBluetoothManager: boolean enable()>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.widget.RadioButton: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.RI: void getMute(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.SharpenFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.TextViewWithCircularIndicator: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.ProxyController: void registerForAllDataDisconnected(int,android.os.Handler,int,java.lang.Object)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void setApplicationRestrictions(android.content.ComponentName,java.lang.String,android.os.Bundle)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.net.NetworkStatsService: void advisePersistThreshold(long)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.IccCardProxy: void changeIccLockPassword(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.display.DisplayManagerService$LocalService: void setDisplayInfoOverrideFromWindowManager(int,android.view.DisplayInfo)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.accessibilityservice.AccessibilityService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.AlarmManagerService$InteractiveStateReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void notifyDataConnection(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.tv.TvInputManagerService$1: void onPackageDisappeared(java.lang.String,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.telephony.SubscriptionManager: android.telephony.SubscriptionInfo getDefaultVoiceSubscriptionInfo()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void handleEnterEmergencyCallbackMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.uicc.IccRecords: java.lang.String getIccSimChallengeResponse(int,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiWatchdogStateMachine$OnlineState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.DnsPinger: void <init>(android.content.Context,java.lang.String,android.os.Looper,android.os.Handler,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.test.mock.MockApplication: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ProxyController: void onNotificationRadioCapabilityChanged(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.ims.ImsCall$Listener: void onCallHeld(com.android.ims.ImsCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.input.InputManagerService$7: void onChange(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.LocationManagerService$Receiver: void updateMonitoring(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void access$700(com.android.internal.policy.impl.PhoneWindowManager)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager: boolean setDeviceOwner(java.lang.String,java.lang.String)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.telephony.SmsManager: void sendStoredTextMessage(android.net.Uri,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS"
 ], 
 "<android.app.StatusBarManager: void expandSettingsPanel()>": [
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<android.filterfw.core.Filter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.nfc.dhimpl.NativeNfcManager: void notifyLlcpLinkActivation(com.android.nfc.dhimpl.NativeP2pDevice)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.accounts.IAccountManager: boolean removeAccountExplicitly(android.accounts.Account)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<android.nfc.INfcAdapter$Stub$Proxy: void setForegroundDispatch(android.app.PendingIntent,android.content.IntentFilter[],android.nfc.TechListParcel)>": [
  "android.permission.NFC"
 ], 
 "<android.view.accessibility.IAccessibilityManager$Stub: void temporaryEnableAccessibilityStateUntilKeyguardRemoved(android.content.ComponentName,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.Ringtone: void setStreamType(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase$DataRoamingSettingObserver: void register()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GsmInboundSmsHandler: void <init>(android.content.Context,com.android.internal.telephony.SmsStorageMonitor,com.android.internal.telephony.PhoneBase)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.backup.BackupAgent: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.dreams.DreamManagerService: void onSwitchUser(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.app.AlertActivity: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.accounts.AccountManagerService: boolean addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void rejectCall()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.IContentService: void setSyncAutomaticallyAsUser(android.accounts.Account,java.lang.String,boolean,int)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.view.accessibility.CaptioningManager: void access$200(android.view.accessibility.CaptioningManager)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: boolean getDataEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.RI: void access$600(com.android.internal.telephony.RI,android.os.Parcel)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityStack: boolean moveTaskToBackLocked(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.DISABLE_KEYGUARD", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.WifiManager: boolean requestBatchedScan(android.net.wifi.BatchedScanSettings,android.os.WorkSource)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.backup.BackupManagerService$PerformBackupTask: void operationComplete()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.inputmethodservice.ExtractButton: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GsmCellBroadcastHandler: java.lang.String getLogRecString(android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void clearPackagePersistentPreferredActivities(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void setHdmiPlugged(boolean)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: int getPasswordMinimumNumeric(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.VibratorService: void cancelVibrate(android.os.IBinder)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.accounts.GrantCredentialsPermissionActivity: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.AlarmManagerService$2: void setTimeZone(java.lang.String)>": [
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.filterpacks.imageproc.BrightnessFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.notification.DowntimeConditionProvider: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.view.IWindowManager$Stub: void getInitialDisplaySize(int,android.graphics.Point)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor: void onPackageRemoved(java.lang.String,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.IWindowSession: int add(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.SYSTEM_ALERT_WINDOW", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.IAccountManager$Stub: java.lang.String getUserData(android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: java.util.List getAdnRecordsInEfForSubscriber(int,int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.view.IWindowManager$Stub$Proxy: android.graphics.Bitmap screenshotApplications(android.os.IBinder,int,int,int,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.job.JobSchedulerService$JobHandler: void maybeRunPendingJobsH()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.PosterizeFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getLine1NumberForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.widget.CheckBox: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.fingerprint.FingerprintService: void handleNotify(int,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.pm.PackageManagerService: void replaceNonSystemPackageLI(android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,int[],boolean[],java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.speech.tts.ITextToSpeechService$Stub: int speak(android.os.IBinder,java.lang.CharSequence,int,android.os.Bundle,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.ListActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.service.trust.TrustAgentService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.media.AudioManager: void setParameter(java.lang.String,java.lang.String)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.internal.widget.ILockSettings$Stub: long getLong(java.lang.String,long,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.cardemulation.RegisteredServicesCache: java.util.ArrayList getInstalledServices(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void notifyDataConnection(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiStateMachine$DisconnectingState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.power.PowerManagerService: void access$4700(com.android.server.power.PowerManagerService,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: void addSubtypeToHistory(java.lang.String,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.view.IInputMethodManager$Stub$Proxy: boolean switchToLastInputMethod(android.os.IBinder)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.ConfirmConnectToWifiNetworkActivity: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.DefaultPhoneNotifier: void doNotifyDataConnection(com.android.internal.telephony.Phone,java.lang.String,java.lang.String,com.android.internal.telephony.PhoneConstants$DataState)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.UUSInfo,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.cardemulation.AidRoutingManager: void clearNfcRoutingTableLocked()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: int getPasswordQuality(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.widget.LockPatternUtils: boolean checkPasswordHistory(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IMms$Stub$Proxy: void sendStoredMessage(int,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent)>": [
  "android.permission.SEND_SMS"
 ], 
 "<android.filterpacks.imageproc.NegativeFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.print.PrinterDiscoverySession: void startPrinterDiscovery(java.util.List)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ServiceStateTracker: void requestShutdown()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.SimpleImageFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.Activity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.filterpacks.imageproc.RedEyeFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.net.INetworkScoreService: boolean clearScores()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.util.IState: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void wakingUp()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.InputMethodManagerService$SettingsObserver: void <init>(com.android.server.InputMethodManagerService,android.os.Handler)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: android.net.wifi.WifiConfiguration getWifiApConfiguration()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.pm.PackageManagerService: void freeStorageAndNotify(long,android.content.pm.IPackageDataObserver)>": [
  "android.permission.CLEAR_APP_CACHE"
 ], 
 "<com.android.server.wifi.WifiController: java.lang.String toString()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.location.SettingInjectorService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wm.AccessibilityController: void onWindowTransitionLocked(com.android.server.wm.WindowState,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.ISms: void sendText(java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.internal.telephony.RI: void supplyIccPin2(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.dreams.DreamManagerService: void onStartUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.IWifiManager$Stub: void clearBlacklist()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void pollCallsWhenSafe()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.pm.PackageManagerService: void scanAvailableAsecs()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.DocumentaryFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.dataconnection.DcSwitchStateMachine: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void <init>(com.android.internal.telephony.PhoneBase,com.android.internal.telephony.SmsUsageMonitor,com.android.internal.telephony.ImsSMSDispatcher)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.hdmi.OneTouchPlayAction: boolean processCommand(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoController: java.lang.String getSubscriberId()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.nfc.NfcRootActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.app.AlertActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.LocationManagerService$4: void onPackageRemoved(java.lang.String,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IMms: android.net.Uri importMultimediaMessage(java.lang.String,android.net.Uri,java.lang.String,long,boolean,boolean)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.UiModeManagerService: void access$000(com.android.server.UiModeManagerService,java.lang.String,int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneBase: void setTTYMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void access$2400(com.android.server.wifi.WifiStateMachine,boolean,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.IActivityManager: boolean startUserInBackground(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void shutdownRadio()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.display.DisplayManagerService: void access$1400(com.android.server.display.DisplayManagerService,com.android.server.display.DisplayDevice)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.display.OverlayDisplayAdapter$1$1: void onChange(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.provider.Settings$Secure: float getFloatForUser(android.content.ContentResolver,java.lang.String,float,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.SpeechRecognizer: void access$200(android.speech.SpeechRecognizer)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<android.app.backup.BackupAgent: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.accounts.IAccountManager$Stub: void setPassword(android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<android.widget.CompoundButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void updatePhoneObject()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: boolean enableNetwork(int,boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCall: void dispose()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.LauncherActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$P2pNotSupportedState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.hdmi.SystemAudioStatusAction: void addAndStartAction(com.android.server.hdmi.HdmiCecFeatureAction)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.pm.IPackageManager$Stub: void systemReady()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.IContentService: void removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.net.INetworkPolicyManager$Stub$Proxy: void setRestrictBackground(boolean)>": [
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.BluetoothManagerService: void unregisterStateChangeCallback(android.bluetooth.IBluetoothStateChangeCallback)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.location.LocationBasedCountryDetector: void setCountryListener(android.location.CountryListener)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.wm.WindowManagerService: void sendNewConfiguration()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture removeAccountAsUser(android.accounts.Account,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<android.filterpacks.videosrc.SurfaceTextureSource: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: boolean handleReportPhysicalAddress(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.WindowManagerService: void displayReady()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.SupplicantStateTracker$DisconnectedState: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.RECEIVE_WAP_PUSH", 
  "android.permission.WRITE_SMS", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.RECEIVE_MMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void dialInternal(com.android.internal.telephony.imsphone.ImsPhoneConnection,int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void notifyApnIdDisconnected(java.lang.String,int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.WifiController$FullHighPerfLockHeldState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.INfcAdapter: void addNfcUnlockHandler(android.nfc.INfcUnlockHandler,int[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.LocationManagerService: void removeTestProvider(java.lang.String)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.internal.app.DisableCarModeActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.app.NetInitiatedActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.inputmethodservice.ExtractButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.commands.pm.Pm: int runTrimCaches()>": [
  "android.permission.CLEAR_APP_CACHE"
 ], 
 "<com.android.server.location.GpsLocationProvider: void enable()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.notification.NotificationManagerService$NotificationListeners: void disableNonexistentServices()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.RedEyeFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.power.PowerManagerService: void access$3900(com.android.server.power.PowerManagerService,long,int,int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.sip.SipManager: void open(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.SipRegistrationListener)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_SIP"
 ], 
 "<com.android.internal.telephony.SubscriptionController: int[] getSubIdUsingSlotId(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.location.GpsLocationProvider: void access$3400(com.android.server.location.GpsLocationProvider)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.pm.PackageManagerService: int access$1100(com.android.server.pm.PackageManagerService)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.WindowManagerInternal: void requestTraversalFromDisplayManager()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.PhoneFactory: long getDataSubscription()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.backup.PackageManagerBackupAgent: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.PhoneFactory: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.SIMRecords: void setMsisdnNumber(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.NfcApplication: void onCreate()>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<com.android.server.TelephonyRegistry: void notifyDataConnectionForSubscriber(int,int,boolean,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.NetworkCapabilities,int,boolean)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.CropRectFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityManagerService: boolean cleanUpApplicationRecordLocked(com.android.server.am.ProcessRecord,boolean,boolean,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.am.ActivityManagerService: void appDiedLocked(com.android.server.am.ProcessRecord)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.PhoneBase: void <init>(java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.IWindowManager$Stub$Proxy: void reenableKeyguard(android.os.IBinder)>": [
  "android.permission.DISABLE_KEYGUARD"
 ], 
 "<android.nfc.tech.NfcA: byte[] transceive(byte[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.gsm.GsmConnection: boolean onDisconnect(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cat.IconLoader: void readClut()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.GlobalActions$PowerAction: void onPress()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.hdmi.HdmiControlService$BinderService$3: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.effect.effects.StraightenEffect: void release()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void changeIccPin2(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.INfcTag$Stub$Proxy: android.nfc.NdefMessage ndefRead(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$StartTetheringErrorState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.am.ProcessList: void applyDisplaySize(com.android.server.wm.WindowManagerService)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.am.ActivityManagerService: void startInPlaceAnimationOnFrontMostApplication(android.app.ActivityOptions)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: long getPasswordExpirationTimeout(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.ToRGBAFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: int[] getAdnRecordsSizeForSubscriber(int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.dreams.DreamManagerService: void startDreamInternal(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.wifi.WifiScanningService: void onSwitchUser(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.test.mock.MockContentResolver: boolean isSyncActive(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.server.power.PowerManagerService: void removeWakeLockLocked(com.android.server.power.PowerManagerService$WakeLock,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.CantAddAccountActivity: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.WapPushOverSms: void writeInboxMessage(int,byte[])>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.InboundSmsHandler$IdleState: boolean processMessage(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.SubscriptionController: void broadcastDefaultDataSubIdChanged(int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.DockObserver: void updateLocked()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.test.InstrumentationTestRunner: android.app.UiAutomation getUiAutomation()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.hdmi.HdmiCecFeatureAction: boolean processCommand(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void onSetInternalDataEnabled(boolean)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.ui.SurfaceTargetFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.nfc.ForegroundUtils: void onProcessDied(int,int)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.wm.WindowManagerService: boolean moveInputMethodWindowsIfNeededLocked(boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.accounts.IAccountManager$Stub: android.accounts.Account[] getAccounts(java.lang.String)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.net.nsd.NsdManager: void <init>(android.content.Context,android.net.nsd.INsdManager)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.telephony.ISms: int getPreferredSmsSubscription()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void setKeyguardDisabledFeatures(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.base.OutputStreamTarget: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.pm.PackageManagerService: int getUnknownSourcesSettings()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.power.PowerManagerService: void updatePowerStateLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.util.State: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.print.IPrintManager: void startPrinterDiscovery(android.print.IPrinterDiscoveryObserver,java.util.List,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.bluetooth.BluetoothInputDevice: void <init>(android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.nfc.NfcAdapter: void setOnNdefPushCompleteCallback(android.nfc.NfcAdapter$OnNdefPushCompleteCallback,android.app.Activity,android.app.Activity[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.uicc.SIMFileHandler: void updateEFLinearFixed(int,int,byte[],java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.NetworkScoreManager: boolean clearScores()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.widget.RotarySelector: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.widget.LockPatternUtils: boolean isSecure()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoController: java.lang.String getMsisdn()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.filterpacks.imageproc.StraightenFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cat.IconLoader: void loadIcon(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.UiccSmsController: java.util.List getAllMessagesFromIccEf(java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.server.dreams.DreamManagerService: void startDreamLocked(android.content.ComponentName,boolean,boolean,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.VideoView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.app.LocalePicker: android.widget.ArrayAdapter constructAdapter(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.SaturateFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.AudioService: void stopBluetoothSco(android.os.IBinder)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.server.connectivity.Tethering$TetherInterfaceSM: void onQuitting()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.NfcAdapter: boolean addNfcUnlockHandler(android.nfc.NfcAdapter$NfcUnlockHandler,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: boolean handleMultipartyIncallSupplementaryService(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiController: void access$700(com.android.server.wifi.WifiController)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService: void unregisterUiTestAutomationService(android.accessibilityservice.IAccessibilityServiceClient)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.BrightnessFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.text.StringLogger: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordMinimumUpperCase(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.AudioService: void readPersistedSettings()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.notification.ConditionProviders: void <init>(android.content.Context,android.os.Handler,com.android.server.notification.ManagedServices$UserProfiles,com.android.server.notification.ZenModeHelper)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.widget.AccountItemView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.widget.multiwaveview.GlowPadView: boolean onTouchEvent(android.view.MotionEvent)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.app.ResolverActivity$1: void onPackageRemoved(java.lang.String,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.util.StateMachine$SmHandler$QuittingState: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.wm.WindowStateAnimator: android.view.SurfaceControl createSurfaceLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.WifiSettingsStore: boolean isAirplaneToggleable()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.INfcCardEmulation$Stub: boolean isDefaultServiceForCategory(int,android.content.ComponentName,java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.uicc.IccRecords: void onReady()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ImsSMSDispatcher: void handleConfirmShortCode(boolean,com.android.internal.telephony.SMSDispatcher$SmsTracker)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<android.location.LocationManager: boolean addGpsNavigationMessageListener(android.location.GpsNavigationMessageEvent$Listener)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void onSetUserDataEnabled(boolean)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindow: void openPanelsAfterRestore()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void setUiTTYMode(int,android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.IAccountManager$Stub: void invalidateAuthToken(java.lang.String,java.lang.String)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<android.app.IAlarmManager: void setTimeZone(java.lang.String)>": [
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.media.AudioService: void reloadAudioSettings()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getSubscriberId()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.widget.LockPatternUtils: boolean isCredentialRequiredToDecrypt(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.test.SimulatedCommands: void setDataAllowed(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.TtmlTrack: void show()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: boolean setProfileOwner(android.content.ComponentName,java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void disableLocationUpdates()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.display.WifiDisplayController: void updateSettings()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.LocationManagerService: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<android.telecom.ConnectionService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.pm.ILauncherApps$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.UUSInfo,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.cardemulation.DefaultRemovedActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.uicc.SIMFileHandler: void loadEFImgLinearFixed(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void supplyIccPuk2ForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void onResetDone(android.os.AsyncResult)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.server.BluetoothA2dpService: boolean checkSinkSuspendState(int)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.internal.os.RuntimeInit$UncaughtHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.widget.LockPatternUtils: boolean getWidgetsEnabled(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: boolean hasMatchedTetherApnSetting()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.UiccCardApplication: void setIccFdnEnabled(boolean,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ActivityView$ActivityContainerWrapper: void release()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry$Stub: void notifyDataConnectionForSubscriber(int,int,boolean,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.NetworkCapabilities,int,boolean)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordMinimumLength(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.ui.SurfaceTargetFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.PowerManager$WakeLock: void release()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.display.AutomaticBrightnessController$1: void onSensorChanged(android.hardware.SensorEvent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.view.IWindowManager$Stub: void exitKeyguardSecurely(android.view.IOnKeyguardExitResult)>": [
  "android.permission.DISABLE_KEYGUARD"
 ], 
 "<android.widget.HorizontalScrollView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.policy.impl.keyguard.KeyguardStateMonitor: boolean isSecure()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.twilight.TwilightService$1: void registerListener(com.android.server.twilight.TwilightListener,android.os.Handler)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: boolean hasMatchedTetherApnSetting()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.sip.SipSessionGroup: void processResponse(javax.sip.ResponseEvent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.MccTable: void setTimezoneFromMccIfNeeded(android.content.Context,int)>": [
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.nfc.dhimpl.NativeNfcManager: void notifyRfFieldActivated()>": [
  "android.permission.VIBRATE"
 ], 
 "<android.service.dreams.DreamService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void <init>(java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.VibratorService: void access$400(com.android.server.VibratorService)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void setPropertiesByCarrier()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.commands.bmgr.Bmgr: void main(java.lang.String[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.PopupWindow$PopupViewContainer: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData getUserData(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.IccCardProxy: void onSubscriptionDeactivated()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.WiredAccessoryManager: void notifyWiredAccessoryChanged(long,int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.beam.BeamSendService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.location.ILocationManager: boolean addGpsStatusListener(android.location.IGpsStatusListener,java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void registerForSuppServiceNotification(android.os.Handler,int,java.lang.Object)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.ILocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.usb.UsbHostManager: void usbDeviceRemoved(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.backup.PackageManagerBackupAgent: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,int)>": [
  "android.permission.NFC"
 ], 
 "<android.accounts.AccountManager: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void queryCallWaiting(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.pm.PackageManagerService: void freeStorage(long,android.content.IntentSender)>": [
  "android.permission.CLEAR_APP_CACHE"
 ], 
 "<com.android.server.wm.WindowManagerService: void access$400(com.android.server.wm.WindowManagerService)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.InputMethodManagerService: boolean access$300(com.android.server.InputMethodManagerService)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.IContentService$Stub$Proxy: void syncAsUser(android.content.SyncRequest,int)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.widget.Editor$SelectionStartHandleView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteBluetoothOn()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void handleEnterEmergencyCallbackMode()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.nfc.NfcService$TagService: int setTimeout(int,int)>": [
  "android.permission.NFC"
 ], 
 "<android.app.admin.IDevicePolicyManager: boolean setPermittedAccessibilityServices(android.content.ComponentName,java.util.List)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ISms$Stub$Proxy: void sendMultipartTextForSubscriber(int,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>": [
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS"
 ], 
 "<android.provider.Browser: void clearHistory(android.content.ContentResolver)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<android.print.IPrintManager$Stub: void createPrinterDiscoverySession(android.print.IPrinterDiscoveryObserver,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.usage.UsageStatsService: void onSwitchUser(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.uicc.UiccCard: void iccTransmitApduBasicChannel(int,int,int,int,int,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterfw.core.SyncRunner: boolean performStep()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.nfc.cardemulation.RegisteredServicesCache: void initialize()>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<android.filterpacks.base.NullFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.accounts.AccountManager$13: android.accounts.AccountManager$Future2Task start()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.gsm.GsmMmiCode: void parseSsData(com.android.internal.telephony.gsm.SsData)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.commands.svc.PowerCommand: void run(java.lang.String[])>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.provider.Telephony$Mms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],java.lang.String,java.lang.String)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.gsm.GsmConnection: void proceedAfterWaitChar()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void setImsRegistrationState(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.service.media.MediaBrowserService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.widget.NumberPicker: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.dreams.DreamManagerService: void access$1500(com.android.server.dreams.DreamManagerService,android.content.ComponentName,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.SubtitleController: void access$100(android.media.SubtitleController)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.util.StateMachine: void onQuitting()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneBase$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.ISub: android.telephony.SubscriptionInfo getActiveSubscriptionInfoForSimSlotIndex(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: void enableVerboseLogging(int)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.ISub: int setDisplayNumber(java.lang.String,int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<android.app.admin.IDevicePolicyManager: boolean getScreenCaptureDisabled(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.FlipFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.location.ILocationManager$Stub: android.location.Location getLastLocation(android.location.LocationRequest,java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.accounts.AccountManager: java.lang.String getPassword(android.accounts.Account)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.gsm.GsmInboundSmsHandler: android.net.Uri writeInboxMessage(android.content.Intent)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.internal.policy.impl.PhoneWindow: int getOptionsPanelGravity()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.uicc.IccCardProxy: void updateExternalState()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.power.PowerManagerService: void access$1900(com.android.server.power.PowerManagerService)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.accounts.IAccountManager: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<android.net.wifi.IWifiManager: java.util.List getConfiguredNetworks()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.location.ILocationManager: void setTestProviderLocation(java.lang.String,android.location.Location)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.server.wm.AccessibilityController: void setMagnificationCallbacksLocked(android.view.WindowManagerInternal$MagnificationCallbacks)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.RIL$RILReceiver: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.EditText: boolean shouldSpeakPasswordsForAccessibility()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.VibratorService: void startVibrationLocked(com.android.server.VibratorService$Vibration)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<android.filterpacks.imageproc.FillLightFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.widget.SpellChecker: void setLocale(java.util.Locale)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.preference.PreferenceActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.display.DisplayManagerService: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.IWifiManager$Stub: void stopBatchedScan(android.net.wifi.BatchedScanSettings)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.net.NetworkStatsService$NetworkStatsSettings: com.android.server.net.NetworkStatsService$NetworkStatsSettings$Config getUidConfig()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: java.util.List getBatchedScanResults(java.lang.String)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.accounts.AccountManager: android.accounts.Account[] getAccountsForPackage(java.lang.String,int)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: boolean handleCallWaitingIncallSupplementaryService(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void updateScreenState()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getAutoTimeRequired()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void setCellInfoListRate(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneBase: void setCdmaSubscription(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.DuotoneFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.NativeActivity$NativeContentView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getPermittedAccessibilityServices(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.content.ContentService: java.util.List getCurrentSyncsAsUser(int)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getDeviceId()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.content.IContentService: java.util.List getCurrentSyncs()>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void wipeData(int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.SRTTrack: void hide()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.server.display.DisplayPowerController$1: void onAnimationEnd(android.animation.Animator)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GsmInboundSmsHandler: int dispatchNormalMessage(com.android.internal.telephony.SmsMessageBase)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.app.TabActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void setRadioCapability(com.android.internal.telephony.RadioCapability,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void startDtmf(char,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.WifiManager: int getAllowScansWithTraffic()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.notification.DowntimeConditionProvider: void evaluateSubscriptions()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.location.CountryDetectorBase: android.location.Country detectCountry()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.net.wifi.WifiManager: boolean is5GHzBandSupported()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.app.IWallpaperManager: void setDisplayPadding(android.graphics.Rect)>": [
  "android.permission.SET_WALLPAPER_HINTS"
 ], 
 "<com.android.server.usb.UsbSettingsManager$MyPackageMonitor: boolean onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.IWindowSession$Stub: android.os.IBinder prepareDrag(android.view.IWindow,int,int,int,android.view.Surface)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.power.PowerManagerService$2: void onStateChanged()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.base.ObjectSource: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void setTTYMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.HeavyWeightSwitcherActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.ServiceStateTracker: void disableSingleLocationUpdate()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.uicc.SIMRecords: void loadEfLiAndEfPl()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.net.NetworkPolicyManagerService: void <init>(android.content.Context,android.app.IActivityManager,android.os.IPowerManager,android.net.INetworkStatsService,android.os.INetworkManagementService)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.carrier.CarrierMessagingService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: boolean addCrossProfileWidgetProvider(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$P2pDisabledState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.am.ActivityManagerService: void forceStopUserLocked(int,java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.input.InputManagerService: int getPointerSpeedSetting()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.trust.TrustManagerService$3: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.SystemAudioAction: boolean processCommand(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.WakeLockStateMachine$DefaultState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.IContentService$Stub$Proxy: void addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.ISms$Stub: void sendData(java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.InputMethodManagerService: void switchUserLocked(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.carrier.ICarrierMessagingCallback$Stub$Proxy: void onFilterComplete(boolean)>": [
  "android.permission.RECEIVE_SMS", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void onSetUserDataEnabled(boolean)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.AlarmManager: void setTimeZone(java.lang.String)>": [
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.server.location.ComprehensiveCountryDetector: void runAfterDetection(android.location.Country,android.location.Country,boolean,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void getSubscriptionInfoAndStartPollingThreads()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.widget.PopupWindow$PopupViewContainer: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.pm.LauncherAppsService: void onBootPhase(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.NfcService: void routeAids(java.lang.String,int)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.Phone: void selectNetworkManually(com.android.internal.telephony.OperatorInfo,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiController$DeviceInactiveState: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.dreams.DreamManagerService$LocalService: void stopDream(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.ProgressBar: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.telephony.TelephonyManager: int getDefaultSubscription()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.display.RampAnimator$1: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.content.IContentService$Stub$Proxy: java.util.List getCurrentSyncsAsUser(int)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<android.net.sip.SipAudioCall$1: void onCallBusy(android.net.sip.SipSession)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.ResolverDrawerLayout: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.WifiManager: boolean isMulticastEnabled()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.voiceinteraction.SoundTriggerHelper: void onServiceDiedLocked()>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.Connection dial(java.lang.String,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.ExpandableListActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.backup.PackageManagerBackupAgent: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.media.WebVttRenderingWidget$CueLayout: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.AudioService: boolean access$3200(android.media.AudioService)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void notifyDataConnection(java.lang.String,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.location.ComprehensiveCountryDetector: void startLocationBasedDetector(android.location.CountryListener)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.UiModeManagerService: void onBootPhase(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.SubscriptionController: int getDefaultSmsSubId()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.TelephonyRegistry: void broadcastServiceStateChanged(android.telephony.ServiceState,int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.wifi.WifiManager: int getFrequencyBand()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.view.IWindowManager$Stub$Proxy: void enableScreenIfNeeded()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.sip.SipAudioCall$1: void onCallEnded(android.net.sip.SipSession)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.test.mock.MockApplication: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.SyncActivityTooManyDeletes: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.ImageCombineFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.filterpacks.videosrc.SurfaceTextureTarget: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.notification.DowntimeConditionProvider$FiredAlarms: java.lang.String toString()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: boolean removeUser(android.content.ComponentName,android.os.UserHandle)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IMms: android.net.Uri importTextMessage(java.lang.String,java.lang.String,int,java.lang.String,long,boolean,boolean)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.provider.Telephony$Sms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[])>": [
  "android.permission.READ_SMS"
 ], 
 "<android.media.AudioManager: void startBluetoothScoVirtualCall()>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void handlePollStateResult(int,android.os.AsyncResult)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceCategoryProgramHandler: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.commands.dpm.Dpm: void runSetDeviceOwner()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.notification.NextAlarmConditionProvider: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.app.HeavyWeightSwitcherActivity: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService: void access$800(com.android.server.accessibility.AccessibilityManagerService,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.backup.IBackupManager: void restoreAtInstall(java.lang.String,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: boolean setProfileOwner(android.content.ComponentName,java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoController: int getDefaultSubscription()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.sip.SipManager: boolean isRegistered(java.lang.String)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.server.wifi.WifiWatchdogStateMachine: void <init>(android.content.Context,android.os.Messenger)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.INetworkPolicyManager: void setNetworkPolicies(android.net.NetworkPolicy[])>": [
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordMinimumLength(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.tech.NfcBarcode: void reconnect()>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void setRadioPower(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: int getWifiEnabledState()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void setBandMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.test.IsolatedContext: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.ims.internal.IImsEcbmListener: void exitedECBM()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.PhoneBase: void <init>(java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindow: void access$2200(com.android.internal.policy.impl.PhoneWindow)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.telephony.SubscriptionManager: int getDefaultSmsSubId()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void notifyServiceStateChangedP(android.telephony.ServiceState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wm.DragState: void endDragLw()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void handleSrvccStateChanged(int[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.WindowAnimator: void testTokenMayBeDrawnLocked(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.DateTimeView$ReceiverInfo$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.LocationManagerService$Receiver: boolean callLocationChangedLocked(android.location.Location)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmSMSDispatcher: void processSendSmsResponse(com.android.internal.telephony.SMSDispatcher$SmsTracker,int,int)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.NsdService: com.android.server.NsdService create(android.content.Context)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.TextViewWithCircularIndicator: boolean performLongClick()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.DayPickerView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.P2pEventListener: void onP2pHandoverNotSupported()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void <init>(java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager: android.content.ComponentName setGlobalProxy(android.content.ComponentName,java.lang.String,java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.sip.SipManager: void close(java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_SIP"
 ], 
 "<android.filterpacks.imageproc.ToRGBFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.view.IInputMethodManager: java.util.List getShortcutInputMethodsAndSubtypes()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.widget.LockPatternUtils: java.lang.String getString(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.UiccSmsController: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: android.content.ComponentName getRestrictionsProvider(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.CheckedTextView: void access$200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterfw.core.Filter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.service.voice.VoiceInteractionSessionService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.speech.RecognitionService$RecognitionServiceBinder: void cancel(android.speech.IRecognitionListener)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.internal.app.ResolverActivity: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.content.ContentService: java.util.List getCurrentSyncs()>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<android.print.IPrintManager$Stub: void startPrinterDiscovery(android.print.IPrinterDiscoveryObserver,java.util.List,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.usage.UserUsageStatsService$4: boolean checkin(com.android.server.usage.IntervalStats)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.NetworkTimeUpdateService: void systemRunning()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.text.ToUpperCase: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.CompoundButton: void updateTextServicesLocaleLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.Application: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.am.ActivityManagerService: void systemReady(java.lang.Runnable)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.UsimFileHandler: void loadEFLinearFixed(int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.MmsServiceBroker$BinderService: android.net.Uri addTextMessageDraft(java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager$CellBroadcastRangeManager: boolean updateRanges()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: java.lang.Object next()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.bluetooth.BluetoothPbap: void <init>(android.content.Context,android.bluetooth.BluetoothPbap$ServiceListener)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.telephony.TelephonyManager: int getIntAtIndex(android.content.ContentResolver,java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: boolean hasUserSetupCompleted(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.ImageStitcher: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager: void sendMultipartText(java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>": [
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS"
 ], 
 "<android.filterpacks.imageproc.ContrastFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCommandInterface: void onRadioAvailable()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: java.util.List getPermittedAccessibilityServices(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.CheckBox: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void setUiTTYMode(int,android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void handleSrvccStateChanged(int[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.InputMonitor: int interceptMotionBeforeQueueingNonInteractive(long,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.location.ILocationManager$Stub$Proxy: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: void onConnectedInOrOut()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.Context: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.filterpacks.imageproc.ColorTemperatureFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.WindowAnimator: void setAppLayoutChanges(com.android.server.wm.AppWindowAnimator,int,java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.nfc.tech.Ndef: void writeNdefMessage(android.nfc.NdefMessage)>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine: boolean setAndPersistDeviceName(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void setGlobalSetting(android.content.ComponentName,java.lang.String,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void addPersistentPreferredActivity(android.content.ComponentName,android.content.IntentFilter,android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager: int getPasswordHistoryLength(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService$5: void onOpChanged(int,java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void nvWriteItem(int,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.telecom.ConnectionService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.TelephonyRegistry: void listen(java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean,int)>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.media.effect.effects.AutoFixEffect: void release()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.ClosedCaptionWidget: void manageChangeListener()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.cardemulation.CardEmulationManager$CardEmulationInterface: boolean unsetPreferredService()>": [
  "android.permission.VIBRATE", 
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.ServiceStateTracker: void setPowerStateToDesired()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.pm.PackageManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.CLEAR_APP_CACHE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.GET_PACKAGE_SIZE"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevicePlayback: void handleAddressAllocated(int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: boolean getDataEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.provider.CalendarContract$Instances: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],long,long,java.lang.String)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.widget.SimpleMonthView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void notifyApnIdUpToCurrent(java.lang.String,int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.accounts.AccountManagerService$3: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.inputmethodservice.ExtractEditText: boolean shouldSpeakPasswordsForAccessibility()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothSocket createInsecureRfcommSocket(int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void notifyDataConnection(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.MediaScanner: void scanMtpFile(java.lang.String,java.lang.String,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void reportSuccessfulPasswordAttempt(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accessibility.AccessibilityInputFilter: void setEnabledFeatures(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.telephony.SmsManager: boolean deleteStoredMessage(android.net.Uri)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<android.filterpacks.videosrc.SurfaceTextureSource: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.CheckBox: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getGroupIdLevel1ForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void getEnhancedVoicePrivacy(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityManagerService: boolean attachApplicationLocked(android.app.IApplicationThread,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void explicitCallTransfer()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.LocationManagerService: void access$400(com.android.server.LocationManagerService,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.LockSettingsService: void systemReady()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.location.ILocationManager$Stub: void removeUpdates(android.location.ILocationListener,android.app.PendingIntent,java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.filterpacks.imageproc.ToRGBAFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.app.backup.FullBackupAgent: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.os.storage.ExternalStorageFormatter: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.nfc.snep.SnepServer$ConnectionThread: void run()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.input.InputManagerService: int interceptKeyBeforeQueueing(android.view.KeyEvent,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.TextServicesManagerService$1: void onUserSwitching(int,android.os.IRemoteCallback)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.tts.TextToSpeechService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.provider.Telephony$Threads: long getOrCreateThreadId(android.content.Context,java.lang.String)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.input.InputManagerService: void registerShowTouchesSettingObserver()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getCameraDisabled(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.pm.BackgroundDexOptService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.UiccSmsController: void sendData(java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.net.NetworkPolicyManagerService: void normalizePoliciesLocked()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.app.ResolverActivity$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.AnalogClock: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: boolean getAnyDataEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.content.SyncManager$SyncHandler: void closeActiveSyncContext(com.android.server.content.SyncManager$ActiveSyncContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.power.ShutdownThread$1: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.accessibilityservice.AccessibilityService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.WifiStateMachine$SupplicantStartingState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.tech.NdefFormatable: void format(android.nfc.NdefMessage,boolean)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.policy.impl.EnableAccessibilityController: void access$200(com.android.internal.policy.impl.EnableAccessibilityController)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.test.mock.MockContentResolver: void addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.server.wifi.WifiWatchdogStateMachine: boolean isWatchdogEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accessibility.ScreenMagnifier: void access$200(com.android.server.accessibility.ScreenMagnifier)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneConnection: void <init>(android.content.Context,com.android.ims.ImsCall,com.android.internal.telephony.imsphone.ImsPhoneCallTracker,com.android.internal.telephony.imsphone.ImsPhoneCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void resetRadio(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.backup.BackupManagerService$FullBackupEngine$FullBackupRunner: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.text.format.DateFormat: boolean is24HourFormat(android.content.Context,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accessibility.TouchExplorer: void access$2600(com.android.server.accessibility.TouchExplorer,android.view.MotionEvent,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.widget.DialogTitle: boolean access$1200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.telephony.TelephonyManager: java.lang.String getSimOperator()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager$21: void run()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiScanningServiceImpl$WifiScanningStateMachine: java.lang.String toString()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.cardemulation.TapAgainDialog: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.nfc.NfcBackupAgent: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.wifi.WifiManager$MulticastLock: void acquire()>": [
  "android.permission.CHANGE_WIFI_MULTICAST_STATE"
 ], 
 "<com.android.server.net.NetworkPolicyManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.CertBlacklister: void <init>(android.content.Context)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: boolean isManualNetSelAllowed()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoController: java.lang.String[] getIsimPcscf()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.search.SearchManagerService$MyPackageMonitor: boolean onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.dreams.DreamManagerService: void stopDreamLocked(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.WifiManager: boolean isNanSupported()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.statusbar.StatusBarManagerService: void expandSettingsPanel()>": [
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<android.view.ViewGroup: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.print.UserState: void readPrintServicesFromSettingLocked(java.lang.String,java.util.Set)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void access$10300(com.android.server.wifi.WifiStateMachine)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.telecom.ConnectionService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getLine1AlphaTag()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAccountsByTypeAndFeatures(java.lang.String,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.net.NetworkPolicyManagerService$11: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.accessibility.AccessibilityInputFilter: void disableFeatures()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GsmInboundSmsHandler: void dispatchSmsDeliveryIntent(byte[][],java.lang.String,int,android.content.BroadcastReceiver)>": [
  "android.permission.RECEIVE_SMS", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.media.MediaSessionService$SettingsObserver: void onChange(boolean,android.net.Uri)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void nvResetConfig(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.textservice.ITextServicesManager$Stub: android.view.textservice.SpellCheckerSubtype getCurrentSpellCheckerSubtype(java.lang.String,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.videoproc.BackDropperFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.DateTimeView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ISub$Stub: android.telephony.SubscriptionInfo getActiveSubscriptionInfoForSimSlotIndex(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.app.IntentService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.IEthernetManager: void setConfiguration(android.net.IpConfiguration)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<android.bluetooth.BluetoothMap: void finalize()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.widget.ViewSwitcher: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.IActivityManager: void moveTaskToFront(int,int,android.os.Bundle)>": [
  "android.permission.REORDER_TASKS"
 ], 
 "<com.android.server.wm.WindowManagerService: void performEnableScreen()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void queryAvailableBandMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.service.trust.TrustAgentService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean onDisconnect(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean setPermittedAccessibilityServices(android.content.ComponentName,java.util.List)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.ServiceWatcher$2: void onSomePackagesChanged()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.TechListChooserActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void setSmscAddress(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: int updateSystemUiVisibilityLw()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void handleExitEmergencyCallbackMode(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void wipeData(int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.TwoLineListItem: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IccProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.PendingIntent$FinishedDispatcher: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.view.accessibility.CaptioningManager$2: void run()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.textservice.TextServicesManager: void setSpellCheckerSubtype(android.view.textservice.SpellCheckerSubtype)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void invokeOemRilRequestRaw(byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void notifyDataConnection(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.telephony.TelephonyManager: void setDataEnabled(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService: boolean readAccessibilityEnabledSettingLocked(com.android.server.accessibility.AccessibilityManagerService$UserState)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.location.LocationBasedCountryDetector$1: void onLocationChanged(android.location.Location)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.hdmi.HdmiControlService: void access$5700(com.android.server.hdmi.HdmiControlService)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.hardware.input.InputManager$InputDeviceVibrator: void vibrate(long[],int)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.wifi.WifiNotificationController$NotificationEnabledSettingObserver: void register()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.hdmi.OneTouchPlayAction: void broadcastActiveSource()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: android.telephony.CellLocation getCellLocation()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.INfcTag: int[] getTechList(int)>": [
  "android.permission.NFC"
 ], 
 "<android.view.IWindowManager: int getInitialDisplayDensity(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.telephony.TelephonyManager: int getIntWithSubId(android.content.ContentResolver,java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.ActivityGroup: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$P2pEnabledState: void exit()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.hdmi.HdmiControlService: void access$100(com.android.server.hdmi.HdmiControlService)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.service.media.MediaBrowserService: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.widget.EditText: boolean performLongClick()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.CheckedTextView: void updateTextServicesLocaleLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiStateMachine$SoftApStartingState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.BluetoothMap: void close()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: boolean isScanAlwaysAvailable()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.nfc.NfcActivityManager: void setNdefPushContentUri(android.app.Activity,android.net.Uri[])>": [
  "android.permission.NFC"
 ], 
 "<android.widget.YearPickerView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void notifyApnIdDisconnected(java.lang.String,int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.hdmi.SystemAudioAutoInitiationAction: void handleSystemAudioModeStatusMessage()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.BrightnessFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void updateServiceLocation()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.display.DisplayPowerController$3: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.internal.telephony.ISub$Stub: java.util.List getAllSubInfoList()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.app.ExpandableListActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.backup.BackupManagerService$PerformBackupTask: void handleTimeout()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void enableEnhancedVoicePrivacy(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.UiModeManagerService: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.TextView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.IWifiManager: boolean removeNetwork(int)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void disableDataCallInEmergencyCall(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.AutoFixFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.nfc.cardemulation.PreferredServices: void loadDefaultsFromSettings(int)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.IAccountManager: android.accounts.Account[] getAccountsAsUser(java.lang.String,int)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.media.Ringtone: java.lang.String getTitle(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.statusbar.IStatusBarService: void collapsePanels()>": [
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: boolean getScreenCaptureDisabled(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.UiModeManagerService: void updateTwilight()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.job.JobSchedulerService: void onSwitchUser(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.filterpacks.performance.ThroughputFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void queueNextSignalStrengthPoll()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.internal.telephony.RI: void changeIccPin2(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.uicc.UiccCardApplication: void supplyPin(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void notifyDataConnection(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.IAccountManager: void setPassword(android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<android.filterpacks.base.NullFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.effect.effects.SepiaEffect: void apply(int,int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.media.effect.effects.RotateEffect: void release()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.server.BluetoothA2dpService: void onBluetoothDisable()>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.server.pm.PackageManagerService: int deletePackageX(java.lang.String,int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ISms$Stub: boolean enableCellBroadcastForSubscriber(int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.internal.telephony.ISms$Stub$Proxy: java.lang.String getImsSmsFormat()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.TextClock: void init()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.BroadcastQueue: void backgroundServicesFinishedLocked(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$3: void onCallMerged(com.android.ims.ImsCall,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getVoiceMailAlphaTag()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.usage.UsageStatsService: void onBootPhase(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.base.FrameStore: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void hangupWaitingOrBackground()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.display.DisplayPowerController: void updateBrightness()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.RttService: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ISms: void sendStoredText(int,java.lang.String,android.net.Uri,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS"
 ], 
 "<android.filterpacks.imageproc.DrawRectFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.tv.TvInputManagerService$1: void onPackageModified(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.content.SyncManager: void access$3500(com.android.server.content.SyncManager,com.android.server.content.SyncOperation)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.backup.Trampoline: void clearBackupData(java.lang.String,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.trust.TrustManagerService: void dispatchUnlockAttempt(boolean,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void nvResetConfig(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.IWindowManager$Stub$Proxy: void setNewConfiguration(android.content.res.Configuration)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.ActivityManagerService: void handleApplicationCrash(android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.NfcBackupAgent: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.widget.PasswordEntryKeyboardView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.Phone: void getPreferredNetworkType(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cat.CommandParamsFactory: boolean processGetInkey(com.android.internal.telephony.cat.CommandDetails,java.util.List)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.notification.NotificationManagerService$SettingsObserver: void <init>(com.android.server.notification.NotificationManagerService,android.os.Handler)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.media.effect.effects.BackDropperEffect: void apply(int,int,int,int)>": [
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.widget.TextClock: void chooseFormat()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.INfcTag$Stub$Proxy: android.nfc.Tag rediscover(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.wifi.WifiSettingsStore: void <init>(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.widget.LockPatternUtils: boolean isLockScreenDisabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.INetworkStatsService: android.net.NetworkStats getDataLayerSnapshotForUid(int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.nfc.NfcService: void onHostCardEmulationDeactivated()>": [
  "android.permission.VIBRATE"
 ], 
 "<android.filterpacks.imageproc.SepiaFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.SubscriptionController: void broadcastDefaultSmsSubIdChanged(int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.SimpleImageFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.cardemulation.CardEmulationManager$CardEmulationInterface: boolean isDefaultServiceForAid(int,android.content.ComponentName,java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<com.android.server.notification.NotificationManagerService: void onBootPhase(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.base.OutputStreamTarget: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void enableEnhancedVoicePrivacy(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.uicc.IccCardProxy: void updateIccAvailability()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.Activity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.bluetooth.BluetoothServerSocket: void <init>(int,boolean,boolean,android.os.ParcelUuid)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.location.GeofenceManager: void addFence(android.location.LocationRequest,android.location.Geofence,android.app.PendingIntent,int,int,java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.bluetooth.BluetoothHeadsetClient: void <init>(android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: boolean handleCallHoldIncallSupplementaryService(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.ResolverActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.NsdService$NsdStateMachine$DefaultState: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: android.util.Pair getLastSubtypeForInputMethodLockedInternal(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void transferHandoverConnections(com.android.internal.telephony.imsphone.ImsPhoneCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.IBluetoothManager: void unregisterStateChangeCallback(android.bluetooth.IBluetoothStateChangeCallback)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.wm.AccessibilityController: void drawMagnifiedRegionBorderIfNeededLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.sip.ISipService$Stub: android.net.sip.ISipSession createSession(android.net.sip.SipProfile,android.net.sip.ISipSessionListener)>": [
  "android.permission.USE_SIP"
 ], 
 "<android.app.admin.IDevicePolicyManager: long getMaximumTimeToLock(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiStateMachine$6: void onChange(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.ims.internal.IImsCallSessionListener$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ActivityManagerNative: void killBackgroundProcesses(java.lang.String,int)>": [
  "android.permission.RESTART_PACKAGES", 
  "android.permission.KILL_BACKGROUND_PROCESSES"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void setBandMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.Presentation$1: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.wifi.WifiManager: boolean isOffChannelTdlsSupported()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.UiccSmsController: java.lang.String getImsSmsFormatForSubscriber(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoProxy: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.NsdService$NsdStateMachine$DisabledState: void enter()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.IActivityContainer$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.notification.ManagedServices: void disableNonexistentServices(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: android.net.wifi.WifiActivityEnergyInfo reportActivityInfo()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.media.MediaScannerClient: void scanFile(java.lang.String,long,long,boolean,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.IWifiManager$Stub: void startLocationRestrictedScan(android.os.WorkSource)>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.app.ShutdownActivity: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.BitmapSource: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.HdmiControlService: boolean readBooleanSetting(java.lang.String,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.display.AutomaticBrightnessController: void access$300(com.android.server.display.AutomaticBrightnessController,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.ISub$Stub: void clearDefaultsForInactiveSubIds()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.view.accessibility.CaptioningManager: float getFontScale()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiController$EcmState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.WakeLockStateMachine: java.lang.String toString()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.SimpleMonthView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.NativeActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.filterpacks.base.FrameSource: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.MediaRecorder: void setVideoSource(int)>": [
  "android.permission.CAMERA"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName,android.os.PersistableBundle,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.RttService$RttServiceImpl$RttStateMachine$EnabledState: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.UiModeManagerService: void onStartUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ISub$Stub: int setDisplayNameUsingSrc(java.lang.String,int,long)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.speech.RecognitionService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.nfc.NfcService: void onLlcpLinkActivated(com.android.nfc.DeviceHost$NfcDepEndpoint)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.commands.wm.Wm: void onRun()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.display.DisplayPowerController: void <init>(android.content.Context,android.hardware.display.DisplayManagerInternal$DisplayPowerCallbacks,android.os.Handler,android.hardware.SensorManager,com.android.server.display.DisplayBlanker)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void getDataCallList(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void notifyServiceStateChanged(android.telephony.ServiceState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wm.WindowManagerService: void setAppFullscreen(android.os.IBinder,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordMinimumSymbols(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.GlobalActions: void <init>(android.content.Context,android.view.WindowManagerPolicy$WindowManagerFuncs)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.filterpacks.imageproc.NegativeFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.backup.SystemBackupAgent: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.updates.ConfigUpdateInstallReceiver$1: void run()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.ToPackedGrayFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.SubscriptionController: int getDefaultSubId()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.hardware.location.IGeofenceHardware: boolean pauseGeofence(int,int)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.VibratorService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.display.DisplayPowerController: void animateScreenStateChange(int,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.am.ActivityStack: boolean checkReadyForSleepLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.dataconnection.DataConnection$DcActivatingState: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.widget.LockPatternUtils: void saveLockPattern(java.util.List,boolean,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.tts.TextToSpeech$8: java.util.Locale run(android.speech.tts.ITextToSpeechService)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.RI: void setNetworkSelectionModeManual(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.speech.tts.ITextToSpeechService: int speak(android.os.IBinder,java.lang.CharSequence,int,android.os.Bundle,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.cardemulation.AppChooserActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.display.DisplayPowerController: void access$000(com.android.server.display.DisplayPowerController)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.TextClock: boolean access$1200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.LauncherActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.SubscriptionController: int setDataRoaming(int,int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry: void notifySignalStrengthForSubscriber(int,android.telephony.SignalStrength)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.IContentService: void sync(android.content.SyncRequest)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: boolean isSubtypeSelected()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void supplyIccPinForApp(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void nvWriteCdmaPrl(byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.provider.ContactsContract$Contacts$AggregationSuggestions$Builder: android.net.Uri build()>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: java.util.List getScanResults(java.lang.String)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void uninstallCaCert(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: void changeVolume(int,int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.telephony.SmsManager: boolean disableCellBroadcast(int,int)>": [
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ISub$Stub: void setDefaultVoiceSubId(int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.widget.TextViewWithCircularIndicator: void access$200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.statusbar.StatusBarManagerService: void expandNotificationsPanel()>": [
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.server.InputMethodManagerService$4: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.net.NetworkStatsService: void access$1400(com.android.server.net.NetworkStatsService)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.accounts.GrantCredentialsPermissionActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void setPasswordMinimumLowerCase(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.SMSDispatcher: int getSubId()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.NfcService: void commitRouting()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.input.InputManagerService$8: void onChange(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiApConfigStore: void onQuitting()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void hangupConnectionByIndex(com.android.internal.telephony.cdma.CdmaCall,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ActivityGroup: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.nfc.NfcRootActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.filterpacks.ui.SurfaceTargetFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.PointerLocationView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.INfcAdapter: boolean enable()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void exitEmergencyCallbackMode()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.AccountAuthenticatorActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.telephony.TelephonyManager: boolean getDataEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneProxy: boolean setOperatorBrandOverride(java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.media.tv.TvInputInfo$TvInputSettings: boolean isHidden(android.content.Context,java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void updateSpnDisplay()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.view.IWindowManager: void statusBarVisibilityChanged(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipAudioCallAdapter: void onError(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService$AccessibilityContentObserver: void onChange(boolean,android.net.Uri)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: void reconnect()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.nfc.cardemulation.HostApduService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void setRadioCapability(com.android.internal.telephony.RadioCapability,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.tech.NdefFormatable: void format(android.nfc.NdefMessage)>": [
  "android.permission.NFC"
 ], 
 "<android.accounts.IAccountManager: void getAccountsByFeatures(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[])>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.dreams.DreamManagerService$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.IWifiManager$Stub: void pollBatchedScan()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.media.MediaPlayer: void postEventFromNative(java.lang.Object,int,int,int,java.lang.Object)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.TtmlRenderingWidget: void <init>(android.content.Context,android.util.AttributeSet,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void deleteAndCreatePhone(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.server.am.ActivityManagerService: void startObservingNativeCrashes()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.dreams.Sandman: void startDreamWhenDockedIfAppropriate(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.wallpaper.WallpaperService$Engine$3: void onDisplayChanged(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.SYSTEM_ALERT_WINDOW", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.StackView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.notification.NotificationSignalExtractor: void initialize(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.MediaFocusControl: void <init>(android.os.Looper,android.content.Context,android.media.AudioService$VolumeController,android.media.AudioService)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.widget.multiwaveview.GlowPadView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.content.pm.IPackageManager$Stub$Proxy: int getInstallLocation()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.UiAutomationConnection: void disconnect()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.wifi.IWifiManager$Stub: void disconnect()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.wifi.WifiStateMachine$DisconnectedState: boolean processMessage(android.os.Message)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.widget.SubtitleView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.IccCardProxy: void supplyPin2(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneBase: boolean isDataConnectivityPossible(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void setActiveAdmin(android.content.ComponentName,boolean,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: boolean processMessagePart(com.android.internal.telephony.InboundSmsTracker)>": [
  "android.permission.RECEIVE_WAP_PUSH", 
  "android.permission.WRITE_SMS", 
  "android.permission.RECEIVE_MMS", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_SMS"
 ], 
 "<android.nfc.tech.NfcF: void setTimeout(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isApplicationHidden(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.telephony.TelephonyManager: java.lang.String getLine1NumberForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void setupDataOnConnectableApns(java.lang.String,com.android.internal.telephony.dataconnection.DcTracker$RetryFailures)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void setScreenCaptureDisabled(android.content.ComponentName,int,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.WifiManager: android.net.wifi.WifiConfiguration getWifiApConfiguration()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.widget.ToggleButton: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.effect.effects.NegativeEffect: void apply(int,int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: boolean handleCallDeflectionIncallSupplementaryService(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.content.ContentService: void sync(android.content.SyncRequest)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.nfc.dhimpl.NativeNfcManager: void notifyRfFieldDeactivated()>": [
  "android.permission.VIBRATE"
 ], 
 "<android.nfc.INfcTag$Stub$Proxy: int ndefWrite(int,android.nfc.NdefMessage)>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.wm.WindowManagerService: void prepareAppTransition(int,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.InboundSmsHandler: boolean processMessagePart(com.android.internal.telephony.InboundSmsTracker)>": [
  "android.permission.RECEIVE_WAP_PUSH", 
  "android.permission.WRITE_SMS", 
  "android.permission.RECEIVE_MMS", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_SMS"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean addCrossProfileWidgetProvider(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.VignetteFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void updatePhoneObject(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.filterpacks.imageproc.GrainFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean hasGrantedPolicy(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.net.NetworkStatsService$NetworkStatsSettings: com.android.server.net.NetworkStatsService$NetworkStatsSettings$Config getXtConfig()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.search.SearchManagerService: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.server.notification.NextAlarmConditionProvider: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.ims.ImsCall: void notifyConferenceSessionTerminated(com.android.ims.ImsReasonInfo)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void invokeOemRilRequestRaw(byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.Phone: void nvWriteCdmaPrl(byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ISms$Stub$Proxy: boolean disableCellBroadcast(int,int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void cleanUpConnectionsOnUpdatedApns(boolean)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.WifiManager: android.net.wifi.WifiConnectionStatistics getConnectionStatistics()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.speech.SpeechRecognizer: void handleStartListening(android.content.Intent)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.server.search.SearchManagerService$MyPackageMonitor: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.P2pEventListener: void onP2pSendComplete()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.gsm.GsmInboundSmsHandler: void <init>(java.lang.String,android.content.Context,com.android.internal.telephony.SmsStorageMonitor,com.android.internal.telephony.PhoneBase,com.android.internal.telephony.CellBroadcastHandler)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.content.SyncManager: void access$900(com.android.server.content.SyncManager,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.power.PowerManagerService: void goToSleepInternal(long,int,int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.NfcApplication: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.hdmi.DevicePowerStatusAction: void addAndStartAction(com.android.server.hdmi.HdmiCecFeatureAction)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.DeviceDiscoveryAction: void handleReportPhysicalAddress(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.RttService: void onStartUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void addOnSubscriptionsChangedListener(java.lang.String,com.android.internal.telephony.IOnSubscriptionsChangedListener)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.accounts.AccountManagerService: android.accounts.Account[] getAccounts(java.lang.String)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.nfc.DeviceHost$TagDisconnectedCallback: void onTagDisconnected(long)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.printservice.PrintService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.media.effect.effects.SepiaEffect: void release()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: long getPasswordExpiration(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.ISyncAdapter$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.server.notification.ValidateNotificationPeople$PeopleRankingReconsideration: void run()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void getPreferredNetworkType(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.backup.BackupManagerService$PerformBackupTask: void finalizeBackup()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterfw.core.Filter: void process(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void removeActiveAdminLocked(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.notification.ManagedServices: void rebindServices()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.KeyguardManager$KeyguardLock: void disableKeyguard()>": [
  "android.permission.DISABLE_KEYGUARD"
 ], 
 "<com.android.server.am.ActivityStackSupervisor: boolean pauseBackStacks(boolean,boolean,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.InputMethodManagerService: void showInputMethodSubtypeMenu()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.ActivityManagerService: void closeSystemDialogsLocked(java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.location.ILocationManager$Stub$Proxy: void clearTestProviderEnabled(java.lang.String)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: void processAllDelayedMessages()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.telephony.SmsManager: boolean enableCellBroadcastRange(int,int,int)>": [
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.internal.telephony.IMms$Stub$Proxy: boolean deleteStoredMessage(java.lang.String,android.net.Uri)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.wallpaper.WallpaperManagerService: void setDisplayPadding(android.graphics.Rect)>": [
  "android.permission.SET_WALLPAPER_HINTS"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: void hangup(com.android.internal.telephony.gsm.GsmConnection)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: boolean setWifiEnabled(boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.service.textservice.SpellCheckerService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.gsm.GsmSMSDispatcher: boolean denyIfQueueLimitReached(com.android.internal.telephony.SMSDispatcher$SmsTracker)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.sip.SipService$SipSessionGroupExt: void openToReceiveCalls()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void handlePreDhcpSetup()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.ImageEncoder: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ISub$Stub$Proxy: void clearDefaultsForInactiveSubIds()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: void enforceMulticastChangePermission()>": [
  "android.permission.CHANGE_WIFI_MULTICAST_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: void access$000(com.android.internal.telephony.cdma.CdmaConnection)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.print.PrintManagerService$PrintManagerImpl: void startPrinterDiscovery(android.print.IPrinterDiscoveryObserver,java.util.List,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.RI: void invokeOemRilRequestRaw(byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: void addToBlacklist(java.lang.String)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.dataconnection.DataConnection$DcDisconnectionErrorCreatingConnection: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.wifi.WifiStateMachine$SoftApStartedState: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GsmInboundSmsHandler: java.lang.String toString()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipCall: void rejectCall()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.SamplingProfilerService: void <init>(android.content.Context)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.hardware.location.GeofenceHardwareImpl: void reportGeofenceMonitorStatus(int,int,android.location.Location,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask: void restoreFinished()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.accounts.CantAddAccountActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.nfc.beam.BeamTransferManager: void updateStateAndNotification(int)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setCdmaRoamingPreference(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.uicc.UiccCard: void iccExchangeSimIO(int,int,int,int,int,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.IAccountManager: void editProperties(android.accounts.IAccountManagerResponse,java.lang.String,boolean)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.server.print.PrintManagerService$PrintManagerImpl: void removePrintJobStateChangeListener(android.print.IPrintJobStateChangeListener,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void sendUssdResponse(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.AutoFixFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.IActivityContainer: void release()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.wifi.IWifiManager$Stub: java.util.List getBatchedScanResults(java.lang.String)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.speech.tts.TextToSpeech$15: android.speech.tts.Voice run(android.speech.tts.ITextToSpeechService)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.base.CallbackFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityManagerService: boolean isGetTasksAllowed(java.lang.String,int,int)>": [
  "android.permission.GET_TASKS"
 ], 
 "<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri,java.util.Map)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager: void setPasswordMinimumLetters(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean removeUser(android.content.ComponentName,android.os.UserHandle)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.inputmethodservice.InputMethodService: void initViews()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.IWifiManager$Stub: void releaseMulticastLock()>": [
  "android.permission.CHANGE_WIFI_MULTICAST_STATE"
 ], 
 "<com.android.internal.widget.LockPatternUtils: void setOwnerInfoEnabled(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.SubscriptionController: void setDefaultSmsSubId(int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.SimpleImageFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void setCdmaBroadcastConfig(com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.dreams.DreamManagerService: void requestAwakenInternal()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void queryAvailableBandMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.statusbar.StatusBarManagerService: void collapsePanels()>": [
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService$SetupContentObserver: void <init>(com.android.server.devicepolicy.DevicePolicyManagerService,android.os.Handler)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: void startScan(android.net.wifi.ScanSettings,android.os.WorkSource)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: android.net.NetworkCapabilities getNetworkCapabilities(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.HdmiControlService: void onSwitchUser(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.app.ActivityGroup: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.net.NetworkPolicyManagerService: void updateNetworkRulesLocked()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcController: void onQuitting()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager: void setKeyguardDisabledFeatures(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.location.ComprehensiveCountryDetector$2: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.widget.DateTimeView: void clearFormatAndUpdate()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.bluetooth.BluetoothInputDevice: void close()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void updatePhoneObject(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.widget.Chronometer: boolean access$1200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.bluetooth.BluetoothA2dpSink: void <init>(android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.accounts.CantAddAccountActivity: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.widget.LinearLayout: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.ethernet.EthernetServiceImpl: void enforceAccessPermission()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.nfc.NfcService: void onRemoteFieldDeactivated()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.widget.PasswordEntryKeyboardHelper: void onKey(int,int[])>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.connectivity.PacManager: java.lang.String access$200(android.net.Uri)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.server.updates.CarrierProvisioningUrlsInstallReceiver: java.security.cert.X509Certificate access$000(com.android.server.updates.ConfigUpdateInstallReceiver,android.content.ContentResolver)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.app.ShutdownActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.media.AudioService: void access$9400(android.media.AudioService,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.notification.NotificationManagerService$NotificationListeners: void onPackagesChanged(boolean,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.INfcAdapter$Stub$Proxy: void addNfcUnlockHandler(android.nfc.INfcUnlockHandler,int[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.SaturateFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneBase: void notifyServiceStateChangedP(android.telephony.ServiceState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cat.CatService: void handleCommand(com.android.internal.telephony.cat.CommandParams,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.location.LocationBlacklist: java.lang.String[] getStringArrayLocked(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneSubInfo: java.lang.String getImei()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setRadioCapability(com.android.internal.telephony.RadioCapability,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.provider.CalendarContract$EventDays: android.database.Cursor query(android.content.ContentResolver,int,int,java.lang.String[])>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.nfc.cardemulation.OffHostApduService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wm.AccessibilityController: void setWindowsForAccessibilityCallback(android.view.WindowManagerInternal$WindowsForAccessibilityCallback)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.speech.tts.TextToSpeech: void <init>(android.content.Context,android.speech.tts.TextToSpeech$OnInitListener,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.NfcService$NfcAdapterService: void addNfcUnlockHandler(android.nfc.INfcUnlockHandler,int[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.INfcAdapter: void setAppCallback(android.nfc.IAppCallback)>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.location.ComprehensiveCountryDetector: void setCountryListener(android.location.CountryListener)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.nfc.cardemulation.DefaultRemovedActivity: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void setRadioPower(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wm.Session: int addToDisplay(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.SYSTEM_ALERT_WINDOW", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.test.IsolatedContext: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.dataconnection.DcSwitchAsyncChannel: int connectSrcHandlerToPackageSync(android.content.Context,android.os.Handler,java.lang.String,java.lang.String)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.server.wifi.SupplicantStateTracker$InactiveState: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.RECEIVE_WAP_PUSH", 
  "android.permission.WRITE_SMS", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.RECEIVE_MMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.dataconnection.DataConnection: void tearDownData(java.lang.Object)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.LauncherActivity: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void notifyServiceStateChanged(android.telephony.ServiceState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.base.FrameFetch: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager: void enableSystemApp(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.cardemulation.RegisteredServicesCache: boolean removeAidGroupForService(int,int,android.content.ComponentName,java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.provider.BrowserContract$Bookmarks: android.net.Uri buildFolderUri(long)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<android.telephony.SmsManager: int getDefaultSmsSubscriptionId()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.VignetteFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void sendNetworkStateChangeBroadcast(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.VignetteFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.uicc.UiccCard: void iccTransmitApduLogicalChannel(int,int,int,int,int,int,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.nsd.NsdManager: void init()>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.server.accounts.AccountManagerService: void checkReadAccountsPermission()>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.ISub$Stub: java.util.List getActiveSubscriptionInfoList()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.Phone: void setRadioCapability(com.android.internal.telephony.RadioCapability,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.base.FrameSource: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.bluetooth.BluetoothAdapter: boolean getProfileProxy(android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener,int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.app.IBackupAgent$Stub$Proxy: void doRestoreFinished(int,android.app.backup.IBackupManager)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.base.NullFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void onEnableApn(int,int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getLine1AlphaTagForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.filterpacks.imageproc.TintFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.telephony.SubscriptionManager: int getDefaultDataSubId()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GsmSMSDispatcher: void handleReachSentLimit(com.android.internal.telephony.SMSDispatcher$SmsTracker)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<android.filterpacks.videosrc.MediaSource: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevicePlayback: boolean handleInitiateArc(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void conference()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.IWindowManager$Stub$Proxy: void prepareAppTransition(int,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.os.IPowerManager$Stub$Proxy: void acquireWakeLock(android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.cardemulation.HostApduService: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: java.util.List getCrossProfileWidgetProviders(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.location.LocationFudger: float loadCoarseAccuracy()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.RI: boolean access$300(com.android.internal.telephony.RI)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.inputmethodservice.AbstractInputMethodService: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.nfc.cardemulation.PreferredServices$Callback: void onPreferredPaymentServiceChanged(android.content.ComponentName)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.app.admin.IDevicePolicyManager: void setRestrictionsProvider(android.content.ComponentName,android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.TtmlRenderingWidget: void <init>(android.content.Context,android.util.AttributeSet)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.IWifiManager: void pollBatchedScan()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.display.DisplayPowerController: void sendUpdatePowerStateLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.TimePickerClockDelegate: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.display.AutomaticBrightnessController: void updateAutoBrightness(boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: boolean packageHasActiveAdmins(java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void queryAvailableBandMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.provider.Telephony$Sms: android.net.Uri addMessageToUri(android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean,boolean,long)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.IccCardProxy: void changeIccFdnPassword(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.NfcAdapter: void setBeamPushUris(android.net.Uri[],android.app.Activity)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.widget.multiwaveview.GlowPadView$2: void onAnimationEnd(android.animation.Animator)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: long getPasswordExpiration(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void enforceCanManageCaCerts(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.SystemServiceManager: com.android.server.SystemService startService(java.lang.Class)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.CLEAR_APP_CACHE", 
  "android.permission.READ_PROFILE", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneConnection: void finalize()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void sendCDMAFeatureCode(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.Connection checkMtFindNewRinging(com.android.internal.telephony.DriverCall,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: boolean setWifiEnabled(boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.am.ActiveServices: void removeConnectionLocked(com.android.server.am.ConnectionRecord,com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.IEthernetManager$Stub$Proxy: android.net.IpConfiguration getConfiguration()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.net.wifi.IWifiManager$Stub: int addOrUpdateNetwork(android.net.wifi.WifiConfiguration)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.media.MediaHTTPConnection: java.lang.String getMIMEType()>": [
  "android.permission.INTERNET"
 ], 
 "<android.filterpacks.imageproc.FillLightFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.location.FlpHardwareProvider: void onGeofenceTransition(int,android.location.Location,int,long,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.ILocationManager: void reportLocation(android.location.Location,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.VideoView$7: void surfaceDestroyed(android.view.SurfaceHolder)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.tech.MifareClassic: int getTimeout()>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: boolean isShowImeWithHardKeyboardEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.CertBlacklister$BlacklistObserver: void onChange(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.base.NullFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.GlobalActions$GlobalActionsDialog: boolean dispatchTouchEvent(android.view.MotionEvent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.WifiManager$MulticastLock: void release()>": [
  "android.permission.CHANGE_WIFI_MULTICAST_STATE"
 ], 
 "<com.android.server.am.ActivityRecord$Token: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.speech.tts.TextToSpeechService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.DefaultPhoneNotifier: void notifySignalStrength(com.android.internal.telephony.Phone)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$SetIpForwardingEnabledErrorState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.hdmi.DeviceDiscoveryAction$DeviceDiscoveryCallback: void onDeviceDiscoveryDone(java.util.List)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.AlphaBlendFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.service.notification.NotificationListenerService: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.squareup.okhttp.internal.http.JavaApiConverter$CacheHttpsURLConnection: void connect()>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.nfc.NfcService$NfcAdapterService: void setAppCallback(android.nfc.IAppCallback)>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: android.net.wifi.WifiConnectionStatistics getConnectionStatistics()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.filterpacks.imageproc.DuotoneFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.location.LocationFudger$1: void onChange(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.NfcApplication: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.ColorTemperatureFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.NegativeFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.base.RetargetFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.hardware.location.GeofenceHardwareImpl: void reportGeofenceOperationStatus(int,int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.VideoView: void access$2200(android.widget.VideoView,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.DeviceDiscoveryAction: void checkAndProceedStage()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.NsdService: void <init>(android.content.Context)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.SystemServer$2: void run()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoController: java.lang.String getNaiForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.hdmi.NewDeviceAction: void addAndStartAction(com.android.server.hdmi.HdmiCecFeatureAction)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.IWindowSession: android.os.IBinder prepareDrag(android.view.IWindow,int,int,int,android.view.Surface)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.INetworkScoreService$Stub: boolean updateScores(android.net.ScoredNetwork[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: void finalize()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void requestIsimAuthentication(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void notifySrvccState(com.android.internal.telephony.Call$SrvccState)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.IWindowManager$Stub: android.graphics.Bitmap screenshotApplications(android.os.IBinder,int,int,int,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.power.PowerManagerService: void access$4000(com.android.server.power.PowerManagerService,long,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.ISms$Stub: int getPremiumSmsPermission(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.WindowManagerInternal: void setMagnificationSpec(android.view.MagnificationSpec)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.hardware.location.GeofenceHardwareService$1: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.filterpacks.imageproc.StraightenFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.ILocationManager$Stub: void removeGeofence(android.location.Geofence,android.app.PendingIntent,java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.media.AsyncPlayer: void releaseWakeLock()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager$7: void onSwipeFromRight()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevicePlayback: boolean handleRoutingChange(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: void operationComplete()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.tech.Ndef: byte[] transceive(byte[],boolean)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.policy.impl.EnableAccessibilityController: void enableAccessibility()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.UiccSmsController: void sendText(java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SMS"
 ], 
 "<android.accounts.ChooseTypeAndAccountActivity: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void systemReady()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.media.SubtitleController$Renderer: android.media.SubtitleTrack createTrack(android.media.MediaFormat)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.RemoteViewsService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCall: void hangup()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.telephony.TelephonyManager: int getIntWithSubId(android.content.ContentResolver,java.lang.String,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneFactory: com.android.internal.telephony.sip.SipPhone makePhone(java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.UiccCardApplication: void supplyNetworkDepersonalization(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.HdmiControlService: void access$3100(com.android.server.hdmi.HdmiControlService,android.hardware.hdmi.IHdmiControlCallback)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: boolean handlePinMmi(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void setDataRoamingEnabled(boolean)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.am.ActivityManagerService: boolean access$1400(com.android.server.am.ActivityManagerService,int,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.videoproc.BackDropperFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.base.InputStreamSource: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.LocationManagerService$2: void onChange(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$GroupCreatingState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.text.format.DateFormat: java.text.DateFormat getTimeFormat(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setCallWaiting(boolean,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.NewDeviceAction: boolean processCommand(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.power.PowerManagerService: void access$3700(com.android.server.power.PowerManagerService,long,int,int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.WifiSettingsStore: boolean isAirplaneSensitive()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.SubscriptionController: int setDisplayNumber(java.lang.String,int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.net.sip.ISipService$Stub: boolean isRegistered(java.lang.String)>": [
  "android.permission.USE_SIP"
 ], 
 "<android.net.IEthernetManager$Stub: void setConfiguration(android.net.IpConfiguration)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<android.nfc.tech.MifareUltralight: void close()>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void startProvisioningApnAlarm()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask: void execute()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.admin.IDevicePolicyManager: int getPasswordQuality(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IMms$Stub$Proxy: void downloadMessage(int,java.lang.String,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent)>": [
  "android.permission.RECEIVE_MMS"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void finalize()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.WindowManagerService: void showBootMessage(java.lang.CharSequence,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.policy.impl.PhoneWindow: void onOptionsPanelRotationChanged()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.nfc.tech.NdefFormatable: void formatReadOnly(android.nfc.NdefMessage)>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.restrictions.RestrictionsManagerService: void onStartUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.effect.effects.PosterizeEffect: void apply(int,int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.net.wifi.IWifiManager$Stub: int getWifiApEnabledState()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void setSecureSetting(android.content.ComponentName,java.lang.String,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void setTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName,android.os.PersistableBundle,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager: void reportSuccessfulPasswordAttempt(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.IccRecords: void setVoiceMessageWaiting(int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.uicc.AdnRecordCache: void updateAdnBySearch(int,com.android.internal.telephony.uicc.AdnRecord,com.android.internal.telephony.uicc.AdnRecord,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.net.NetworkStatsService: void performPoll(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.telephony.SubscriptionManager: int getDefaultDataPhoneId()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.RI: void getCellInfoList(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.dataconnection.DcSwitchStateMachine$AttachingState: boolean processMessage(android.os.Message)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.inputmethodservice.ExtractButton: void access$200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void clearUserRestrictions(android.os.UserHandle)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void queryTTYMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.commands.dpm.Dpm: void onRun()>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.nfc.cardemulation.PreferredServices: boolean unregisteredPreferredForegroundService(int)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.app.job.IJobScheduler$Stub$Proxy: int schedule(android.app.job.JobInfo)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.server.net.NetworkPolicyManagerService: android.net.NetworkPolicy[] getNetworkPolicies()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.text.format.DateUtils: java.lang.String formatDateRange(android.content.Context,long,long,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: boolean isSyncPendingAsUser(android.accounts.Account,java.lang.String,int)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void setTimeFromNITZString(java.lang.String,long)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.internal.telephony.RI: void getRadioCapability(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoController: java.lang.String getDeviceId()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void setSmscAddress(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void getIMEISV(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accessibility.AccessibilityInputFilter: void onUninstalled()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.P2pEventListener: void onP2pResumeSend()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.ServiceStateTracker: void updatePhoneObject()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService: void access$5900(com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.INfcAdapter$Stub$Proxy: void invokeBeamInternal(android.nfc.BeamShareData)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.content.ISyncAdapter$Stub$Proxy: void initialize(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.widget.DialerFilter: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.print.IPrintManager$Stub$Proxy: java.util.List getPrintJobInfos(int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.AccountManager$10: void doWork()>": [
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.server.power.PowerManagerService: void onSwitchUser(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry$Stub: void notifySignalStrengthForSubscriber(int,android.telephony.SignalStrength)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.RttService: void onSwitchUser(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.backup.FullBackupJob: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevicePlayback: boolean handleSetStreamPath(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,android.net.Uri,android.view.SurfaceHolder,android.media.AudioAttributes,int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.view.IWindowManager$Stub: void setNewConfiguration(android.content.res.Configuration)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevicePlayback: boolean handleReportPhysicalAddress(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.util.State: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.SubscriptionController: int getAllSubInfoCount()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.RI: void getPreferredNetworkType(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean getAutoTimeZone()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.provider.ContactsContract$ProfileSyncState: android.content.ContentProviderOperation newSetOperation(android.accounts.Account,byte[])>": [
  "android.permission.WRITE_CONTACTS"
 ], 
 "<android.nfc.INfcAdapter$Stub$Proxy: void verifyNfcPermission()>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.gsm.GsmCall: void hangupIfAlive()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.dataconnection.DcSwitchStateMachine$DetachingState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.dataconnection.DcSwitchStateMachine$AttachedState: void enter()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.NumberPicker: boolean dispatchHoverEvent(android.view.MotionEvent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accounts.AccountManagerService$Session: void run()>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.print.PrintManager: java.util.List getPrintJobs()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry$Stub: void addOnSubscriptionsChangedListener(java.lang.String,com.android.internal.telephony.IOnSubscriptionsChangedListener)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager: com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager getInstance(android.content.Context,com.android.internal.telephony.CommandsInterface,android.os.Handler,int,java.lang.Object)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.WifiManager$WifiLock: void acquire()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.content.ContentService: boolean getMasterSyncAutomaticallyAsUser(int)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.content.pm.IPackageManager: void systemReady()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.RoutingControlAction: void addAndStartAction(com.android.server.hdmi.HdmiCecFeatureAction)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.PosterizeFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.UiccSmsController: java.util.List getAllMessagesFromIccEfForSubscriber(int,java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void sendCDMAFeatureCode(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.BitmapOverlayFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.sip.SipService: void open3(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_SIP"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void <init>(java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.BeamShareActivity$4: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: boolean handleTerminateArc(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.SystemAudioActionFromAvr: boolean processCommand(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.MultiAutoCompleteTextView: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.test.IsolatedContext: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.videosrc.SurfaceTextureSource: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.IContentService$Stub: void setSyncAutomaticallyAsUser(android.accounts.Account,java.lang.String,boolean,int)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.server.am.CompatModePackages: void setPackageScreenCompatModeLocked(java.lang.String,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.accounts.AccountManagerService: java.lang.String getUserData(android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.RI: void clearRequestList(int,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.NfcAdapter: boolean enable()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.sip.SipSessionGroup: void processDialogTerminated(javax.sip.DialogTerminatedEvent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.ILocationManager$Stub$Proxy: void setTestProviderLocation(java.lang.String,android.location.Location)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.nfc.BeamShareActivity: void onCreate(android.os.Bundle)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.sip.SipService$ConnectivityReceiver$1: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: boolean hasMatchedTetherApnSetting()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.telephony.SubscriptionManager: int setDisplayName(java.lang.String,int,long)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.app.IntentForwarderActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.WifiApConfigStore: java.lang.String getLogRecString(android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.provider.CalendarContract$Reminders: android.database.Cursor query(android.content.ContentResolver,long,java.lang.String[])>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.accounts.ChooseAccountActivity: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.widget.PasswordEntryKeyboardView: void sendAccessibilityEventForUnicodeCharacter(int,int)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.NfcService$TagService: boolean isNdef(int)>": [
  "android.permission.NFC"
 ], 
 "<android.widget.ViewAnimator: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS"
 ], 
 "<android.inputmethodservice.InputMethodService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void onRecordsLoaded()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.ActivityManagerService$14: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoController: java.lang.String getIccSimChallengeResponse(int,int,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityStack: void goToSleep()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.provider.Settings$System: long getLong(android.content.ContentResolver,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.backup.BackupManagerService$BackupRestoreTask: void handleTimeout()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: boolean onMessage(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.LocationManager: void addGeofence(android.location.LocationRequest,android.location.Geofence,android.app.PendingIntent)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void setVoiceMessageWaiting(int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevicePlayback: void addAndStartAction(com.android.server.hdmi.HdmiCecFeatureAction)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.BitmapSource: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.wifi.WifiStateMachine$DriverStoppedState: boolean processMessage(android.os.Message)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.INfcCardEmulation$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: void clearBlacklist()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.content.MutableContextWrapper: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.print.IPrintManager: void stopPrinterDiscovery(android.print.IPrinterDiscoveryObserver,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.AudioService$VolumeController: void loadSettings(android.content.ContentResolver)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void applyPostLayoutPolicyLw(android.view.WindowManagerPolicy$WindowState,android.view.WindowManager$LayoutParams,android.view.WindowManagerPolicy$WindowState)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.hdmi.HdmiControlService: void onStartUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.INetworkStatsService$Stub$Proxy: android.net.NetworkStats getDataLayerSnapshotForUid(int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.net.wifi.p2p.WifiP2pManager: android.os.Messenger getMessenger()>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.test.SimulatedCommands: void setRadioCapability(com.android.internal.telephony.RadioCapability,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isRemovingAdmin(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.app.ShutdownActivity: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.sip.SipService: android.net.sip.SipProfile[] getListOfProfiles()>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.internal.telephony.uicc.UiccCardApplication: void queryPin1State()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: boolean isMulticastEnabled()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.widget.SearchView$SearchAutoComplete: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.beam.BeamSendService: boolean doTransfer(com.android.nfc.beam.BeamTransferRecord)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.app.IntentService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.CrossProcessFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.ServiceWatcher$2: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: android.net.NetworkCapabilities getNetworkCapabilities(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumUpperCase(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.os.NullVibrator: void vibrate(long[],int)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.filterpacks.imageproc.ColorTemperatureFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: boolean notifySignalStrength()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.Connection dial(java.lang.String,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.MultiAutoCompleteTextView: boolean shouldSpeakPasswordsForAccessibility()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.cardemulation.TapAgainDialog: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService$1: void onSomePackagesChanged()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.ActivityManagerInternal: int startIsolatedProcess(java.lang.String,java.lang.String[],java.lang.String,java.lang.String,int,java.lang.Runnable)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: int getPasswordMinimumSymbols(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getGroupIdLevel1ForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.filterfw.core.GraphRunner: void close()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.TextViewWithCircularIndicator: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.ActivityManagerService: boolean handleApplicationWtf(android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport$CrashInfo)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.IWindowManager: void reenableKeyguard(android.os.IBinder)>": [
  "android.permission.DISABLE_KEYGUARD"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture removeAccountAsUser(android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.app.ApplicationPackageManager: void getPackageSizeInfo(java.lang.String,int,android.content.pm.IPackageStatsObserver)>": [
  "android.permission.GET_PACKAGE_SIZE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void setAccountManagementDisabled(android.content.ComponentName,java.lang.String,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: boolean setRoamingOverride(java.util.List,java.util.List,java.util.List,java.util.List)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.service.voice.VoiceInteractionService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.accessibility.TouchExplorer$SendHoverExitDelayed: void forceSendAndRemove()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.os.PowerManager$WakeLock: void acquire(long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.test.mock.MockContentResolver: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.accessibilityservice.AccessibilityService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.PhoneBase: void getSmscAddress(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordMinimumNumeric(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.WifiManager: void <init>(android.content.Context,android.net.wifi.IWifiManager)>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.telephony.SmsManager: void sendStoredMultipartTextMessage(android.net.Uri,java.lang.String,java.util.ArrayList,java.util.ArrayList)>": [
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS"
 ], 
 "<android.widget.Spinner: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.Connection dialInternal(java.lang.String,com.android.internal.telephony.UUSInfo,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.ToGrayFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.location.GpsLocationProvider: void reportGeofenceAddStatus(int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: java.util.List getPrivilegedConfiguredNetworks()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void setCdmaRoamingPreference(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.IWifiManager$Stub: java.util.List getPrivilegedConfiguredNetworks()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.media.IMediaHTTPConnection$Stub: long getSize()>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.server.storage.DeviceStorageMonitorService: void restatDataDir()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.ActivityStackSupervisor$VirtualActivityDisplay: void <init>(com.android.server.am.ActivityStackSupervisor,int,int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.NfcApplication: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void notifyServiceStateChanged(android.telephony.ServiceState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.IActivityManager: android.content.Intent registerReceiver(android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GsmConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.renderscript.RSTextureView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.Application: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.WifiScanningServiceImpl$WifiScanningStateMachine$StartedState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.nfc.beam.BeamStatusReceiver: void handleTransferEvent(android.content.Intent,int)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.nfc.NfcService$TagService: int reconnect(int)>": [
  "android.permission.NFC"
 ], 
 "<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerInfo[] getEnabledSpellCheckers()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.handover.PeripheralHandoverService: void disableBluetoothIfNeeded()>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.filterpacks.ui.SurfaceTargetFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void decrementWakeLock()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void onUpdatePhoneObject(com.android.internal.telephony.PhoneBase)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.DhcpStateMachine$DefaultState: boolean processMessage(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.BluetoothSocket: void <init>(int,int,boolean,boolean,java.lang.String,int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.wifi.WifiService: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyDataConnectionFailed(java.lang.String,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.telephony.SubscriptionManager: int setDisplayNumber(java.lang.String,int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: void setCurrentSpellChecker(java.lang.String,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.display.DisplayManagerService: void windowManagerAndInputReady()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.IBackupAgent: void doRestoreFinished(int,android.app.backup.IBackupManager)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void notifyDataConnection(java.lang.String,java.lang.String,com.android.internal.telephony.PhoneConstants$DataState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.hdmi.OneTouchPlayAction: boolean start()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.WindowAnimator: void updateAppWindowsLocked(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.am.ActivityStackSupervisor: void handleDisplayChangedLocked(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.view.IWindowSession$Stub: int addToDisplayWithoutInputChannel(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.SYSTEM_ALERT_WINDOW", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.storage.DeviceStorageMonitorService: void checkMemory(boolean)>": [
  "android.permission.CLEAR_APP_CACHE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.IWindowSession$Stub: int addToDisplay(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.SYSTEM_ALERT_WINDOW", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.Connection dialInternal(java.lang.String,com.android.internal.telephony.UUSInfo,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.commands.wm.Wm: void runDisplaySize()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.wifi.p2p.IWifiP2pManager$Stub: android.os.Messenger getP2pStateMachineMessenger()>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.test.mock.MockContentResolver: boolean getMasterSyncAutomatically()>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.BlendFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.WindowManagerService: void keyguardGoingAway(boolean,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.DISABLE_KEYGUARD", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.UiccPhoneBookController: java.util.List getAdnRecordsInEfForSubscriber(int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.text.format.DateFormat: java.lang.String getTimeFormatString(android.content.Context,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.UiModeManagerService: void updateDockState(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoController: java.lang.String getCompleteVoiceMailNumber()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.NfcAdapter: boolean invokeBeam(android.app.Activity)>": [
  "android.permission.VIBRATE", 
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipAudioCallAdapter: void onCallEnded(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.WiredAccessoryManager: void onSystemReady()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void pollCallsWhenSafe()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.updates.ConfigUpdateInstallReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void checkAndEnableDataCallAfterEmergencyCallDropped()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.WifiStateMachine$VerifyingLinkState: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.TextView$3: void run()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.IBackupAgent: void doBackup(android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.uicc.UiccCardApplication: void changeIccFdnPassword(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.SpellChecker: void <init>(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager: int getCurrentFailedPasswordAttempts(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.ChooseAccountActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.nfc.cardemulation.CardEmulation: boolean setPreferredService(android.app.Activity,android.content.ComponentName)>": [
  "android.permission.VIBRATE", 
  "android.permission.NFC"
 ], 
 "<android.media.tv.TvInputInfo: java.lang.CharSequence loadCustomLabel(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.provider.CalendarContract$CalendarEntity$EntityIteratorImpl: java.lang.Object next()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.internal.telephony.IMms$Stub$Proxy: boolean deleteStoredConversation(java.lang.String,long)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.internal.util.AsyncService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.commands.pm.Pm: int runSetInstallLocation()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ProxyController: boolean isDataDisconnected(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevicePlayback: boolean dispatchMessage(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.CrossProcessFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ProxyController: void access$900(com.android.internal.telephony.ProxyController)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.RequestArcAction: void disableArcTransmission()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.location.GeofenceManager: void removeFence(java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.dreams.DreamManagerService: void access$800(com.android.server.dreams.DreamManagerService,java.io.PrintWriter)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getLine1Number()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$4: void onCallHeld(com.android.ims.ImsCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.ClosedCaptionWidget$CCLineBox: boolean shouldSpeakPasswordsForAccessibility()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void setPropertiesByCarrier()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.AudioService$ScoClient: void requestScoState(int,int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.BLUETOOTH"
 ], 
 "<android.speech.tts.TextToSpeech: void <init>(android.content.Context,android.speech.tts.TextToSpeech$OnInitListener)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: java.util.List privatizeCellInfoList(java.util.List)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.InputMethodManagerService: void showInputMethodMenu()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.provider.Settings$System: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.widget.ILockSettings$Stub$Proxy: boolean getBoolean(java.lang.String,boolean,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void sendRssiChangeBroadcast(int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.notification.ConditionProviders: void rebindServices()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: void setForcedDisplayDensityLocked(com.android.server.wm.DisplayContent,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.ClosedCaptionRenderer: android.media.SubtitleTrack createTrack(android.media.MediaFormat)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void getEnhancedVoicePrivacy(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.MmsServiceBroker$BinderService: android.net.Uri addMultimediaMessageDraft(java.lang.String,android.net.Uri)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.power.PowerManagerService: void access$2500(com.android.server.power.PowerManagerService)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager$CellBroadcastRangeManager: boolean tryAddRanges(int,int,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: boolean setPermittedInputMethods(android.content.ComponentName,java.util.List)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.ims.ImsEcbmStateListener: void onECBMEntered()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: boolean releaseWifiLock(android.os.IBinder)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.SystemAudioAutoInitiationAction: void addAndStartAction(com.android.server.hdmi.HdmiCecFeatureAction)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.cardemulation.CardEmulationManager: void onServicesUpdated(int,java.util.List)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.RedEyeFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.widget.CalendarViewLegacyDelegate: void onScroll(android.widget.AbsListView,int,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: void getInitialDisplaySize(int,android.graphics.Point)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.notification.ManagedServices: void <init>(android.content.Context,android.os.Handler,java.lang.Object,com.android.server.notification.ManagedServices$UserProfiles)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.PhoneBase: void selectNetworkManually(com.android.internal.telephony.OperatorInfo,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.InputMethodManagerService$MyPackageMonitor: boolean onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.EthernetManager: void removeListener(android.net.EthernetManager$Listener)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.filterpacks.imageproc.BlackWhiteFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager: void sendStoredMultipartText(java.lang.String,android.net.Uri,java.lang.String,java.util.List,java.util.List)>": [
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS"
 ], 
 "<android.telephony.SubscriptionManager: int getDefaultVoiceSubId()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.ImageCombineFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.videosrc.MediaSource: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.app.RestrictionsPinActivity: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.provider.CallLog$Calls: android.net.Uri addCall(com.android.internal.telephony.CallerInfo,android.content.Context,java.lang.String,int,int,int,android.telecom.PhoneAccountHandle,long,int,java.lang.Long,boolean)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.media.effect.effects.CrossProcessEffect: void apply(int,int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.NetworkTimeUpdateService$SettingsObserver: void observe(android.content.Context)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.view.menu.MenuBuilder$Callback: void onMenuModeChange(com.android.internal.view.menu.MenuBuilder)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone$1: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.ILockSettings$Stub: java.lang.String getString(java.lang.String,java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.pm.IPackageManager$Stub$Proxy: void freeStorageAndNotify(long,android.content.pm.IPackageDataObserver)>": [
  "android.permission.CLEAR_APP_CACHE"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager: boolean disableGsmBroadcastRange(int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.bluetooth.IBluetoothManager$Stub: java.lang.String getName()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.wifi.WifiWatchdogStateMachine: boolean access$600(com.android.server.wifi.WifiWatchdogStateMachine)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.ActivityManagerService: void skipPendingBroadcastLocked(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.MmsServiceBroker$BinderService: boolean archiveStoredConversation(java.lang.String,long,boolean)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.nfc.beam.BeamSendService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wm.WindowManagerService: void onDisplayAdded(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.accessibility.ScreenMagnifier$MagnifiedContentInteractonStateHandler: boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.location.ILocationManager$Stub: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_LOCATION_EXTRA_COMMANDS", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.wifi.WifiServiceImpl$3: void onChange(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.TextViewWithCircularIndicator: void updateTextServicesLocaleLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.IWindowManager$Stub: void keyguardGoingAway(boolean,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.DISABLE_KEYGUARD", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.uicc.IccRecords: void setMsisdnNumber(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityManagerService: void forceStopPackageLocked(java.lang.String,int,java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: java.util.List getAllCellInfo()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.InboundSmsHandler: int dispatchMessage(com.android.internal.telephony.SmsMessageBase)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.app.admin.IDevicePolicyManager: void notifyLockTaskModeChanged(boolean,java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.InputMethodManagerService: java.util.List getEnabledInputMethodSubtypeList(java.lang.String,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: boolean setOperatorBrandOverride(java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.provider.Browser: android.database.Cursor getVisitedLike(android.content.ContentResolver,java.lang.String)>": [
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.google.android.mms.pdu.PduPersister: com.google.android.mms.pdu.GenericPdu load(android.net.Uri)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.widget.ScrollingTabContainerView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void getRemoveWarning(android.content.ComponentName,android.os.RemoteCallback,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DctController$TelephonyNetworkFactory: void releaseNetworkFor(android.net.NetworkRequest)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: boolean computeScreenConfigurationLocked(android.content.res.Configuration)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void onVoiceCallStarted()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.speech.RecognitionService$RecognitionServiceBinder: void stopListening(android.speech.IRecognitionListener)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<android.nfc.tech.MifareUltralight: void writePage(int,byte[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.app.DisableCarModeActivity: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void enableLocationUpdates()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: java.lang.String getLogRecString(android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.InputMethodManagerService: void unbindCurrentMethodLocked(boolean,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void getCallForwardingOption(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void beginPostLayoutPolicyLw(int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<java.net.URLConnection: void connect()>": [
  "android.permission.INTERNET"
 ], 
 "<android.telephony.TelephonyManager: java.lang.String getDeviceSoftwareVersion(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void <init>(java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.content.SyncManager$SyncHandler: long scheduleReadyPeriodicSyncs()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.media.projection.MediaProjectionManagerService: void onBootPhase(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void queryAvailableBandMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.text.method.TextKeyListener: void initPrefs(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.hardware.location.GeofenceHardware: boolean unregisterForMonitorStateChangeCallback(int,android.hardware.location.GeofenceHardwareMonitorCallback)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.net.sip.ISipService$Stub: android.net.sip.SipProfile[] getListOfProfiles()>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.nfc.cardemulation.CardEmulationManager$CardEmulationInterface: boolean registerAidGroupForService(int,android.content.ComponentName,android.nfc.cardemulation.AidGroup)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<android.provider.Settings$System: android.net.Uri getUriFor(java.lang.String)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.ActivityManager: void moveTaskToFront(int,int)>": [
  "android.permission.REORDER_TASKS"
 ], 
 "<android.hardware.location.GeofenceHardwareService$1: boolean resumeGeofence(int,int,int)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.power.PowerManagerService: void setScreenBrightnessOverrideFromWindowManagerInternal(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.os.PowerManager$WakeLock: void setWorkSource(android.os.WorkSource)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager: boolean getAutoTimeRequired()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.sip.SipAudioCall$1: void onError(android.net.sip.SipSession,int,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getVoiceMailAlphaTagForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService$1: void onPackageRemoved(java.lang.String,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.ActivityManager: java.util.List getRecentTasks(int,int)>": [
  "android.permission.GET_TASKS"
 ], 
 "<com.android.server.am.ActivityManagerService: boolean startUserInBackground(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.wifi.SupplicantStateTracker: java.lang.String getLogRecString(android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.SurfaceView: void updateWindow(boolean,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.SYSTEM_ALERT_WINDOW", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void pollStateDone()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.nfc.tech.NfcF: byte[] transceive(byte[],boolean)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void performAuditoryFeedbackForAccessibilityIfNeed()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.IMms: void setAutoPersisting(java.lang.String,boolean)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DctController: void onReleaseAllRequests(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.INfcTag: int reconnect(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.hdmi.DeviceDiscoveryAction: void wrapUpAndFinish()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.Chronometer: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void setPasswordMinimumLetters(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.inputmethodservice.ExtractEditLayout: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.media.AudioService: void startBluetoothScoInt(android.os.IBinder,int)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.inputmethodservice.ExtractEditText: boolean access$1200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.widget.LockPatternView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.VibratorService: void access$1400(com.android.server.VibratorService,long,int,int)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void setApplicationRestrictions(android.content.ComponentName,java.lang.String,android.os.Bundle)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void <init>(java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pService: void onStartUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiController: void initializeAndRegisterForSettingsChange(android.os.Looper)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.content.MutableContextWrapper: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.RotateFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.base.FrameStore: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.ImageCombineFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.tech.BasicTagTechnology: byte[] transceive(byte[],boolean)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void stopDtmf()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.WindowManagerService: void reenableKeyguard(android.os.IBinder)>": [
  "android.permission.DISABLE_KEYGUARD"
 ], 
 "<android.filterpacks.imageproc.DrawRectFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.TelephonyRegistry: void listenForSubscriber(int,java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.filterpacks.text.StringSource: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.base.ObjectSource: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.widget.SimpleMonthView: void onDraw(android.graphics.Canvas)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.SearchView$SearchAutoComplete: boolean performLongClick()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.wifi.IWifiManager$Stub: boolean isScanAlwaysAvailable()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.dataconnection.DataConnection$DcRetryingState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$3: void onCallStarted(com.android.ims.ImsCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void enableEnhancedVoicePrivacy(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setCdmaSubscriptionSource(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ActivityManagerNative: void killUid(int,java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.bluetooth.BluetoothA2dpSink: void finalize()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.policy.impl.GlobalActions: void access$1800(com.android.internal.policy.impl.GlobalActions)>": [
  "android.permission.VIBRATE", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.SEND_SMS", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.Switch: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String[] getIsimImpu()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.IWifiManager: boolean disableNetwork(int)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void setVoiceMessageWaiting(int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.commands.settings.SettingsCmd: void run()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void rejectCall()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getCrossProfileCallerIdDisabled(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.sip.SipWakeLock: void reset()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.RemoteViews$2: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.RI: void access$100(com.android.internal.telephony.RI)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cat.CatService: void handleCmdResponse(com.android.internal.telephony.cat.CatResponseMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: void reassociate()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void notifyDataConnection(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: boolean handleInCallMmiCommands(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.speech.tts.TextToSpeechService: int access$400(android.speech.tts.TextToSpeechService)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setGsmBroadcastActivation(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoController: java.lang.String getIsimChallengeResponse(java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void setOutgoingCallerIdDisplay(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void setVoiceMailNumber(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.print.PrinterDiscoverySession: void stopPrinterDiscovery()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.provider.ContactsContract$RawContacts$EntityIteratorImpl: java.lang.Object next()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.internal.location.GpsNetInitiatedHandler: void <init>(android.content.Context,android.location.INetInitiatedListener,boolean)>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.nfc.cardemulation.OffHostApduService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.media.MediaPlayer: void addTimedTextSource(java.io.FileDescriptor,java.lang.String)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.wifi.IWifiManager$Stub: void reassociate()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.app.admin.IDevicePolicyManager: long getPasswordExpirationTimeout(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.notification.NextAlarmTracker: void access$700(com.android.server.notification.NextAlarmTracker)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void setCallWaiting(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.notification.ManagedServices: void access$600(com.android.server.notification.ManagedServices)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.UiModeManagerService: void updateAfterBroadcastLocked(java.lang.String,int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.CompoundButton: void access$200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcSwitchStateMachine$AttachedState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.provider.BrowserContract$Settings: void setSyncEnabled(android.content.Context,boolean)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS"
 ], 
 "<android.filterpacks.imageproc.LomoishFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.notification.ZenModeHelper: boolean shouldIntercept(com.android.server.notification.NotificationRecord)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GsmCellBroadcastHandler: com.android.internal.telephony.CellBroadcastHandler makeCellBroadcastHandler(android.content.Context,com.android.internal.telephony.PhoneBase)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.dreams.DreamManagerService: android.content.ComponentName[] access$1000(com.android.server.dreams.DreamManagerService,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.pm.IPackageManager$Stub: int getInstallLocation()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.IApplicationToken: void windowsVisible()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void notifyCellInfo(java.util.List)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: void setPassword(android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.ProxyController: void access$100(com.android.internal.telephony.ProxyController,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.FrameLayout: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.INetworkPolicyManager$Stub$Proxy: void setNetworkPolicies(android.net.NetworkPolicy[])>": [
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.filterpacks.imageproc.FisheyeFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.cardemulation.AppChooserActivity: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.ActivityManagerNative: void moveTaskBackwards(int)>": [
  "android.permission.REORDER_TASKS"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: java.util.List getCurrentSyncs()>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.commands.requestsync.RequestSync: void main(java.lang.String[])>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.print.IPrintManager$Stub: void stopPrinterStateTracking(android.print.PrinterId,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.wallpaper.WallpaperSettingsActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.app.ChooserActivity: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.ims.ImsCall$ImsCallSessionListenerProxy: void callSessionStarted(com.android.ims.internal.ImsCallSession,com.android.ims.ImsCallProfile)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.test.ActivityUnitTestCase$MockParent: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.service.notification.ConditionProviderService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<java.net.HttpURLConnection: void <init>(int)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.telephony.RI: void sendSMSExpectMore(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.storage.DeviceStorageMonitorService: void onBootPhase(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.nsd.INsdManager: android.os.Messenger getMessenger()>": [
  "android.permission.INTERNET"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.hardware.IConsumerIrService$Stub: void transmit(java.lang.String,int,int[])>": [
  "android.permission.TRANSMIT_IR"
 ], 
 "<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: int[] getAdnRecordsSize(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.AccountManager$15: android.accounts.AccountManagerFuture start()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void launchVoiceAssistWithWakeLock(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.tts.TextToSpeech: int setEngineByPackageName(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.ReceiverRestrictedContext: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.admin.IDevicePolicyManager: void setTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName,android.os.PersistableBundle,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.AccountAuthenticatorActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.Phone: void dispose()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.ImageCombineFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void setCellInfoListRate(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityStackSupervisor: void ensureActivitiesVisibleLocked(com.android.server.am.ActivityRecord,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.os.IPowerManager$Stub$Proxy: void updateWakeLockWorkSource(android.os.IBinder,android.os.WorkSource,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.service.trust.TrustAgentService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: boolean getSystemAudioModeSetting()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.BroadcastQueue: void scheduleBroadcastsLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.TextServicesManagerService: void switchUserLocked(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.WebVttRenderingWidget: void setVisible(boolean)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void powerOffRadioSafely(com.android.internal.telephony.dataconnection.DcTrackerBase)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.cardemulation.TapAgainDialog: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.wifi.RttService$RttServiceImpl$RttStateMachine$DefaultState: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.print.UserState: void updateIfNeededLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.tv.TvInputManagerService: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void access$1100(com.android.server.wifi.WifiStateMachine,android.os.Message,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.job.JobService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordMinimumSymbols(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.RemoteViews$2: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.widget.DateTimeView: void onAttachedToWindow()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager$CdmaBroadcastRangeManager: boolean tryAddRanges(int,int,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.display.DisplayManagerService: void access$1600(com.android.server.display.DisplayManagerService,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wm.WindowManagerService: void access$500(com.android.server.wm.WindowManagerService)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.ISms$Stub: boolean updateMessageOnIccEfForSubscriber(int,java.lang.String,int,int,byte[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: boolean isAdminActive(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.base.CallbackFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.NetworkTimeUpdateService: boolean isAutomaticTimeRequested()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.test.mock.MockContentResolver: android.content.SyncStatusInfo getSyncStatusAsUser(android.accounts.Account,java.lang.String,int)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<android.provider.Settings$Global: float getFloat(android.content.ContentResolver,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.p2p.IWifiP2pManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.ISub: int getAllSubInfoCount()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.ims.internal.IImsCallSessionListener$Stub$Proxy: void callSessionHoldFailed(com.android.ims.internal.IImsCallSession,com.android.ims.ImsReasonInfo)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.connectivity.PacManager: void access$800(com.android.server.connectivity.PacManager)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void queryCdmaRoamingPreference(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityManagerService: void startAppProblemLocked(com.android.server.am.ProcessRecord)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.backup.BackupManagerService$FullRestoreEngine$RestoreFileRunnable: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.ServiceStateTracker: void enableSingleLocationUpdate()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void sendAdminCommandLocked(java.lang.String,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.imsphone.ImsPhone makeImsPhone(com.android.internal.telephony.PhoneNotifier,com.android.internal.telephony.Phone)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.content.IContentService$Stub$Proxy: void setMasterSyncAutomatically(boolean)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.server.location.ComprehensiveCountryDetector: void removePhoneStateListener()>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.location.LocationManager: void requestSingleUpdate(android.location.Criteria,android.location.LocationListener,android.os.Looper)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.DropBoxManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.Editor: boolean performLongClick(boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.backup.BackupManagerService: void opComplete(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void enableEnhancedVoicePrivacy(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.INfcAdapter$Stub: void setReaderMode(android.os.IBinder,android.nfc.IAppCallback,int,android.os.Bundle)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.NetworkScoreService: void registerPackageReceiverIfNeeded()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void iccTransmitApduBasicChannel(int,int,int,int,int,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.WindowManagerPolicy$WindowManagerFuncs: void shutdown(boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.nfc.tech.MifareUltralight: void connect()>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.NsdService$NsdStateMachine$DefaultState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ISms$Stub$Proxy: boolean isImsSmsSupportedForSubscriber(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker$3: void onChange(boolean)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.nfc.beam.BeamSendService: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.RI: void changeBarringPassword(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.NfcAdapter: void setNdefPushMessage(android.nfc.NdefMessage,android.app.Activity,android.app.Activity[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.widget.multiwaveview.GlowPadView: boolean onHoverEvent(android.view.MotionEvent)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.WindowManagerPolicy: void init(android.content.Context,android.view.IWindowManager,android.view.WindowManagerPolicy$WindowManagerFuncs)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.app.PlatLogoActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.ImageCombineFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.pm.PackageManagerService$8: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.ServiceStateTracker: void setImsRegistrationState(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: boolean acquireWifiLock(android.os.IBinder,int,java.lang.String,android.os.WorkSource)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: boolean handleSetStreamPath(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.net.NetworkStatsService$NetworkStatsSettings: com.android.server.net.NetworkStatsService$NetworkStatsSettings$Config getDevConfig()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.ListView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void hangupForegroundResumeBackground()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.IWifiManager: int getAllowScansWithTraffic()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.wm.DisplayContent: void switchUserStacks(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.FixedRotationFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.Phone: void exitEmergencyCallbackMode()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.SMSDispatcher$SmsTracker: void onFailed(android.content.Context,int,int)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.usb.UsbDeviceManager: void <init>(android.content.Context)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.DockObserver: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.IccRecords: void onAllRecordsLoaded()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.base.GLTextureTarget: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.SizeAdaptiveLayout: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService$SetupContentObserver: void onChange(boolean,android.net.Uri)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.display.OverlayDisplayAdapter$1: void run()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.beam.BeamReceiveService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.DhcpStateMachine: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void dispose()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void notifySrvccState(com.android.internal.telephony.Call$SrvccState)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void clearProfileOwner(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: android.accounts.Account[] getAccountsAsUser(java.lang.String,int)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: java.util.List getAdnRecordsInEf(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.pm.PackageManagerService: boolean setInstallLocation(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: boolean getAnyDataEnabled(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.RI: void send(com.android.internal.telephony.RILRequest)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityManagerService$Lifecycle: void onSwitchUser(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.nfc.INfcCardEmulation: boolean unsetPreferredService()>": [
  "android.permission.VIBRATE", 
  "android.permission.NFC"
 ], 
 "<com.android.server.am.ActivityManagerService: void retrieveSettings()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.cardemulation.PreferredServices: void computePreferredForegroundService()>": [
  "android.permission.VIBRATE"
 ], 
 "<android.filterpacks.imageproc.DrawRectFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.service.wallpaper.WallpaperService$Engine: void setOffsetNotificationsEnabled(boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.SYSTEM_ALERT_WINDOW", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.telephony.TelephonyManager: java.lang.String getNai()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.media.AsyncPlayer$Thread: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wm.WindowState: void removeLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.print.PrinterDiscoverySession: void validatePrinters(java.util.List)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.SaturateFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager: java.lang.String[] getLockTaskPackages(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.inputmethod.InputMethodManager: boolean switchToLastInputMethod(android.os.IBinder)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ISms$Stub$Proxy: void sendStoredText(int,java.lang.String,android.net.Uri,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void handleIpConfigurationLost()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterfw.core.Filter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.NfcService: void registerForAirplaneMode(android.content.IntentFilter)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void notifyDataConnectionFailed(java.lang.String,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.RI: void setRadioState(com.android.internal.telephony.CommandsInterface$RadioState)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.NsdService$NsdStateMachine: void registerForNsdSetting()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.job.IJobScheduler: int schedule(android.app.job.JobInfo)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<android.provider.CalendarContract$CalendarEntity$EntityIteratorImpl: android.content.Entity next()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.filterpacks.imageproc.ToRGBAFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.handover.BluetoothPeripheralHandover: void nextStep()>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: void acceptCall()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.inputmethodservice.KeyboardView: void sendAccessibilityEventForUnicodeCharacter(int,int)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.content.SyncManager: void maybeRescheduleSync(android.content.SyncResult,com.android.server.content.SyncOperation)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.view.IWindowManager: int getPreferredOptionsPanelGravity()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterfw.core.FilterSurfaceView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.app.PendingIntent)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.textservice.ITextServicesManager: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.RuimFileHandler: void loadEFImgTransparent(int,int,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.AudioService: void startBluetoothSco(android.os.IBinder,int)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.server.wm.DisplayContent: void checkForDeferredActions()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.FillLightFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.handover.HandoverDataParser: android.nfc.NdefMessage createHandoverRequestMessage()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.pm.PackageManagerService: int access$1400(com.android.server.pm.PackageManagerService)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.RuimFileHandler: void getEFLinearRecordSize(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getLine1Number()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void queryAvailableBandMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void queryFacilityLock(java.lang.String,java.lang.String,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.CursorEntityIterator: android.content.Entity next()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.content.SyncActivityTooManyDeletes: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void setCrossProfileCallerIdDisabled(android.content.ComponentName,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.content.SyncManager: void access$2000(com.android.server.content.SyncManager)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.VibratorService: void onInputDeviceAdded(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void getNeighboringCids(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.PhoneWindow$RotationWatcher$1: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.test.mock.MockContentResolver: void setSyncAutomaticallyAsUser(android.accounts.Account,java.lang.String,boolean,int)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.os.IPowerManager: void updateWakeLockWorkSource(android.os.IBinder,android.os.WorkSource,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.tech.NfcA: void setTimeout(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.wifi.WifiController$StaEnabledState: boolean processMessage(android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.IWifiManager: void reassociate()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void acknowledgeLastIncomingSms(boolean,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.INfcCardEmulation$Stub: boolean removeAidGroupForService(int,android.content.ComponentName,java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<android.media.WebVttRenderingWidget$SpanLayout: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.widget.multiwaveview.GlowPadView: void setGrabbedState(int)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.cardemulation.TapAgainDialog: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void getEnhancedVoicePrivacy(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityManagerService: void crashApplication(com.android.server.am.ProcessRecord,android.app.ApplicationErrorReport$CrashInfo)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.videosrc.CameraSource: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.NewDeviceAction: void handleTimerEvent(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.tts.TextToSpeechService: java.lang.String[] access$500(android.speech.tts.TextToSpeechService)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.bluetooth.BluetoothPan: void close()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.wifi.WifiStateMachine$InitialState: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.LocationManagerService: void access$300(com.android.server.LocationManagerService)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void interceptPowerKeyDown(android.view.KeyEvent,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.IWifiManager: java.util.List getBatchedScanResults(java.lang.String)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.commands.requestsync.RequestSync: void run(java.lang.String[])>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.app.IAlarmManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void notifyDataConnection(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.UiccSmsController: void injectSmsPdu(byte[],java.lang.String,android.app.PendingIntent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.usb.UsbSettingsManager$MyPackageMonitor: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: void showStrictModeViolation(int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.ISub: int getSlotId(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: boolean getCameraDisabled(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevicePlayback: void startQueuedActions()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.display.WifiDisplayController: void <init>(android.content.Context,android.os.Handler,com.android.server.display.WifiDisplayController$Listener)>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.app.Instrumentation: android.app.UiAutomation getUiAutomation()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.am.ActivityManagerService$AppDeathRecipient: void binderDied()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCommandInterface: void setDataAllowed(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$ErrorState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.nfc.cardemulation.CardEmulationManager: void onUserSwitched(int)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getIccSimChallengeResponse(int,int,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void notifyCellInfo(java.util.List)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.hardware.display.DisplayManagerInternal: void initPowerManagement(android.hardware.display.DisplayManagerInternal$DisplayPowerCallbacks,android.os.Handler,android.hardware.SensorManager)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.inputmethodservice.InputMethodService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.content.SyncManager$SyncAlarmIntentReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.widget.NumberPicker$AccessibilityNodeProviderImpl: boolean performAction(int,int,android.os.Bundle)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.app.AlertActivity: void onStop()>": [
  "android.permission.VIBRATE", 
  "android.permission.NFC"
 ], 
 "<android.filterpacks.imageproc.ToPackedGrayFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.widget.TableLayout: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.WifiManager: void enableVerboseLogging(int)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: void disableDevice(boolean,com.android.server.hdmi.HdmiCecLocalDevice$PendingActionClearedCallback)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.content.SyncStorageEngine: com.android.server.content.SyncStorageEngine newTestInstance(android.content.Context)>": [
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.wm.WindowManagerService: void disableKeyguard(android.os.IBinder,java.lang.String)>": [
  "android.permission.DISABLE_KEYGUARD"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void access$100(com.android.internal.telephony.imsphone.ImsPhone)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void switchHoldingAndActive()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.IAudioService$Stub$Proxy: void setBluetoothScoOn(boolean)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.server.display.DisplayPowerController$8: void onSensorChanged(android.hardware.SensorEvent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.widget.PasswordEntryKeyboardHelper: void handleShift()>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: int getInitialMaxRetry()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.media.MediaSessionService: void updateActiveSessionListeners()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.trust.TrustManagerService$3: void onPackageDisappeared(java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.notification.ConditionProviders: void disableNonexistentServices()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.CropRectFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.NfcService$NfcAdapterService: boolean disableNdefPush()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.ims.ImsEcbm$ImsEcbmListenerProxy: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.media.IAudioService: void stopBluetoothSco(android.os.IBinder)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.internal.widget.LockPatternUtils: void saveLockPattern(java.util.List,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiController$4: void onChange(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipCommandInterface: void onRadioAvailable()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.SwipeDismissLayout: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.nfc.INfcCardEmulation$Stub: boolean setDefaultServiceForCategory(int,android.content.ComponentName,java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<android.filterpacks.imageproc.ContrastFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void notifyServiceStateChangedP(android.telephony.ServiceState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void updatePhoneObject(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.media.tv.TvInputService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.content.pm.IPackageManager$Stub: void getPackageSizeInfo(java.lang.String,int,android.content.pm.IPackageStatsObserver)>": [
  "android.permission.GET_PACKAGE_SIZE"
 ], 
 "<com.android.internal.widget.multiwaveview.GlowPadView: void access$300(com.android.internal.widget.multiwaveview.GlowPadView,int,float,float)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.notification.ConditionProviders: void loadZenConfig()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry: void addOnSubscriptionsChangedListener(java.lang.String,com.android.internal.telephony.IOnSubscriptionsChangedListener)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.power.PowerManagerService$UserSwitchedReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.NfcService: boolean isAirplaneModeOn()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.SpeechRecognizer: void putMessage(android.os.Message)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.internal.telephony.SMSDispatcher: void handleSendComplete(android.os.AsyncResult)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.storage.DeviceStorageMonitorService: void clearCache()>": [
  "android.permission.CLEAR_APP_CACHE"
 ], 
 "<com.android.server.wm.WindowManagerService: void dismissKeyguard()>": [
  "android.permission.DISABLE_KEYGUARD"
 ], 
 "<android.media.IAudioService: void setMicrophoneMute(boolean,java.lang.String)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.server.hdmi.SystemAudioAction: void addAndStartAction(com.android.server.hdmi.HdmiCecFeatureAction)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.dataconnection.DcSwitchStateMachine$IdleState: boolean processMessage(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendRetrySms(com.android.internal.telephony.SMSDispatcher$SmsTracker)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SMS"
 ], 
 "<android.app.admin.IDevicePolicyManager: boolean setProfileOwner(android.content.ComponentName,java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.content.ContentService: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String,android.content.ComponentName)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.net.wifi.WifiManager: boolean isPreferredNetworkOffloadSupported()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.net.NetworkPolicyManagerService$8: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.bluetooth.BluetoothAdapter: java.lang.String getAddress()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.service.dreams.DreamService: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean removeCrossProfileWidgetProvider(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.display.DisplayManagerService: int access$3200(com.android.server.display.DisplayManagerService,android.hardware.display.IVirtualDisplayCallback,android.media.projection.IMediaProjection,int,java.lang.String,java.lang.String,int,int,int,android.view.Surface,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.service.notification.ConditionProviderService: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.print.PrintManagerService$PrintManagerImpl: void stopPrinterStateTracking(android.print.PrinterId,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.widget.LockPatternUtils: boolean hasWidgetsEnabledInKeyguard(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: void addAccountAsUser(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle,int)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.uicc.IsimUiccRecords: void fetchIsimRecords()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.LockPatternView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture addAccount(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.server.job.JobServiceContext$JobServiceHandler: void handleCancelH()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: android.accounts.Account[] getAccountsForPackage(java.lang.String,int)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.ims.internal.ImsCallSession$IImsCallSessionListenerProxy: void callSessionHoldFailed(com.android.ims.internal.IImsCallSession,com.android.ims.ImsReasonInfo)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void setCrossProfileCallerIdDisabled(android.content.ComponentName,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.app.ShutdownActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.widget.NumberPicker$CustomEditText: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.UiccSmsController: boolean updateMessageOnIccEfForSubscriber(int,java.lang.String,int,int,byte[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.server.content.SyncManager: void postSyncExpiryMessage(com.android.server.content.SyncManager$ActiveSyncContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.power.PowerManagerService$BinderService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevice: void sendKeyEvent(int,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneBase: void notifyDataConnection(java.lang.String,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.BitmapSource: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.TextServicesManagerService: void access$100(com.android.server.TextServicesManagerService,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine: void handleGroupCreationFailure()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void notifyDataConnection(java.lang.String,java.lang.String,com.android.internal.telephony.PhoneConstants$DataState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getIccSimChallengeResponse(int,int,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.NativeDaemonConnector: void listenToSocket()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.media.MediaSessionService$SessionManagerImpl$KeyEventWakeLockReceiver: void onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmInboundSmsHandler: void updateMessageWaitingIndicator(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.WifiManager: int addNetwork(android.net.wifi.WifiConfiguration)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.app.admin.IDevicePolicyManager: boolean addCrossProfileWidgetProvider(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiWatchdogStateMachine: void registerForWatchdogToggle()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.WifiSettingsStore: boolean testAndClearWifiSavedState()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.location.LocationBasedCountryDetector: void stop()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.service.notification.NotificationListenerService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<android.net.TrafficStats: void startDataProfiling(android.content.Context)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.app.DisableCarModeActivity: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM: void onQuitting()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accessibility.EventStreamTransformation: void onDestroy()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.media.effect.effects.TintEffect: void apply(int,int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.location.GpsMeasurementListenerTransport: boolean registerWithServer()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.uicc.IsimUiccRecords: java.lang.String getIsimChallengeResponse(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.renderscript.RSSurfaceView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.inputmethodservice.KeyboardView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.handover.PeripheralHandoverService: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.accessibility.TouchExplorer: void onMotionEvent(android.view.MotionEvent,android.view.MotionEvent,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.InputMethodManagerService: void showInputMethodMenuInternal(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.AutoFixFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: void getAuthToken(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle)>": [
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.server.media.MediaSessionService: void onStart()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.app.IntentForwarderActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.UiModeManagerService: void updateLocked(int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void sendSMSExpectMore(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumLength(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.telephony.CellBroadcastMessage: java.lang.String getSpokenDateString(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: boolean trySetupData(com.android.internal.telephony.dataconnection.ApnContext,java.util.ArrayList)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.ActivityRecord: boolean keyDispatchingTimedOut(java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void setCdmaSubscription(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.WebVttRenderer: android.media.SubtitleTrack createTrack(android.media.MediaFormat)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.pm.PackageManagerService: void killApplication(java.lang.String,int,java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.content.IContentService$Stub: boolean getMasterSyncAutomatically()>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask: void startRestore()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.WifiStateMachine$DisconnectedState: void enter()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.bluetooth.BluetoothAdapter: void closeProfileProxy(int,android.bluetooth.BluetoothProfile)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.wm.WindowManagerService: int addWindow(com.android.server.wm.Session,android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.SYSTEM_ALERT_WINDOW", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.content.SyncManager$ActiveSyncContext: void close()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.sip.ISipService$Stub: android.net.sip.ISipSession getPendingSession(java.lang.String)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: void onHotplug(int,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService: boolean readConfigurationForUserStateLocked(com.android.server.accessibility.AccessibilityManagerService$UserState)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.Phone: void getEnhancedVoicePrivacy(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ActivityManagerNative: android.app.ActivityManager$TaskThumbnail getTaskThumbnail(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.snep.SnepServer: void start()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.app.ApplicationPackageManager: void freeStorage(long,android.content.IntentSender)>": [
  "android.permission.CLEAR_APP_CACHE"
 ], 
 "<com.android.server.wifi.WifiStateMachine$SupplicantStoppingState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.DuotoneFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void setFacilityLock(java.lang.String,boolean,java.lang.String,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.tech.NfcV: void close()>": [
  "android.permission.NFC"
 ], 
 "<android.app.Presentation$1: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.tech.MifareClassic: void setTimeout(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.ISub$Stub: int addSubInfoRecord(java.lang.String,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.server.wm.WindowManagerService: void detachStack(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.TextView: boolean performLongClick()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wm.AccessibilityController$DisplayMagnifier: void onWindowLayersChangedLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.RelativeLayout: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService$LocalService: void setWindowsForAccessibilityCallback(android.view.WindowManagerInternal$WindowsForAccessibilityCallback)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.WifiController$DefaultState: boolean processMessage(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ContextImpl: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.test.ActivityUnitTestCase$MockParent: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.filterpacks.numeric.SinWaveFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.view.IWindowManager: void getInitialDisplaySize(int,android.graphics.Point)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.uicc.RuimFileHandler: void loadEFLinearFixedAll(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.BatteryService$1: void onChange(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.DigitalClock$FormatChangeObserver: void onChange(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.os.storage.ExternalStorageFormatter: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.os.IPowerManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.uicc.UiccCardApplication: void supplyPin2(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.backup.BackupManagerService: void <init>(android.content.Context,com.android.server.backup.Trampoline)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.UiModeManagerService$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void enableSystemApp(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ISms$Stub: void sendStoredMultipartText(int,java.lang.String,android.net.Uri,java.lang.String,java.util.List,java.util.List)>": [
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void hangup(com.android.internal.telephony.cdma.CdmaConnection)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.google.android.mms.util.PduCache: boolean put(java.lang.Object,java.lang.Object)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void enableSingleLocationUpdate()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void shutdownRadio()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.pm.BackgroundDexOptService: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.commands.svc.WifiCommand: void run(java.lang.String[])>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.test.RenamingDelegatingContext: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.base.RetargetFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getLine1AlphaTag()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.net.INetworkPolicyManager: boolean isNetworkMetered(android.net.NetworkState)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.provider.Browser: java.lang.String[] getVisitedHistory(android.content.ContentResolver)>": [
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: boolean isScanAlwaysAvailable()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.nfc.INfcCardEmulation$Stub: boolean isDefaultServiceForAid(int,android.content.ComponentName,java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<com.android.internal.content.PackageHelper: int resolveInstallLocation(android.content.Context,java.lang.String,int,long,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void onRoamingOn()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.BitmapOverlayFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ISub$Stub: int getDefaultSubId()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.ForegroundUtils$Callback: void onUidToBackground(int)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.dataconnection.DataConnection$DcDisconnectingState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void getEnhancedVoicePrivacy(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.NetInitiatedActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.accessibility.ScreenMagnifier: void onMotionEvent(android.view.MotionEvent,android.view.MotionEvent,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.UiccPhoneBookController: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService: void access$500(com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void setPreferredNetworkType(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager$18: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.am.ActivityManagerService$13: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.power.ShutdownThread: void shutdown(android.content.Context,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.location.GeofenceManager: void onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.String[] getAccountTypesWithManagementDisabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cat.RilMessageDecoder: java.lang.String toString()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.DateTimeView$ReceiverInfo: void updateAll()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.location.SettingInjectorService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.am.ActivityStack: void completeResumeLocked(com.android.server.am.ActivityRecord)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.nfc.NfcAdapter: boolean invokeBeam(android.nfc.BeamShareData)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.app.AliasActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.hardware.location.GeofenceHardwareService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.backup.SystemBackupAgent: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ISub: void setDefaultVoiceSubId(int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.MmsServiceBroker$BinderService: boolean deleteStoredConversation(java.lang.String,long)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<android.accounts.IAccountManager$Stub: boolean removeAccountExplicitly(android.accounts.Account)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService: boolean access$5600(com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.widget.DialogTitle: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getVoiceMailNumberForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.filterpacks.ui.SurfaceRenderFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.media.ClosedCaptionWidget: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.MediaPlayer: void release()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.TintFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.wifi.WifiWatchdogStateMachine$WatchdogDisabledState: boolean processMessage(android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setProfileName(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.net.NetworkStatsService: void updatePersistThresholds()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneProxy: boolean setRoamingOverride(java.util.List,java.util.List,java.util.List,java.util.List)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void nvWriteItem(int,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IccProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void stopBatchedScan()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: void sendKeyEvent(int,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipConnection$1: void onCallHeld(android.net.sip.SipAudioCall)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.view.accessibility.CaptioningManager: java.lang.String getRawLocale()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.app.ResolverActivity$1: void onPackageDisappeared(java.lang.String,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.trust.TrustAgentWrapper$4: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager: void setMaximumTimeToLock(android.content.ComponentName,long,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.storage.DeviceStorageMonitorService: void onSwitchUser(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.backup.BackupManagerService$PerformBackupTask: void beginBackup()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.RatingBar: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneSubInfo: java.lang.String getDeviceSvn()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.ISms$Stub: boolean copyMessageToIccEfForSubscriber(int,java.lang.String,int,byte[],byte[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.server.hdmi.SystemAudioAutoInitiationAction: boolean processCommand(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.WakeLockStateMachine: void <init>(java.lang.String,android.content.Context,com.android.internal.telephony.PhoneBase)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.telecom.InCallService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoController: java.lang.String getDeviceSvn()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.WakeLockStateMachine$DefaultState: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.display.DisplayManagerService: void scheduleTraversalLocked(boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void handleCdmaSubscriptionSource(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.nfc.beam.BeamReceiveService: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void setVoiceMailNumber(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.VideoView: void setVideoURI(android.net.Uri,java.util.Map)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void onRoamingOff()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void setUninstallBlocked(android.content.ComponentName,java.lang.String,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.FisheyeFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getIccSimChallengeResponse(int,int,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.hardware.location.IGeofenceHardware$Stub$Proxy: boolean addCircularFence(int,android.hardware.location.GeofenceHardwareRequestParcelable,android.hardware.location.IGeofenceHardwareCallback)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.backup.SystemBackupAgent: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getMsisdnForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.media.AudioService: void access$6600(android.media.AudioService)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void setVoiceMessageWaiting(int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: boolean handleInCallMmiCommands(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.Context: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1: boolean onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ISub$Stub$Proxy: int[] getSubId(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void acknowledgeLastIncomingGsmSms(boolean,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.input.InputManagerService$WindowManagerCallbacks: int interceptKeyBeforeQueueing(android.view.KeyEvent,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ServiceStateTracker: void powerOffRadioSafely(com.android.internal.telephony.dataconnection.DcTrackerBase)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.test.mock.MockContentResolver: boolean isSyncPendingAsUser(android.accounts.Account,java.lang.String,int)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<android.accounts.AccountManager$1: android.accounts.AccountManager$Future2Task start()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: int dispatchMessageRadioSpecific(com.android.internal.telephony.SmsMessageBase)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.app.LauncherActivity: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ISms: boolean updateMessageOnIccEfForSubscriber(int,java.lang.String,int,int,byte[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.telephony.SubscriptionManager: java.util.List getActiveSubscriptionInfoList()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.widget.LinearLayoutWithDefaultTouchRecepient: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void shutdownRadio()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void access$9800(com.android.server.wifi.WifiStateMachine)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.effect.effects.VignetteEffect: void apply(int,int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: java.util.List getActiveAdmins(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.GlobalActions: void showDialog(boolean,boolean)>": [
  "android.permission.VIBRATE", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.SEND_SMS", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.NfcPermissions: void enforceUserPermissions(android.content.Context)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: boolean isDataAllowed()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.ActiveServices: void cleanUpRemovedTaskLocked(com.android.server.am.TaskRecord,android.content.ComponentName,android.content.Intent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.SepiaFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.PlatLogoActivity$1: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.videosrc.MediaSource: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.cardemulation.CardEmulationManager: void <init>(android.content.Context)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<com.android.server.display.DisplayManagerService$LocalService: boolean requestPowerState(android.hardware.display.DisplayManagerInternal$DisplayPowerRequest,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.media.AudioService: boolean checkAudioSettingsPermission(java.lang.String)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.inputmethodservice.ExtractButton: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ISms$Stub: boolean isImsSmsSupportedForSubscriber(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.DeviceDiscoveryAction: void access$000(com.android.server.hdmi.DeviceDiscoveryAction)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: boolean update(com.android.internal.telephony.DriverCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityStackSupervisor: void checkReadyForSleepLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.pm.PackageManagerService$12: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.sip.ISipService$Stub: void open3(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_SIP"
 ], 
 "<android.nfc.INfcCardEmulation: boolean setPreferredService(android.content.ComponentName)>": [
  "android.permission.VIBRATE", 
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.gsm.GsmSMSDispatcher: void sendMultipartSms(com.android.internal.telephony.SMSDispatcher$SmsTracker)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.internal.telephony.SubscriptionController: android.telephony.SubscriptionInfo getActiveSubscriptionInfo(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.net.NetworkPolicyManager: void setNetworkPolicies(android.net.NetworkPolicy[])>": [
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.TelephonyRegistry: void notifyDataConnectionFailed(java.lang.String,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.display.DisplayManagerService: void handleDisplayDeviceAdded(com.android.server.display.DisplayDevice)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.nfc.INfcCardEmulation$Stub$Proxy: boolean removeAidGroupForService(int,android.content.ComponentName,java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<com.android.server.backup.BackupManagerService$BackupRestoreTask: void operationComplete()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.accounts.IAccountManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.service.carrier.CarrierMessagingService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void onDataSetupComplete(android.os.AsyncResult)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.VibratorService: void onInputDeviceChanged(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.RelativeLayout: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,android.net.Uri)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.wifi.IWifiManager: int getWifiApEnabledState()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.BluetoothManagerService: boolean access$400(com.android.server.BluetoothManagerService)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.NetworkScorerAppManager: boolean isCallerActiveScorer(android.content.Context,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.ActivityStackSupervisor: void goingToSleepLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<android.view.GhostView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.WifiController$ApStaDisabledState: boolean processMessage(android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.ActivityManagerService: boolean removeProcessLocked(com.android.server.am.ProcessRecord,boolean,boolean,java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.InboundSmsHandler: int dispatchNormalMessage(com.android.internal.telephony.SmsMessageBase)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.filterpacks.base.FrameSource: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.DateTimeView: java.text.DateFormat getTimeFormat()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.base.OutputStreamTarget: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.view.menu.IconMenuItemView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void handleRadioAvailable()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.BroadcastQueue: void skipPendingBroadcastLocked(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void setDataRoamingEnabled(boolean)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void notifyDataConnection(java.lang.String,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.provider.Telephony$Sms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],java.lang.String,java.lang.String)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.PersistentDataBlockService: void onStartUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.NsdService$NsdStateMachine$1: void onChange(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ISms$Stub$Proxy: boolean disableCellBroadcastRangeForSubscriber(int,int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.test.mock.MockContentResolver: void requestSync(android.content.SyncRequest)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.filterpacks.base.CallbackFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.RI: boolean clearWakeLock()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.content.PackageMonitor: boolean onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.net.NetworkPolicyManagerService: void systemReady()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.view.IWindowManager$Stub$Proxy: void startFreezingScreen(int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.dreams.DreamController$Listener: void onDreamStopped(android.os.Binder)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.P2pLinkManager: void onLlcpServicesConnected()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.uiautomator.testrunner.UiAutomatorTestRunner: void run(java.util.List,android.os.Bundle,boolean,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.PhoneBase: void setSmscAddress(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void disableLocationUpdates()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void access$100(com.android.internal.telephony.cdma.CdmaServiceStateTracker)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.internal.telephony.SubscriptionController: boolean setPlmnSpn(int,boolean,java.lang.String,boolean,java.lang.String)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: long getTimeCacheMaxAge()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ISub$Stub: int getAllSubInfoCount()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.widget.AdapterViewFlipper: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void invokeOemRilRequestRaw(byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.os.IDropBoxManagerService$Stub: void add(android.os.DropBoxManager$Entry)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.usb.UsbAudioManager: void deviceAdded(android.hardware.usb.UsbDevice)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.BrightnessFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevice: void handleAddressAllocated(int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.videosink.MediaEncoderFilter: void process(android.filterfw.core.FilterContext)>": [
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.wm.WindowManagerService: void shutdown(boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.nfc.NfcActivityManager: void setNdefPushMessageCallback(android.app.Activity,android.nfc.NfcAdapter$CreateNdefMessageCallback,int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getVoiceMailAlphaTag()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.PhoneBase: void queryTTYMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.Toolbar: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setTimeFromNITZString(java.lang.String,long)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.service.wallpaper.WallpaperService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.wifi.WifiApConfigStore$InactiveState: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.accessibilityservice.AccessibilityService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.text.method.TextKeyListener: void updatePrefs(android.content.ContentResolver)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.cardemulation.PreferredServices: void onServicesUpdated()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void reportSuccessfulPasswordAttempt(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.print.IPrintManager$Stub$Proxy: void addPrintJobStateChangeListener(android.print.IPrintJobStateChangeListener,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.BitmapSource: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: void clearPassword(android.accounts.Account)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<android.net.wifi.IWifiManager: void startLocationRestrictedScan(android.os.WorkSource)>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.nfc.handover.HandoverServer: void start()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.app.IWallpaperManager$Stub$Proxy: void setDisplayPadding(android.graphics.Rect)>": [
  "android.permission.SET_WALLPAPER_HINTS"
 ], 
 "<com.android.internal.telephony.WapPushOverSms: int dispatchWapPdu(byte[],android.content.BroadcastReceiver,com.android.internal.telephony.InboundSmsHandler)>": [
  "android.permission.READ_SMS", 
  "android.permission.RECEIVE_WAP_PUSH", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.RECEIVE_MMS"
 ], 
 "<com.android.server.wifi.WifiSettingsStore: boolean handleWifiToggled(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService$Service: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.cardemulation.RegisteredServicesCache$Callback: void onServicesUpdated(int,java.util.List)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.location.ILocationManager$Stub: java.util.List getProviders(android.location.Criteria,boolean)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void notifyDataConnection(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.cardemulation.CardEmulation: boolean removeAidsForService(android.content.ComponentName,java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.NFC"
 ], 
 "<com.android.server.content.SyncManager: void access$700(com.android.server.content.SyncManager,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.media.WebVttRenderingWidget$RegionLayout: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.AudioManager: boolean querySoundEffectsEnabled(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevice: void disableDevice(boolean,com.android.server.hdmi.HdmiCecLocalDevice$PendingActionClearedCallback)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.view.menu.ListMenuItemView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.content.SyncManager$ActiveSyncContext: void binderDied()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.widget.SpellChecker: void closeSession()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.widget.ILockSettings$Stub$Proxy: boolean checkVoldPassword(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void setRestrictionsProvider(android.content.ComponentName,android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void queryAvailableBandMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.UsimPhoneBookManager: void refreshCache()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingScoOn()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.uicc.CsimFileHandler: void loadEFTransparent(int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void rejectCall()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ActivityManagerNative: java.util.List getRecentTasks(int,int,int)>": [
  "android.permission.GET_TASKS"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void setTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName,android.os.PersistableBundle,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.TextClock: void setFormat12Hour(java.lang.CharSequence)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.Switch: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GsmSMSDispatcher: void sendRetrySms(com.android.internal.telephony.SMSDispatcher$SmsTracker)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.wifi.RttService$RttServiceImpl$RttStateMachine: void onQuitting()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.IPowerManager$Stub: void setStayOnSetting(int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.textservice.ITextServicesManager$Stub: void getSpellCheckerService(java.lang.String,java.lang.String,com.android.internal.textservice.ITextServicesSessionListener,com.android.internal.textservice.ISpellCheckerSessionListener,android.os.Bundle)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.RuimFileHandler: void loadEFTransparent(int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.backup.BackupManagerService$PerformBackupTask: void invokeNextAgent()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.DrawOverlayFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.util.AsyncService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.am.ActivityManagerService: void access$300(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.dreams.DreamManagerService: android.content.ComponentName chooseDreamForUser(boolean,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: boolean acquireWifiLock(android.os.IBinder,int,java.lang.String,android.os.WorkSource)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.handover.PeripheralHandoverService: boolean enableBluetooth()>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevicePlayback: void oneTouchPlay(android.hardware.hdmi.IHdmiControlCallback)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager: void enforceReceiveAndSend(java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.service.dreams.Sandman: boolean isScreenSaverEnabled(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: void drawWindowIfNeededLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.wifi.IWifiManager$Stub: void addToBlacklist(java.lang.String)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.Phone: void setPreferredNetworkType(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.BatteryService: void onBootPhase(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.content.SyncManager$SyncHandler: long maybeStartNextSyncLocked()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.filterpacks.ui.SurfaceTargetFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.UiccSmsController: boolean isImsSmsSupportedForSubscriber(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.location.ComprehensiveCountryDetector: boolean isAirplaneModeOff()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine: boolean access$3600(com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine,android.net.wifi.p2p.WifiP2pWfdInfo)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.NetworkScoreService: void disableScoring()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.job.JobService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.Phone: void setCdmaRoamingPreference(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.ChooseTypeAndAccountActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.RI: void <init>(android.content.Context,int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterfw.core.FieldPort: void setFieldFrame(android.filterfw.core.Frame,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager: boolean disableCdmaBroadcastRange(int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.app.IUiAutomationConnection: void shutdown()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.IUiAutomationConnection$Stub: void connect(android.accessibilityservice.IAccessibilityServiceClient)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.service.wallpaper.WallpaperService: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService: void updateDisplayColorAdjustmentSettingsLocked(com.android.server.accessibility.AccessibilityManagerService$UserState)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.power.ShutdownThread: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.RI: void queryCallForwardStatus(int,int,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getIsimIst()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.VibratorService$3: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<android.telecom.ConnectionService: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: android.accounts.Account[] getAccountsByTypeForPackage(java.lang.String,java.lang.String)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1: void onPackageModified(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.ActivityManagerService: boolean bindBackupAgent(android.content.pm.ApplicationInfo,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void restoreSavedNetworkSelection(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void powerLongPress()>": [
  "android.permission.VIBRATE", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.SEND_SMS", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.telephony.SmsManager: void sendMultimediaMessage(android.content.Context,android.net.Uri,java.lang.String,android.os.Bundle,android.app.PendingIntent)>": [
  "android.permission.SEND_SMS"
 ], 
 "<android.app.IAlarmManager$Stub$Proxy: void setTimeZone(java.lang.String)>": [
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.server.wm.AccessibilityController$DisplayMagnifier: void setMagnificationSpecLocked(android.view.MagnificationSpec)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.util.StateMachine: java.lang.String getLogRecString(android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.content.SyncManager$6: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.accounts.GrantCredentialsPermissionActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.wifi.IWifiManager$Stub: java.util.List getConfiguredNetworks()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void setDataAllowed(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.notification.NotificationManagerService: void access$4300(com.android.server.notification.NotificationManagerService,android.os.Message)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.filterpacks.imageproc.CrossProcessFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.INfcCardEmulation: android.nfc.cardemulation.AidGroup getAidGroupForService(int,android.content.ComponentName,java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.NFC"
 ], 
 "<android.view.WindowManagerPolicy: void notifyCameraLensCoverSwitchChanged(long,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneSubInfo: java.lang.String getNai()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.filterpacks.ui.SurfaceRenderFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ISub$Stub: int getDefaultSmsSubId()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.INfcTag$Stub: android.nfc.TransceiveResult transceive(int,byte[],boolean)>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.content.SyncManager$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerSession newSpellCheckerSession(android.os.Bundle,java.util.Locale,android.view.textservice.SpellCheckerSession$SpellCheckerSessionListener,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GsmConnection: void proceedAfterWildChar(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.PasswordEntryKeyboardHelper: void setKeyboardMode(int)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.voice.VoiceInteractionService: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void sendDtmf(char,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.backup.LocalTransportService: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.nfc.beam.BeamStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.power.PowerManagerService: void access$5400(com.android.server.power.PowerManagerService,long)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.DockObserver: void handleDockStateChange()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.BluetoothManagerService: boolean enable()>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.view.accessibility.IAccessibilityManager$Stub$Proxy: void temporaryEnableAccessibilityStateUntilKeyguardRemoved(android.content.ComponentName,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.accessibility.CaptioningManager: void addCaptioningChangeListener(android.view.accessibility.CaptioningManager$CaptioningChangeListener)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.videosrc.CameraSource: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.ClosedCaptionWidget$CCLineBox: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: boolean saveConfiguration()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.content.SyncManager: void <init>(android.content.Context,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.dataconnection.DataConnection$DcDisconnectingState: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.print.IPrintManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneBase: void notifyDataConnectionFailed(java.lang.String,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$OngoingGroupRemovalState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.view.accessibility.CaptioningManager: void access$500(android.view.accessibility.CaptioningManager)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void updateLockScreenTimeout()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.content.ContentService: boolean getSyncAutomaticallyAsUser(android.accounts.Account,java.lang.String,int)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void writeSmsToSim(int,java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getCurrentCalls(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void handleStartNetStatPoll(com.android.internal.telephony.DctConstants$Activity)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.ActivityManagerNative: void setPackageScreenCompatMode(java.lang.String,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.sip.SipManager: android.net.sip.SipAudioCall makeAudioCall(java.lang.String,java.lang.String,android.net.sip.SipAudioCall$Listener,int)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.internal.widget.ILockSettings: boolean getBoolean(java.lang.String,boolean,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.NetworkFactory: void handleRemoveRequest(android.net.NetworkRequest)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void selectNetworkManually(com.android.internal.telephony.OperatorInfo,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.WifiManager: boolean pingSupplicant()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.net.sip.ISipService: void setRegistrationListener(java.lang.String,android.net.sip.ISipSessionListener)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.internal.telephony.IIccPhoneBook$Stub: boolean updateAdnRecordsInEfBySearchForSubscriber(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.NetworkFactory: void releaseNetworkFor(android.net.NetworkRequest)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.ActivityManagerNative: void updatePersistentConfiguration(android.content.res.Configuration)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.ToGrayFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.ImageSwitcher: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.app.IntentForwarderActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.media.AudioService: void startBluetoothScoVirtualCall(android.os.IBinder)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerSubtype getCurrentSpellCheckerSubtype(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void <init>(com.android.internal.telephony.PhoneBase,com.android.internal.telephony.CommandsInterface,android.telephony.CellInfo)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void getAvailableNetworks(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.SubscriptionController: android.telephony.SubscriptionInfo getActiveSubscriptionInfoForSimSlotIndex(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.content.ContentResolver: boolean getSyncAutomaticallyAsUser(android.accounts.Account,java.lang.String,int)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.nfc.INfcCardEmulation$Stub: boolean unsetPreferredService()>": [
  "android.permission.VIBRATE", 
  "android.permission.NFC"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: android.net.wifi.WifiConnectionStatistics getConnectionStatistics()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.commands.svc.Svc$Command: void run(java.lang.String[])>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.LocationManagerService: boolean addGpsNavigationMessageListener(android.location.IGpsNavigationMessageListener,java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.am.BroadcastQueue: boolean sendPendingBroadcastsLocked(com.android.server.am.ProcessRecord)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void access$700(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.os.storage.ExternalStorageFormatter: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.storage.DeviceStorageMonitorService: void cancelFullNotification()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.NetworkFactory: void needNetworkFor(android.net.NetworkRequest,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.IccCard: void supplyPin2(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.Phone: boolean setOperatorBrandOverride(java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.location.ILocationManager: void clearTestProviderLocation(java.lang.String)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.server.wm.WindowManagerService: void removeWindowInnerLocked(com.android.server.wm.Session,com.android.server.wm.WindowState)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiWatchdogStateMachine: com.android.server.wifi.WifiWatchdogStateMachine makeWifiWatchdogStateMachine(android.content.Context,android.os.Messenger)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.provider.Telephony$Threads: long getOrCreateThreadId(android.content.Context,java.util.Set)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.wm.WindowManagerService: void moveInputMethodDialogsLocked(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.wifi.IWifiManager: int getWifiEnabledState()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.nfc.TechListChooserActivity: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.text.method.TextKeyListener: int getPrefs(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void onDataStallAlarm(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.ToRGBFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void setImsRegistrationState(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.pm.BackgroundDexOptService: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.sip.SipService$SipKeepAliveProcessCallback: void stop()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.INetworkScoreService$Stub$Proxy: boolean clearScores()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.beam.BeamSendService: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void notifyLockTaskModeChanged(boolean,java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ISub: java.util.List getAllSubInfoList()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.wm.DragState: com.android.server.wm.WindowState getTouchedWinAtPointLw(float,float)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: com.android.internal.telephony.Connection dialInternal(java.lang.String,com.android.internal.telephony.UUSInfo,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.am.ActivityManagerService: void broadcastStickyIntent(android.content.Intent,java.lang.String,int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.BrightnessFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoController: java.lang.String getMsisdnForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.notification.NextAlarmConditionProvider: void access$000(com.android.server.notification.NextAlarmConditionProvider,android.app.AlarmManager$AlarmClockInfo,long,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: boolean hasUserSetupCompleted()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.test.mock.MockApplication: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.os.NullVibrator: void vibrate(int,java.lang.String,long,android.media.AudioAttributes)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.widget.LockPatternUtils: java.util.List getEnabledTrustAgents()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void processCallStateChange(com.android.ims.ImsCall,com.android.internal.telephony.Call$State,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.HdmiControlService$BinderService$7: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ImsSMSDispatcher: void handleSendComplete(android.os.AsyncResult)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<android.accounts.IAccountManager$Stub: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.ims.ImsCall$ImsCallSessionListenerProxy: void callSessionResumed(com.android.ims.internal.ImsCallSession,com.android.ims.ImsCallProfile)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.base.ObjectSource: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevicePlayback: void setActiveSource(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: void hangupConnectionByIndex(com.android.internal.telephony.gsm.GsmCall,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: void populateWindowsOnScreenLocked(android.util.SparseArray)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.SystemServer: void startOtherServices()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.CLEAR_APP_CACHE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.app.admin.IDevicePolicyManager: boolean isActivePasswordSufficient(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.location.GeofenceManager: android.location.Location getFreshLocationLocked()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.app.backup.BackupAgent: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.DockObserver: void access$400(com.android.server.DockObserver,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.pm.LauncherAppsService: void onStartUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.ActivityStackSupervisor$ActivityContainer: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: void onActionTap(android.view.MotionEvent,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void notifySignalStrength()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.ContextWrapper: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.filterpacks.imageproc.ImageStitcher: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.PosterizeFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.BlackWhiteFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.telephony.SmsManager: boolean deleteStoredConversation(long)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.dreams.DreamManagerService$5: void onDreamStopped(android.os.Binder)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.AppWindowAnimator: boolean stepAnimationLocked(long)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.InboundSmsHandler: void deleteFromRawTable(java.lang.String,java.lang.String[])>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: void disableArcIfExist()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: int getFrequencyBand()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.nfc.NfcService$ApplyRoutingTask: java.lang.Object doInBackground(java.lang.Object[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.power.PowerManagerService: void userActivityFromNative(long,int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.wifi.IWifiManager: void addToBlacklist(java.lang.String)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.dataconnection.DctController: void onSettingsChange()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accessibility.TouchExplorer: void sendDownForAllNotInjectedPointers(android.view.MotionEvent,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.ISub: int addSubInfoRecord(java.lang.String,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.filterpacks.base.OutputStreamTarget: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.ISyncAdapter$Stub: void startSync(android.content.ISyncContext,java.lang.String,android.accounts.Account,android.os.Bundle)>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.nfc.INfcAdapter$Stub: void setAppCallback(android.nfc.IAppCallback)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void exitEmergencyCallbackMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.print.PrintManagerService$PrintManagerImpl: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void saveSettingsLocked(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.TextView: boolean access$1200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void notifyLockTaskModeChanged(boolean,java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.notification.ZenModeHelper: boolean isDefaultMessagingApp(com.android.server.notification.NotificationRecord)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void updateImsPhone()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void notifyDataConnectionFailed(java.lang.String,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.IBackupAgent$Stub: void doRestoreFile(android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture getAuthTokenByFeatures(java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle,android.os.Bundle,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.internal.telephony.RI: void nvWriteCdmaPrl(byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void setNetworkSelectionModeAutomatic(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.media.MediaSessionService$SessionManagerImpl: void handleVoiceKeyEventLocked(android.view.KeyEvent,boolean,com.android.server.media.MediaSessionRecord)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: int getCurrentFailedPasswordAttempts(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.commands.pm.Pm: void main(java.lang.String[])>": [
  "android.permission.CLEAR_APP_CACHE"
 ], 
 "<android.accounts.ChooseAccountTypeActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void setRecommendedGlobalProxy(android.content.ComponentName,android.net.ProxyInfo)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.FisheyeFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.nfc.handover.PeripheralHandoverService: void handleBluetoothStateChanged(android.content.Intent)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.display.DisplayManagerService: void access$4300(com.android.server.display.DisplayManagerService,int,boolean,float,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.content.ContentResolver: void removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.filterpacks.base.FrameStore: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.ActivityChooserView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterfw.core.Filter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void notifyDataConnectionFailed(java.lang.String,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceCategoryProgramHandler: void <init>(java.lang.String,android.content.Context,com.android.internal.telephony.PhoneBase)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.cardemulation.AppChooserActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.speech.tts.TextToSpeechService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.admin.IDevicePolicyManager: boolean isAdminActive(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager: android.os.UserHandle createUser(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.RemoteViews$2: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.nfc.NfcService$TagService: int close(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<com.android.server.pm.PackageManagerService: void scanDirLI(java.io.File,int,int,long)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.provider.Settings$System: float getFloatForUser(android.content.ContentResolver,java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.notification.ValidateNotificationPeople: com.android.server.notification.ValidateNotificationPeople$LookupResult resolvePhoneContact(android.content.Context,java.lang.String)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.am.ActivityManagerService: java.util.List getTasks(int,int)>": [
  "android.permission.GET_TASKS"
 ], 
 "<com.android.server.hdmi.HdmiControlService$BinderService$14: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.TextServicesManagerService$TextServicesSettings: boolean isSpellCheckerEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.test.RenamingDelegatingContext: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.WakeLockStateMachine: java.lang.String getLogRecString(android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine: void access$2900(com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.commands.uiautomator.RunTestCommand: void run(java.lang.String[])>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.ToRGBAFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.backup.FullBackupAgent: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ISub$Stub$Proxy: int setDisplayName(java.lang.String,int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.policy.impl.EnableAccessibilityController: void <init>(android.content.Context,java.lang.Runnable)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.hardware.Camera: void native_setup(java.lang.Object)>": [
  "android.permission.CAMERA"
 ], 
 "<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: com.android.server.net.NetworkStatsService$NetworkStatsSettings$Config getDevConfig()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.SyncActivityTooManyDeletes: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.backup.IBackupManager: void opComplete(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.am.ActivityManagerService: void startRunningVoiceLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.RI: void sendCdmaSms(byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ActivityManagerNative: void moveTaskToBack(int)>": [
  "android.permission.REORDER_TASKS"
 ], 
 "<android.view.IWindowManager: void prepareAppTransition(int,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.DeviceHost$DeviceHostListener: void onHostCardEmulationDeactivated()>": [
  "android.permission.VIBRATE"
 ], 
 "<android.os.Vibrator: void vibrate(int,java.lang.String,long,android.media.AudioAttributes)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.location.GpsLocationProvider: void reportGeofencePauseStatus(int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String getSubtypeHistoryStr()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.UiAutomationConnection: void registerUiTestAutomationServiceLocked(android.accessibilityservice.IAccessibilityServiceClient)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.FillLightFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.DrawRectFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.location.GpsLocationProvider: void handleInjectNtpTime()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.dataconnection.DctController: int getRequestPhoneId(android.net.NetworkRequest)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.VignetteFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.TechListChooserActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.sip.SipCallBase: void hangupIfAlive()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.WindowAnimator: void hideWallpapersLocked(com.android.server.wm.WindowState)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.ViewFlipper: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: boolean isMulticastEnabled()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.SubscriptionController: void clearDefaultsForInactiveSubIds()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.net.wifi.IWifiManager: int getFrequencyBand()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: android.content.SyncStatusInfo getSyncStatusAsUser(android.accounts.Account,java.lang.String,int)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<android.filterpacks.imageproc.DrawOverlayFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.widget.SlidingDrawer: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.GrainFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void setPreferredNetworkType(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.ILocationManager: boolean addGpsNavigationMessageListener(android.location.IGpsNavigationMessageListener,java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.am.ActivityManagerService$Lifecycle: void onStartUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.SpeechRecognizer: void handleCancelMessage()>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<android.media.IMediaHTTPConnection$Stub$Proxy: long getSize()>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.server.input.InputManagerService: void updatePointerSpeedFromSettings()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.IWifiManager: void disableEphemeralNetwork(java.lang.String)>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.speech.tts.ITextToSpeechService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.ListView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager: void setUninstallBlocked(android.content.ComponentName,java.lang.String,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcSwitchStateMachine$DefaultState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.speech.tts.TextToSpeechService$SynthesisSpeechItemV1: void <init>(android.speech.tts.TextToSpeechService,java.lang.Object,int,int,android.os.Bundle,java.lang.String,java.lang.CharSequence)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.StackView$StackFrame: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneConnection: void proceedAfterWildChar(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.BeamShareActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.speech.RecognitionService: boolean checkPermissions(android.speech.IRecognitionListener)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<android.speech.tts.AudioPlaybackHandler$MessageLoop: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.PhoneBase: void nvResetConfig(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void notifyDataConnection(java.lang.String,java.lang.String,com.android.internal.telephony.PhoneConstants$DataState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.widget.SubtitleView: void setStyle(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.Connection dial(java.lang.String,int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.hardware.location.GeofenceHardwareImpl: void reportGeofenceTransition(int,android.location.Location,int,long,int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.WaveView: boolean onHoverEvent(android.view.MotionEvent)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.base.GLTextureTarget: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.View: boolean performClick()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.WallpaperManager: void setBitmap(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.media.effect.effects.FisheyeEffect: void release()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: void invalidateAuthToken(java.lang.String,java.lang.String)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<android.service.dreams.DreamService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void <init>(com.android.internal.telephony.cdma.CDMAPhone)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.TextServicesManagerService: void <init>(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.effect.effects.RedEyeEffect: void release()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.IApplicationToken$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.SubscriptionInfoUpdater: void handleSimLocked(int,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityManagerService: void killAllBackgroundProcesses()>": [
  "android.permission.KILL_BACKGROUND_PROCESSES"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void setUiTTYMode(int,android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.AccessibilityController: void onWindowLayersChangedLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.view.IInputMethodManager: boolean setCurrentInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.AliasActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void notifyServiceStateChangedP(android.telephony.ServiceState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.widget.QuickContactBadge: void assignContactFromEmail(java.lang.String,boolean,android.os.Bundle)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.InboundSmsHandler: void handleInjectSms(android.os.AsyncResult)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: boolean getCrossProfileCallerIdDisabledForUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.DragState: boolean notifyDropLw(float,float)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.UiModeManagerService$2: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.media.MediaBrowserService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.filterfw.core.InputPort: void transfer(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.base.RetargetFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void updateMaximumTimeToLockLocked(com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.base.GLTextureTarget: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: long getUidPersistBytes(long)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.LocationManagerService: void removeUpdates(android.location.ILocationListener,android.app.PendingIntent,java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.InboundSmsHandler: java.lang.String getLogRecString(android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DataConnection: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.IWindowSession: int addToDisplay(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.SYSTEM_ALERT_WINDOW", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.VibratorService$2: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ISms: boolean isImsSmsSupported()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.base.GLTextureTarget: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: boolean requestBatchedScan(android.net.wifi.BatchedScanSettings,android.os.IBinder,android.os.WorkSource)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getNetworkSelectionMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.backup.BackupManagerService$PerformAdbBackupTask: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.accessibilityservice.IAccessibilityServiceConnection$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.app.ResolverActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void writeSmsToSim(int,java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.TintFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.LocationManager: void clearTestProviderEnabled(java.lang.String)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.internal.telephony.ISub$Stub: int setIconTint(int,int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.net.wifi.WifiManager$WifiLock: void release()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.uicc.RuimRecords: void fetchRuimRecords()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.telephony.PhoneNumberUtils: boolean isVoiceMailNumber(java.lang.String)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.am.ActivityManagerService: void removeTasksByRemovedPackageComponentsLocked(java.lang.String,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.notification.ConditionProviders: void onUserSwitched()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoController: java.lang.String getLine1AlphaTagForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.wifi.WifiController: java.lang.String getLogRecString(android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.pm.IPackageManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.CLEAR_APP_CACHE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.GET_PACKAGE_SIZE"
 ], 
 "<com.android.server.accessibility.ScreenMagnifier: void access$300(com.android.server.accessibility.ScreenMagnifier,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: void setAllowScansWithTraffic(int)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.filterpacks.imageproc.ImageEncoder: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.os.DropBoxManager: void addFile(java.lang.String,java.io.File,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.ActivityStack: void activityPausedLocked(android.os.IBinder,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.backup.LocalTransportService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.media.tv.TvInputInfo$TvInputSettings: java.util.Map getCustomLabels(android.content.Context,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.cardemulation.AppChooserActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>": [
  "android.permission.VIBRATE", 
  "android.permission.NFC"
 ], 
 "<com.android.internal.view.RotationPolicy: int getRotationLockOrientation(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.nfc.tech.NfcB: byte[] transceive(byte[],boolean)>": [
  "android.permission.NFC"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: int getIsSyncable(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.server.search.Searchables: android.content.ComponentName findGlobalSearchActivity(java.util.List)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.LocationManagerService: void updateProvidersLocked()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void notifyAndAcknowledgeLastIncomingSms(boolean,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: void hangup(com.android.internal.telephony.gsm.GsmCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.HdmiControlService$SettingsObserver: void onChange(boolean,android.net.Uri)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.app.ExternalMediaFormatActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.twilight.TwilightManager: void registerListener(com.android.server.twilight.TwilightListener,android.os.Handler)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void access$2200(com.android.server.wifi.WifiStateMachine)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.CellBroadcastHandler: java.lang.String toString()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.NfcService$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<android.filterpacks.base.CallbackFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void getIMSI(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accessibility.TouchExplorer: void handleMotionEventGestureDetecting(android.view.MotionEvent,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.power.PowerManagerService: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getCompleteVoiceMailNumber()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accessibility.ScreenMagnifier: boolean isScreenMagnificationAutoUpdateEnabled(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: android.os.Messenger getWifiServiceMessenger()>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.textservice.ITextServicesManager: void finishSpellCheckerService(com.android.internal.textservice.ISpellCheckerSessionListener)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager: int getPasswordMinimumLetters(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneFactory: void makeDefaultPhones(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.nfc.INfcTag$Stub: int reconnect(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void setImsRegistrationState(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.widget.SlidingDrawer: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.accessibility.CaptioningManager: void access$000(android.view.accessibility.CaptioningManager)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.MutableContextWrapper: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.TabActivity: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: android.os.Messenger getWifiServiceMessenger()>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.SMSDispatcher: void <init>(com.android.internal.telephony.PhoneBase,com.android.internal.telephony.SmsUsageMonitor,com.android.internal.telephony.ImsSMSDispatcher)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.test.LaunchPerformanceBase: android.app.UiAutomation getUiAutomation()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.P2pEventManager: void onP2pReceiveComplete(boolean)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.view.menu.IconMenuItemView: boolean performLongClick()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.accounts.AccountManager$5: void doWork()>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<android.filterpacks.imageproc.FisheyeFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: boolean disableNetwork(int)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.media.effect.SingleFilterEffect: void apply(int,int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.ims.internal.IImsEcbmListener$Stub$Proxy: void exitedECBM()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoController: java.lang.String getVoiceMailAlphaTagForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.net.wifi.WifiManager: boolean saveConfiguration()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.PhoneBase: void queryAvailableBandMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiStateMachine$DefaultState: boolean processMessage(android.os.Message)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ISub: int[] getSubId(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.SMSDispatcher: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.wifi.WifiStateMachine$DriverStoppingState: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipConnection: void dial()>": [
  "android.permission.USE_SIP"
 ], 
 "<android.content.IContentService: void addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.text.format.DateUtils: java.util.Formatter formatDateRange(android.content.Context,java.util.Formatter,long,long,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: void initializeMulticastFiltering()>": [
  "android.permission.CHANGE_WIFI_MULTICAST_STATE"
 ], 
 "<android.filterpacks.imageproc.ToGrayFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: boolean handleCallWaitingIncallSupplementaryService(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.sip.SipService$MyExecutor: void execute(java.lang.Runnable)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.DeviceDiscoveryAction: void queryPhysicalAddress(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ActivityManagerNative: long inputDispatchingTimedOut(int,boolean,java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void setImsRegistrationState(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: boolean onTrySetupData(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.EthernetManager: void setConfiguration(android.net.IpConfiguration)>": [
  "android.permission.CHANGE_NETWORK_STATE"
 ], 
 "<android.service.voice.VoiceInteractionSessionService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.BluetoothSocket: void <init>(int,int,boolean,boolean,android.bluetooth.BluetoothDevice,int,android.os.ParcelUuid)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.CellBroadcastHandler: com.android.internal.telephony.CellBroadcastHandler makeCellBroadcastHandler(android.content.Context,com.android.internal.telephony.PhoneBase)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.videosrc.MediaSource: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.input.InputManagerService$WindowManagerCallbacks: android.view.KeyEvent dispatchUnhandledKey(com.android.server.input.InputWindowHandle,android.view.KeyEvent,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager: void clearCrossProfileIntentFilters(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.RI: void changeIccPinForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.FisheyeFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.ILockSettings$Stub: boolean getBoolean(java.lang.String,boolean,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.test.SimulatedCommands: void onRadioAvailable()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IMms: void downloadMessage(int,java.lang.String,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent)>": [
  "android.permission.RECEIVE_MMS"
 ], 
 "<android.filterpacks.text.StringLogger: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ISub$Stub: int getDefaultDataSubId()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.SubscriptionController: int getUnusedColor()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.telephony.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>": [
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.wifi.SupplicantStateTracker: void onQuitting()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager$17: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GsmSMSDispatcher: void <init>(com.android.internal.telephony.PhoneBase,com.android.internal.telephony.SmsUsageMonitor,com.android.internal.telephony.ImsSMSDispatcher,com.android.internal.telephony.gsm.GsmInboundSmsHandler)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.telephony.SubscriptionManager: android.telephony.SubscriptionInfo getDefaultSmsSubscriptionInfo()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.MccTable: void setSystemLocale(android.content.Context,java.lang.String,java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getBasebandVersion(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.dataconnection.DctController: void releaseRequest(com.android.internal.telephony.dataconnection.DcSwitchAsyncChannel$RequestInfo)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.display.DisplayAdapter$1: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.print.PrintManagerService$PrintManagerImpl: com.android.server.print.UserState getOrCreateUserStateLocked(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.TextServicesManagerService$TextServicesMonitor: void onPackageRemoved(java.lang.String,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.RemoteViews$2: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void revertToNitzTimeZone()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.server.location.LocationProviderInterface: void setRequest(com.android.internal.location.ProviderRequest,android.os.WorkSource)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.uicc.IccCardProxy: void onRecordsLoaded()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.IActivityManager: void killApplicationWithAppId(java.lang.String,int,java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.print.IPrintManager: void createPrinterDiscoverySession(android.print.IPrinterDiscoveryObserver,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.util.AsyncService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.media.IAudioService$Stub: void setBluetoothScoOn(boolean)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendMultipartSms(com.android.internal.telephony.SMSDispatcher$SmsTracker)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void handleNewSms(android.os.AsyncResult)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setupDataCall(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ISub$Stub$Proxy: int getDefaultVoiceSubId()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.RequestArcAction: void addAndStartAction(com.android.server.hdmi.HdmiCecFeatureAction)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.AccessibilityController$DisplayMagnifier: void onRotationChangedLocked(com.android.server.wm.DisplayContent,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void handleCdmaSubscriptionSource(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.RotateFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ServiceStateTracker: void updateSpnDisplay()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.service.dreams.DreamService: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void notifyDataConnectionFailed(java.lang.String,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.wifi.IWifiManager$Stub: int getAggressiveHandover()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.nfc.NfcService$ApplyRoutingTask: java.lang.Void doInBackground(java.lang.Integer[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.app.ChooserActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.PhoneBase: void getEnhancedVoicePrivacy(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.test.ActivityUnitTestCase$MockParent: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.RI: void setGsmBroadcastConfig(com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendMultipartText(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,android.net.Uri,java.lang.String)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.voiceinteraction.SoundTriggerHelper: void onRecognition(android.hardware.soundtrigger.SoundTrigger$RecognitionEvent)>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.MccTable: boolean isDeviceProvisioned(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean switchUser(android.content.ComponentName,android.os.UserHandle)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DctController: int requestNetwork(android.net.NetworkRequest,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.location.LocationManager: void requestSingleUpdate(android.location.Criteria,android.app.PendingIntent)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.media.effect.effects.BrightnessEffect: void release()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmSMSDispatcher: void handleConfirmShortCode(boolean,com.android.internal.telephony.SMSDispatcher$SmsTracker)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.notification.ValidateNotificationPeople: com.android.server.notification.ValidateNotificationPeople$LookupResult access$600(com.android.server.notification.ValidateNotificationPeople,android.content.Context,java.lang.String)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine: void access$2800(com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.IContentService$Stub: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.widget.TextClock: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.RI: void iccTransmitApduLogicalChannel(int,int,int,int,int,int,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.Invert: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.contacts.ContactsListActivity: android.net.Uri getSelectedUri(int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.ISms$Stub: boolean enableCellBroadcastRange(int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.server.TelephonyRegistry: void broadcastDataConnectionStateChanged(int,boolean,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.NetworkCapabilities,boolean,int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.Presentation$1: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevicePlayback: void maySetActiveSource(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ISms$Stub$Proxy: void sendText(java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SMS"
 ], 
 "<android.app.Activity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.base.FrameSource: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.LocationManager: void addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.internal.telephony.UiccSmsController: boolean enableCellBroadcast(int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: void setSurfaceLocked(android.view.Surface,int,int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.FlipFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.ImageSlicer: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.dataconnection.DctController: void <init>(com.android.internal.telephony.PhoneProxy[])>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.widget.PasswordEntryKeyboardView: boolean onModifiedTouchEvent(android.view.MotionEvent,boolean)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.textservice.SpellCheckerService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.telephony.SmsManager: boolean archiveStoredConversation(long,boolean)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.wifi.WifiController$DeviceInactiveState: boolean processMessage(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.UiModeManagerService: void onSwitchUser(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.nfc.NfcBackupAgent: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: boolean processPostDialChar(char)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.SimpleImageFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.provider.Contacts$Settings: void setSetting(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS"
 ], 
 "<android.view.IWindowSession$Stub$Proxy: android.os.IBinder prepareDrag(android.view.IWindow,int,int,int,android.view.Surface)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void lockNow()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.IUiAutomationConnection$Stub: void disconnect()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String getLastSubtypeForInputMethodLocked(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.provider.Settings$System: boolean getShowGTalkServiceStatus(android.content.ContentResolver)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.VideoView: void release(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void setNetworkSelectionModeAutomatic(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmInboundSmsHandler: int addTrackerToRawTable(com.android.internal.telephony.InboundSmsTracker)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.filterpacks.base.GLTextureSource: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager: long getPasswordExpiration(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.SystemAudioActionFromTv: void addAndStartAction(com.android.server.hdmi.HdmiCecFeatureAction)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityManagerService: void handleApplicationCrashInner(java.lang.String,com.android.server.am.ProcessRecord,java.lang.String,android.app.ApplicationErrorReport$CrashInfo)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager$7: void onSwipeFromTop()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.ToRGBFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiController$StaDisabledWithScanState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.admin.IDevicePolicyManager: boolean packageHasActiveAdmins(java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.AudioService$VolumeStreamState: void readSettings()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.backup.BackupManagerService: void restoreAtInstall(java.lang.String,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.pm.PackageManagerService: long access$3300(com.android.server.pm.PackageManagerService)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.dhimpl.NativeNfcManager: void notifyLlcpLinkDeactivated(com.android.nfc.dhimpl.NativeP2pDevice)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.os.UserHandle createUser(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.AdapterView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.notification.ManagedServices: void dump(java.io.PrintWriter,com.android.server.notification.NotificationManagerService$DumpFilter)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: java.lang.CharSequence makeCFQueryResultMessage(com.android.internal.telephony.CallForwardInfo,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.base.GLTextureTarget: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void setFacilityLockForApp(java.lang.String,boolean,java.lang.String,int,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.WifiManager: java.lang.String getConfigFile()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.sip.SipService: void setRegistrationListener(java.lang.String,android.net.sip.ISipSessionListener)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.nfc.cardemulation.AppChooserActivity: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.IContentService: int getIsSyncable(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.internal.app.HeavyWeightSwitcherActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.connectivity.NetworkMonitor$ValidatedState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.app.ResolverActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.base.FrameStore: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.ImageSlicer: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCall: void hangupIfAlive()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void queryCLIP(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ISms$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.LocationManagerService$Receiver: void <init>(com.android.server.LocationManagerService,android.location.ILocationListener,android.app.PendingIntent,int,int,java.lang.String,android.os.WorkSource,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.view.IWindowManager: void keyguardGoingAway(boolean,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.DISABLE_KEYGUARD", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.SearchView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.tts.ITextToSpeechService$Stub$Proxy: int speak(android.os.IBinder,java.lang.CharSequence,int,android.os.Bundle,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.Chronometer: boolean performLongClick()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void rejectCall(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.p2p.IWifiP2pManager$Stub: android.os.Messenger getMessenger()>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.VibratorService$VibrateThread: void <init>(com.android.server.VibratorService,com.android.server.VibratorService$Vibration)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ApplicationErrorReport: android.content.ComponentName getErrorReportReceiver(android.content.Context,java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.base.FrameBranch: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void queryTTYMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.DatePicker: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.net.NetworkStatsService: void performPollLocked(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.telephony.SubscriptionManager: void setDefaultSmsSubId(int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.WifiController: void onQuitting()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void nvWriteCdmaPrl(byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.NfcAdapter: boolean removeNfcUnlockHandler(android.nfc.NfcAdapter$NfcUnlockHandler)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void gotoIdleAndNotifyDataConnection(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.media.IAudioService: void setMode(int,android.os.IBinder)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.IccCard: void supplyPuk(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmMmiCode: void cancel()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.Editor: void updateSpellCheckSpans(int,int,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.provider.ContactsContract$Directory: void notifyDirectoryChange(android.content.ContentResolver)>": [
  "android.permission.WRITE_CONTACTS"
 ], 
 "<com.android.server.sip.SipSessionGroup$KeepAliveProcessCallback: void onResponse(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.net.NetworkStatsService$NetworkStatsSettings: boolean getSampleEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void disableLocationUpdates()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void addCrossProfileIntentFilter(android.content.ComponentName,android.content.IntentFilter,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.MediaScanner$MyMediaScannerClient: void scanFile(java.lang.String,long,long,boolean,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.backup.IBackupManager$Stub: void opComplete(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.hardware.location.IGeofenceHardware$Stub: boolean unregisterForMonitorStateChangeCallback(int,android.hardware.location.IGeofenceHardwareMonitorCallback)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: boolean onSignalStrengthResult(android.os.AsyncResult,boolean)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.content.ContentService: void cancelRequest(android.content.SyncRequest)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.server.wifi.WifiController: void readWifiIdleTime()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: void disconnect()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.wallpaper.WallpaperManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SET_WALLPAPER_HINTS", 
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.backup.BackupAgentHelper: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cat.CommandParamsFactory: boolean processLaunchBrowser(com.android.internal.telephony.cat.CommandDetails,java.util.List)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityRecord$Token: void windowsVisible()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.RI: void changeIccPin2ForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.pm.PackageManagerService: void performBootDexOpt(android.content.pm.PackageParser$Package,int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.updates.SELinuxPolicyInstallReceiver: java.security.cert.X509Certificate access$000(com.android.server.updates.ConfigUpdateInstallReceiver,android.content.ContentResolver)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void nvResetConfig(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.effect.effects.FlipEffect: void release()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.LocationManagerService: void updateProviderListenersLocked(java.lang.String,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.location.GpsLocationProvider$2: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setPreferredVoicePrivacy(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.DockObserver$2: void onUEvent(android.os.UEventObserver$UEvent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.os.IVibratorService$Stub$Proxy: void vibratePattern(int,java.lang.String,long[],int,int,android.os.IBinder)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void updateSpnDisplay()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.policy.impl.keyguard.KeyguardServiceWrapper: boolean isSecure()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.InboundSmsHandler$DefaultState: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.app.admin.IDevicePolicyManager: void setAutoTimeRequired(android.content.ComponentName,int,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void updateImsPhone()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.media.AudioService: void access$8700(android.media.AudioService,android.content.ContentResolver)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.print.IPrintManager: void addPrintJobStateChangeListener(android.print.IPrintJobStateChangeListener,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.Invert: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.BitmapOverlayFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.CalendarViewLegacyDelegate: void access$2000(android.widget.CalendarViewLegacyDelegate,java.util.Calendar)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void startAlarmForReconnect(int,com.android.internal.telephony.dataconnection.ApnContext)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void notifyCellInfo(java.util.List)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterfw.core.FilterSurfaceView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.SupplicantStateTracker$ScanState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.view.ViewOverlay$OverlayViewGroup: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getNeighboringCids(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accounts.AccountManagerService$9: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.app.admin.IDevicePolicyManager: java.util.List getTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.ConfirmConnectToWifiNetworkActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.hardware.location.GeofenceHardware: boolean addGeofence(int,int,android.hardware.location.GeofenceHardwareRequest,android.hardware.location.GeofenceHardwareCallback)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void handleExitEmergencyCallbackMode()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.speech.tts.ITextToSpeechService$Stub: int synthesizeToFileDescriptor(android.os.IBinder,java.lang.CharSequence,android.os.ParcelFileDescriptor,android.os.Bundle,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager: boolean isRemovingAdmin(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getPDPContextList(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.notification.ConditionProviders: void onPackagesChanged(boolean,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.Session: android.os.IBinder prepareDrag(android.view.IWindow,int,int,int,android.view.Surface)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.TabHost: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void setUninstallBlocked(android.content.ComponentName,java.lang.String,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: void handleDisplayAdded(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord resetTaskIfNeededLocked(com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord)>": [
  "android.permission.SEND_SMS", 
  "android.permission.DISABLE_KEYGUARD", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry: void listen(java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.dreams.DreamManagerService: void access$1700(com.android.server.dreams.DreamManagerService,android.os.IBinder,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void getSmscAddress(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.nsd.NsdManager: android.os.Messenger getMessenger()>": [
  "android.permission.INTERNET"
 ], 
 "<android.view.inputmethod.InputMethodManager: java.util.List getEnabledInputMethodList()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.NfcService$NfcAdapterService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.BLUETOOTH", 
  "android.permission.NFC"
 ], 
 "<com.android.server.pm.PackageManagerService: void unloadMediaPackages(android.util.ArrayMap,int[],boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.view.menu.IconMenuItemView: boolean shouldSpeakPasswordsForAccessibility()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.bluetooth.IBluetoothManager$Stub: void registerStateChangeCallback(android.bluetooth.IBluetoothStateChangeCallback)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.wifi.WifiController$3: void onChange(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: com.android.internal.telephony.dataconnection.ApnSetting fetchDunApn()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.AlarmManagerService: void deliverAlarmsLocked(java.util.ArrayList,long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.print.PrinterDiscoverySession: void destroy()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.location.ILocationManager: com.android.internal.location.ProviderProperties getProviderProperties(java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.widget.HorizontalScrollView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.trust.TrustManagerService: void addListener(android.app.trust.ITrustListener)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.InputMethodManagerService$MyPackageMonitor: void onSomePackagesChanged()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.RI: void sendImsGsmSms(java.lang.String,java.lang.String,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.display.DisplayPowerController: void initialize()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.WifiStateMachine: java.lang.String toString()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.INfcTag$Stub$Proxy: int getTimeout(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void supplyIccPin2(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void setPreferredNetworkType(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.SlidingTab: boolean onInterceptTouchEvent(android.view.MotionEvent)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.ToPackedGrayFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: long getGlobalLong(java.lang.String,long)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.CropFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.AlphaBlendFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getIsimChallengeResponse(java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.Gallery: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.base.InputStreamSource: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.accessibility.IAccessibilityManager$Stub$Proxy: void registerUiTestAutomationService(android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.videosink.MediaEncoderFilter: void updateMediaRecorderParams()>": [
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void notifySignalStrength()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.IActivityManager: void unbroadcastIntent(android.app.IApplicationThread,android.content.Intent,int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService$Service: java.util.List getWindows()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.net.NetworkStatsService$NetworkStatsSettings: long getPollInterval()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.printservice.PrintService: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.backup.BackupManagerService$PerformClearTask: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.tech.NfcF: byte[] transceive(byte[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.usb.UsbAudioManager: void sendDeviceNotification(com.android.server.usb.UsbAudioManager$AudioDevice,boolean)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.INfcTag$Stub$Proxy: int[] getTechList(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.nfc.NfcService$TagService: android.nfc.TransceiveResult transceive(int,byte[],boolean)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.uicc.IsimFileHandler: void updateEFLinearFixed(int,int,byte[],java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.MediaPlayer: void prepare()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: android.content.ComponentName getGlobalProxyAdmin(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.ListActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.sip.SipSessionGroup: void processRequest(javax.sip.RequestEvent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.AbstractThreadedSyncAdapter$ISyncAdapterImpl: void initialize(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.internal.widget.multiwaveview.GlowPadView: void handleUp(android.view.MotionEvent)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void updateImsPhone()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendSms(com.android.internal.telephony.SMSDispatcher$SmsTracker)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.MmsServiceBroker$BinderService: void downloadMessage(int,java.lang.String,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent)>": [
  "android.permission.RECEIVE_MMS"
 ], 
 "<android.inputmethodservice.KeyboardView: void showPreview(int)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.GrainFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.speech.tts.TtsEngines: void updateLocalePrefForEngine(java.lang.String,java.util.Locale)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterfw.core.Filter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiStateMachine$L2ConnectedState: void exit()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ISub$Stub$Proxy: int getDefaultDataSubId()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.videosrc.CameraSource: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.accounts.AccountManagerService: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<android.location.ILocationManager$Stub: java.lang.String getBestProvider(android.location.Criteria,boolean)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.job.JobServiceContext$JobServiceHandler: void handleServiceBoundH()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityManagerService: void killAppAtUsersRequest(com.android.server.am.ProcessRecord,android.app.Dialog)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.wifi.WifiManager$WifiLock: void finalize()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ISub$Stub$Proxy: int setDisplayNameUsingSrc(java.lang.String,int,long)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.nfc.NfcApplication: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void setImsRegistrationState(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.wifi.WifiManager: boolean reconnect()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.location.ILocationManager$Stub$Proxy: void removeGeofence(android.location.Geofence,android.app.PendingIntent,java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothSocket createRfcommSocket(int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.media.effect.SizeChangeEffect: void release()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: long getPasswordExpirationLocked(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.handover.ConfirmConnectActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.WifiStateMachine$SupplicantStoppingState: void enter()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.hdmi.HdmiControlService$BinderService$5: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void access$1300(com.android.internal.policy.impl.PhoneWindowManager)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void onRadioAvailable()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: android.content.ComponentName setGlobalProxy(android.content.ComponentName,java.lang.String,java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.HdmiControlService$HdmiControlBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.usb.UsbDeviceManager$1: void onUEvent(android.os.UEventObserver$UEvent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.policy.impl.SystemGesturesPointerEventListener: void onPointerEvent(android.view.MotionEvent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.wallpaper.WallpaperService$Engine: void reportVisibility()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.SYSTEM_ALERT_WINDOW", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.NativeActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.notification.DowntimeConditionProvider$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCommandInterface: void setRadioState(com.android.internal.telephony.CommandsInterface$RadioState)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: void checkAndStartWifi()>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.content.IntentSender$FinishedDispatcher: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.am.BroadcastQueue: void performReceiveLocked(com.android.server.am.ProcessRecord,android.content.IIntentReceiver,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.am.ActivityManagerService: int startIsolatedProcess(java.lang.String,java.lang.String[],java.lang.String,java.lang.String,int,java.lang.Runnable)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.SharpenFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.CrossProcessFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.filterpacks.imageproc.BlackWhiteFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.net.NetworkPolicyManagerService: void ensureActiveMobilePolicyLocked(java.lang.String)>": [
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.content.IContentService$Stub$Proxy: void setIsSyncable(android.accounts.Account,java.lang.String,int)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.ISms$Stub: boolean disableCellBroadcastRange(int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.server.notification.NotificationManagerService$2: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.location.ILocationManager$Stub$Proxy: void addTestProvider(java.lang.String,com.android.internal.location.ProviderProperties)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.internal.telephony.RI: void setInitialAttachApn(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.CropFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneMmiCode: void onQueryCfComplete(android.os.AsyncResult)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void setUiTTYMode(int,android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: int updateSystemBarsLw(android.view.WindowManagerPolicy$WindowState,int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.location.LocationFudger: void <init>(android.content.Context,android.os.Handler)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.ISub: int setDisplayName(java.lang.String,int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl: void enforceAccessPermission()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.service.carrier.CarrierMessagingService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.telecom.InCallService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.twilight.TwilightService: void onSwitchUser(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: java.util.List getAllCellInfo()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.wallpaper.WallpaperService$Engine: void doVisibilityChanged(boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.SYSTEM_ALERT_WINDOW", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void sendEmergencyCallbackModeChange()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void doRecovery()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.print.PrintManagerService$PrintManagerImpl$2: void onPackageRemoved(java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GsmConnection: void access$000(com.android.internal.telephony.gsm.GsmConnection)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.dataconnection.DataConnection: void access$3500(com.android.internal.telephony.dataconnection.DataConnection,com.android.internal.telephony.dataconnection.DataConnection$ConnectionParams)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.power.PowerManagerService: void access$2100(com.android.server.power.PowerManagerService)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void deleteSmsOnSim(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.RemoteViews$2: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.ContentResolver: java.util.List getCurrentSyncsAsUser(int)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<android.filterfw.core.ProgramPort: void setFieldFrame(android.filterfw.core.Frame,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.LayoutInflater$BlinkLayout: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.widget.PasswordEntryKeyboardView: void setKeyboard(android.inputmethodservice.Keyboard)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager: int[] getAdnRecordsSize(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.speech.tts.AudioPlaybackQueueItem: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.dataconnection.DcSwitchStateMachine$DefaultState: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.bluetooth.le.BluetoothLeAdvertiser: void startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.SystemServer: void performPendingShutdown()>": [
  "android.permission.VIBRATE"
 ], 
 "<android.filterpacks.imageproc.ResizeFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.nfc.cardemulation.TapAgainDialog: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.admin.IDevicePolicyManager: void clearProfileOwner(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void updateSpnDisplay()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.widget.Switch: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$P2pEnablingState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.pm.PackageManagerService: boolean isVerificationEnabled(int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.DigitalClock: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.wifi.WifiManager: boolean isPortableHotspotSupported()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GsmCellBroadcastHandler: void <init>(android.content.Context,com.android.internal.telephony.PhoneBase)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void updateCarrierMccMncConfiguration(java.lang.String,java.lang.String,android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: boolean setApplicationHidden(android.content.ComponentName,java.lang.String,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.sip.SipService$SipAutoReg: void stop()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.content.SyncStorageEngine: void init(android.content.Context)>": [
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.wm.DragState: void broadcastDragStartedLw(float,float)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.media.AudioService$ScoClient: void clearCount(boolean)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.ISub$Stub: int getPhoneId(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.BlendFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.media.MediaSessionService: void access$2300(com.android.server.media.MediaSessionService,android.content.ComponentName,int,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.Ringtone: void destroyLocalPlayer()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.LockPatternUtils: java.lang.String getString(java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.SearchView$SearchAutoComplete: void access$200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.tv.TvView$3: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.am.ActivityManagerService: void moveTaskToFront(int,int,android.os.Bundle)>": [
  "android.permission.REORDER_TASKS"
 ], 
 "<android.filterpacks.imageproc.SaturateFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterfw.core.Filter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.connectivity.Tethering$TetherInterfaceSM$TetheredState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GsmInboundSmsHandler: int addTrackerToRawTableAndSendMessage(com.android.internal.telephony.InboundSmsTracker)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.app.IProcessObserver$Stub$Proxy: void onForegroundActivitiesChanged(int,int,boolean)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: void setMasterSyncAutomaticallyAsUser(boolean,int)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void notifyCellInfo(java.util.List)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.location.LocationManager: void requestSingleUpdate(java.lang.String,android.app.PendingIntent)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.nfc.NfcAdapter: void disableForegroundDispatchInternal(android.app.Activity,boolean)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.ServiceStateTracker: void disableLocationUpdates()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getVoiceMailNumberForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.net.wifi.WifiManager: int getSupportedFeatures()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.view.WindowManagerInternal: void waitForAllWindowsDrawn(java.lang.Runnable,long)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.beam.BeamReceiveService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GsmInboundSmsHandler: void handleNewSms(android.os.AsyncResult)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.notification.DowntimeConditionProvider: void access$700(com.android.server.notification.DowntimeConditionProvider)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.HdmiControlService: boolean handleCecCommand(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void deleteSmsOnRuim(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void acceptCall(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.InboundSmsHandler$CarrierSmsFilter: void filterSms(java.lang.String,com.android.internal.telephony.InboundSmsHandler$CarrierSmsFilterCallback)>": [
  "android.permission.RECEIVE_SMS", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM: java.lang.String toString()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.IActivityManager: android.app.ActivityManager$TaskThumbnail getTaskThumbnail(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.inputmethodservice.InputMethodService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.nfc.BeamShareActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ISms$Stub: void sendStoredText(int,java.lang.String,android.net.Uri,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void nvWriteCdmaPrl(byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.backup.SystemBackupAgent: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.provider.Browser: boolean canClearHistory(android.content.ContentResolver)>": [
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.server.trust.TrustManagerService: void access$1400(com.android.server.trust.TrustManagerService,boolean,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.DateTimeView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.numeric.SinWaveFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.print.IPrintManager$Stub: void cancelPrintJob(android.print.PrintJobId,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.print.PrintManager: void restartPrintJob(android.print.PrintJobId)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.State processMsg(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.RECEIVE_WAP_PUSH", 
  "android.permission.WRITE_SMS", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.RECEIVE_MMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.wifi.WifiStateMachine$L2ConnectedState: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.voice.VoiceInteractionSessionService: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.google.android.mms.pdu.PduPersister: void loadRecipients(int,java.util.HashSet,java.util.HashMap,boolean)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.Phone: android.telephony.CellLocation getCellLocation()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.voice.VoiceInteractionService: boolean isActiveService(android.content.Context,android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.WifiManager$MulticastLock: void finalize()>": [
  "android.permission.CHANGE_WIFI_MULTICAST_STATE"
 ], 
 "<com.android.server.accounts.AccountManagerService$5: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.app.WallpaperManager: void clear()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.ISub$Stub: android.telephony.SubscriptionInfo getActiveSubscriptionInfoForIccId(java.lang.String)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.media.Ringtone: void stop()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: void requestSync(android.content.SyncRequest)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.server.SystemService: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiSettingsStore: boolean handleAirplaneModeToggled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.AutoFixFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.commands.appops.AppOpsCommand: void run(java.lang.String[])>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.KILL_BACKGROUND_PROCESSES", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.RESTART_PACKAGES", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.filterpacks.imageproc.BitmapSource: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getGsmBroadcastConfig(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ISms: boolean copyMessageToIccEfForSubscriber(int,java.lang.String,int,byte[],byte[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getIsimChallengeResponse(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void <init>(com.android.internal.telephony.cdma.CDMAPhone)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: boolean isSyncActive(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getDataCallList(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.AutoFixFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.InboundSmsHandler$CarrierSmsFilterCallback: void onFilterComplete(boolean)>": [
  "android.permission.RECEIVE_SMS", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void dispose()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.InputMethodManagerService$MyPackageMonitor: void onPackageModified(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.SIMRecords: void fetchSimRecords()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.AudioManager: boolean isBluetoothA2dpOn()>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.server.am.ActivityManagerService: void finishRunningVoiceLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.view.LayoutInflater$BlinkLayout: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.QuickContactBadge: void assignContactFromEmail(java.lang.String,boolean)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.app.NetInitiatedActivity: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.AlphaBlendFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager: void setSecureSetting(android.content.ComponentName,java.lang.String,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService: void switchUser(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.bluetooth.BluetoothPbap: void finalize()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.display.OverlayDisplayAdapter: void updateOverlayDisplayDevices()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.voice.VoiceInteractionService: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.widget.AbsoluteLayout: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.content.SyncActivityTooManyDeletes: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.webkit.WebViewFactory: void prepareWebViewInSystemServer(java.lang.String[])>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void sendEmergencyCallbackModeChange()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.location.ILocationManager: void clearTestProviderEnabled(java.lang.String)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<android.test.IsolatedContext: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.DigitalClock: boolean performLongClick()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void setMasterVolumeMuted(android.content.ComponentName,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void setCdmaRoamingPreference(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.cardemulation.CardEmulationManager: void onNfcEnabled()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void revertToNitzTime()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager: boolean hasUserSetupCompleted()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.NsdService$NsdStateMachine$EnabledState: void enter()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.SubscriptionController: java.util.List getActiveSubscriptionInfoList()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.telephony.SmsManager: boolean isSMSPromptEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.MccTable: java.util.Locale getLocaleForLanguageCountry(android.content.Context,java.lang.String,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.dreams.DreamService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.nfc.handover.PeripheralHandoverService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void onApnChanged()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.bluetooth.IBluetoothManager$Stub$Proxy: boolean enable()>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.uicc.IccFileHandler: void loadEFImgTransparent(int,int,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.WindowManagerService: int findDesiredInputMethodWindowIndexLocked(boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.telephony.SmsManager: boolean deleteMessageFromIcc(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService: boolean readDisplayColorAdjustmentSettingsLocked(com.android.server.accessibility.AccessibilityManagerService$UserState)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ISms$Stub: boolean disableCellBroadcastForSubscriber(int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.net.TrafficStats: android.net.NetworkStats stopDataProfiling(android.content.Context)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.wifi.WifiStateMachine$TetheringState: boolean processMessage(android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void notifyDataConnectionFailed(java.lang.String,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.IAccountManager$Stub: void hasFeatures(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String[])>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.CallTracker: void handlePollCalls(android.os.AsyncResult)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void removeActiveAdmin(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CellBroadcastHandler: void <init>(android.content.Context,com.android.internal.telephony.PhoneBase)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void switchHoldingAndActive()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.view.menu.ListMenuItemView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.UiccSmsController: void sendMultipartText(java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>": [
  "android.permission.SEND_SMS", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.dreams.DreamManagerService$6: void run()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.test.mock.MockContentResolver: void removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void <init>(java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.SMSDispatcher: void handleReachSentLimit(com.android.internal.telephony.SMSDispatcher$SmsTracker)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordMinimumLetters(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager: void setUserRestriction(android.content.ComponentName,java.lang.String,boolean)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask$1$1: void onResult(android.os.Bundle)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.server.display.AutomaticBrightnessController$2: void onTwilightStateChanged()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setMute(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$3: void onCallResumed(com.android.ims.ImsCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.lights.LightsService$1: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.FLASHLIGHT"
 ], 
 "<android.app.NativeActivity: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.ServiceWatcher$2: void onPackageDisappeared(java.lang.String,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.commands.media.Media: void main(java.lang.String[])>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.KILL_BACKGROUND_PROCESSES", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.RESTART_PACKAGES", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.accessibility.TouchExplorer: void sendActionDownAndUp(android.view.MotionEvent,int,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.am.ActivityManagerService: void unbroadcastIntent(android.app.IApplicationThread,android.content.Intent,int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.provider.Settings$Secure: int getLocationModeForUser(android.content.ContentResolver,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.ToPackedGrayFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.handover.ConfirmConnectActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.Phone: void nvResetConfig(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.TechListChooserActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.filterpacks.imageproc.BlackWhiteFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo markAsVoiceMail(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.PhoneBase: void setBandMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.power.PowerManagerService$LocalService: void setScreenBrightnessOverrideFromWindowManager(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.test.SyncBaseInstrumentation: void syncProvider(android.net.Uri,java.lang.String,java.lang.String)>": [
  "android.permission.READ_SYNC_STATS", 
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getDeviceId()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.ISms$Stub$Proxy: boolean enableCellBroadcastRangeForSubscriber(int,int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.server.wifi.WifiStateMachine: java.lang.String getLogRecString(android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void nvResetConfig(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.FragmentBreadCrumbs: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.CsimFileHandler: void getEFLinearRecordSize(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.WindowManagerService: void updateCircularDisplayMaskIfNeeded()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.ISyncStatusObserver$Stub$Proxy: void onStatusChanged(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.net.nsd.INsdManager$Stub$Proxy: android.os.Messenger getMessenger()>": [
  "android.permission.INTERNET"
 ], 
 "<android.os.IHardwareService$Stub$Proxy: void setFlashlightEnabled(boolean)>": [
  "android.permission.FLASHLIGHT"
 ], 
 "<com.android.server.job.JobServiceContext: void scheduleOpTimeOut()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.backup.IBackupManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.videoproc.BackDropperFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.uicc.UsimFileHandler: void getEFLinearRecordSize(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void sendSMS(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiStateMachine$ConnectModeState: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.PhoneSubInfo: java.lang.String getGroupIdLevel1()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.sip.SipSessionGroup: void process(java.util.EventObject)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.IWifiManager: void clearBlacklist()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.nfc.TechListChooserActivity: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void setCallForwardingOption(int,int,java.lang.String,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.ActionBarContainer: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.power.Notifier: void access$500(com.android.server.power.Notifier)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.dreams.DreamManagerService: android.content.ComponentName access$2400(com.android.server.dreams.DreamManagerService)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.IContentService$Stub$Proxy: void setMasterSyncAutomaticallyAsUser(boolean,int)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry$Stub: void listenForSubscriber(int,java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager: boolean access$200(com.android.internal.telephony.IccSmsInterfaceManager,com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.ImageStitcher: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoController: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: boolean isUserSetupComplete()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.dreams.DreamManagerService: void testDreamInternal(android.content.ComponentName,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.text.StringLogger: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.AbsSpinner: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.ToggleButton: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.TextClock: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.widget.SlidingTab: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: android.telephony.CellLocation getCellLocation()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.net.NetworkPolicyManagerService$7: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine: void updateThisDevice(int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.view.IWindowManager$Stub: void reenableKeyguard(android.os.IBinder)>": [
  "android.permission.DISABLE_KEYGUARD"
 ], 
 "<android.speech.tts.TextToSpeechService$SynthesisToFileOutputStreamSpeechItemV1: void <init>(android.speech.tts.TextToSpeechService,java.lang.Object,int,int,android.os.Bundle,java.lang.String,java.lang.CharSequence,java.io.FileOutputStream)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.Session: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.SYSTEM_ALERT_WINDOW", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.ImsSMSDispatcher: void sendRetrySms(com.android.internal.telephony.SMSDispatcher$SmsTracker)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.internal.app.NetInitiatedActivity: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.trust.TrustManagerService: void refreshAgentList(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceCategoryProgramHandler: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.Phone: void enableEnhancedVoicePrivacy(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.Connection dial(java.lang.String,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.FixedRotationFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.pm.BackgroundDexOptService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.sip.SipAudioCall: void stopCall(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.BlackWhiteFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.content.SyncManager: void scheduleLocalSync(android.accounts.Account,int,int,java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.content.SyncManager: void onUserStopping(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.widget.RotarySelector: boolean onTouchEvent(android.view.MotionEvent)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.notification.ConditionProviderService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.gesture.GestureOverlayView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.fingerprint.FingerprintService: void onSwitchUser(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.wm.WindowAnimator: void setPendingLayoutChanges(int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.widget.multiwaveview.GlowPadView: void handleCancel(android.view.MotionEvent)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.INetworkPolicyManager$Stub$Proxy: boolean isNetworkMetered(android.net.NetworkState)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.view.WindowManagerPolicy: android.view.KeyEvent dispatchUnhandledKey(android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ServiceStateTracker$SstSubscriptionsChangedListener: void onSubscriptionsChanged()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.test.InstrumentationCoreTestRunner: android.app.UiAutomation getUiAutomation()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.view.menu.ActionMenuItemView: void access$200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.AlphaBlendFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.beam.BeamReceiveService: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void <init>(java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.p2p.WifiP2pManager: android.net.wifi.p2p.WifiP2pManager$Channel initializeInternal(android.content.Context,android.os.Looper,android.net.wifi.p2p.WifiP2pManager$ChannelListener)>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: boolean isActivePasswordSufficient(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine: void access$3900(com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine,boolean)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.widget.NumberPicker$CustomEditText: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: void rebuildAppWindowListLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.location.LocationManager: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void setMute(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.test.RenamingDelegatingContext: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.VibratorService: void updateInputDeviceVibrators()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.RotateFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.AudioService: void setMicrophoneMute(boolean,java.lang.String)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.server.location.LocationProviderInterface: void enable()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void notifyDataConnection(java.lang.String,java.lang.String,com.android.internal.telephony.PhoneConstants$DataState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getActiveAdmins(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.input.InputManagerService: void updateShowTouchesFromSettings()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine: void sendP2pDiscoveryChangedBroadcast(boolean)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.wifi.WifiManager: int getVerboseLoggingLevel()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.nfc.cardemulation.RegisteredAidCache: void onNfcEnabled()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.wm.WindowManagerService: void startAppFreezingScreenLocked(com.android.server.wm.AppWindowToken)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.pm.IPackageManager$Stub$Proxy: void freeStorage(long,android.content.IntentSender)>": [
  "android.permission.CLEAR_APP_CACHE"
 ], 
 "<com.android.nfc.NfcBackupAgent: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.am.CompatModePackages: void setPackageScreenCompatModeLocked(android.content.pm.ApplicationInfo,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.location.LocationManager: void requestSingleUpdate(java.lang.String,android.location.LocationListener,android.os.Looper)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: android.content.ComponentName getGlobalProxyAdmin(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: boolean inputMethodClientHasFocus(com.android.internal.view.IInputMethodClient)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.test.mock.MockContentResolver: void requestSync(android.accounts.Account,java.lang.String,android.os.Bundle)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.app.admin.IDevicePolicyManager: void lockNow()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void expandSettingsPanel()>": [
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.server.wifi.WifiStateMachine$UntetheringState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.am.ActiveServices: boolean forceStopLocked(java.lang.String,int,boolean,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterfw.core.FilterContext: void tearDown()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.handover.BluetoothPeripheralHandover: void handleIntent(android.content.Intent)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.gsm.GsmConnection: void <init>(android.content.Context,com.android.internal.telephony.DriverCall,com.android.internal.telephony.gsm.GsmCallTracker,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$P2pEnabledState: void enter()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.display.OverlayDisplayAdapter: void updateOverlayDisplayDevicesLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.IActivityManager: long inputDispatchingTimedOut(int,boolean,java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.VideoView: void start()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: int startOneTouchRecord(int,byte[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: void startLocationRestrictedScan(android.os.WorkSource)>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.InboundSmsHandler: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.provider.UserDictionary$Words: void addWord(android.content.Context,java.lang.String,int,int)>": [
  "android.permission.WRITE_USER_DICTIONARY"
 ], 
 "<com.android.internal.telephony.uicc.UiccCardApplication: void supplyPuk2(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.MediaFocusControl: void dispatchMediaKeyEventUnderWakelock(android.view.KeyEvent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.INetworkScoreService$Stub$Proxy: void disableScoring()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.DateTimeView: void update()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.P2pEventManager: void onP2pResumeSend()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.nfc.DeviceHost$DeviceHostListener: void onLlcpLinkDeactivated(com.android.nfc.DeviceHost$NfcDepEndpoint)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.content.pm.IPackageManager: void freeStorageAndNotify(long,android.content.pm.IPackageDataObserver)>": [
  "android.permission.CLEAR_APP_CACHE"
 ], 
 "<android.print.IPrintManager$Stub$Proxy: void stopPrinterStateTracking(android.print.PrinterId,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.AccountManager$BaseFutureTask: void startTask()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void invokeOemRilRequestRaw(byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.MediaPlayer: void pause()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.LocationManagerService: void clearTestProviderStatus(java.lang.String)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager: int getDefault(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.handover.HandoverDataParser: android.nfc.NdefMessage tryBluetoothHandoverRequest(com.android.nfc.handover.HandoverDataParser$BluetoothHandoverData)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.PhoneProxy: android.telephony.CellLocation getCellLocation()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: boolean getDataEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.MediaPlayer$2: void run()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.accounts.ChooseAccountActivity: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.policy.impl.PhoneWindow$DecorView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.media.AudioService: void restoreMasterVolume()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: com.android.server.net.NetworkStatsService$NetworkStatsSettings$Config getUidConfig()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.DropBoxManagerService$1$1: void run()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.AccountManager$4: void startTask()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void rejectCall()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: boolean setRoamingOverride(java.util.List,java.util.List,java.util.List,java.util.List)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.server.notification.ManagedServices: void onPackagesChanged(boolean,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: long getDevPersistBytes(long)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.dhimpl.NativeNfcTag$PresenceCheckWatchdog: void run()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.ViewRootImpl: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,int,android.media.AudioAttributes,int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void setPreferredNetworkType(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordExpirationTimeout(android.content.ComponentName,long,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.BluetoothManagerService: boolean access$1000(com.android.server.BluetoothManagerService)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.StatusBarManager: void expandNotificationsPanel()>": [
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifySignalStrengthForSubscriber(int,android.telephony.SignalStrength)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.media.SubtitleController: android.media.SubtitleTrack addTrack(android.media.MediaFormat)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void notifyOffApnsOfAvailability(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.LauncherActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM: java.lang.String getLogRecString(android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.DragState: void notifyMoveLw(float,float)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.hdmi.RequestArcTerminationAction: boolean processCommand(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ActivityGroup: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.ResizeFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.DocumentaryFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: void startActivityAsUser(android.content.ComponentName,android.graphics.Rect,android.os.Bundle,android.os.UserHandle)>": [
  "android.permission.INTERNET"
 ], 
 "<android.filterpacks.text.ToUpperCase: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.InputMethodManagerService: void resetDefaultImeLocked(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.widget.AccessibleDateAnimator: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: boolean hasMatchedTetherApnSetting()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.os.IPowerManager$Stub$Proxy: void acquireWakeLockWithUid(android.os.IBinder,int,java.lang.String,java.lang.String,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.location.GpsLocationProvider: void reportGeofenceStatus(int,int,double,double,double,float,float,float,long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: java.util.List privatizeCellInfoList(java.util.List)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.power.PowerManagerService$3: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.telephony.SubscriptionManager: boolean allDefaultsSelected()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.ActivityManagerService: void installSystemProviders()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.admin.IDevicePolicyManager: int enableSystemAppWithIntent(android.content.ComponentName,android.content.Intent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.WifiManager: boolean initializeMulticastFiltering()>": [
  "android.permission.CHANGE_WIFI_MULTICAST_STATE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void clearProfileOwner(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$4: void onCallResumed(com.android.ims.ImsCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.beam.BeamReceiveService: int onStartCommand(android.content.Intent,int,int)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.wifi.WifiStateMachine: boolean access$10000(com.android.server.wifi.WifiStateMachine,android.net.NetworkInfo$DetailedState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void setTTYMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.dataconnection.DctController: void onExecuteAllRequests(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.NfcService: void unrouteAids(java.lang.String)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.nfc.handover.BluetoothPeripheralHandover$Callback: void onBluetoothPeripheralHandoverComplete(boolean)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.view.textservice.SpellCheckerSession: void finalize()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getDeviceId()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void iccCloseLogicalChannel(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: boolean getAutoTimeRequired()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.hardware.IConsumerIrService$Stub$Proxy: int[] getCarrierFrequencies()>": [
  "android.permission.TRANSMIT_IR"
 ], 
 "<com.android.server.pm.PackageManagerService$InstallParams: boolean startCopy()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ISub: android.telephony.SubscriptionInfo getActiveSubscriptionInfoForIccId(java.lang.String)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.app.Activity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.ToPackedGrayFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void setCallForward(int,int,int,java.lang.String,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.SystemVibrator: void vibrate(int,java.lang.String,long[],int,android.media.AudioAttributes)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void powerMultiPressAction(long,boolean,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowList getDefaultWindowListLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.policy.impl.BarController: boolean setBarShowingLw(boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isAdminActive(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiSettingsStore: boolean isWifiToggleEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ISms$Stub$Proxy: boolean disableCellBroadcastRange(int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.app.ContextImpl: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.widget.SpellChecker: void spellCheck(int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void selectNetworkManually(com.android.internal.telephony.OperatorInfo,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cat.CommandParamsFactory: boolean processDisplayText(com.android.internal.telephony.cat.CommandDetails,java.util.List)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.WaveView: void dispatchTriggerEvent(int)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.AccountManager$16: void doWork()>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<android.net.wifi.IWifiManager: void setAllowScansWithTraffic(int)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.nfc.tech.BasicTagTechnology: void connect()>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.backup.PackageManagerBackupAgent: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.BrightnessFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.hardware.location.GeofenceHardwareService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.ActivityManagerNative: boolean shutdown(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.sip.ISipService: boolean isRegistered(java.lang.String)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl: android.os.Messenger getMessenger()>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.wm.WindowManagerService: void updateShowImeWithHardKeyboard()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine: void sendP2pPersistentGroupsChangedBroadcast()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.uiautomator.core.UiAutomationShellWrapper: void disconnect()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.ISub: int setIconTint(int,int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void retrieveBatchedScanData()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void <init>(com.android.internal.telephony.PhoneBase)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.content.SyncStorageEngine$OnSyncRequestListener: void onSyncRequest(com.android.server.content.SyncStorageEngine$EndPoint,int,android.os.Bundle)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.nfc.beam.BeamReceiveService: boolean prepareToReceive(com.android.nfc.beam.BeamTransferRecord)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.location.LocationManager: android.location.Location getLastLocation()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.nfc.beam.BeamSendService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.wifi.WifiManager: boolean isAdditionalStaSupported()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.print.IPrintManager$Stub: void restartPrintJob(android.print.PrintJobId,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtypeLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneConnection: void access$000(com.android.internal.telephony.imsphone.ImsPhoneConnection)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: int getPasswordMinimumNumeric(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void hangup(com.android.internal.telephony.cdma.CdmaCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void <init>(java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.text.StringSource: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.IContentService: boolean isSyncPendingAsUser(android.accounts.Account,java.lang.String,android.content.ComponentName,int)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.internal.telephony.PhoneBase: void getPreferredNetworkType(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.INfcTag: void resetTimeouts()>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.hdmi.HdmiControlService: void disableHdmiControlService()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.TextServicesManagerService: void setCurrentSpellChecker(java.lang.String,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService$Lifecycle: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.tts.TextToSpeech: void <init>(android.content.Context,android.speech.tts.TextToSpeech$OnInitListener,java.lang.String,java.lang.String,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.SyncActivityTooManyDeletes: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.WifiWatchdogStateMachine$NotConnectedState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.accessibility.TouchExplorer$SendHoverEnterAndMoveDelayed: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void setVoiceMessageWaiting(int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.RttService$RttServiceImpl$RttStateMachine: java.lang.String getLogRecString(android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.view.menu.SubMenuBuilder: void changeMenuMode()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.display.DisplayManagerService: void access$3500(com.android.server.display.DisplayManagerService,android.os.IBinder)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.NfcRootActivity: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.media.AudioRecord: void <init>(int,int,int,int,int)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.internal.telephony.ISub: android.telephony.SubscriptionInfo getActiveSubscriptionInfo(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.nfc.P2pLinkManager$3: com.android.nfc.snep.SnepMessage doGet(int,android.nfc.NdefMessage)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.filterpacks.videoproc.BackDropperFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.ISms: void sendStoredMultipartText(int,java.lang.String,android.net.Uri,java.lang.String,java.util.List,java.util.List)>": [
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS"
 ], 
 "<android.filterpacks.imageproc.CropRectFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.am.ActivityManagerService: void updateConfiguration(android.content.res.Configuration)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.dreams.DreamManagerService: void access$1800(com.android.server.dreams.DreamManagerService,android.os.IBinder,int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.ActivityManager: void restartPackage(java.lang.String)>": [
  "android.permission.RESTART_PACKAGES", 
  "android.permission.KILL_BACKGROUND_PROCESSES"
 ], 
 "<com.android.server.power.PowerManagerService$BinderService: void acquireWakeLockWithUid(android.os.IBinder,int,java.lang.String,java.lang.String,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void nvResetConfig(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityManagerService: void finishBooting()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.location.GpsLocationProvider: void sendMessage(int,int,java.lang.Object)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.INfcAdapter$Stub: void setP2pModes(int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.power.PowerManagerService: void access$2000(com.android.server.power.PowerManagerService)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.tv.TvInputManagerService$1: boolean onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1: void onPackageDisappeared(java.lang.String,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneProxy: boolean updateCurrentCarrierInProvider()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.textservice.SpellCheckerService: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.IAccountManager: void updateCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void notifyDataConnectionFailed(java.lang.String,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.DropBoxManagerService: long access$300(com.android.server.DropBoxManagerService)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.tv.TvInputService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: boolean hasGrantedPolicy(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevice: void onAddressAllocated(int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.power.PowerManagerService: void access$5200(com.android.server.power.PowerManagerService,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.RI: void hangupForegroundResumeBackground(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevice: boolean handleRoutingChange(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.AutoCompleteTextView: boolean access$1200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.BeamShareActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.wifi.WifiController$FullHighPerfLockHeldState: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.RECEIVE_WAP_PUSH", 
  "android.permission.WRITE_SMS", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.RECEIVE_MMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.RI: void setCdmaRoamingPreference(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.UiccSmsController: void injectSmsPdu(int,byte[],java.lang.String,android.app.PendingIntent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.os.IPowerManager$Stub: void updateWakeLockUids(android.os.IBinder,int[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.text.StringSource: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.NfcService: void onRemoteFieldActivated()>": [
  "android.permission.VIBRATE"
 ], 
 "<android.accounts.IAccountManager: android.accounts.Account[] getAccounts(java.lang.String)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.dataconnection.DcSwitchStateMachine: java.lang.String toString()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.tts.TextToSpeechService: int getDefaultSpeechRate()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.sip.SipService$SipAutoReg: void onRegistrationFailed(android.net.sip.ISipSession,int,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.LocationManagerService: boolean isAllowedByCurrentUserSettingsLocked(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterfw.core.AsyncRunner$AsyncRunnerTask: void onCancelled(java.lang.Object)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.util.AsyncService: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void revertToNitzTimeZone()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.server.dreams.DreamManagerService: void access$300(com.android.server.dreams.DreamManagerService,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.backup.BackupAgent$BackupServiceBinder: void doRestoreFile(android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.TabActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(android.content.Context,long,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.carrier.CarrierMessagingService: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.ImageEncoder: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.backup.LocalTransportService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.media.MediaPlayer: void start()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void setTTYMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.WindowState: boolean hideLw(boolean,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.notification.CountdownConditionProvider: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GsmCellBroadcastHandler: com.android.internal.telephony.gsm.GsmCellBroadcastHandler makeGsmCellBroadcastHandler(android.content.Context,com.android.internal.telephony.PhoneBase)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getVoiceRegistrationState(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ISub: int getPhoneId(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: com.android.server.wm.DisplayContent newDisplayContentLocked(android.view.Display)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.LockPatternUtils: boolean isSecure(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void getSmscAddress(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevice: boolean handleInitiateArc(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.SearchDialog$SearchBar: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.search.Searchables: java.lang.String getGlobalSearchProviderSetting()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.ActiveServices: void killServicesLocked(com.android.server.am.ProcessRecord,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void access$17800(com.android.server.wifi.WifiStateMachine)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getMute(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void requestIccSimAuthentication(int,java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ActivityGroup: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.telephony.CellBroadcastMessage: java.lang.String getDateString(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.usage.UserUsageStatsService: java.lang.String formatDateTime(long,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterfw.core.SyncRunner: int step()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.speech.IRecognitionService$Stub: void cancel(android.speech.IRecognitionListener)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.nfc.beam.BeamReceiveService: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.PhoneSubInfo: java.lang.String getVoiceMailNumber()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void notifyDataConnection(java.lang.String,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.SubtitleTrack: void hide()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: void rejectCall()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cat.CatService: void eventDownload(int,int,int,byte[],boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.pm.PackageManagerService: android.content.pm.PackageParser$Package scanPackageLI(android.content.pm.PackageParser$Package,int,int,long,android.os.UserHandle)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.print.IPrintManager$Stub$Proxy: void restartPrintJob(android.print.PrintJobId,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiStateMachine$TetheredState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.wifi.IWifiManager$Stub: void initializeMulticastFiltering()>": [
  "android.permission.CHANGE_WIFI_MULTICAST_STATE"
 ], 
 "<com.android.nfc.handover.BluetoothPeripheralHandover$2: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.widget.SearchView$SearchAutoComplete: boolean access$1200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getDeviceSvnUsingSubId(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.preference.PreferenceActivity: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ISms$Stub$Proxy: boolean updateMessageOnIccEfForSubscriber(int,java.lang.String,int,int,byte[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.server.wm.AccessibilityController$DisplayMagnifier: void drawMagnifiedRegionBorderIfNeededLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.BlendFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void rejectCall(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cat.CommandParamsFactory: boolean processEventNotify(com.android.internal.telephony.cat.CommandDetails,java.util.List)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void setPasswordMinimumLength(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.cardemulation.OffHostApduService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.InputMethodManagerService: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.ims.ImsCall$ImsCallSessionListenerProxy: void callSessionStartFailed(com.android.ims.internal.ImsCallSession,com.android.ims.ImsReasonInfo)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.DialogTitle: void updateTextServicesLocaleLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.UiccCardApplication: void queryFdn()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.backup.FullBackupJob: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.widget.TextClock: void chooseFormat(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.IActivityManager: void moveTaskToBack(int)>": [
  "android.permission.REORDER_TASKS"
 ], 
 "<android.accounts.GrantCredentialsPermissionActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.content.SyncManager$3: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.app.ContextImpl: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.trust.TrustManagerService: void maybeEnableFactoryTrustAgents(com.android.internal.widget.LockPatternUtils,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$3: void onCallTerminated(com.android.ims.ImsCall,com.android.ims.ImsReasonInfo)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.TextClock$1: void onChange(boolean,android.net.Uri)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.ConfirmConnectToWifiNetworkActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.admin.IDevicePolicyManager: int getPasswordMinimumSymbols(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.IWifiManager$Stub: boolean setWifiEnabled(boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.widget.ToggleButton: void access$200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.job.JobServiceContext: void access$300(com.android.server.job.JobServiceContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.location.LocationBlacklist: void onChange(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.DrawOverlayFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.power.PowerManagerService: void onStartUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine: java.lang.String getLogRecString(android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.wallpaper.WallpaperSettingsActivity: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.media.AsyncPlayer: void play(android.content.Context,android.net.Uri,boolean,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.ResizeFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ISms$Stub: boolean isImsSmsSupported()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.RadialTimePickerView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.accounts.ChooseAccountActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.tech.NdefFormatable: void close()>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.BaseCommands: void onRadioAvailable()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.handover.HandoverServer$ServerThread: void run()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void handleRadioAvailable()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.Button: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.usb.UsbDeviceManager$UsbHandler: void <init>(com.android.server.usb.UsbDeviceManager,android.os.Looper)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.provider.Browser: void addSearchUrl(android.content.ContentResolver,java.lang.String)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS"
 ], 
 "<com.android.nfc.NfcService$NfcServiceHandler$1: void onTagDisconnected(long)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.app.ShutdownActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.accounts.IAccountManager$Stub: void removeAccount(android.accounts.IAccountManagerResponse,android.accounts.Account,boolean)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<android.widget.CheckedTextView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: android.view.KeyEvent dispatchUnhandledKey(android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.widget.LockPatternUtils: boolean removeAppWidget(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipCommandInterface: void setRadioState(com.android.internal.telephony.CommandsInterface$RadioState)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipCommandInterface: void setDataAllowed(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void setCdmaSubscription(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.NsdService: void sendNsdStateChangeBroadcast(boolean)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.print.PrintJob: void cancel()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.cardemulation.CardEmulationManager: void onPreferredForegroundServiceChanged(android.content.ComponentName)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.RttService$RttServiceImpl$RttStateMachine$RequestPendingState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.power.PowerManagerService$DockReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.hdmi.OneTouchRecordAction: void addAndStartAction(com.android.server.hdmi.HdmiCecFeatureAction)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.WindowAnimator: void dumpLocked(java.io.PrintWriter,java.lang.String,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.net.NetworkPolicyManagerService$1: void onLowPowerModeChanged(boolean)>": [
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.tv.TvInputManagerService: void onSwitchUser(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.ProxyController: void updateDataConnectionTracker(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void access$100(com.android.internal.telephony.SMSDispatcher,com.android.internal.telephony.SMSDispatcher$SmsTracker,int,int)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.nfc.ConfirmConnectToWifiNetworkActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.MmsServiceBroker: android.net.Uri access$900()>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.connectivity.PacManager: void setDownloadIn(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.test.SimulatedCommands: void requestShutdown(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.SaturateFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.Ringtone: void setUri(android.net.Uri)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void getNetworkSelectionMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.CropFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void acquireWakeLock()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.TextClock: void setShowCurrentUserTime(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.webkit.WebView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: void removeAccountAsUser(android.accounts.IAccountManagerResponse,android.accounts.Account,boolean,int)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<android.net.sip.SipManager: android.net.sip.SipAudioCall takeAudioCall(android.content.Intent,android.net.sip.SipAudioCall$Listener)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.server.wm.WindowStateAnimator: void destroyDeferredSurfaceLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.uicc.UiccController: void onSimRefresh(android.os.AsyncResult,java.lang.Integer)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IccCard: void supplyNetworkDepersonalization(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine: boolean access$5300(com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine,android.net.wifi.p2p.WifiP2pConfig)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.media.MediaPlayer: void setWakeMode(android.content.Context,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService: boolean access$5200(com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.AlphaBlendFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.print.IPrintManager$Stub: android.print.PrintJobInfo getPrintJobInfo(android.print.PrintJobId,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void nvWriteCdmaPrl(byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevicePlayback: void mayResetActiveSource(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.ims.internal.IImsCallSessionListener$Stub: void callSessionHoldFailed(com.android.ims.internal.IImsCallSession,com.android.ims.ImsReasonInfo)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.p2p.IWifiP2pManager: android.os.Messenger getMessenger()>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void shutdownRadio()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.am.CoreSettingsObserver: void onChange(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.NetworkScoreService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.hardware.location.GeofenceHardwareService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.UiccSmsController: int getPremiumSmsPermission(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.power.PowerManagerService$LocalService: void setDozeOverrideFromDreamManager(int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipConnection$1: void onChanged(android.net.sip.SipAudioCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.NfcService: void sendMessage(int,java.lang.Object)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.SystemServiceManager: void startUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.LocationManagerService$4: boolean onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.hardware.location.IGeofenceHardware$Stub: boolean removeGeofence(int,int)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.nfc.INfcTag$Stub: int close(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<com.android.server.accessibility.ScreenMagnifier$MagnifiedContentInteractonStateHandler: boolean onScale(android.view.ScaleGestureDetector)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.ProxyController: com.android.internal.telephony.ProxyController getInstance(android.content.Context,com.android.internal.telephony.PhoneProxy[],com.android.internal.telephony.uicc.UiccController,com.android.internal.telephony.CommandsInterface[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord startProcessLocked(java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName,boolean,boolean,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.widget.DialogTitle: boolean performLongClick()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.commands.am.Am: void runScreenCompat()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.GridLayout: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.ViewRootImpl$ViewPostImeInputStage: int processKeyEvent(android.view.ViewRootImpl$QueuedInputEvent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCall: void hangupIfAlive()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.ContentResolver: void setMasterSyncAutomaticallyAsUser(boolean,int)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.nfc.cardemulation.RegisteredAidCache: void onPreferredPaymentServiceChanged(android.content.ComponentName)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.view.IWindowManager$Stub: int getPreferredOptionsPanelGravity()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.am.BatteryStatsService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiConfigStore: void handleSSIDStateChange(int,boolean,java.lang.String,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void enableLocationUpdates()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.DropBoxManager: void addText(java.lang.String,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: void handleDisplayRemovedLocked(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.sip.SipCommandInterface: void getRadioCapability(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.DownloadManager: long addCompletedDownload(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,long,boolean)>": [
  "android.permission.INTERNET"
 ], 
 "<android.widget.Gallery: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: boolean interceptFallback(android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.app.ExternalMediaFormatActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.hdmi.DeviceDiscoveryAction: void queryOsdName(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry$Stub: void listen(java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.wm.WindowManagerService: void addInputMethodWindowToListLocked(com.android.server.wm.WindowState)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.accessibility.TouchExplorer: void clear()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.ReceiverRestrictedContext: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.backup.BackupAgentHelper: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.dreams.DreamManagerService: void startDozingInternal(android.os.IBinder,int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.media.effect.effects.LomoishEffect: void apply(int,int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.filterpacks.imageproc.FisheyeFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.PhoneBase: void setCdmaRoamingPreference(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.AudioService$AudioServiceBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevicePlayback: boolean handleTerminateArc(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void reRegisterNetwork(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.ExternalMediaFormatActivity: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.BluetoothManagerService: void access$100(com.android.server.BluetoothManagerService,java.lang.String,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getVoiceMailNumber()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.app.backup.BackupAgent: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.SamplingProfilerService$SamplingProfilerSettingsObserver: void <init>(com.android.server.SamplingProfilerService,android.content.ContentResolver)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.textservice.SpellCheckerService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.app.AlertActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.widget.ListPopupWindow$DropDownListView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: void displayReady(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.videosrc.MediaSource: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.BootReceiver: void access$100(com.android.server.BootReceiver,android.content.Context)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.server.hdmi.DeviceDiscoveryAction: void startOsdNameStage()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityManagerService: void scheduleStartProfilesLocked()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.filterpacks.ui.SurfaceRenderFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.print.IPrintManager$Stub$Proxy: void destroyPrinterDiscoverySession(android.print.IPrinterDiscoveryObserver,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.P2pLinkManager$SendTask: int doHandover(android.net.Uri[],android.os.UserHandle)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.widget.AbsSeekBar: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.ContextImpl: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.wm.WindowManagerService$3: void run()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.BitmapSource: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipAudioCallAdapter: void onCallEnded(android.net.sip.SipAudioCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accounts.AccountManagerService: boolean removeAccountExplicitly(android.accounts.Account)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.server.trust.TrustManagerService: void removeAgentsOfPackage(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService$LocalService: void waitForAllWindowsDrawn(java.lang.Runnable,long)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.BaseCommands: void setRadioState(com.android.internal.telephony.CommandsInterface$RadioState)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.IWallpaperManager: android.os.ParcelFileDescriptor setWallpaper(java.lang.String)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.telephony.SmsManager: java.util.ArrayList getAllMessagesFromIcc()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void onVoiceCallEnded()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: void saveLastInputMethodWindowForTransition()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.am.ActivityManagerService: void setProcessLimit(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.base.FrameSource: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.nfc.handover.ConfirmConnectActivity: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wm.WindowManagerService: void updateResizingWindows(com.android.server.wm.WindowState)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.Service: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.AccountManager$3: void startTask()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.print.IPrintManager$Stub: void startPrinterStateTracking(android.print.PrinterId,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.SubscriptionController: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.accounts.ChooseTypeAndAccountActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.util.AsyncChannel: int connectSrcHandlerToPackageSync(android.content.Context,android.os.Handler,java.lang.String,java.lang.String)>": [
  "android.permission.INTERNET"
 ], 
 "<android.location.LocationManager: boolean addNmeaListener(android.location.GpsStatus$NmeaListener)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.IIccPhoneBook: boolean updateAdnRecordsInEfBySearchForSubscriber(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS"
 ], 
 "<android.widget.DigitalClock: void <init>(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordMinimumNonLetter(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.AccountManager$BaseFutureTask: void doWork()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.media.SubtitleController: void access$300(android.media.SubtitleController)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void finishPowerKeyPress()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.DuotoneFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.IActivityManager: java.util.List getRecentTasks(int,int,int)>": [
  "android.permission.GET_TASKS"
 ], 
 "<com.android.server.pm.PackageManagerService: android.content.pm.PackageParser$Package scanPackageLI(java.io.File,int,int,long,android.os.UserHandle)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.backup.Trampoline: void setBackupServiceActive(int,boolean)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.app.IntentForwarderActivity: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.SmsApplication$SmsPackageMonitor: void onPackageRemoved(java.lang.String,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.IAccountManager$Stub: void confirmCredentialsAsUser(android.accounts.IAccountManagerResponse,android.accounts.Account,android.os.Bundle,boolean,int)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: boolean access$1200(com.android.internal.policy.impl.PhoneWindowManager,long,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.INfcAdapter$Stub: void verifyNfcPermission()>": [
  "android.permission.NFC"
 ], 
 "<android.filterpacks.videosrc.SurfaceTextureTarget: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.ChooseTypeAndAccountActivity: void runAddAccountForAuthenticator(java.lang.String)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.server.accounts.AccountManagerService$GetAccountsByTypeAndFeatureSession: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.MmsServiceBroker$BinderService: void sendStoredMessage(int,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent)>": [
  "android.permission.SEND_SMS"
 ], 
 "<com.android.server.location.GpsLocationProvider: void access$700(com.android.server.location.GpsLocationProvider)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ISub: int getDefaultSmsSubId()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.bluetooth.IBluetoothManager: boolean enableNoAutoConnect()>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.filterpacks.imageproc.CrossProcessFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager$CdmaBroadcastRangeManager: boolean updateRanges()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager: android.os.UserHandle createAndInitializeUser(android.content.ComponentName,java.lang.String,java.lang.String,android.content.ComponentName,android.os.Bundle)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.RI: void processUnsolicited(android.os.Parcel)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.print.PrintManagerService$PrintManagerImpl: void validatePrinters(java.util.List,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.IsimUiccRecords: void setMsisdnNumber(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.ContentResolver: boolean getMasterSyncAutomatically()>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: void handleRadioNotAvailable()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.pm.BackgroundDexOptService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.media.AudioService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List getEnabledInputMethodAndSubtypeHashCodeListLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.dreams.Sandman: boolean isScreenSaverActivatedOnDock(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.notification.ValidateNotificationPeople: com.android.server.notification.ValidateNotificationPeople$LookupResult access$500(com.android.server.notification.ValidateNotificationPeople,android.content.Context,java.lang.String)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.net.wifi.IWifiManager: java.util.List getPrivilegedConfiguredNetworks()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.widget.SeekBar: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.effect.effects.DocumentaryEffect: void apply(int,int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.gsm.GsmInboundSmsHandler: int dispatchMessageRadioSpecific(com.android.internal.telephony.SmsMessageBase)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.dataconnection.DctController: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.tts.TextToSpeechService$SpeechItemV1: int getSpeechRate()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.inputmethodservice.InputMethodService: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean isLockTaskPermitted(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.videoproc.BackDropperFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.nfc.INfcTag: int formatNdef(int,byte[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.UiccPhoneBookController: int[] getAdnRecordsSize(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.ClosedCaptionWidget$CCLineBox: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.MountServiceIdler: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.dataconnection.DctController: void releaseAllRequests(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.Service: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.SMSDispatcher: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,android.net.Uri,java.lang.String)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getDeviceSvnUsingSubId(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.RI: void setUiccSubscription(int,int,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.squareup.okhttp.internal.http.HttpsURLConnectionImpl: void connect()>": [
  "android.permission.INTERNET"
 ], 
 "<android.service.fingerprint.FingerprintUtils: boolean removeFingerprintIdForUser(int,android.content.ContentResolver,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.BeamShareActivity: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.backup.BackupAgent$BackupServiceBinder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.WiredAccessoryManager: void access$700(com.android.server.WiredAccessoryManager,java.lang.String,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.uicc.AdnRecordCache: void requestLoadAllAdnLike(int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.sip.SipSessionGroup: void processTimeout(javax.sip.TimeoutEvent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void setSuppServiceNotifications(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.notification.NextAlarmConditionProvider: void onEvaluate(android.app.AlarmManager$AlarmClockInfo,long,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.textservice.SpellCheckerService: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void updateBatteryWorkSource(android.os.WorkSource)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.service.voice.VoiceInteractionService: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.media.SRTRenderer: android.media.SubtitleTrack createTrack(android.media.MediaFormat)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.InputMethodManagerService: boolean setInputMethodEnabledLocked(java.lang.String,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.InputMethodManagerService: void buildInputMethodListLocked(java.util.ArrayList,java.util.HashMap,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void setPasswordMinimumSymbols(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.view.menu.IconMenuView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: boolean performHapticFeedbackLw(android.view.WindowManagerPolicy$WindowState,int,boolean)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.CheckBox: boolean shouldSpeakPasswordsForAccessibility()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.test.mock.MockContentResolver: boolean getMasterSyncAutomaticallyAsUser(int)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void exitEmergencyCallbackMode()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityManagerService$LocalService: int startIsolatedProcess(java.lang.String,java.lang.String[],java.lang.String,java.lang.String,int,java.lang.Runnable)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.location.LocationManager: void requestLocationUpdates(long,float,android.location.Criteria,android.app.PendingIntent)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: boolean installKeyPair(android.content.ComponentName,byte[],byte[],java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.RI: void setCdmaBroadcastActivation(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.power.Notifier: void onWirelessChargingStarted()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.view.IWindowManager: boolean inputMethodClientHasFocus(com.android.internal.view.IInputMethodClient)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.widget.PasswordEntryKeyboardView: boolean access$400(android.inputmethodservice.KeyboardView,android.view.MotionEvent)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.IActivityManager: boolean bindBackupAgent(android.content.pm.ApplicationInfo,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.StraightenFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.filterpacks.imageproc.ColorTemperatureFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.RingtoneManager: android.media.Ringtone getRingtone(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: android.os.UserHandle createUser(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumNonLetter(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: java.util.List getAllCellInfo()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void getHardwareConfig(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: boolean hasUserSetupCompleted()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void syncDeviceCapabilitiesLocked(com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.RecognitionService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.nfc.cardemulation.CardEmulation: int getSelectionModeForCategory(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.location.ILocationManager$Stub$Proxy: com.android.internal.location.ProviderProperties getProviderProperties(java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getDeviceSvn()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.net.wifi.IWifiManager: void acquireMulticastLock(android.os.IBinder,java.lang.String)>": [
  "android.permission.CHANGE_WIFI_MULTICAST_STATE"
 ], 
 "<android.provider.CallLog$Calls: void updateNormalizedNumber(android.content.Context,android.content.ContentResolver,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordHistoryLength(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterfw.core.SyncRunner: void processFilterNode(android.filterfw.core.Filter)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void getSmscAddress(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiController$ApStaDisabledState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.test.RenamingDelegatingContext: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getIsimImpi()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.opengl.GLSurfaceView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.AccountManager$15: void doWork()>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.nfc.handover.PeripheralHandoverService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.service.notification.ConditionProviderService: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevice: boolean handleTerminateArc(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.usb.UsbService$Lifecycle: void onBootPhase(int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.FisheyeFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.dreams.DreamManagerService: void stopDreamInternal(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.ImageSlicer: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.videosrc.SurfaceTextureSource: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager: java.util.List getAllMessagesFromIccEf(java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void notifyServiceStateChangedP(android.telephony.ServiceState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ISms: boolean copyMessageToIccEf(java.lang.String,int,byte[],byte[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.location.ILocationManager$Stub$Proxy: java.util.List getProviders(android.location.Criteria,boolean)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.accounts.AccountAuthenticatorActivity: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: int[] getAdnRecordsSize(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void changeIccPin(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IccProvider: boolean deleteIccRecordFromEf(int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,int)>": [
  "android.permission.WRITE_CONTACTS"
 ], 
 "<com.android.server.voiceinteraction.SoundTriggerHelper: int startRecognition(int,android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel,android.hardware.soundtrigger.IRecognitionStatusCallback,android.hardware.soundtrigger.SoundTrigger$RecognitionConfig)>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.net.wifi.IWifiManager: boolean pingSupplicant()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.net.MobileDataStateTracker: void startMonitoring(android.content.Context,android.os.Handler)>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.widget.Switch: void updateTextServicesLocaleLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.backup.BackupAgent$BackupServiceBinder: void doRestoreFinished(int,android.app.backup.IBackupManager)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.base.FrameBranch: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.IBatteryStats: void noteBluetoothOn()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.media.ClosedCaptionWidget$CCLineBox: boolean access$1200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: void cancelPostDial()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accounts.AccountManagerService: android.accounts.Account[] getAccounts(int)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.app.job.JobService: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.media.RingtoneManager: android.media.Ringtone getRingtone(android.content.Context,android.net.Uri,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: void disconnect()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.net.wifi.IWifiManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_MULTICAST_STATE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: android.content.ComponentName setGlobalProxy(android.content.ComponentName,java.lang.String,java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.INfcAdapter$Stub: boolean disableNdefPush()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.RI: void conference(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneConnection: void releaseWakeLock()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.service.voice.VoiceInteractionService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.SubscriptionController: int addSubInfoRecord(java.lang.String,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.server.hdmi.SystemAudioActionFromAvr: void handleSystemAudioActionFromAvr()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.telecom.InCallService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.wifi.WifiManager: boolean disableNetwork(int)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.view.WindowManagerPolicy: int interceptKeyBeforeQueueing(android.view.KeyEvent,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.ActivityManagerNative: void unbroadcastIntent(android.app.IApplicationThread,android.content.Intent,int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void access$800(com.android.internal.policy.impl.PhoneWindowManager)>": [
  "android.permission.VIBRATE", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.SEND_SMS", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiStateMachine$ScanModeState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.IContentService$Stub: boolean isSyncPendingAsUser(android.accounts.Account,java.lang.String,android.content.ComponentName,int)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.internal.telephony.SubscriptionController: int getDefaultVoiceSubId()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: boolean disableNetwork(int)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.commands.settings.SettingsCmd: void main(java.lang.String[])>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void handleCfuQueryResult(com.android.internal.telephony.CallForwardInfo[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneBase: void invokeOemRilRequestRaw(byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.accessibility.CaptioningManager: void access$100(android.view.accessibility.CaptioningManager)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.display.AutomaticBrightnessController: void <init>(com.android.server.display.AutomaticBrightnessController$Callbacks,android.os.Looper,android.hardware.SensorManager,android.util.Spline,int,int,int,float)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.filterpacks.imageproc.StraightenFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.am.ActivityStack: void completePauseLocked(boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.job.IJobScheduler$Stub: int schedule(android.app.job.JobInfo)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<android.net.wifi.IWifiManager: void setFrequencyBand(int,boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.print.PrinterDiscoverySession: void destroyNoCheck()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.INfcCardEmulation$Stub: boolean registerAidGroupForService(int,android.content.ComponentName,android.nfc.cardemulation.AidGroup)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<com.android.nfc.P2pEventManager: void onP2pHandoverBusy()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void setCellInfoListRate(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: void getSpellCheckerService(java.lang.String,java.lang.String,com.android.internal.textservice.ITextServicesSessionListener,com.android.internal.textservice.ISpellCheckerSessionListener,android.os.Bundle)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.cardemulation.DefaultRemovedActivity: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.PhoneFactory: int getDefaultSubscription()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DataConnection$DcRetryingState: boolean processMessage(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.print.PrintManager: android.print.PrintJob print(java.lang.String,android.print.PrintDocumentAdapter,android.print.PrintAttributes)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.WifiManager: void pollBatchedScan()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: void hangup()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ISms$Stub$Proxy: boolean isSMSPromptEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.Button: void access$200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.LocationManagerService: void access$1800(com.android.server.LocationManagerService,android.location.Location,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.EditText: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.Button: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.BatteryService: void access$400(com.android.server.BatteryService)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GsmInboundSmsHandler: void acknowledgeLastIncomingSms(boolean,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.IUiAutomationConnection$Stub: void shutdown()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.view.IWindowManager: boolean isRotationFrozen()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker$ApnChangeObserver: void onChange(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean isAdminActive(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.ImageStitcher: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.DisableCarModeActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getDeviceSvn()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.widget.CheckBox: void updateTextServicesLocaleLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService$Service: void binderDied()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcAsyncChannel: int connectSrcHandlerToPackageSync(android.content.Context,android.os.Handler,java.lang.String,java.lang.String)>": [
  "android.permission.INTERNET"
 ], 
 "<android.media.MediaPlayer: void deselectTrack(int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.ISms$Stub$Proxy: int getPreferredSmsSubscription()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: void exitKeyguardSecurely(android.view.IOnKeyguardExitResult)>": [
  "android.permission.DISABLE_KEYGUARD"
 ], 
 "<android.app.IBackupAgent$Stub: void doRestoreFinished(int,android.app.backup.IBackupManager)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void handleConfirmShortCode(boolean,com.android.internal.telephony.SMSDispatcher$SmsTracker)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<android.telephony.SubscriptionManager: void addOnSubscriptionsChangedListener(android.telephony.SubscriptionManager$OnSubscriptionsChangedListener)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.view.IWindowSession$Stub: int addWithoutInputChannel(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.SYSTEM_ALERT_WINDOW", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.pm.PackageManagerService: void replaceSystemPackageLI(android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package,int,int,android.os.UserHandle,int[],boolean[],java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.TabWidget: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.provider.ContactsContract$RawContacts$EntityIteratorImpl: android.content.Entity next()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager$3: void onUEvent(android.os.UEventObserver$UEvent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.test.IsolatedContext: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.String[] getAccountTypesWithManagementDisabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: boolean addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.server.wm.WindowAnimator: void updateWindowsLocked(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.FragmentBreadCrumbs: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.LocationManagerService$4: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.location.provider.LocationProviderBase: void reportLocation(android.location.Location)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.ReceiverRestrictedContext: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.base.OutputStreamTarget: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.inputmethodservice.ExtractEditText: boolean performLongClick()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wm.WindowManagerService: void requestTraversalLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.VibratorService$1: void onLowPowerModeChanged(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.handover.PeripheralHandoverService$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void clearCrossProfileIntentFilters(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: com.android.internal.telephony.Connection dial(java.lang.String,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.AccountManager$19: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.TextServicesManagerService: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void setTTYMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.os.IDropBoxManagerService$Stub$Proxy: void add(android.os.DropBoxManager$Entry)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.ImageSlicer: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.telephony.SubscriptionManager: int getDefaultVoicePhoneId()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.TelephonyRegistry: void broadcastSignalStrengthChanged(android.telephony.SignalStrength,int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ISub$Stub$Proxy: int setIconTint(int,int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.cat.RilMessageDecoder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.connectivity.NetworkMonitor$DefaultState: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.os.PowerManagerInternal: void setUserActivityTimeoutOverrideFromWindowManager(long)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.IMms$Stub: void sendStoredMessage(int,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent)>": [
  "android.permission.SEND_SMS"
 ], 
 "<com.android.server.wifi.SupplicantStateTracker$UninitializedState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.uicc.UiccCard: void sendEnvelopeWithStatus(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.CompoundButton: boolean performLongClick()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.accessibility.DisplayAdjustmentUtils: void applyAdjustments(android.content.Context,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.SharpenFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.filterpacks.imageproc.ContrastFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.uicc.UiccController: void onGetIccCardStatusDone(android.os.AsyncResult,java.lang.Integer)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: int getAllowScansWithTraffic()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void iccOpenLogicalChannel(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.print.PrintManagerService$PrintManagerImpl: android.print.PrintJobInfo getPrintJobInfo(android.print.PrintJobId,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.ContentResolver: android.content.SyncStatusInfo getSyncStatusAsUser(android.accounts.Account,java.lang.String,int)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void handleSendComplete(android.os.AsyncResult)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<android.accounts.CantAddAccountActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.Connection: void hangup()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.NetworkTimeUpdateService: void <init>(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.widget.AccessibleDateAnimator: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ISub$Stub$Proxy: void setDefaultDataSubId(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask: void restoreKeyValue()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.cardemulation.AppChooserActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accessibilityservice.IAccessibilityServiceConnection$Stub: java.util.List getWindows()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.INfcCardEmulation$Stub: android.nfc.cardemulation.AidGroup getAidGroupForService(int,android.content.ComponentName,java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.os.SystemVibrator: void vibrate(long[],int)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.SubscriptionInfoUpdater: void handleSimAbsent(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.internal.telephony.ISms$Stub: void sendDataForSubscriber(int,java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.internal.telephony.uicc.IccFileHandler: void loadEFLinearFixed(int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ExpandableListActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.view.menu.ActionMenuItemView: boolean shouldSpeakPasswordsForAccessibility()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.INfcTag: android.nfc.Tag rediscover(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.InputMethodManagerService: void updateFromSettingsLocked(boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.widget.FaceUnlockView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.Presentation$1: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.net.NetworkPolicyManagerService$6: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void <init>(java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.StraightenFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.SupplicantStateTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: void onDisplayChanged(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.inputmethodservice.ExtractButton: boolean performLongClick()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: java.util.List privatizeCellInfoList(java.util.List)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager$CellBroadcastRangeManager: boolean finishUpdate()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.PreferenceImageView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: boolean getAutoTime()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.notification.ZenModeConfig: android.service.notification.Condition toTimeCondition(android.content.Context,long,int,long,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: void access$1000(com.android.server.wm.WindowManagerService,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.widget.WaveView: void vibrate(long)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void onDisconnectDone(int,android.os.AsyncResult)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ISub$Stub$Proxy: void setDefaultVoiceSubId(int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.wifi.IWifiManager$Stub: boolean isMulticastEnabled()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.media.effect.effects.BitmapOverlayEffect: void release()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.SupplicantStateTracker$HandshakeState: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.INfcTag$Stub: android.nfc.Tag rediscover(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getNaiForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.preference.SeekBarVolumizer: void onInitSample()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.widget.LockPatternUtils: boolean usingBiometricWeak()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.RecognitionService: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.base.FrameStore: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.print.IPrintManager: android.print.PrintJobInfo getPrintJobInfo(android.print.PrintJobId,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.print.IPrintManager$Stub$Proxy: void startPrinterStateTracking(android.print.PrinterId,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accounts.AccountManagerService: void editProperties(android.accounts.IAccountManagerResponse,java.lang.String,boolean)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void handlePollStateResult(int,android.os.AsyncResult)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void separate(com.android.internal.telephony.cdma.CdmaConnection)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.LocationManagerService: int getAllowedResolutionLevel(int,int)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void setPropertiesByCarrier()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getGroupIdLevel1ForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.telephony.SubscriptionManager: android.telephony.SubscriptionInfo getDefaultDataSubscriptionInfo()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.filterpacks.imageproc.ImageEncoder: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void setImsRegistrationState(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl: void enforceChangePermission()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.widget.TextView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.ISub$Stub: int getSlotId(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: java.util.List getChannelList()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.widget.ActionBarView$HomeView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.updates.CertPinInstallReceiver: java.security.cert.X509Certificate getCert(android.content.ContentResolver)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: void performLayoutAndPlaceSurfacesLockedLoop()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.performance.ThroughputFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.ActionMenuPresenter$OpenOverflowRunnable: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.Activity: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.dreams.DreamManagerService: void dumpInternal(java.io.PrintWriter)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.NfcService$TagService: android.nfc.Tag rediscover(int)>": [
  "android.permission.NFC"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture renameAccount(android.accounts.Account,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.IMms$Stub: boolean deleteStoredMessage(java.lang.String,android.net.Uri)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.internal.widget.LockPatternUtils: int[] getAppWidgets()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService$2: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.BeamShareActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.app.RestrictionsPinActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: boolean updateCurrentCarrierInProvider(java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.app.backup.BackupAgent$BackupServiceBinder: void doRestore(android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.os.SystemVibrator: void cancel()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.accessibility.ScreenMagnifier$StateViewportDraggingHandler: void access$600(com.android.server.accessibility.ScreenMagnifier$StateViewportDraggingHandler,android.view.MotionEvent,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.os.IPowerManager$Stub$Proxy: void updateWakeLockUids(android.os.IBinder,int[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.uicc.UiccCard: void iccOpenLogicalChannel(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.power.PowerManagerService$2: void onProximityNegative()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void handleRadioNotAvailable()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.AccountManager: android.accounts.AccountManagerFuture confirmCredentialsAsUser(android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.internal.telephony.ProxyController: void onFinishRadioCapabilityResponse(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void exitEmergencyCallbackMode()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.hardware.location.GeofenceHardwareService$1: boolean unregisterForMonitorStateChangeCallback(int,android.hardware.location.IGeofenceHardwareMonitorCallback)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void setSmscAddress(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void getPreferredNetworkType(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActiveServices: void realStartServiceLocked(com.android.server.am.ServiceRecord,com.android.server.am.ProcessRecord,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.input.InputManagerService$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.LocationManagerService: void requestLocationUpdates(android.location.LocationRequest,android.location.ILocationListener,android.app.PendingIntent,java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.sip.SipSessionGroup: void processTransactionTerminated(javax.sip.TransactionTerminatedEvent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneFactory: void makeDefaultPhone(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: void processDelayedMessages(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getImei()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void setDataProfilesAsNeeded()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.INfcTag$Stub: int ndefMakeReadOnly(int)>": [
  "android.permission.NFC"
 ], 
 "<android.content.pm.ILauncherApps: void startActivityAsUser(android.content.ComponentName,android.graphics.Rect,android.os.Bundle,android.os.UserHandle)>": [
  "android.permission.INTERNET"
 ], 
 "<android.widget.TextClock: void access$000(android.widget.TextClock)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.HdmiControlService: void access$3200(com.android.server.hdmi.HdmiControlService,android.hardware.hdmi.IHdmiControlCallback)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.textservice.ITextServicesManager$Stub: void finishSpellCheckerService(com.android.internal.textservice.ISpellCheckerSessionListener)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.MmsServiceBroker: android.net.Uri access$1100()>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver: void scheduleComputeChangedWindowsLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.content.IContentService$Stub: java.util.List getCurrentSyncs()>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: boolean onTrySetupData(com.android.internal.telephony.dataconnection.ApnContext)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void startDtmf(char,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.IWifiManager: boolean setWifiEnabled(boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.accounts.IAccountManager$Stub: void editProperties(android.accounts.IAccountManagerResponse,java.lang.String,boolean)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$SettingsObserver: void <init>(com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub,android.os.Handler)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.RI: void resetRadio(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.effect.effects.CropEffect: void apply(int,int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getVoiceMailAlphaTagForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void getImsService()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager: int getPasswordMinimumUpperCase(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.MmsServiceBroker$BinderService: void setAutoPersisting(java.lang.String,boolean)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<android.telephony.gsm.SmsManager: java.util.ArrayList getAllMessagesFromSim()>": [
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$ProvisionDiscoveryState: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.AccountManager$11: void doWork()>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<android.filterpacks.imageproc.DrawRectFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.telecom.ConnectionService: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.location.GpsLocationProvider: void access$3200(com.android.server.location.GpsLocationProvider,com.android.internal.location.ProviderRequest,android.os.WorkSource)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void nvReadItem(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.TextServicesManagerService$TextServicesMonitor: boolean onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.os.IVibratorService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.ImsSMSDispatcher: boolean denyIfQueueLimitReached(com.android.internal.telephony.SMSDispatcher$SmsTracker)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.wifi.WifiWatchdogStateMachine$WatchdogEnabledState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoController: java.lang.String getIsimDomain()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.INfcCardEmulation: boolean registerAidGroupForService(int,android.content.ComponentName,android.nfc.cardemulation.AidGroup)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<android.filterpacks.performance.ThroughputFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.IApplicationToken$Stub: boolean keyDispatchingTimedOut(java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.UsimPhoneBookManager: void readAdnFileAndWait(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void processSendSmsResponse(com.android.internal.telephony.SMSDispatcher$SmsTracker,int,int)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<android.view.accessibility.CaptioningManager$1: void onChange(boolean,android.net.Uri)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipCall: void hangupIfAlive()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.CrossProcessFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.TabActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void dispose()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void setTimeFromNITZString(java.lang.String,long)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.server.wm.WindowStateAnimator: void prepareSurfaceLocked(boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterfw.core.FieldPort: void pushFrame(android.filterfw.core.Frame)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiApConfigStore$DefaultState: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService$UserState$1: void binderDied()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.IWifiManager$Stub: boolean requestBatchedScan(android.net.wifi.BatchedScanSettings,android.os.IBinder,android.os.WorkSource)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.wifi.WifiController: void access$200(com.android.server.wifi.WifiController)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.SubscriptionController: void setDefaultFallbackSubId(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.app.job.JobService: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.backup.BackupManagerService$Lifecycle: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.SystemAudioAction: void startAudioStatusAction()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.ServiceWatcher$2: boolean onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void setTTYMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordMinimumLowerCase(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.ContentResolver: boolean getMasterSyncAutomaticallyAsUser(int)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.server.sip.SipService: void notifyProfileRemoved(android.net.sip.SipProfile)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void dispose()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager: boolean disableCellBroadcast(int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService$Service: android.view.accessibility.AccessibilityWindowInfo getWindow(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.AccountManager$7: android.accounts.AccountManager$Future2Task start()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.inputmethodservice.ExtractEditText: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.ServiceStateTracker: void updateCarrierMccMncConfiguration(java.lang.String,java.lang.String,android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.server.notification.NotificationManagerService$SettingsObserver: void onChange(boolean,android.net.Uri)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.display.WifiDisplayAdapter$1: void run()>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.print.PrintManagerService$PrintManagerImpl$2: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.NfcActivityManager: void setNdefPushMessage(android.app.Activity,android.nfc.NdefMessage,int)>": [
  "android.permission.NFC"
 ], 
 "<android.filterpacks.base.FrameFetch: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.BatteryService: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.os.storage.ExternalStorageFormatter: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.media.tv.TvView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.DuotoneFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: java.util.List getPermittedInputMethods(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IMms$Stub: android.net.Uri addTextMessageDraft(java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$ProvisionDiscoveryState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$SettingsObserver: void onChange(boolean)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.accessibility.AccessibilityInputFilter: void processBatchedEvents(long)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.ImsSMSDispatcher: void handleReachSentLimit(com.android.internal.telephony.SMSDispatcher$SmsTracker)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.am.ActivityRecord$Token: boolean keyDispatchingTimedOut(java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.Phone: void invokeOemRilRequestRaw(byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.storage.DeviceStorageMonitorService: void onStart()>": [
  "android.permission.CLEAR_APP_CACHE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.ConfirmConnectToWifiNetworkActivity: void onClick(android.view.View)>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.widget.PasswordEntryKeyboardView: boolean openPopupIfRequired(android.view.MotionEvent)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.renderscript.RSSurfaceView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.cardemulation.DefaultRemovedActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.NsdService$NsdStateMachine: void onQuitting()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.UiModeManagerService: void sendConfigurationAndStartDreamOrDockAppLocked(java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.ethernet.EthernetService: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.InputMethodManagerService: void setInputMethodLocked(java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.power.PowerManagerService: void handleScreenBrightnessBoostTimeout()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.ActivityManagerService: long inputDispatchingTimedOut(int,boolean,java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.media.ClosedCaptionWidget: void <init>(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.InboundSmsHandler$WaitingState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$DefaultState: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.app.UiAutomationConnection: void storeRotationStateLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager: java.lang.String[] getAccountTypesWithManagementDisabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.DigitalClock: void access$200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.RecognitionService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyDataConnectionFailedForSubscriber(int,java.lang.String,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$GroupCreatedState: void exit()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.widget.SearchView$SearchAutoComplete: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.widget.ActionBarView$HomeView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.ImageEncoder: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.power.PowerManagerService: void handleSettingsChangedLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.os.PowerManager$WakeLock: void acquire()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.statusbar.StatusBarManagerService: void enforceExpandStatusBar()>": [
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$SetIpForwardingDisabledErrorState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void addPersistentPreferredActivity(android.content.ComponentName,android.content.IntentFilter,android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.LocationManagerService: com.android.server.LocationManagerService$Receiver getReceiverLocked(android.location.ILocationListener,int,int,java.lang.String,android.os.WorkSource,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.filterpacks.imageproc.PosterizeFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.WifiManager: boolean removeNetwork(int)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.content.Context: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.BootReceiver$1: void run()>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.server.BatteryService: void logOutlierLocked(long)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.CoreSettingsObserver: void sendCoreSettings()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.provider.CalendarContract$CalendarAlerts: void rescheduleMissedAlarms(android.content.ContentResolver,android.content.Context,android.app.AlarmManager)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getIsimChallengeResponse(java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: void onNewAvrAdded(android.hardware.hdmi.HdmiDeviceInfo)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.input.InputManagerService: long notifyANR(com.android.server.input.InputApplicationHandle,com.android.server.input.InputWindowHandle,java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: int checkAddPermission(android.view.WindowManager$LayoutParams,int[])>": [
  "android.permission.SYSTEM_ALERT_WINDOW"
 ], 
 "<com.android.nfc.cardemulation.PreferredServices$Callback: void onPreferredForegroundServiceChanged(android.content.ComponentName)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.view.IWindowManager$Stub$Proxy: void getBaseDisplaySize(int,android.graphics.Point)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.IccCard: void changeIccLockPassword(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accounts.AccountManagerService: void access$200(com.android.server.accounts.AccountManagerService,android.content.Intent)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.accounts.AccountManager$4: void doWork()>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.server.LocationManagerService: android.location.Location getLastLocation(android.location.LocationRequest,java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.telephony.SmsManager: void sendDataMessage(java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS"
 ], 
 "<android.filterpacks.imageproc.ToRGBAFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.notification.NextAlarmConditionProvider: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.admin.IDevicePolicyManager: boolean isApplicationHidden(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.tv.TvInputService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.IContentService: boolean getMasterSyncAutomatically()>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GsmInboundSmsHandler: void handleInjectSms(android.os.AsyncResult)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getMsisdn()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.TextServicesManagerService: android.view.textservice.SpellCheckerInfo[] getEnabledSpellCheckers()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.bluetooth.IBluetoothManager$Stub: void unregisterAdapter(android.bluetooth.IBluetoothManagerCallback)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.filterpacks.base.GLTextureTarget: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.LauncherActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.base.FrameFetch: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.test.mock.MockApplication: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.nfc.tech.Ndef: void reconnect()>": [
  "android.permission.NFC"
 ], 
 "<android.app.ActivityView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.backup.BackupManagerService$Lifecycle: void onStartUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.effect.effects.VignetteEffect: void release()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.hardware.location.GeofenceHardwareImpl: void reportGeofencePauseStatus(int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager$1: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void queryTTYMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.IWifiManager: android.os.Messenger getWifiServiceMessenger()>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.service.dreams.DreamManagerInternal: void stopDream(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityStackSupervisor: void onDisplayAdded(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.RI: void setPreferredVoicePrivacy(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void getGsmBroadcastConfig(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.PlatLogoActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.textservice.ITextServicesManager: void setCurrentSpellChecker(java.lang.String,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.print.IPrintManager$Stub: java.util.List getInstalledPrintServices(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.MediaFocusControl: void dispatchMediaKeyEvent(android.view.KeyEvent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityManagerService: boolean startUserInForeground(int,android.app.Dialog)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.filterpacks.imageproc.BitmapOverlayFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.nfc.INfcTag$Stub: int getTimeout(int)>": [
  "android.permission.NFC"
 ], 
 "<android.filterpacks.imageproc.BitmapOverlayFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.RedEyeFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.NfcService$TagService: int connect(int,int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void setImsRegistrationState(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.service.trust.TrustAgentService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.ims.ImsCall$Listener: void onCallStarted(com.android.ims.ImsCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.NfcApplication: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.content.SyncManager: void access$1300(com.android.server.content.SyncManager,com.android.server.content.SyncManager$ActiveSyncContext,android.content.SyncResult)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.am.ActivityStackSupervisor: void comeOutOfSleepIfNeededLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.uicc.UiccCardApplication: void <init>(com.android.internal.telephony.uicc.UiccCard,com.android.internal.telephony.uicc.IccCardApplicationStatus,android.content.Context,com.android.internal.telephony.CommandsInterface)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.INfcTag: int ndefWrite(int,android.nfc.NdefMessage)>": [
  "android.permission.NFC"
 ], 
 "<android.app.LauncherActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine: void sendThisDeviceChangedBroadcast()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void nvResetConfig(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.IntentService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.media.IAudioService: void setSpeakerphoneOn(boolean)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.server.updates.SmsShortCodesInstallReceiver: java.security.cert.X509Certificate access$000(com.android.server.updates.ConfigUpdateInstallReceiver,android.content.ContentResolver)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void <init>(com.android.internal.telephony.cdma.CDMALTEPhone)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.service.media.MediaBrowserService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.sip.SipService$SipKeepAliveProcessCallback: void onResponse(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.effect.effects.TintEffect: void release()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void queueNextSignalStrengthPoll()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.widget.ScrollView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.location.ILocationManager$Stub: void clearTestProviderStatus(java.lang.String)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.server.accessibility.TouchExplorer: void handleMotionEventStateDragging(android.view.MotionEvent,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.os.storage.ExternalStorageFormatter: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.BatteryService: void update(android.os.BatteryProperties)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry$Stub: void notifyDataConnectionFailed(java.lang.String,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.trust.TrustManagerService$3: void onPackageRemoved(java.lang.String,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.GrantCredentialsPermissionActivity: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.RI: void queryTTYMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.uicc.RuimFileHandler: void loadEFLinearFixed(int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.telephony.TelephonyManager: java.lang.String getMsisdn(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.filterpacks.imageproc.FixedRotationFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.ClosedCaptionWidget: void onDetachedFromWindow()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.P2pLinkManager$ConnectTask: void onPostExecute(java.lang.Object)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: void setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.content.SyncManager$ActiveSyncContext: void onFinished(android.content.SyncResult)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.accounts.IAccountManager$Stub: java.lang.String getPassword(android.accounts.Account)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<android.app.ExpandableListActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.os.IDropBoxManagerService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.Phone: void queryAvailableBandMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.IMediaHTTPConnection$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.INTERNET"
 ], 
 "<android.app.IBackupAgent$Stub$Proxy: void doRestoreFile(android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getOperator(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager: boolean isLockTaskPermitted(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.ActivityManagerService: void bootAnimationComplete()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.NfcService$EnableDisableTask: boolean disableInternal()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.NsdService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.ConfirmConnectToWifiNetworkActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager: boolean enableCdmaBroadcastRange(int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.view.IWindowManager: android.graphics.Bitmap screenshotApplications(android.os.IBinder,int,int,int,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.provider.Browser: void clearSearches(android.content.ContentResolver)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS"
 ], 
 "<android.widget.DatePickerCalendarDelegate: void updateDisplay(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.view.IInputMethodManager$Stub: boolean switchToLastInputMethod(android.os.IBinder)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.TabActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: void removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.server.trust.TrustManagerService: void access$1200(com.android.server.trust.TrustManagerService,android.app.trust.ITrustListener)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void notifyDataConnection(java.lang.String,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void invokeOemRilRequestStrings(java.lang.String[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ISms: void sendMultipartTextForSubscriber(int,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>": [
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevicePlayback: void queryDisplayStatus(android.hardware.hdmi.IHdmiControlCallback)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.InputMethodManagerService: java.util.List getEnabledInputMethodList()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accounts.AccountManagerService: void checkAuthenticateAccountsPermission(android.accounts.Account)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.server.sip.SipService: boolean isOpened(java.lang.String)>": [
  "android.permission.USE_SIP"
 ], 
 "<android.speech.IRecognitionService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<android.widget.CheckBox: void access$200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.RI: void getVoiceRadioTechnology(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.AccountManager: android.accounts.AccountManagerFuture hasFeatures(android.accounts.Account,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.RI: void supplyIccPuk(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActiveServices: android.content.ComponentName startServiceLocked(android.app.IApplicationThread,android.content.Intent,java.lang.String,int,int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: java.util.List getAllCellInfo()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void hangup(com.android.internal.telephony.imsphone.ImsPhoneCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.print.IPrintManager$Stub$Proxy: void validatePrinters(java.util.List,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setNetworkSelectionModeManual(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.IWindowManager$Stub: void statusBarVisibilityChanged(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean isRemovingAdmin(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<java.net.HttpURLConnection: void connect()>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.server.power.PowerManagerService$BinderService: void releaseWakeLock(android.os.IBinder,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.NsdService: android.os.Messenger getMessenger()>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.server.location.FlpHardwareProvider: com.android.server.location.FlpHardwareProvider getInstance(android.content.Context)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: void registerForScanModeChange()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.media.MediaFocusControl: void filterVoiceInputKeyEvent(android.view.KeyEvent,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityStackSupervisor: void activitySleptLocked(com.android.server.am.ActivityRecord)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.policy.impl.GlobalActions: com.android.internal.policy.impl.GlobalActions$GlobalActionsDialog createDialog()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.net.NetworkStatsService: void systemReady()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.location.SettingInjectorService: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: boolean getDataOnRoamingEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.SaturateFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void updatePhoneObject()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.server.backup.FullBackupJob: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.RI: void getSmscAddress(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void setBandMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.uicc.IccFileHandler: void updateEFLinearFixed(int,int,byte[],java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void handleSupplicantConnectionLoss()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.AccountManager$Future2Task: void startTask()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.app.UiAutomationConnection: void shutdown()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.IWallpaperManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SET_WALLPAPER_HINTS", 
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getIsimImpi()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.BlendFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.filterpacks.numeric.SinWaveFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.service.voice.VoiceInteractionSessionService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: void removeAccount(android.accounts.IAccountManagerResponse,android.accounts.Account,boolean)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void shutdownRadio()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.view.ContextThemeWrapper: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void supplyIccPuk(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void setBandMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.SimpleImageFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.TelephonyRegistry: void notifySignalStrength(android.telephony.SignalStrength)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.AccountManager: android.accounts.Account[] getAccountsByTypeAsUser(java.lang.String,android.os.UserHandle)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.filterpacks.ui.SurfaceTargetFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void getAvailableNetworks(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.tech.Ndef: void close()>": [
  "android.permission.NFC"
 ], 
 "<com.google.android.mms.util.PduCache: android.net.Uri normalizeKey(android.net.Uri)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.filterpacks.imageproc.ToRGBAFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.textservice.ITextServicesManager$Stub: android.view.textservice.SpellCheckerInfo[] getEnabledSpellCheckers()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.VignetteFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiStateMachine$SoftApStartedState: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.test.InstrumentationTestRunner: void finish(int,android.os.Bundle)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.power.PowerManagerService$BinderService: void updateWakeLockUids(android.os.IBinder,int[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.MultiAutoCompleteTextView: boolean access$1200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setAccountManagementDisabled(android.content.ComponentName,java.lang.String,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.dreams.DreamManagerService: void access$600(com.android.server.dreams.DreamManagerService)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.service.carrier.CarrierMessagingService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.test.mock.MockContentResolver: void setMasterSyncAutomaticallyAsUser(boolean,int)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.commands.svc.Svc: void main(java.lang.String[])>": [
  "android.permission.WRITE_SETTINGS", 
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.hdmi.HdmiControlService: void queryDisplayStatus(android.hardware.hdmi.IHdmiControlCallback)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.CropRectFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.Connection dial(java.lang.String,int,com.android.internal.telephony.UUSInfo)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: boolean getDataRoamingEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterfw.core.FieldPort: void setFrame(android.filterfw.core.Frame)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.base.GLTextureSource: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.AudioManager: void setMode(int)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: int getSelectedInputMethodSubtypeHashCode()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager: boolean getCrossProfileCallerIdDisabledForUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.test.mock.MockContentResolver: boolean getSyncAutomaticallyAsUser(android.accounts.Account,java.lang.String,int)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.printservice.PrintService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void access$300(com.android.internal.policy.impl.PhoneWindowManager)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void getPreferredNetworkType(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void stopDtmf(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.P2pEventManager: void onP2pNfcTapRequested()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.uicc.IccFileHandler: void loadEFTransparent(int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: android.net.Uri writeInboxMessage(android.content.Intent)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.hdmi.SystemAudioAutoInitiationAction: void handleTimerEvent(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.INfcTag$Stub$Proxy: boolean isNdef(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.ISms$Stub$Proxy: int getPremiumSmsPermission(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.CoreSettingsObserver: void populateSettings(android.os.Bundle,java.util.Map)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.SubscriptionController: int getSlotId(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.Editor$SelectionStartHandleView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean installKeyPair(android.content.ComponentName,byte[],byte[],java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void flashAndSetGenericTrue()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.LauncherActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.base.CallbackFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: boolean cleanUpAllConnections(boolean,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.RI: void getCLIR(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void getNetworkSelectionMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accessibility.TouchExplorer$ExitGestureDetectionModeDelayed: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wm.WindowStateAnimator: void destroySurfaceLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.VibratorService$SettingsObserver: void onChange(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.handover.PeripheralHandoverService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.test.mock.MockApplication: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.display.DisplayPowerController$ScreenOnUnblocker: void onScreenOn()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.media.MediaFocusControl$NotificationListenerObserver: void <init>(android.media.MediaFocusControl)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.wifi.WifiManager: boolean addToBlacklist(java.lang.String)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.location.ILocationManager$Stub: void requestLocationUpdates(android.location.LocationRequest,android.location.ILocationListener,android.app.PendingIntent,java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.commands.am.Am: void runKill()>": [
  "android.permission.RESTART_PACKAGES", 
  "android.permission.KILL_BACKGROUND_PROCESSES"
 ], 
 "<com.android.internal.telephony.dataconnection.DctController$TelephonyNetworkFactory: void evalPendingRequest()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiStateMachine$ConnectedState: boolean processMessage(android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.NativeActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.usb.UsbService$Lifecycle: void onSwitchUser(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getIsimIst()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.ActivityManagerService: boolean access$400(com.android.server.am.ActivityManagerService,java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.base.FrameSource: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.tv.TvInputInfo$TvInputSettings: java.lang.String getCustomLabel(android.content.Context,java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.view.menu.IconMenuItemView: void access$200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.NegativeFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.IWifiManager$Stub: java.util.List getChannelList()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.print.PrintManagerService$PrintManagerImpl: java.util.List getEnabledPrintServices(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.os.IPowerManager: void acquireWakeLockWithUid(android.os.IBinder,int,java.lang.String,java.lang.String,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.TableLayout: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.NfcApplication: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.INetworkScoreService$Stub: void disableScoring()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.IBackupAgent$Stub$Proxy: void doBackup(android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.commands.monkey.MonkeySourceNetwork: void startServer()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.notification.RankingReconsideration: void run()>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.usb.UsbSettingsManager$MyPackageMonitor: void onSomePackagesChanged()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.accessibility.IAccessibilityManager$Stub: void unregisterUiTestAutomationService(android.accessibilityservice.IAccessibilityServiceClient)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.ContentResolver: void setMasterSyncAutomatically(boolean)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.ToPackedGrayFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.SMSDispatcher: void sendRetrySms(com.android.internal.telephony.SMSDispatcher$SmsTracker)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SMS"
 ], 
 "<android.app.ActivityManagerNative: void handleApplicationCrash(android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.tech.MifareUltralight: int getTimeout()>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.am.ActivityManagerService: void ensureBootCompleted()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getPermittedInputMethods(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipCall: void hangup()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.DockObserver: void onBootPhase(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.content.ContentService: void addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.PhoneProxy: boolean hasMatchedTetherApnSetting()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accounts.AccountManagerService: void removeAccount(android.accounts.IAccountManagerResponse,android.accounts.Account,boolean)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<android.provider.Browser: android.database.Cursor getAllVisitedUrls(android.content.ContentResolver)>": [
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.server.location.GpsLocationProvider: void updateRequirements()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void changeBarringPassword(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver: void populateVisibleWindowsOnScreenLocked(android.util.SparseArray)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void changeIccPin2ForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.InputMethodManagerService$MyPackageMonitor: void onPackageRemoved(java.lang.String,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.WifiManager: int getWifiState()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.hardware.Camera: android.hardware.Camera open()>": [
  "android.permission.CAMERA"
 ], 
 "<com.android.server.content.ContentService: boolean getMasterSyncAutomatically()>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.nfc.tech.IsoDep: void reconnect()>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: long getGlobalAlertBytes(long)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.cardemulation.PreferredServices: boolean setDefaultForNextTap(android.content.ComponentName)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.test.ActivityUnitTestCase$MockParent: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void setRadioPower(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void sendDtmf(char)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.base.ObjectSource: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setGsmBroadcastConfig(com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.accessibility.CaptioningManager: android.view.accessibility.CaptioningManager$CaptionStyle getUserStyle()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.ToggleButton: boolean performLongClick()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.TextClock: boolean shouldSpeakPasswordsForAccessibility()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.WindowManagerPolicy: long interceptKeyBeforeDispatching(android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiWatchdogStateMachine: boolean getSettingsGlobalBoolean(android.content.ContentResolver,java.lang.String,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.Phone: void updatePhoneObject(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.server.LocationManagerService$Receiver: void access$1500(com.android.server.LocationManagerService$Receiver)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.ActionBarContextView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.inputmethodservice.ExtractButton: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.inputmethodservice.InputMethodService: void onConfigurationChanged(android.content.res.Configuration)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.os.IPowerManager$Stub: void acquireWakeLockWithUid(android.os.IBinder,int,java.lang.String,java.lang.String,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: boolean setOperatorBrandOverride(java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.media.AudioManager: void setParameters(java.lang.String)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.net.sip.SipAudioCall: void releaseWifiHighPerfLock()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmConnection: void cancelPostDial()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void wipeDeviceOrUserLocked(boolean,int,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void getCallWaiting(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.RadioButton: boolean performLongClick()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.accounts.IAccountManager$Stub: void removeAccountAsUser(android.accounts.IAccountManagerResponse,android.accounts.Account,boolean,int)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: int addOrUpdateNetwork(android.net.wifi.WifiConfiguration)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.widget.Editor$SelectionEndHandleView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: int getPasswordHistoryLength(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.location.LocationManager: void setTestProviderLocation(java.lang.String,android.location.Location)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<android.content.Context: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.notification.DowntimeConditionProvider: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevice: boolean dispatchMessage(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.RemoteViewsService: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ISub$Stub$Proxy: int addSubInfoRecord(java.lang.String,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.internal.telephony.RI: void switchToRadioState(com.android.internal.telephony.CommandsInterface$RadioState)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.Connection dial(java.lang.String,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: int getPasswordMinimumLength(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.widget.FaceUnlockView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.media.effect.effects.SharpenEffect: void release()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.text.StringLogger: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingEncryptedRfcommOn(int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.filterfw.core.GraphRunner: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.cat.CatService: void handleRilMsg(com.android.internal.telephony.cat.RilMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.IActivityManager: boolean handleApplicationWtf(android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport$CrashInfo)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.SpeechRecognizer: void access$100(android.speech.SpeechRecognizer)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<android.filterpacks.base.FrameStore: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.trust.TrustManagerService: void requireCredentialEntry(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone getCdmaPhone(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.internal.widget.ILockSettings$Stub$Proxy: boolean checkPassword(java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.DigitalClock: boolean shouldSpeakPasswordsForAccessibility()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.SearchView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.Phone: void setCdmaSubscription(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.cardemulation.HostApduService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.speech.IRecognitionService: void cancel(android.speech.IRecognitionListener)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.internal.telephony.PhoneBase: void setPreferredNetworkType(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.INfcTag: boolean isNdef(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.am.ActivityRecord: void windowsVisible()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: void hangupForegroundResumeBackground()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.provider.Settings$System: boolean getShowGTalkServiceStatusForUser(android.content.ContentResolver,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.dreams.DreamService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.nfc.NfcService$EnableDisableTask: java.lang.Void doInBackground(java.lang.Integer[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.RI: void access$700(com.android.internal.telephony.RI,int,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.handover.PeripheralHandoverService: int onStartCommand(android.content.Intent,int,int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.gsm.GsmSMSDispatcher: void sendSubmitPdu(com.android.internal.telephony.SMSDispatcher$SmsTracker)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.wifi.WifiAutoJoinController: void linkQualitySignificantChange()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker$2: void onChange(boolean)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void setAndBroadcastNetworkSetTimeZone(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void onDisconnectDone(int,android.os.AsyncResult)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.IWindowManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.DISABLE_KEYGUARD", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.RI: void dial(java.lang.String,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterfw.core.FilterFunction: void tearDown()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.WindowManagerService: void updateStatusBarVisibilityLocked(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void hangupAllConnections(com.android.internal.telephony.cdma.CdmaCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.DialogTitle: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.NativeCrashListener: void consumeNativeCrashData(java.io.FileDescriptor)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.test.mock.MockContentResolver: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void setInternalDataEnabled(boolean,android.os.Message)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.tts.TextToSpeechService: java.lang.String[] getSettingsLocale()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.display.AutomaticBrightnessController$Callbacks: void updateBrightness()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void nvWriteCdmaPrl(byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoController: java.lang.String getLine1AlphaTag()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.telephony.TelephonyManager: java.lang.String getSubscriberId(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.ISub$Stub$Proxy: int getPhoneId(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ISub$Stub$Proxy: int getActiveSubInfoCount()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.app.IActivityManager: java.util.List getTasks(int,int)>": [
  "android.permission.GET_TASKS"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void unregisterForSuppServiceNotification(android.os.Handler)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.NfcAdapter: boolean enableNdefPush()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.accounts.ChooseAccountTypeActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.app.ExternalMediaFormatActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.DocumentaryFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void queryCdmaRoamingPreference(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.handover.PeripheralHandoverService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.sip.SipService$SipAutoReg: void onError(int,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.notification.DowntimeConditionProvider: android.service.notification.Condition createCondition(android.service.notification.ZenModeConfig$DowntimeInfo,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.NetworkScoreManager: void disableScoring()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiStateMachine$VerifyingLinkState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.backup.IRestoreSession: int getAvailableRestoreSets(android.app.backup.IRestoreObserver)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmCall: void hangup()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.videosrc.SurfaceTextureTarget: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.Ringtone: void setAudioAttributes(android.media.AudioAttributes)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.backup.BackupManagerService$Lifecycle: void onSwitchUser(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.print.PrintManagerService$PrintManagerImpl: void <init>(com.android.server.print.PrintManagerService,android.content.Context)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wm.AccessibilityController: void onWindowFocusChangedNotLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.GrainFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.tech.MifareClassic: byte[] transceive(byte[])>": [
  "android.permission.NFC"
 ], 
 "<android.media.AudioService: boolean updateRingerModeAffectedStreams()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DataConnection: void access$5600(com.android.internal.telephony.dataconnection.DataConnection,java.lang.Object)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.notification.NextAlarmConditionProvider: void onSubscribe(android.net.Uri)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.handover.BluetoothPeripheralHandover: void nextStepInit()>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean notifySignalStrength()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.widget.AppSecurityPermissions$PermissionItemView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.ethernet.EthernetNetworkFactory$LocalNetworkFactory: void needNetworkFor(android.net.NetworkRequest,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.text.StringLogger: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.effect.effects.DocumentaryEffect: void release()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager: int setStorageEncryption(android.content.ComponentName,boolean,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.notification.DowntimeConditionProvider: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.sip.SipAudioCall: void close()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.ZoomButton: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accessibility.TouchExplorer: void handleMotionEventStateTouchExploring(android.view.MotionEvent,android.view.MotionEvent,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GsmConnection: void separate()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.ILockSettings$Stub: void setLockPassword(java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.display.DisplayManagerService$LocalService$1: void requestDisplayState(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.SmsBroadcastUndelivered: void scanRawTable()>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.app.IntentForwarderActivity: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.SyncActivityTooManyDeletes: void startSyncUndoDeletes()>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.app.Application: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void queryTTYMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.voiceinteraction.SoundTriggerHelper: void internalClearStateLocked()>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.filterpacks.imageproc.ToPackedGrayFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.widget.DateTimeView$ReceiverInfo$2: void onChange(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.AudioManager: boolean isWiredHeadsetOn()>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.DrawRectFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.DockObserver: void access$100(com.android.server.DockObserver)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.NfcService: void <init>(android.app.Application)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<android.widget.MediaController: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void systemRunning(boolean)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.widget.PasswordEntryKeyboardView: boolean onLongPress(android.inputmethodservice.Keyboard$Key)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: boolean setLine1Number(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accounts.AccountManagerService: void hasFeatures(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String[])>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: void onRotationChangedLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.FisheyeFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.filterpacks.imageproc.SharpenFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.location.ILocationManager$Stub: void clearTestProviderEnabled(java.lang.String)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.internal.widget.LinearLayoutWithDefaultTouchRecepient: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.provider.BrowserContract$Settings: boolean isSyncEnabled(android.content.Context)>": [
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<android.net.wifi.WifiManager: boolean startLocationRestrictedScan(android.os.WorkSource)>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.provider.Telephony$Mms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[])>": [
  "android.permission.READ_SMS"
 ], 
 "<android.media.MediaPlayer: void access$900(android.media.MediaPlayer,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void queryAvailableBandMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.location.GpsLocationProvider: void handleDownloadXtraData()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.INfcTag$Stub$Proxy: int connect(int,int)>": [
  "android.permission.NFC"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void enforceCanManageCaCerts(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: void handlePollCalls(android.os.AsyncResult)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.tech.NfcA: void close()>": [
  "android.permission.NFC"
 ], 
 "<android.app.backup.BackupAgentHelper: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.AccountManager$9: void doWork()>": [
  "android.permission.USE_CREDENTIALS"
 ], 
 "<android.app.DownloadManager: android.net.Uri getUriForDownloadedFile(long)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.server.accounts.AccountManagerService: void onUserStarted(android.content.Intent)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.app.admin.IDevicePolicyManager: int getKeyguardDisabledFeatures(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.ListActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.Connection dialInternal(java.lang.String,com.android.internal.telephony.UUSInfo,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoController: java.lang.String getGroupIdLevel1()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.power.PowerManagerService: void access$2300(com.android.server.power.PowerManagerService)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wm.WindowManagerService: boolean setTokenVisibilityLocked(com.android.server.wm.AppWindowToken,android.view.WindowManager$LayoutParams,boolean,int,boolean,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void restoreSavedNetworkSelection(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.tech.MifareClassic: void connect()>": [
  "android.permission.NFC"
 ], 
 "<android.app.SearchDialog$SearchBar: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.power.PowerManagerService: void systemReady(com.android.internal.app.IAppOpsService)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.ImageCombineFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.backup.BackupManagerService$RunBackupReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.WindowState: void setAppOpVisibilityLw(boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.NfcBackupAgent: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void handleRadioNotAvailable()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void setScanResults()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.UiccSmsController: int getPremiumSmsPermissionForSubscriber(int,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.MediaPlayer: void scanInternalSubtitleTracks()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.UiccPhoneBookController: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.widget.QuickContactBadge: void assignContactFromPhone(java.lang.String,boolean)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.notification.NotificationManagerService: void onSwitchUser(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.nfc.tech.NfcA: void reconnect()>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.statusbar.IStatusBarService$Stub: void expandNotificationsPanel()>": [
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getGroupIdLevel1()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void conference()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.WindowAnimator: void updateWallpaperLocked(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: android.net.wifi.WifiInfo getConnectionInfo()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.util.StateMachine: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.tv.TvInputService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.IIntentReceiver$Stub: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.PhoneBase: boolean hasMatchedTetherApnSetting()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void dispose()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.IContentService: void setMasterSyncAutomaticallyAsUser(boolean,int)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.nfc.NfcRootActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.hdmi.HdmiControlService: void notifyAddressAllocated(java.util.ArrayList,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.dataconnection.DcAsyncChannel: android.net.NetworkCapabilities getNetworkCapabilitiesSync()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.app.ResolverActivity$1: void onPackageModified(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: android.accounts.Account[] getAccountsByTypeAsUser(java.lang.String,android.os.UserHandle)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.ISms$Stub: boolean disableCellBroadcast(int,int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.hardware.location.IGeofenceHardware$Stub$Proxy: boolean resumeGeofence(int,int,int)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: boolean removeCrossProfileWidgetProvider(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.ActivityManagerService: void updateSleepIfNeededLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.ISub$Stub: void setDefaultSmsSubId(int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void stopDtmf()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.IntentService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.am.ActivityManagerService: void moveTaskBackwards(int)>": [
  "android.permission.REORDER_TASKS"
 ], 
 "<android.nfc.INfcAdapter: void invokeBeam()>": [
  "android.permission.VIBRATE", 
  "android.permission.NFC"
 ], 
 "<android.view.IWindowManager$Stub: void startFreezingScreen(int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.notification.ManagedServices$SettingsObserver: void <init>(com.android.server.notification.ManagedServices,android.os.Handler,com.android.server.notification.ManagedServices$1)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wm.InputMonitor: void notifyLidSwitchChanged(long,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.provider.Settings$System: void getConfigurationForUser(android.content.ContentResolver,android.content.res.Configuration,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiStateMachine$L2ConnectedState: void enter()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.videoproc.BackDropperFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.SubscriptionInfoUpdater: void handleSimLoaded(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.internal.view.menu.ContextMenuBuilder: void changeMenuMode()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.WifiController: void readStayAwakeConditions()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.ChooseAccountTypeActivity: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getIsimDomain()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.preference.PreferenceActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: void explicitCallTransfer()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.ChooseTypeAndAccountActivity: void run(android.accounts.AccountManagerFuture)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine: void access$2600(com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine,boolean)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.nfc.NfcService: void onLlcpLinkDeactivated(com.android.nfc.DeviceHost$NfcDepEndpoint)>": [
  "android.permission.VIBRATE"
 ], 
 "<org.apache.http.impl.client.DefaultHttpClient: void <init>(int)>": [
  "android.permission.INTERNET"
 ], 
 "<android.content.ContextWrapper: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.wm.TaskStack: void detachDisplay()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneBase: void dispose()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.sip.SipAudioCall: void onError(int,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.ListPopupWindow$DropDownListView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.hardware.location.IGeofenceHardware$Stub: boolean pauseGeofence(int,int)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService$Lifecycle: void onStartUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.media.MediaBrowserService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.uicc.IsimFileHandler: void loadEFTransparent(int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ServiceStateTracker: void enableLocationUpdates()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.tv.TvInputManagerService$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.net.NetworkStatsService$NetworkStatsSettings: long getTimeCacheMaxAge()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.CertBlacklister$BlacklistObserver: java.lang.String getValue()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.widget.ActionBarOverlayLayout: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void setCountryCode()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.twilight.TwilightListener: void onTwilightStateChanged()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.location.CountryDetectorBase: void stop()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.Connection dial(java.lang.String,int)>": [
  "android.permission.USE_SIP"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: int enableSystemAppWithIntent(android.content.ComponentName,android.content.Intent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.NfcBackupAgent: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.admin.IDevicePolicyManager: int getPasswordMinimumNonLetter(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.notification.ZenModeHelper$SettingsObserver: void onChange(boolean,android.net.Uri)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean getAutoTime()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.location.LocationManager: java.util.List getProviders(android.location.Criteria,boolean)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.LocationManagerService$Receiver: void binderDied()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.ActivityStack: int resetAffinityTaskIfNeededLocked(com.android.server.am.TaskRecord,com.android.server.am.TaskRecord,boolean,boolean,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.DISABLE_KEYGUARD", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IIccPhoneBook$Stub: java.util.List getAdnRecordsInEf(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void setUserRestriction(android.content.ComponentName,java.lang.String,boolean)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: android.net.wifi.WifiInfo getConnectionInfo()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.widget.QuickContactBadge: void assignContactFromPhone(java.lang.String,boolean,android.os.Bundle)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.media.AudioService: void disconnectBluetoothSco(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.BLUETOOTH"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: void editProperties(android.accounts.IAccountManagerResponse,java.lang.String,boolean)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.IMms$Stub: boolean updateStoredMessageStatus(java.lang.String,android.net.Uri,android.content.ContentValues)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void nvReadItem(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.WifiManager: boolean setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.LocationManagerService: void systemRunning()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.RatingBar: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.PhoneBase: void notifyCellInfo(java.util.List)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IIccPhoneBook$Stub: java.util.List getAdnRecordsInEfForSubscriber(int,int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.RI: void getPDPContextList(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.NfcActivityManager: void enableReaderMode(android.app.Activity,android.nfc.NfcAdapter$ReaderCallback,int,android.os.Bundle)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void getNetworkSelectionMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.SettingInjectorService: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.hdmi.HdmiCecController: void onReceiveCommand(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmSMSDispatcher: void handleStatusReport(android.os.AsyncResult)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmCellBroadcastHandler: boolean handleSmsMessage(android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.DatePicker: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.beam.BeamSendService: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.AccountManager$2: void startTask()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.PhoneBase: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.NegativeFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.cardemulation.CardEmulationManager: void verifyDefaults(int,java.util.List)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.FillLightFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void systemBooted()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo getChild(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.ethernet.EthernetServiceImpl: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.CHANGE_NETWORK_STATE", 
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.InputMethodManagerService: void resetSelectedInputMethodAndSubtypeLocked(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.content.ContentService: int getIsSyncable(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.BitmapSource: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.IWindowManager: void exitKeyguardSecurely(android.view.IOnKeyguardExitResult)>": [
  "android.permission.DISABLE_KEYGUARD"
 ], 
 "<android.os.Vibrator: void vibrate(long)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.accounts.AccountAuthenticatorActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getLine1AlphaTag()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.view.ContextThemeWrapper: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.service.media.MediaBrowserService: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void onSetPolicyDataEnabled(boolean)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.NfcAdapter: void disableForegroundNdefPush(android.app.Activity)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void shutdownRadio()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.telephony.SmsManager: void downloadMultimediaMessage(android.content.Context,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent)>": [
  "android.permission.RECEIVE_MMS"
 ], 
 "<android.location.LocalListenerHelper: boolean add(java.lang.Object)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.util.StateMachine: java.lang.String toString()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.net.NetworkPolicyManagerService: void upgradeLegacyBackgroundData()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.view.menu.ActionMenuItemView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.GlobalActions$Action: void onPress()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.NfcService$TagService: int[] getTechList(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.location.GeofenceManager: void sendIntentEnter(android.app.PendingIntent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.widget.RadioButton: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.UiccCardApplication: void changeIccLockPassword(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture removeAccount(android.accounts.Account,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.server.print.PrintManagerService$PrintManagerImpl: void stopPrinterDiscovery(android.print.IPrinterDiscoveryObserver,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.telephony.TelephonyManager: java.lang.String getVoiceMailAlphaTag()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.app.PlatLogoActivity: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.widget.CheckedTextView: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.WindowManagerPolicy: int finishPostLayoutPolicyLw()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.ActivityManagerService: void finishUserStop(com.android.server.am.UserStartedState)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.server.BluetoothA2dpService: void handleSinkStateChange(android.bluetooth.BluetoothDevice,int,int)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.internal.telephony.RI: void setLocationUpdates(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.provider.Settings$Secure: boolean isLocationProviderEnabled(android.content.ContentResolver,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.DockObserver: void init()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.location.FlpHardwareProvider: void onGeofenceMonitorStatus(int,int,android.location.Location)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void revertToNitzTime()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiApConfigStore$DefaultState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.sip.ISipService: android.net.sip.ISipSession getPendingSession(java.lang.String)>": [
  "android.permission.USE_SIP"
 ], 
 "<android.net.IEthernetManager$Stub: android.net.IpConfiguration getConfiguration()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.widget.ILockSettings$Stub: boolean checkPassword(java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.ActivityManagerService$8: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.content.IContentService$Stub$Proxy: void cancelRequest(android.content.SyncRequest)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.PhoneBase: java.util.List privatizeCellInfoList(java.util.List)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.net.NetworkStatsService$NetworkStatsSettings: long getGlobalAlertBytes(long)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: boolean handleCallDeflectionIncallSupplementaryService(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.print.PrinterDiscoverySession: void finalize()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.base.CallbackFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.NativeCrashListener$NativeCrashReporter: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.provider.Telephony$Sms$Draft: android.net.Uri addMessage(int,android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.nfc.cardemulation.PreferredServices$SettingsObserver: void onChange(boolean,android.net.Uri)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.trust.TrustManagerService: void access$1500(com.android.server.trust.TrustManagerService,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.location.GeofenceManager: void removeFence(android.location.Geofence,android.app.PendingIntent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.nfc.ConfirmConnectToWifiNetworkActivity: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: boolean processPendingRadioPowerOffAfterDataOff()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.MediaFocusControl: void onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.SmsApplication$SmsPackageMonitor: boolean onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.os.UserManager: boolean isUserSwitcherEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void setMasterVolumeMuted(android.content.ComponentName,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ISub: java.util.List getActiveSubscriptionInfoList()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.display.DisplayPowerController: boolean setScreenState(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.notification.ManagedServices$SettingsObserver: void onChange(boolean,android.net.Uri)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setRestrictionsProvider(android.content.ComponentName,android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.widget.LockPatternUtils: int getActivePasswordQuality()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.sip.SipService: android.net.sip.ISipSession createSession(android.net.sip.SipProfile,android.net.sip.ISipSessionListener)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getIccSerialNumberForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.app.Activity: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.ImageSlicer: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void handleCdmaSubscriptionSource(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.AlarmManagerService: void onStart()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.telephony.SubscriptionManager: android.telephony.SubscriptionInfo getActiveSubscriptionInfoForSimSlotIndex(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: int setStorageEncryption(android.content.ComponentName,boolean,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.power.PowerManagerService: void access$2700(com.android.server.power.PowerManagerService,com.android.server.power.PowerManagerService$WakeLock)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.provider.ContactsContract$Groups$EntityIteratorImpl: android.content.Entity next()>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.view.ViewRootImpl: void setView(android.view.View,android.view.WindowManager$LayoutParams,android.view.View)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.SYSTEM_ALERT_WINDOW", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.NfcService: void onRemoteEndpointDiscovered(com.android.nfc.DeviceHost$TagEndpoint)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void sendCdmaSms(byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumLetters(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.Chronometer: void access$200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.P2pLinkManager: void onManualBeamInvoke(android.nfc.BeamShareData)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.ISub$Stub: int getDefaultVoiceSubId()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void getSmscAddress(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService$4: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneSubInfo: java.lang.String getSubscriberId()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void <init>(java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.widget.LockPatternUtils: long getLong(java.lang.String,long)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.preference.VolumePreference: void onBindDialogView(android.view.View)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.WifiController$StaEnabledState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.hdmi.PowerStatusMonitorAction: void addAndStartAction(com.android.server.hdmi.HdmiCecFeatureAction)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: boolean updateCurrentCarrierInProvider(java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void onCleanUpConnection(boolean,int,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getPermittedInputMethods(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCall: void merge(com.android.internal.telephony.imsphone.ImsPhoneCall,com.android.internal.telephony.Call$State)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.base.CallbackFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.input.InputManagerService: int interceptMotionBeforeQueueingNonInteractive(long,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.DeviceDiscoveryAction: void queryVendorId(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityManagerService: void onWakefulnessChanged(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.twilight.TwilightService$LocationHandler: void enableLocationUpdates()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.service.notification.NotificationListenerService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void addCrossProfileIntentFilter(android.content.ComponentName,android.content.IntentFilter,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.tech.Ndef: void connect()>": [
  "android.permission.NFC"
 ], 
 "<android.app.ExpandableListActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.telephony.SubscriptionManager: void setDefaultDataSubId(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.ToGrayFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ActivityView$ActivityContainerWrapper: void finalize()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cat.IconLoader: void startLoadingIcon(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.AccountManager: android.accounts.AccountManagerFuture renameAccount(android.accounts.Account,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void setCellInfoListRate(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.RadioButton: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getCurrentFailedPasswordAttempts(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.Activity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.view.inputmethod.InputMethodManager: java.util.Map getShortcutInputMethodsAndSubtypes()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.NfcRootActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.webkit.WebViewFactory: void onWebViewUpdateInstalled()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.os.IPowerManager: void acquireWakeLock(android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.IContentService$Stub: void setMasterSyncAutomaticallyAsUser(boolean,int)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.server.hdmi.HdmiCecFeatureAction: void handleTimerEvent(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.widget.DialogTitle: void access$200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: int getPasswordQuality(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.GlobalActions: void handleShow()>": [
  "android.permission.VIBRATE", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.SEND_SMS", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.WebVttRenderingWidget: void onDetachedFromWindow()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wm.WindowManagerService: void <init>(android.content.Context,com.android.server.input.InputManagerService,boolean,boolean,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: int getOrientationFromWindowsLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.Invert: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.FlipFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.ContentResolver: void addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: void reconnect()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.app.IBackupAgent: void doRestoreFile(android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.RI: void getLastPdpFailCause(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void rejectCall()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.ChooseAccountActivity: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.CallTracker: void handleRadioAvailable()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.AlertActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: java.lang.String toString()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.NumberPicker$CustomEditText: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.wifi.IWifiManager: int getVerboseLoggingLevel()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin getActiveAdminUncheckedLocked(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.backup.BackupAgent: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.widget.TextClock: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void setBandMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accounts.AccountManagerService: void confirmCredentialsAsUser(android.accounts.IAccountManagerResponse,android.accounts.Account,android.os.Bundle,boolean,int)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin getProfileOwnerAdmin(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.pm.PackageManagerService$InstallArgs: boolean checkFreeStorage(com.android.internal.app.IMediaContainerService)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.commands.bmgr.Bmgr: void doListRestoreSets()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.commands.uiautomator.DumpCommand: void run(java.lang.String[])>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.CalendarViewLegacyDelegate: void setMonthDisplayed(java.util.Calendar)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.IProcessObserver$Stub$Proxy: void onProcessDied(int,int)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void notifyLidSwitchChanged(long,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.preference.PreferenceActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.am.ActiveServices: void processStartTimedOutLocked(com.android.server.am.ProcessRecord)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.BlendFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.ConfirmConnectToWifiNetworkActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.ChooseTypeAndAccountActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.am.ActivityManagerService: void skipCurrentReceiverLocked(com.android.server.am.ProcessRecord)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.ActivityManagerNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.REORDER_TASKS", 
  "android.permission.KILL_BACKGROUND_PROCESSES", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.GET_TASKS", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.RESTART_PACKAGES", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.TimePicker: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.InputMethodManagerService: void access$1000(com.android.server.InputMethodManagerService,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.hardware.location.IGeofenceHardware: boolean unregisterForMonitorStateChangeCallback(int,android.hardware.location.IGeofenceHardwareMonitorCallback)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.app.job.JobService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void getNetworkSelectionMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accessibility.ScreenMagnifier: float access$1100(com.android.server.accessibility.ScreenMagnifier)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.ActivityStack: android.app.ActivityOptions resetTargetTaskIfNeededLocked(com.android.server.am.TaskRecord,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.DISABLE_KEYGUARD", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.SepiaFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.UiccSmsController: void setPremiumSmsPermissionForSubscriber(int,java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiApConfigStore: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.sip.SipAudioCall: void endCall()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.input.InputManagerService: void systemRunning()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.SystemAudioActionFromAvr: void startAudioStatusAction()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void interceptPowerKeyUp(android.view.KeyEvent,boolean,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.IccCardProxy: void processLockedState()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IMms$Stub: android.net.Uri importMultimediaMessage(java.lang.String,android.net.Uri,java.lang.String,long,boolean,boolean)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.app.RestrictionsPinActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.InputMonitor: long interceptKeyBeforeDispatching(com.android.server.input.InputWindowHandle,android.view.KeyEvent,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accessibility.AccessibilityInputFilter: void enableFeatures()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.policy.impl.PhoneWindow$DecorView: void onAttachedToWindow()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.UiccSmsController: boolean enableCellBroadcastForSubscriber(int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.server.accessibility.ScreenMagnifier: void resetMagnificationIfNeeded()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.SpeechRecognizer: void access$000(android.speech.SpeechRecognizer,android.content.Intent)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.server.accounts.AccountManagerService: void invalidateAuthToken(java.lang.String,java.lang.String)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService$AccessibilityContentObserver: void <init>(com.android.server.accessibility.AccessibilityManagerService,android.os.Handler)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void updateCdmaSubscription()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: java.util.List getAllCellInfo()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.NfcAdapter: void enableForegroundNdefPush(android.app.Activity,android.nfc.NdefMessage)>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService$UserState: void onSwitchToAnotherUser()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.NsdService$NsdStateMachine: java.lang.String toString()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.ImageCombineFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.trust.TrustManagerService: void access$2000(com.android.server.trust.TrustManagerService,com.android.internal.widget.LockPatternUtils,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IIccPhoneBook: java.util.List getAdnRecordsInEf(int)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<android.filterfw.core.Filter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.net.NetworkPolicyManagerService: void setNetworkPolicies(android.net.NetworkPolicy[])>": [
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.test.ModelInterpreter: void <init>(java.net.InetSocketAddress)>": [
  "android.permission.INTERNET"
 ], 
 "<android.net.wifi.WifiManager: boolean requestBatchedScan(android.net.wifi.BatchedScanSettings)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_MULTICAST_STATE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.filterpacks.base.FrameFetch: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.ChooseAccountTypeActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: boolean setRoamingOverride(java.util.List,java.util.List,java.util.List,java.util.List)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.content.IContentService: android.content.SyncStatusInfo getSyncStatusAsUser(android.accounts.Account,java.lang.String,android.content.ComponentName,int)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: boolean isRemovingAdmin(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.trust.TrustAgentService: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.VignetteFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void sendImsGsmSms(java.lang.String,java.lang.String,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.WifiManager: boolean isP2pSupported()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setAutoTimeRequired(android.content.ComponentName,int,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void handleShortPressOnHome()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.NegativeFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityStackSupervisor: void pauseChildStacks(com.android.server.am.ActivityRecord,boolean,boolean,boolean,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.cardemulation.DefaultRemovedActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.notification.ConditionProviders: void onBootPhaseAppsCanStart()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.SmsApplication: void setDefaultApplicationInternal(java.lang.String,android.content.Context,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.RI: void getNetworkSelectionMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.print.IPrintManager: void destroyPrinterDiscoverySession(android.print.IPrinterDiscoveryObserver,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoController: java.lang.String getImeiForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.connectivity.Tethering$TetherInterfaceSM$InitialState: void enter()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: void setWifiApConfiguration(android.net.wifi.WifiConfiguration)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.LocationManagerService: void loadProvidersLocked()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.net.IEthernetManager$Stub: void removeListener(android.net.IEthernetServiceListener)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.text.method.MultiTapKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.Phone: void setCellInfoListRate(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.tech.BasicTagTechnology: void reconnect()>": [
  "android.permission.NFC"
 ], 
 "<android.filterpacks.imageproc.ImageCombineFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ISub$Stub$Proxy: int getSimStateForSubscriber(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.SubscriptionController: java.util.List getAllSubInfoList()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket createNewRfcommSocketAndRecord(java.lang.String,java.util.UUID,boolean,boolean)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.nfc.NfcService$EnableDisableTask: java.lang.Object doInBackground(java.lang.Object[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.widget.LockPatternUtils: boolean addAppWidget(int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.VideoView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.WifiManager: void setAllowScansWithTraffic(int)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void onDataConnectionDetached()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.IBluetoothManager$Stub: boolean enableNoAutoConnect()>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.SubscriptionController: java.util.List getSubInfo(java.lang.String,java.lang.Object)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long,long,long,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.ActivityChooserModel$DataModelPackageMonitor: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.commands.bmgr.Bmgr: void run(java.lang.String[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void access$4000(com.android.server.wifi.WifiStateMachine,int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.nfc.NfcService$NfcAdapterService: void verifyNfcPermission()>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: com.android.server.net.NetworkStatsService$NetworkStatsSettings$Config getUidTagConfig()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: void handleRadioAvailable()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityStack: void awakeFromSleepingLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.videosrc.SurfaceTextureTarget: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void acceptCall(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.BluetoothPan: void <init>(android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.wifi.WifiController$DeviceInactiveState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.print.PrinterDiscoverySession: void stopPrinterStateTracking(android.print.PrinterId)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ISms$Stub$Proxy: boolean enableCellBroadcastForSubscriber(int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifySignalStrength(android.telephony.SignalStrength)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.accounts.AccountManagerService: void removeAccountAsUser(android.accounts.IAccountManagerResponse,android.accounts.Account,boolean,int)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.server.LockSettingsService: boolean checkVoldPassword(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.Service: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: void acceptCall()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor: void onSomePackagesChanged()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.preference.PreferenceFrameLayout: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: boolean pingSupplicant()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.media.effect.effects.SaturateEffect: void apply(int,int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void addCrossProfileIntentFilter(android.content.ComponentName,android.content.IntentFilter,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.DocumentaryFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.base.NullFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void setSmscAddress(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.pm.PackageManagerService$InstallParams: void handleStartCopy()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.Presentation$1: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.nfc.cardemulation.DefaultRemovedActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.hardware.display.DisplayManagerInternal: boolean requestPowerState(android.hardware.display.DisplayManagerInternal$DisplayPowerRequest,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.IActivityContainer$Stub: void release()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.cardemulation.RegisteredAidCache: void onPreferredForegroundServiceChanged(android.content.ComponentName)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.media.WebVttRenderingWidget$SpanLayout: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.tech.IsoDep: byte[] transceive(byte[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.ISms$Stub$Proxy: boolean enableCellBroadcast(int,int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.server.wifi.WifiController$EcmState: boolean processMessage(android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.SubscriptionController: int setCarrierText(java.lang.String,int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.input.InputManagerService$WiredAccessoryCallbacks: void notifyWiredAccessoryChanged(long,int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord startProcessLocked(java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName,boolean,boolean,int,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.Runnable)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void setPropertiesByCarrier()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.SubscriptionController: int[] getSubId(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CallManager: void acceptCall(com.android.internal.telephony.Call)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.HdmiControlService: void disableDevices(com.android.server.hdmi.HdmiCecLocalDevice$PendingActionClearedCallback)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ReceiverRestrictedContext: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipConnection$1: void onCallEstablished(android.net.sip.SipAudioCall)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture getAuthTokenLabel(java.lang.String,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.uiautomator.testrunner.UiAutomatorTestRunner: void start()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.NfcService$NfcAdapterService: void setForegroundDispatch(android.app.PendingIntent,android.content.IntentFilter[],android.nfc.TechListParcel)>": [
  "android.permission.NFC"
 ], 
 "<android.content.IContentService$Stub$Proxy: void setSyncAutomaticallyAsUser(android.accounts.Account,java.lang.String,boolean,int)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.widget.CalendarViewLegacyDelegate: void goTo(java.util.Calendar,boolean,boolean,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getDeviceSvn()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getSignalStrength(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.LockPatternUtils: boolean isVisiblePatternEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getDeviceId()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.net.sip.SipManager: void unregister(android.net.sip.SipProfile,android.net.sip.SipRegistrationListener)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.server.notification.DowntimeConditionProvider$2: void onEvaluate(android.app.AlarmManager$AlarmClockInfo,long,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ISms: boolean disableCellBroadcastForSubscriber(int,int,int)>": [
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.internal.widget.SwipeDismissLayout: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.tech.NdefFormatable: byte[] transceive(byte[],boolean)>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.usb.UsbAudioManager: void deviceRemoved(android.hardware.usb.UsbDevice)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GsmSMSDispatcher: void sendSmsByPstn(com.android.internal.telephony.SMSDispatcher$SmsTracker)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SMS"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: void getAccountsByFeatures(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[])>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: boolean setPermittedAccessibilityServices(android.content.ComponentName,java.util.List)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.ReceiverRestrictedContext: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.nfc.beam.BeamSendService: int onStartCommand(android.content.Intent,int,int)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.WakeLockStateMachine: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.RI: void setSmscAddress(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: void setPassword(android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getLine1AlphaTagForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.wifi.WifiStateMachine$InitialState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void changeIccPinForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.NetworkScorerAppManager: boolean setActiveScorer(android.content.Context,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.IActivityManager: void killUid(int,java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: boolean installCaCert(android.content.ComponentName,byte[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ProxyController: void access$800(com.android.internal.telephony.ProxyController,int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.AccountManager: android.accounts.AccountManagerFuture confirmCredentials(android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<android.media.effect.effects.ContrastEffect: void release()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.text.StringLogger: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.net.NetworkPolicyManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.ACCESS_NETWORK_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.app.ListActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void launchAssistLongPressAction()>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.ViewStub: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine: void onQuitting()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void iccTransmitApduLogicalChannel(int,int,int,int,int,int,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.text.ToUpperCase: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.app.admin.IDevicePolicyManager: void setRecommendedGlobalProxy(android.content.ComponentName,android.net.ProxyInfo)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.backup.IBackupManager: void setBackupServiceActive(int,boolean)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.admin.IDevicePolicyManager: boolean isUninstallBlocked(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.os.storage.ExternalStorageFormatter: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.app.ChooserActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.media.IAudioService$Stub: void startBluetoothSco(android.os.IBinder,int)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.app.admin.IDevicePolicyManager: boolean setApplicationHidden(android.content.ComponentName,java.lang.String,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.StraightenFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void switchWaitingOrHoldingAndActive(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: boolean isTheaterModeEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.INfcTag: int getTimeout(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void updatePhoneObject(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.service.wallpaper.WallpaperService$Engine: void doDisplayPaddingChanged(android.graphics.Rect)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.SYSTEM_ALERT_WINDOW", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterfw.core.Filter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.DeviceHost$TagEndpoint: void startPresenceChecking(int,com.android.nfc.DeviceHost$TagDisconnectedCallback)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.BeamShareActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.view.IWindowManager$Stub: void dismissKeyguard()>": [
  "android.permission.DISABLE_KEYGUARD"
 ], 
 "<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void <init>(android.content.Context,com.android.internal.telephony.SmsStorageMonitor,com.android.internal.telephony.PhoneBase,com.android.internal.telephony.cdma.CdmaSMSDispatcher)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.Application: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.ActivityManagerNative: void startInPlaceAnimationOnFrontMostApplication(android.app.ActivityOptions)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.ISms$Stub$Proxy: boolean isImsSmsSupported()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$3: void onCallStartFailed(com.android.ims.ImsCall,com.android.ims.ImsReasonInfo)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.Session: boolean performDrag(android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: boolean installKeyPair(android.content.ComponentName,byte[],byte[],java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.text.ToUpperCase: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void supplyIccPuk2(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.service.dreams.DreamService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.dataconnection.DcSwitchStateMachine$DetachingState: void enter()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.display.DisplayManagerService: void releaseVirtualDisplayInternal(android.os.IBinder)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.content.ContentResolver: void requestSync(android.content.SyncRequest)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.uicc.RuimRecords: void setVoiceCallForwardingFlag(int,boolean,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.sip.ISipService$Stub$Proxy: void open(android.net.sip.SipProfile)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: java.util.List getAdnRecordsInEf(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.media.effect.effects.BitmapOverlayEffect: void apply(int,int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.telephony.gsm.SmsManager: boolean deleteMessageFromSim(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void handleNetworkDisconnect()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.am.ActivityManagerService$28: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.view.IWindowSession$Stub$Proxy: int addToDisplay(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.SYSTEM_ALERT_WINDOW", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.UsimPhoneBookManager: void readEmailFileAndWait(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.provider.Contacts$ContactMethods: void addPostalLocation(android.content.Context,long,double,double)>": [
  "android.permission.WRITE_CONTACTS"
 ], 
 "<android.net.wifi.WifiManager: boolean enableNetwork(int,boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.Phone: void setImsRegistrationState(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.widget.Button: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.tts.TextToSpeech: java.lang.Object runActionNoReconnect(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.dreams.DreamController$3: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.ColorTemperatureFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.IActivityManager: void killBackgroundProcesses(java.lang.String,int)>": [
  "android.permission.RESTART_PACKAGES", 
  "android.permission.KILL_BACKGROUND_PROCESSES"
 ], 
 "<com.android.internal.widget.ActionBarContainer: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: boolean setRoamingOverride(java.util.List,java.util.List,java.util.List,java.util.List)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.server.content.SyncManager: void sendCheckAlarmsMessage()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.widget.ActionMenuPresenter$OverflowMenuButton: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.uicc.RuimFileHandler: void loadEFTransparent(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.WebVttRenderingWidget: void <init>(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.power.ShutdownThread: void shutdownInner(android.content.Context,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.TextServicesManagerService$TextServicesMonitor: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: void recomputeBoundsLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.hdmi.HotplugDetectionAction: void checkHotplug(java.util.List,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void reportStkServiceIsRunning(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean isMasterVolumeMuted(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.server.BluetoothA2dpService: void onBluetoothEnable()>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.server.backup.BackupManagerService$PerformBackupTask: int invokeAgentForBackup(java.lang.String,android.app.IBackupAgent,com.android.internal.backup.IBackupTransport)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.WifiStateMachine$RoamingState: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.TtmlRenderingWidget: void <init>(android.content.Context,android.util.AttributeSet,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.notification.ZenModeHelper: boolean isMessage(com.android.server.notification.NotificationRecord)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.BrightnessFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneSubInfo: java.lang.String getDeviceId()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine: void sendP2pConnectionChangedBroadcast()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void notifyLocationChanged()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.ListActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.pm.PackageManagerService: void systemReady()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.NsdService$NsdStateMachine$DisabledState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.AccountAuthenticatorActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.content.IContentService$Stub$Proxy: boolean isSyncActive(android.accounts.Account,java.lang.String,android.content.ComponentName)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<android.view.accessibility.IAccessibilityManager$Stub$Proxy: void unregisterUiTestAutomationService(android.accessibilityservice.IAccessibilityServiceClient)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiWatchdogStateMachine: void onQuitting()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.ToGrayFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.VibratorService$4: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: void pollCallsWhenSafe()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: android.view.textservice.SpellCheckerSubtype getCurrentSpellCheckerSubtype(java.lang.String,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void switchHoldingAndActive()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ISub: int getActiveSubInfoCount()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String[] getIsimImpu()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.GrantCredentialsPermissionActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.tech.Ndef: boolean makeReadOnly()>": [
  "android.permission.NFC"
 ], 
 "<com.android.commands.settings.SettingsCmd: int deleteForUser(android.content.IContentProvider,int,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.hardware.location.GeofenceHardwareImpl: void reportGeofenceRemoveStatus(int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.ToPackedGrayFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.Phone: void setVoiceMessageWaiting(int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: int addTrackerToRawTable(com.android.internal.telephony.InboundSmsTracker)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.widget.LockPatternUtils: boolean getBoolean(java.lang.String,boolean,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.WebVttRenderingWidget: void <init>(android.content.Context,android.util.AttributeSet,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.DigitalClock: void setFormat()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.job.JobServiceContext$JobServiceHandler: void handleStartedH(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: void separate()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: java.lang.String[] getAccountTypesWithManagementDisabledAsUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.IContentService$Stub: int getIsSyncable(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.server.am.ActivityManagerService$10: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.DeviceHost$DeviceHostListener: void onLlcpLinkActivated(com.android.nfc.DeviceHost$NfcDepEndpoint)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.accessibility.TouchExplorer: void access$2800(com.android.server.accessibility.TouchExplorer,android.view.MotionEvent,int,int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.RttService$RttServiceImpl$RttStateMachine$DefaultState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.policy.impl.ImmersiveModeConfirmation: void loadSetting(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.sip.SipManager: android.net.sip.SipSession createSipSession(android.net.sip.SipProfile,android.net.sip.SipSession$Listener)>": [
  "android.permission.USE_SIP"
 ], 
 "<android.location.ILocationManager$Stub: void removeTestProvider(java.lang.String)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.server.wm.WindowManagerService: void getBaseDisplaySize(int,android.graphics.Point)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.ActivityManager: android.app.ActivityManager$TaskThumbnail getTaskThumbnail(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.content.MutableContextWrapper: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.view.ViewRootImpl$ViewPostImeInputStage: int onProcess(android.view.ViewRootImpl$QueuedInputEvent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.content.PackageMonitor: void onPackageModified(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ProxyController: void disableDataConnectivity(int,android.os.Message)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.IContentService$Stub: boolean isSyncPending(android.accounts.Account,java.lang.String,android.content.ComponentName)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<android.filterpacks.base.ObjectSource: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: void enableAllIMEsIfThereIsNoEnabledIME()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String[] getIsimPcscf()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.notification.NextAlarmTracker: java.lang.String formatAlarmDebug(android.app.AlarmManager$AlarmClockInfo)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void setImsRegistrationState(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.IBackupAgent: void doFullBackup(android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.AlarmManagerService: void onStartUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.hardware.location.IGeofenceHardware$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.speech.tts.TextToSpeechService: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.ResizeFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void supplyIccPuk2(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.IEthernetManager$Stub$Proxy: boolean isAvailable()>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.test.mock.MockContentResolver: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: int dispatchMessage(com.android.internal.telephony.SmsMessageBase)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<android.view.IWindowSession$Stub$Proxy: int add(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.SYSTEM_ALERT_WINDOW", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.content.IContentService$Stub: int getIsSyncableAsUser(android.accounts.Account,java.lang.String,int)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void nvWriteItem(int,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityStackSupervisor: boolean attachApplicationLocked(com.android.server.am.ProcessRecord)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.view.WindowManagerInternal: void setWindowsForAccessibilityCallback(android.view.WindowManagerInternal$WindowsForAccessibilityCallback)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.os.storage.ExternalStorageFormatter: void onCreate()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.dataconnection.DataConnection$DcInactiveState: boolean processMessage(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void getOperator(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.voiceinteraction.SoundTriggerHelper: void onRecognitionFailureLocked()>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.hardware.input.InputManager$InputDeviceVibrator: void vibrate(long,android.media.AudioAttributes)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: void setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.location.SettingInjectorService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipConnection: void hangup()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.PlatLogoActivity: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService: boolean access$400(com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.NsdService: void access$900(com.android.server.NsdService,boolean)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.sip.ISipService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_SIP"
 ], 
 "<com.android.internal.telephony.test.SimulatedCommands: void setRadioPower(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.VibratorService: void vibratePattern(int,java.lang.String,long[],int,int,android.os.IBinder)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.net.NetworkPolicyManagerService$13: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: void confirmCredentialsAsUser(android.accounts.IAccountManagerResponse,android.accounts.Account,android.os.Bundle,boolean,int)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: java.util.List getPrivilegedConfiguredNetworks()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void notifyOffApnsOfAvailability(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.hdmi.HdmiControlService$BinderService$2: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.AccountManager: java.lang.String getUserData(android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<android.os.PowerManager$WakeLock$1: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.connectivity.Tethering$TetherInterfaceSM$UnavailableState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.view.IInputMethodManager$Stub$Proxy: java.util.List getEnabledInputMethodList()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.beam.BeamSendService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.LocationManagerService: java.lang.String getBestProvider(android.location.Criteria,boolean)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.uicc.SIMRecords: void onRecordLoaded()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: void hangupWaitingOrBackground()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.text.format.DateFormat: java.lang.String getDateFormatString(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setKeyguardDisabledFeatures(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.IRecognitionService: void stopListening(android.speech.IRecognitionListener)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<android.media.WebVttRenderingWidget$CueLayout: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean installCaCert(android.content.ComponentName,byte[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.bluetooth.BluetoothAdapter: java.lang.String getName()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.DockObserver: void setDockStateLocked(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.speech.IRecognitionService$Stub: void startListening(android.content.Intent,android.speech.IRecognitionListener)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: boolean updateAdnRecordsInEfByIndexForSubscriber(int,int,java.lang.String,java.lang.String,int,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.mtp.MtpDatabase: void endSendObject(java.lang.String,int,int,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.preference.PreferenceActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ISms$Stub$Proxy: boolean copyMessageToIccEf(java.lang.String,int,byte[],byte[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.net.wifi.IWifiManager: void setWifiApConfiguration(android.net.wifi.WifiConfiguration)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.sip.SipPhone$SipAudioCallAdapter: void onCallBusy(android.net.sip.SipAudioCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.DockObserver: void access$900(com.android.server.DockObserver,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.net.NetworkPolicyManagerService: android.net.NetworkQuotaInfo getNetworkQuotaInfoUnchecked(android.net.NetworkState)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.widget.AbsSpinner: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: java.lang.String[] getLockTaskPackages(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.app.RestrictionsPinActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.widget.RemoteViews$2: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoController: java.lang.String getIccSerialNumberForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.text.format.DateFormat: java.text.DateFormat getDateFormat(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: void clearBlacklist()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.wm.WindowManagerService: void createWatermarkInTransaction()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.base.NullFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.uicc.SIMFileHandler: void loadEFTransparent(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.IntentForwarderActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.media.IMediaHTTPConnection: java.lang.String getMIMEType()>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.util.AsyncChannel$1ConnectAsync: void run()>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.widget.LockPatternUtils: void saveLockPattern(java.util.List)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.LocationManagerService: void setTestProviderLocation(java.lang.String,android.location.Location)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<android.net.sip.ISipService$Stub$Proxy: void close(java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_SIP"
 ], 
 "<android.app.admin.IDevicePolicyManager: void setCameraDisabled(android.content.ComponentName,boolean,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.NsdService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.server.location.GpsLocationProvider$9: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void notifySignalStrength()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.content.ContentService: android.content.SyncStatusInfo getSyncStatusAsUser(android.accounts.Account,java.lang.String,android.content.ComponentName,int)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.internal.telephony.RI: void queryCLIP(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.base.NullFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setMaximumFailedPasswordsForWipe(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.InputMonitor: int interceptKeyBeforeQueueing(android.view.KeyEvent,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.location.ILocationManager: void removeGeofence(android.location.Geofence,android.app.PendingIntent,java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.display.DisplayPowerController: void sendUpdatePowerState()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.content.pm.ILauncherApps$Stub$Proxy: void startActivityAsUser(android.content.ComponentName,android.graphics.Rect,android.os.Bundle,android.os.UserHandle)>": [
  "android.permission.INTERNET"
 ], 
 "<android.widget.ScrollView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GsmInboundSmsHandler: java.lang.String getLogRecString(android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.backup.BackupManagerService$PerformBackupTask: void agentErrorCleanup()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void dispose()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.display.AutomaticBrightnessController: void updateAmbientLux()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.ToggleButton: boolean access$1200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.Application: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GsmConnection: void onConnectedInOrOut()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.test.mock.MockContentResolver: java.util.List getCurrentSyncs()>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.server.hdmi.SetArcTransmissionStateAction: void addAndStartAction(com.android.server.hdmi.HdmiCecFeatureAction)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService: boolean readDisplayMagnificationEnabledSettingLocked(com.android.server.accessibility.AccessibilityManagerService$UserState)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.test.mock.MockContentResolver: void setIsSyncable(android.accounts.Account,java.lang.String,int)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.server.power.ShutdownThread: void rebootSafeMode(android.content.Context,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.service.voice.VoiceInteractionSessionService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void handleSrvccStateChanged(int[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.ims.ImsCall$ImsCallSessionListenerProxy: void callSessionHoldFailed(com.android.ims.internal.ImsCallSession,com.android.ims.ImsReasonInfo)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.cardemulation.TapAgainDialog: void onStop()>": [
  "android.permission.VIBRATE", 
  "android.permission.NFC"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: java.util.List getConfiguredNetworks()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.filterpacks.base.FrameBranch: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void setInitialAttachApn()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityManagerService: void showBootMessage(java.lang.CharSequence,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.nfc.INfcAdapter$Stub$Proxy: void setP2pModes(int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.view.RotationPolicy: void registerRotationPolicyListener(android.content.Context,com.android.internal.view.RotationPolicy$RotationPolicyListener)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.PhoneBase: void nvWriteCdmaPrl(byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.net.NetworkStatsService$NetworkStatsSettings: long getUidPersistBytes(long)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.VibratorService$VibrateThread: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<android.net.wifi.WifiManager: android.net.DhcpInfo getDhcpInfo()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.os.storage.StorageManager: long getStorageLowBytes(java.io.File)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void <init>(com.android.internal.telephony.cdma.CDMAPhone,android.telephony.CellInfo)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.test.ActivityUnitTestCase$MockParent: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void notifyServiceStateChanged(android.telephony.ServiceState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.service.voice.VoiceInteractionService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: boolean setRoamingOverride(java.util.List,java.util.List,java.util.List,java.util.List)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void access$2300(com.android.server.wifi.WifiStateMachine)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.accounts.AccountManagerService: android.accounts.Account[] getAccountsAsUser(java.lang.String,int,java.lang.String,int)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.nfc.handover.HandoverDataParser: android.nfc.NdefMessage createBluetoothHandoverSelectMessage(boolean)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.wifi.RttService$RttServiceImpl$RttStateMachine: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.ImageCombineFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.widget.ToggleButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.IWindowSession: int addWithoutInputChannel(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.SYSTEM_ALERT_WINDOW", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.display.DisplayPowerController$2: void onAnimationEnd()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.media.RingtoneManager: void stopPreviousRingtone()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void getIMSIForApp(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActiveServices: android.content.ComponentName startServiceInnerLocked(com.android.server.am.ActiveServices$ServiceMap,android.content.Intent,com.android.server.am.ServiceRecord,boolean,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.ImageEncoder: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.app.admin.IDevicePolicyManager: android.content.ComponentName getRestrictionsProvider(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.notification.NotificationManagerService: void onStartUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.Invert: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.net.INetworkScoreService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.Button: void updateTextServicesLocaleLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.IccCardProxy: void setIccFdnEnabled(boolean,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.pm.PackageManagerService$FileInstallArgs: boolean checkFreeStorage(com.android.internal.app.IMediaContainerService)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.connectivity.PacManager$1: void run()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.view.IInputMethodManager$Stub: android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine: void initializeP2pSettings()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.voice.VoiceInteractionSessionService: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.le.BluetoothLeAdvertiser: int totalBytes(android.bluetooth.le.AdvertiseData,boolean)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.SystemServiceManager: void switchUser(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.filterpacks.imageproc.FlipFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.notification.ZenModeHelper$SettingsObserver: void <init>(com.android.server.notification.ZenModeHelper,android.os.Handler)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.CheckedTextView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.os.IVibratorService$Stub: void cancelVibrate(android.os.IBinder)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.location.ComprehensiveCountryDetector: void addPhoneStateListener()>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.media.WebVttTrack: void show()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.widget.WaveView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.content.PackageMonitor: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.cardemulation.PreferredServices: void onHostEmulationDeactivated()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.uicc.UiccCarrierPrivilegeRules: void <init>(com.android.internal.telephony.uicc.UiccCard,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.ILockSettings$Stub$Proxy: long getLong(java.lang.String,long,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.INfcCardEmulation$Stub: boolean setPreferredService(android.content.ComponentName)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<android.view.IWindowSession$Stub$Proxy: int addWithoutInputChannel(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.SYSTEM_ALERT_WINDOW", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.provider.CalendarContract$Instances: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],long,long)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService$Lifecycle: void onSwitchUser(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.test.mock.MockContentResolver: void setMasterSyncAutomatically(boolean)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry: void notifyServiceStateForPhoneId(int,int,android.telephony.ServiceState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void doRecovery()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.location.GeofenceManager: void onLocationChanged(android.location.Location)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.accessibility.ScreenMagnifier$MagnificationController: void offsetMagnifiedRegionCenter(float,float)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.provider.ContactsContract$RawContacts: android.net.Uri getContactLookupUri(android.content.ContentResolver,android.net.Uri)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: void setMasterSyncAutomatically(boolean)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.server.notification.ZenModeHelper$Callback: void onZenModeChanged()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneBase: void setNetworkSelectionModeAutomatic(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevicePlayback: boolean onMessage(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.ChooseTypeAndAccountActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void removeActiveAdmin(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.INfcCardEmulation: boolean setDefaultServiceForCategory(int,android.content.ComponentName,java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.NFC"
 ], 
 "<com.android.server.am.ActivityStackSupervisor: void endLockTaskModeIfTaskEnding(com.android.server.am.TaskRecord)>": [
  "android.permission.DISABLE_KEYGUARD", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void notifyDataConnection(java.lang.String,java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pService: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.sip.SipService: void close(java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_SIP"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void init(android.content.Context,com.android.internal.telephony.PhoneNotifier)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.server.twilight.TwilightService$TwilightListenerRecord: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.CompoundButton: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.ChooseTypeAndAccountActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: android.telephony.CellLocation getCellLocation()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.NsdService: boolean isNsdEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.tech.NfcB: byte[] transceive(byte[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendSmsByPstn(com.android.internal.telephony.SMSDispatcher$SmsTracker)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.internal.telephony.ISub: int setDisplayNameUsingSrc(java.lang.String,int,long)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.am.ActivityManagerService$LocalService: void onWakefulnessChanged(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.display.DisplayManagerService$LocalService: void setDisplayProperties(int,boolean,float,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.util.IState: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.RECEIVE_WAP_PUSH", 
  "android.permission.WRITE_SMS", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.RECEIVE_MMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.READ_SMS"
 ], 
 "<android.accounts.IAccountManager: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<android.print.IPrintManager: java.util.List getPrintJobInfos(int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.tts.TextToSpeech: int initTts()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.power.PowerManagerService: void access$5500(com.android.server.power.PowerManagerService,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.ims.ImsCall$Listener: void onCallTerminated(com.android.ims.ImsCall,com.android.ims.ImsReasonInfo)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.MountServiceIdler: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void setVoiceMailNumber(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.FisheyeFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void invokeOemRilRequestStrings(java.lang.String[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getActiveAdmins(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.inputmethodservice.KeyboardView: boolean openPopupIfRequired(android.view.MotionEvent)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.SystemServer: void main(java.lang.String[])>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.CLEAR_APP_CACHE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.telephony.SubscriptionManager: android.net.Uri addSubscriptionInfoRecord(java.lang.String,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.widget.EditText: boolean access$1200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void logStateAndMessage(android.os.Message,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.telecom.InCallService: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.ims.ImsCall: void tryProcessConferenceResult()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.SubscriptionController: int setDisplayName(java.lang.String,int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.nfc.P2pEventManager: void onP2pSendComplete()>": [
  "android.permission.VIBRATE"
 ], 
 "<android.bluetooth.IBluetoothManager$Stub: java.lang.String getAddress()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void notifyCellInfo(java.util.List)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.ContextWrapper: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.location.LocationManager: boolean addGpsMeasurementListener(android.location.GpsMeasurementsEvent$Listener)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.accounts.AccountManagerService: void addAccountAsUser(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle,int)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<android.test.mock.MockApplication: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.wifi.WifiApConfigStore$InactiveState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.base.FrameBranch: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void access$000(com.android.internal.telephony.RI)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.notification.NotificationManagerService: void access$3600(com.android.server.notification.NotificationManagerService,com.android.server.notification.NotificationRecord)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine: void access$300(com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.VignetteFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: void setIsSyncable(android.accounts.Account,java.lang.String,int)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.server.notification.DowntimeConditionProvider: void evaluateAutotrigger()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.InputMethodManagerService: com.android.internal.view.InputBindResult startInputInnerLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void handlePollStateResult(int,android.os.AsyncResult)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.server.LocationManagerService: void removeProviderLocked(com.android.server.location.LocationProviderInterface)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.uicc.IccCardProxy: void onSubscriptionActivated()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.nfc.cardemulation.CardEmulationManager$CardEmulationInterface: boolean setDefaultServiceForCategory(int,android.content.ComponentName,java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setUserRestriction(android.content.ComponentName,java.lang.String,boolean)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.test.IsolatedContext: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.UUSInfo,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.widget.multiwaveview.GlowPadView: void handleMove(android.view.MotionEvent)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.DhcpStateMachine$DefaultState: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.filterpacks.base.GLTextureSource: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.location.LocationProviderInterface: void disable()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: void proceedAfterWaitChar()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList processStoppingActivitiesLocked(boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cat.CatService: void sendTerminalResponse(com.android.internal.telephony.cat.CommandDetails,com.android.internal.telephony.cat.ResultCode,boolean,int,com.android.internal.telephony.cat.ResponseData)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.P2pLinkManager: void onLlcpActivated()>": [
  "android.permission.VIBRATE"
 ], 
 "<android.media.MediaPlayer: void addTimedTextSource(java.io.FileDescriptor,long,long,java.lang.String)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.RI: void setRadioPower(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.AccountManager$9: android.accounts.AccountManagerFuture start()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<android.app.IBackupAgent$Stub: void doFullBackup(android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void access$7500(com.android.server.wifi.WifiStateMachine)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: java.util.List privatizeCellInfoList(java.util.List)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ServiceStateTracker: java.util.List getAllCellInfo()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: android.net.wifi.WifiConfiguration getWifiApConfiguration()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.sip.SipService$SipSessionGroupExt: void close()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.preference.SeekBarVolumizer: void start()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService main(android.content.Context,com.android.server.pm.Installer,boolean,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void gotoIdleAndNotifyDataConnection(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.Phone: void getSmscAddress(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.uicc.SIMRecords: void onRefresh(boolean,int[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.AutoCompleteTextView: boolean performLongClick()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.widget.LockPatternUtils: void saveLockPassword(java.lang.String,int,boolean,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.ToGrayFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevice: void startQueuedActions()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.RttService$RttServiceImpl$RttStateMachine$RequestPendingState: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.app.ContextImpl: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wm.WindowStateAnimator: void finishExit()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.nfc.INfcTag$Stub: int setTimeout(int,int)>": [
  "android.permission.NFC"
 ], 
 "<android.provider.Settings$Secure: long getLong(android.content.ContentResolver,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: int getOrientationFromAppTokensLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.nfc.cardemulation.OffHostApduService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.INfcAdapter: boolean disableNdefPush()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.net.TrafficStats: android.net.NetworkStats getDataLayerSnapshotForUid(android.content.Context)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.uicc.IccCardProxy: void supplyPin(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void cleanUpAllConnections(java.lang.String,android.os.Message)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.DrawRectFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.IsimFileHandler: void updateEFTransparent(int,byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.FixedRotationFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.filterpacks.videosrc.MediaSource: void pauseVideo(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiStateMachine$DriverStoppingState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.LockSettingsService: long getLong(java.lang.String,long,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.INfcAdapter$Stub: void setForegroundDispatch(android.app.PendingIntent,android.content.IntentFilter[],android.nfc.TechListParcel)>": [
  "android.permission.NFC"
 ], 
 "<android.location.GpsMeasurementListenerTransport: boolean add(java.lang.Object)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.TextServicesManagerService: void setCurrentSpellCheckerSubtype(java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.content.SyncManager$9: void onStatusChanged(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.am.ActivityManagerService: boolean inputDispatchingTimedOut(com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,boolean,java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.MmsServiceBroker: void onSwitchUser(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.sip.SipSessionGroup$SipSessionCallReceiverImpl: void access$1600(com.android.server.sip.SipSessionGroup$SipSessionImpl,java.util.EventObject)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.INfcTag$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<android.filterpacks.imageproc.SimpleImageFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.LockPatternUtils: java.util.List getEnabledTrustAgents(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.ToRGBFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1: void onPackageRemoved(java.lang.String,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void hangupAndPowerOff()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.SupplicantStateTracker: void access$300(com.android.server.wifi.SupplicantStateTracker,android.net.wifi.SupplicantState,boolean)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: void launchDeviceDiscovery()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.location.GpsLocationProvider: void access$3300(com.android.server.location.GpsLocationProvider,int,android.net.NetworkInfo)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityManagerService: android.content.Intent registerReceiver(android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.bluetooth.le.BluetoothLeAdvertiser: void startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.filterpacks.videosrc.CameraSource: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.app.ActivityManager: java.util.List getRecentTasksForUser(int,int,int)>": [
  "android.permission.GET_TASKS"
 ], 
 "<com.android.server.power.PowerManagerService: void access$3800(com.android.server.power.PowerManagerService,long,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GsmConnection: void hangup()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager: void removeActiveAdmin(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.SubscriptionInfoUpdater: void updateSubscriptionInfoByIccId()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.app.ActivityManagerNative: void setProcessLimit(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.nfc.INfcTag$Stub: int formatNdef(int,byte[])>": [
  "android.permission.NFC"
 ], 
 "<android.speech.tts.TextToSpeechService: int getSecureSettingInt(java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.RemoteViewsService: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.Connection dialInternal(java.lang.String,int)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.server.power.PowerManagerService: void access$2400(com.android.server.power.PowerManagerService)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.provider.Telephony$Sms$Outbox: android.net.Uri addMessage(int,android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean,long)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: void disableEphemeralNetwork(java.lang.String)>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.widget.ResolverDrawerLayout: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.sip.ISipService$Stub: void open(android.net.sip.SipProfile)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void setProfileEnabled(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.base.ObjectSource: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.speech.tts.TtsEngines: java.util.Locale getLocalePrefForEngine(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.os.SystemVibrator: void vibrate(long[],int,android.media.AudioAttributes)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.content.ContentService: boolean isSyncPendingAsUser(android.accounts.Account,java.lang.String,android.content.ComponentName,int)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<android.accounts.AccountManager: void addOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener,android.os.Handler,boolean)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine: boolean reinvokePersistentGroup(android.net.wifi.p2p.WifiP2pConfig)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.base.OutputStreamTarget: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.SharpenFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.backup.BackupManagerService$PerformBackupTask: void executeNextState(com.android.server.backup.BackupManagerService$BackupState)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone$2: void onECBMEntered()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.ContrastFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.nfc.beam.BeamReceiveService: void onTransferComplete(com.android.nfc.beam.BeamTransferManager,boolean)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.appwidget.AppWidgetService: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void nvReadItem(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: void transitionToDelegatingStateAndClear()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.RemoteViewsService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.UiccSmsController: boolean disableCellBroadcastRange(int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.nfc.INfcCardEmulation: boolean setDefaultForNextTap(int,android.content.ComponentName)>": [
  "android.permission.VIBRATE", 
  "android.permission.NFC"
 ], 
 "<com.android.server.backup.SystemBackupAgent: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.RI: void acceptCall(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.UsimDataDownloadHandler: int handleUsimDataDownload(com.android.internal.telephony.uicc.UsimServiceTable,com.android.internal.telephony.gsm.SmsMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.ContentResolver: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.filterfw.core.FilterFunction: android.filterfw.core.Frame executeWithArgList(java.lang.Object[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.view.menu.IconMenuItemView: boolean access$1200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.display.OverlayDisplayAdapter: void access$000(com.android.server.display.OverlayDisplayAdapter)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.TextView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiStateMachine$DriverStartedState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevice: boolean handleRoutingInformation(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<android.bluetooth.IBluetoothManager$Stub: boolean disable(boolean)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.view.ContextThemeWrapper: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.base.RetargetFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendSubmitPdu(com.android.internal.telephony.SMSDispatcher$SmsTracker)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SMS"
 ], 
 "<android.filterpacks.imageproc.DrawRectFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.speech.tts.ITextToSpeechService: java.lang.String[] getClientDefaultLanguage()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.Connection: void proceedAfterWildChar(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ISub$Stub$Proxy: int getSlotId(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.SubtitleTrack$RenderingWidget: void setVisible(boolean)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.widget.ILockSettings: boolean checkVoldPassword(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.IWifiManager: android.net.wifi.WifiInfo getConnectionInfo()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void notifyServiceStateChangedP(android.telephony.ServiceState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.SMSDispatcher$SmsTracker: android.net.Uri persistSentMessageIfRequired(android.content.Context,int,int)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.sip.SipService$ConnectivityReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.telephony.SmsManager: void sendStoredMultimediaMessage(android.net.Uri,android.os.Bundle,android.app.PendingIntent)>": [
  "android.permission.SEND_SMS"
 ], 
 "<android.net.wifi.WifiManager: boolean startCustomizedScan(android.net.wifi.ScanSettings,android.os.WorkSource)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.accounts.AccountManagerService: android.accounts.Account[] getAccountsForPackage(java.lang.String,int)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.view.WindowManagerPolicy: int checkAddPermission(android.view.WindowManager$LayoutParams,int[])>": [
  "android.permission.SYSTEM_ALERT_WINDOW"
 ], 
 "<com.android.internal.telephony.RI: void hangupWaitingOrBackground(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void nvWriteCdmaPrl(byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.cardemulation.CardEmulationManager: void onPreferredPaymentServiceChanged(android.content.ComponentName)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcSwitchStateMachine$IdleState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.wifi.WifiManager: void enableAggressiveHandover(int)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.nfc.INfcAdapter$Stub$Proxy: boolean enableNdefPush()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getSubscriberId()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: long getUidTagPersistBytes(long)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void getAvailableNetworks(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accessibility.ScreenMagnifier$MagnifiedContentInteractonStateHandler: void onMotionEvent(android.view.MotionEvent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.print.IPrintManager$Stub: void removePrintJobStateChangeListener(android.print.IPrintJobStateChangeListener,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.print.PrintManagerService$PrintManagerImpl$2: void onPackageDisappeared(java.lang.String,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void updateDataConnectionTracker()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.Activity: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GsmInboundSmsHandler: void deleteFromRawTable(java.lang.String,java.lang.String[])>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.internal.telephony.dataconnection.DataConnection: android.net.NetworkCapabilities makeNetworkCapabilities()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.NativeCrashListener: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.INfcAdapter$Stub$Proxy: void setReaderMode(android.os.IBinder,android.nfc.IAppCallback,int,android.os.Bundle)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.ToRGBFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.pm.Installer: void onSwitchUser(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.accounts.IAccountManager: android.accounts.Account[] getAccountsForPackage(java.lang.String,int)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: boolean isApnTypeActive(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.widget.LockPatternUtils: int getKeyguardStoredPasswordQuality(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.backup.IBackupManager$Stub: void setBackupServiceActive(int,boolean)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.trust.TrustAgentWrapper: void destroy()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: boolean updateFocusedWindowLocked(int,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.inputmethodservice.InputMethodService: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.app.IntentForwarderActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wallpaper.WallpaperManagerService: android.os.ParcelFileDescriptor setWallpaper(java.lang.String)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.nfc.cardemulation.CardEmulation: boolean unsetPreferredService(android.app.Activity)>": [
  "android.permission.VIBRATE", 
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: boolean trySetupData(com.android.internal.telephony.dataconnection.ApnContext)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accounts.AccountManagerService$Session: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: boolean getDataOnRoamingEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiApConfigStore: java.lang.String toString()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.effect.effects.SharpenEffect: void apply(int,int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.nfc.INfcAdapter$Stub$Proxy: void removeNfcUnlockHandler(android.nfc.INfcUnlockHandler)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.RI: void setDataProfile(com.android.internal.telephony.dataconnection.DataProfile[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void exitEmergencyCallbackMode()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.WindowManagerService: void dumpAnimatorLocked(java.io.PrintWriter,java.lang.String[],boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$InactiveState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: int getAggressiveHandover()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void finishWindowsDrawn()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: long getMaximumTimeToLock(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.cardemulation.CardEmulation: boolean categoryAllowsForegroundPreference(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void setCellInfoListRate(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.sip.SipSessionGroup$KeepAliveProcessCallbackProxy$1: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.dreams.DreamManagerService: android.content.ComponentName getDefaultDreamComponentForUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.TextServicesManagerService: android.view.textservice.SpellCheckerInfo getCurrentSpellCheckerWithoutVerification()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ServiceStateTracker: void <init>(com.android.internal.telephony.PhoneBase,com.android.internal.telephony.CommandsInterface,android.telephony.CellInfo)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.wm.WindowManagerService: android.content.res.Configuration computeNewConfigurationLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.nfc.tech.NfcA: int getTimeout()>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.inputmethod.InputMethodSubtypeSwitchingController: java.util.List getSortedInputMethodAndSubtypeListLocked(boolean,boolean,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void onDataStallAlarm(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.LocationManagerService$Receiver: void clearPendingBroadcastsLocked()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.dataconnection.DctController: int access$700(com.android.internal.telephony.dataconnection.DctController,android.net.NetworkRequest)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.CompoundButton: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.accessibility.TouchExplorer: void sendUpForInjectedDownPointers(android.view.MotionEvent,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.accounts.AccountManagerService: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.server.wm.WindowState: void reportResized()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.media.MediaSessionService$SessionManagerImpl: void startVoiceInput(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothSocket createScoSocket()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.inputmethodservice.KeyboardView: boolean onHoverEvent(android.view.MotionEvent)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getStorageEncryption(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.INfcTag$Stub: int connect(int,int)>": [
  "android.permission.NFC"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void getRemoveWarning(android.content.ComponentName,android.os.RemoteCallback,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.provider.Settings$System: float getFloat(android.content.ContentResolver,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.bluetooth.IBluetoothManager$Stub$Proxy: void unregisterAdapter(android.bluetooth.IBluetoothManagerCallback)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.widget.SearchView$SearchAutoComplete: void updateTextServicesLocaleLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.fingerprint.FingerprintService: void onStartUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.BeamShareActivity$2: void onClick(android.content.DialogInterface,int)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.IMms: android.net.Uri addMultimediaMessageDraft(java.lang.String,android.net.Uri)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.ISms$Stub: boolean isSMSPromptEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.net.NetworkPolicyManagerService: android.net.NetworkQuotaInfo getNetworkQuotaInfo(android.net.NetworkState)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.internal.telephony.RI: void handleCallSetupRequestFromSim(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.cardemulation.RegisteredServicesCache$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: java.lang.String getLogRecString(android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.IAccountManager$Stub: void renameAccount(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.internal.widget.ILockSettings$Stub$Proxy: java.lang.String getString(java.lang.String,java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.inputmethodservice.KeyboardView: void setKeyboard(android.inputmethodservice.Keyboard)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.base.FrameBranch: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.app.backup.BackupAgentHelper: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void notifyApnIdUpToCurrent(java.lang.String,int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.am.ActiveServices: void bringDownServiceLocked(com.android.server.am.ServiceRecord)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.IccCard: void changeIccFdnPassword(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.test.mock.MockContentResolver: java.util.List getCurrentSyncsAsUser(int)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.server.accessibility.ScreenMagnifier: void handleOnMagnifiedBoundsChanged(android.graphics.Region)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.ToRGBAFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.google.android.mms.pdu.PduPersister: android.net.Uri persist(com.google.android.mms.pdu.GenericPdu,android.net.Uri,boolean,boolean,java.util.HashMap)>": [
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void hangupForegroundResumeBackground(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.ContentResolver: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.server.am.ActivityManagerService: android.app.ActivityManager$TaskThumbnail getTaskThumbnail(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.app.DisableCarModeActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.job.JobSchedulerService: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getLine1AlphaTagForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.nfc.tech.IsoDep: byte[] transceive(byte[],boolean)>": [
  "android.permission.NFC"
 ], 
 "<android.speech.tts.ITextToSpeechService$Stub: java.lang.String[] getClientDefaultLanguage()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.videosrc.MediaSource: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.inputmethodservice.AbstractInputMethodService: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.BrightnessFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.display.AutomaticBrightnessController: void updateAmbientLux(long)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void onDataSetupComplete(android.os.AsyncResult)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getLine1Number()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase$2: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.os.IPowerManager$Stub$Proxy: void releaseWakeLock(android.os.IBinder,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActiveServices: java.lang.String bringUpServiceLocked(com.android.server.am.ServiceRecord,int,boolean,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.content.SyncManager: void scheduleSync(android.accounts.Account,int,int,java.lang.String,android.os.Bundle,long,long,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneConnection: void hangup()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.ILocationManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_MOCK_LOCATION", 
  "android.permission.ACCESS_LOCATION_EXTRA_COMMANDS", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.RecognitionService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.SubscriptionController: int clearSubInfo()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.location.ILocationManager$Stub$Proxy: void setTestProviderEnabled(java.lang.String,boolean)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<android.content.IContentService$Stub: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.UiccSmsController: boolean isImsSmsSupported()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.backup.IBackupManager$Stub$Proxy: void setBackupServiceActive(int,boolean)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.textservice.ITextServicesManager$Stub: void setSpellCheckerEnabled(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.display.WifiDisplayController: void access$000(com.android.server.display.WifiDisplayController)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneBase: void setImsRegistrationState(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.videosrc.CameraSource: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.text.StringSource: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void queryTTYMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.FixedRotationFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.notification.NotificationManagerService: void applyZenModeLocked(com.android.server.notification.NotificationRecord)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.telephony.gsm.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>": [
  "android.permission.SEND_SMS", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: boolean addCrossProfileWidgetProvider(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void setDataRoamingEnabled(boolean)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.net.wifi.WifiManager: java.util.List getScanResults()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.view.ViewGroup: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.SMSDispatcher$SmsTracker: void persistOrUpdateMessage(android.content.Context,int,int)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.internal.telephony.Connection: void proceedAfterWaitChar()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.print.IPrintManager$Stub: void stopPrinterDiscovery(android.print.IPrinterDiscoveryObserver,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void setImsRegistrationState(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void <init>(com.android.internal.telephony.cdma.CDMAPhone,android.telephony.CellInfo)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevicePlayback: void disableDevice(boolean,com.android.server.hdmi.HdmiCecLocalDevice$PendingActionClearedCallback)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiStateMachine$SupplicantStartedState: void enter()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cat.RilMessageDecoder$StateCmdParamsReady: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ISms$Stub$Proxy: boolean disableCellBroadcastForSubscriber(int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.app.ActivityManager: void moveTaskToFront(int,int,android.os.Bundle)>": [
  "android.permission.REORDER_TASKS"
 ], 
 "<android.filterpacks.imageproc.ImageSlicer: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void startBatchedScan()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevice: boolean dispatchMessageToAction(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.WindowManagerPolicy: void systemBooted()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.app.ExternalMediaFormatActivity: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.usage.UserUsageStatsService: void printIntervalStats(com.android.internal.util.IndentingPrintWriter,com.android.server.usage.IntervalStats,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.commands.pm.Pm: int runGetInstallLocation()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setSuppServiceNotifications(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.updates.CertPinInstallReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.LocationManagerService$Receiver: void onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: java.lang.String getConfigFile()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void setUiTTYMode(int,android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void enableEnhancedVoicePrivacy(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.P2pLinkManager: void enableDisable(boolean,boolean)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.content.IContentService$Stub: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String,android.content.ComponentName)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<android.telecom.InCallService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.LoadedApk$ReceiverDispatcher$InnerReceiver: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.PhoneNotifier: void notifyDataConnection(com.android.internal.telephony.Phone,java.lang.String,java.lang.String,com.android.internal.telephony.PhoneConstants$DataState)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.BluetoothManagerService: void storeNameAndAddress(java.lang.String,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: void statusBarVisibilityChanged(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.media.IMediaHTTPConnection$Stub$Proxy: java.lang.String getMIMEType()>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: boolean handleRoutingChange(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.notification.NextAlarmTracker$1: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.WallpaperManager: void setResource(int)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.backup.IBackupManager$Stub$Proxy: void clearBackupData(java.lang.String,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.trust.TrustManagerService: void access$1800(com.android.server.trust.TrustManagerService,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.IContentService: boolean getMasterSyncAutomaticallyAsUser(int)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: boolean setOperatorBrandOverride(java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.internal.widget.multiwaveview.GlowPadView: void dispatchTriggerEvent(int)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.IsimUiccRecords: void onRefresh(boolean,int[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmConnection: boolean processPostDialChar(char)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.ims.ImsManager: boolean isVolteProvisionedOnDevice(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.display.DisplayPowerController: void handleProximitySensorEvent(long,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.am.ActiveServices: void performServiceRestartLocked(com.android.server.am.ServiceRecord)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.speech.SpeechRecognizer: void stopListening()>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.server.pm.PackageManagerService: boolean access$2900(com.android.server.pm.PackageManagerService,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiStateMachine$SupplicantStartingState: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.AsyncPlayer: void acquireWakeLock()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.LomoishFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.WindowManagerService: android.graphics.Bitmap screenshotApplications(android.os.IBinder,int,int,int,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.ActivityManagerNative: boolean handleApplicationWtf(android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport$CrashInfo)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.sip.SipAudioCall: void setSpeakerMode(boolean)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.app.ListActivity: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.UiAutomationConnection: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.Phone: void nvWriteItem(int,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.INfcTag$Stub$Proxy: int close(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<android.filterpacks.performance.ThroughputFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.telephony.TelephonyManager: boolean putIntAtIndex(android.content.ContentResolver,java.lang.String,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: int getPasswordMinimumUpperCase(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void updatePhoneObject()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.server.fingerprint.FingerprintService: void onBootPhase(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.telephony.TelephonyManager: java.lang.String getSimOperatorNumeric()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.IWindowManager$Stub$Proxy: void statusBarVisibilityChanged(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaConnection: void onLocalDisconnect()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: boolean handleEctIncallSupplementaryService(java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void reRegisterNetwork(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.SmsApplication$SmsPackageMonitor: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accessibility.AccessibilityInputFilter: void handleMotionEvent(android.view.MotionEvent,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.IWindowManager$Stub: boolean isRotationFrozen()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.sip.ISipService$Stub: void close(java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_SIP"
 ], 
 "<com.android.internal.telephony.ISms$Stub: java.util.List getAllMessagesFromIccEfForSubscriber(int,java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.inputmethodservice.KeyboardView: boolean onModifiedTouchEvent(android.view.MotionEvent,boolean)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.test.RenamingDelegatingContext: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.filterpacks.imageproc.CrossProcessFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.INetworkScoreService$Stub: boolean clearScores()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.GrantCredentialsPermissionActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: android.os.UserHandle createAndInitializeUser(android.content.ComponentName,java.lang.String,java.lang.String,android.content.ComponentName,android.os.Bundle)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.BrightnessFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.Connection dialInternal(java.lang.String,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.fingerprint.FingerprintService: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.DuotoneFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.IWifiManager$Stub: android.net.wifi.WifiInfo getConnectionInfo()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.IntRangeManager: boolean tryAddRanges(int,int,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void invokeOemRilRequestStrings(java.lang.String[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.WifiManager: boolean isFeatureSupported(int)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.print.UserState: void <init>(android.content.Context,int,java.lang.Object)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.numeric.SinWaveFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneBase: void setCellInfoListRate(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.AccountManager$12: android.accounts.AccountManagerFuture start()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.nfc.cardemulation.DefaultRemovedActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: void pollBatchedScan()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.content.ContextWrapper: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void startNextBatchedScan()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.net.NetworkStatsService: void access$600(com.android.server.net.NetworkStatsService,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.os.storage.ExternalStorageFormatter: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void setRecommendedGlobalProxy(android.content.ComponentName,android.net.ProxyInfo)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: void addAndStartAction(com.android.server.hdmi.HdmiCecFeatureAction)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneConnection: void cancelPostDial()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.preference.PreferenceActivity: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.telephony.SmsManager: boolean updateMessageOnIcc(int,int,byte[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: boolean setOperatorBrandOverride(java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void wakeUpFromPowerKey(long)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine: void sendP2pStateChangedBroadcast(boolean)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: java.util.List getScanResults(java.lang.String)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.location.GpsLocationProvider: void setEngineCapabilities(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.IUserSwitchObserver$Stub$Proxy: void onUserSwitching(int,android.os.IRemoteCallback)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getIccSerialNumber()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.MmsServiceBroker: void onBootPhase(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void access$300(com.android.internal.telephony.gsm.GsmServiceStateTracker)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.filterpacks.imageproc.ToGrayFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.media.MediaPlayer: void stayAwake(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.connectivity.PacManager: long getDownloadDelay(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.notification.ConditionProviders: void access$600(com.android.server.notification.ManagedServices)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.widget.LockPatternUtils: boolean getWidgetsEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: void unsetAppFreezingScreenLocked(com.android.server.wm.AppWindowToken,boolean,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.print.PrintManagerService: void onSwitchUser(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthTokenByFeatures(java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle,android.os.Bundle,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.internal.view.menu.ActionMenuItemView: void updateTextServicesLocaleLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.StraightenFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.IAccountManager$Stub: android.accounts.Account[] getAccountsByTypeForPackage(java.lang.String,java.lang.String)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.net.wifi.IWifiManager: java.lang.String getConfigFile()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.wifi.SupplicantStateTracker: void sendSupplicantStateChangedBroadcast(android.net.wifi.SupplicantState,boolean)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.sip.SipService$SipSessionGroupExt: void onConnectivityChanged(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.IntentForwarderActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.widget.LockPatternUtils: int getKeyguardStoredPasswordQuality()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask: void finalizeRestore()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.BluetoothManagerService: void registerForAirplaneMode(android.content.IntentFilter)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.IAudioService$Stub: void reloadAudioSettings()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.server.power.PowerManagerService: void access$5300(com.android.server.power.PowerManagerService,int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.print.IPrintManager$Stub$Proxy: void startPrinterDiscovery(android.print.IPrinterDiscoveryObserver,java.util.List,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getIMSI(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.input.InputManagerService$WindowManagerCallbacks: long notifyANR(com.android.server.input.InputApplicationHandle,com.android.server.input.InputWindowHandle,java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.dataconnection.DctController: void executeAllRequests(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.print.PrintManagerService$PrintManagerImpl: com.android.server.print.UserState access$300(com.android.server.print.PrintManagerService$PrintManagerImpl,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.ToGrayFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void enforceCanManageCaCerts(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.print.PrintManager: void addPrintJobStateChangeListener(android.print.PrintManager$PrintJobStateChangeListener)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.SubtitleController: void doSelectDefaultTrack()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.pm.PackageManagerService: boolean deleteSystemPackageLI(com.android.server.pm.PackageSetting,int[],boolean[],int,com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.WifiStateMachine$DriverStartingState: boolean processMessage(android.os.Message)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowStateAnimator: boolean stepAnimationLocked(long)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.notification.NotificationManagerService$8: void run()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.ActivityStack: void clearLaunchTime(com.android.server.am.ActivityRecord)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: int getCurrentFailedPasswordAttempts(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.IWifiManager$Stub: void setFrequencyBand(int,boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.os.IPowerManager: void updateWakeLockUids(android.os.IBinder,int[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.cardemulation.RegisteredServicesCache: boolean registerAidGroupForService(int,int,android.content.ComponentName,android.nfc.cardemulation.AidGroup)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.UiccPhoneBookController: boolean updateAdnRecordsInEfBySearchForSubscriber(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.SystemServer: void startCoreServices()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.CLEAR_APP_CACHE", 
  "android.permission.READ_PROFILE", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.media.ClosedCaptionWidget$CCLineBox: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void initSstIcc()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.bluetooth.IBluetoothManager: java.lang.String getName()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.wm.WindowManagerService: void rebootSafeMode(boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.base.GLTextureTarget: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.INfcAdapter: void setForegroundDispatch(android.app.PendingIntent,android.content.IntentFilter[],android.nfc.TechListParcel)>": [
  "android.permission.NFC"
 ], 
 "<android.nfc.cardemulation.CardEmulation: boolean isDefaultServiceForCategory(android.content.ComponentName,java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.dataconnection.DataConnection: void onConnect(com.android.internal.telephony.dataconnection.DataConnection$ConnectionParams)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.accessibility.CaptioningManager: int getRawUserStyle()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.IContentService$Stub: void addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.provider.Settings$System: long getLongForUser(android.content.ContentResolver,java.lang.String,long,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.handover.BluetoothPeripheralHandover: void onServiceConnected(int,android.bluetooth.BluetoothProfile)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.location.GpsLocationProvider: void reportGeofenceResumeStatus(int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.cardemulation.PreferredServices: void onUidToBackground(int)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.accounts.AccountManager: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.PhoneSubInfo: java.lang.String getIccSerialNumber()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.service.trust.TrustAgentService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.twilight.TwilightService: void onStartUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accounts.AccountManagerService: java.lang.String getPassword(android.accounts.Account)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<android.widget.AutoCompleteTextView: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: boolean isDataAllowed()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.WifiManager: boolean isDeviceToDeviceRttSupported()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.TextServicesManagerService: void setCurrentSpellCheckerSubtypeLocked(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.sip.SipService$SipAutoReg: void onRegistering(android.net.sip.ISipSession)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accessibility.ScreenMagnifier: void <init>(android.content.Context,int,com.android.server.accessibility.AccessibilityManagerService)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.MmsServiceBroker$BinderService: boolean updateStoredMessageStatus(java.lang.String,android.net.Uri,android.content.ContentValues)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.location.LocationBasedCountryDetector$2: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.power.PowerManagerService$SettingsObserver: void onChange(boolean,android.net.Uri)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.app.AlertActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.hardware.input.InputManager$InputDeviceVibrator: void vibrate(long)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.SubscriptionController: int getPhoneId(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.WallpaperManager: void setStream(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void setAutoTimeRequired(android.content.ComponentName,int,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.ActivityManagerNative: void moveTaskToFront(int,int,android.os.Bundle)>": [
  "android.permission.REORDER_TASKS"
 ], 
 "<com.android.internal.telephony.gsm.GsmCellBroadcastHandler: void onQuitting()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.print.IPrintManager$Stub: java.util.List getPrintJobInfos(int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.telecom.TelecomLoaderService: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.tv.TvInputService: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.media.WebVttRenderingWidget$RegionLayout: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.provider.Settings$Secure: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.PersistentDataBlockService: void onBootPhase(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void clearCrossProfileIntentFilters(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.inputmethodservice.AbstractInputMethodService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.Phone: void getNetworkSelectionMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void notifyLockTaskModeChanged(boolean,java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.inputmethodservice.InputMethodService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.pm.PackageManagerService: int getDefaultVerificationResponse()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.backup.Trampoline: void opComplete(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.content.IContentService: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String,android.content.ComponentName)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.server.wm.WindowAnimator: void access$000(com.android.server.wm.WindowAnimator)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void notifyDataConnection(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.AccountManager$3: android.accounts.AccountManager$Future2Task start()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.speech.tts.PlaybackQueueItem: void run()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.widget.LockPatternUtils: boolean checkPassword(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getSubscriberIdForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.filterpacks.base.GLTextureTarget: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.filterpacks.imageproc.DocumentaryFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: int getPasswordMinimumLetters(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void setCdmaRoamingPreference(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.IBatteryStats$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.app.admin.IDevicePolicyManager: boolean getCameraDisabled(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.tts.TtsEngines: boolean isLocaleSetToDefaultForEngine(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: void makeWindowFreezingScreenIfNeededLocked(com.android.server.wm.WindowState)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.Switch: boolean access$1200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.textservice.ITextServicesManager$Stub: boolean isSpellCheckerEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.AbstractThreadedSyncAdapter$ISyncAdapterImpl: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void setSmscAddress(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.WindowManagerService: void access$900(com.android.server.wm.WindowManagerService,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.accounts.AccountManager$4: android.accounts.AccountManager$Future2Task start()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.filterpacks.base.FrameFetch: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.WifiManager: boolean isTdlsSupported()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void pollStateDone()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.net.wifi.WifiManager: boolean startCustomizedScan(android.net.wifi.ScanSettings)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void access$000(com.android.internal.telephony.imsphone.ImsPhone)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.IAccountManager$Stub: void addAccountAsUser(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle,int)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.server.notification.NextAlarmConditionProvider: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.accessibilityservice.IAccessibilityServiceConnection$Stub: android.view.accessibility.AccessibilityWindowInfo getWindow(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.usb.UsbService$Lifecycle: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager: boolean switchUser(android.content.ComponentName,android.os.UserHandle)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.usb.UsbDeviceManager$UsbHandler: void updateAudioSourceFunction()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.uicc.UsimFileHandler: void loadEFImgTransparent(int,int,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IMms$Stub$Proxy: android.net.Uri importTextMessage(java.lang.String,java.lang.String,int,java.lang.String,long,boolean,boolean)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: boolean isSpellCheckerEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ServiceStateTracker: void setRadioPower(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.IContentService$Stub: boolean isSyncActive(android.accounts.Account,java.lang.String,android.content.ComponentName)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<android.nfc.INfcCardEmulation$Stub$Proxy: boolean registerAidGroupForService(int,android.content.ComponentName,android.nfc.cardemulation.AidGroup)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void setCameraDisabled(android.content.ComponentName,boolean,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.nsd.INsdManager$Stub: android.os.Messenger getMessenger()>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void hangupWaitingOrBackground(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.AccessibilityController: void setMagnificationSpecLocked(android.view.MagnificationSpec)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.content.ContentResolver: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<android.net.sip.SipManager: void register(android.net.sip.SipProfile,int,android.net.sip.SipRegistrationListener)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.internal.telephony.RI: void setPreferredNetworkType(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.ClosedCaptionWidget: void <init>(android.content.Context,android.util.AttributeSet)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void setBandMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: void releaseMulticastLock()>": [
  "android.permission.CHANGE_WIFI_MULTICAST_STATE"
 ], 
 "<com.android.contacts.ContactsListActivity: android.net.Uri getContactUri(int)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.test.RenamingDelegatingContext: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.media.AudioManager: void startBluetoothSco()>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: boolean getScreenCaptureDisabled(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: void createDisplayContentLocked(android.view.Display)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.media.SubtitleController: void access$000(android.media.SubtitleController)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.backup.IBackupManager$Stub$Proxy: void restoreAtInstall(java.lang.String,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accessibilityservice.AccessibilityService: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.test.RenamingDelegatingContext: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.nfc.tech.MifareUltralight: byte[] transceive(byte[],boolean)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.MccTable: java.util.Locale getLocaleFromMcc(android.content.Context,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void nvWriteItem(int,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture copyAccountToUser(android.accounts.Account,android.os.UserHandle,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.backup.BackupManagerService$FullBackupObbConnection: boolean backupObbs(android.content.pm.PackageInfo,java.io.OutputStream)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.power.PowerManagerService: void setDozeOverrideFromDreamManagerInternal(int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.IWindowManager$Stub: void disableKeyguard(android.os.IBinder,java.lang.String)>": [
  "android.permission.DISABLE_KEYGUARD"
 ], 
 "<android.filterpacks.imageproc.AlphaBlendFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture hasFeatures(android.accounts.Account,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.view.IInputMethodManager$Stub: java.util.List getEnabledInputMethodSubtypeList(java.lang.String,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.net.NetworkPolicyManagerService: void access$200(com.android.server.net.NetworkPolicyManagerService)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks: void onSwipeFromTop()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.HotplugDetectionAction: void addAndStartAction(com.android.server.hdmi.HdmiCecFeatureAction)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.ZoomControls: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.videosrc.MediaSource: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void updateCarrierMccMncConfiguration(java.lang.String,java.lang.String,android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.filterpacks.imageproc.FixedRotationFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.net.wifi.WifiManager: boolean clearBlacklist()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.net.sip.ISipService$Stub$Proxy: boolean isRegistered(java.lang.String)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.server.sip.SipService$SipAutoReg: void onRegistrationDone(android.net.sip.ISipSession,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void shutdownRadio()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.UiccSmsController: boolean disableCellBroadcast(int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getMsisdnForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager: boolean enableCellBroadcastRange(int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.app.Service: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.telephony.SubscriptionManager: int getPhoneId(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.performance.ThroughputFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void supplyIccPin2ForApp(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.NfcRootActivity: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.backup.Trampoline: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: boolean hasMatchedTetherApnSetting()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.SimpleImageFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.backup.BackupManagerService: android.app.IBackupAgent bindToAgentSynchronous(android.content.pm.ApplicationInfo,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.telephony.SmsManager: boolean copyMessageToIcc(byte[],byte[],int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.internal.telephony.ISub$Stub: void setDefaultDataSubId(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.connectivity.Tethering$TetherInterfaceSM: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.InboundSmsHandler$SmsBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.RECEIVE_SMS", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevice: void addAndStartAction(com.android.server.hdmi.HdmiCecFeatureAction)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.view.menu.MenuBuilder: void changeMenuMode()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.provider.Contacts$People: android.database.Cursor queryGroups(android.content.ContentResolver,long)>": [
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.ISms: int getPremiumSmsPermission(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: boolean setOperatorBrandOverride(java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.content.IContentService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.READ_SYNC_STATS", 
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.dataconnection.DcController$DccDefaultState: void onDataStateChanged(java.util.ArrayList)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void getSmscAddress(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.MediaScanner$MyMediaScannerClient: void setSettingIfNotSet(java.lang.String,android.net.Uri,long)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.NfcService$NfcAdapterService: void setReaderMode(android.os.IBinder,android.nfc.IAppCallback,int,android.os.Bundle)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.BitmapOverlayFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.LocationManagerService: void access$200(com.android.server.LocationManagerService)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void <init>(java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void setPropertiesByCarrier()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getLine1NumberForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.app.DownloadManager: java.lang.Long getMaxBytesOverMobile(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.InputMethodManagerService: void updateInputMethodsFromSettingsLocked(boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getSubscriberId()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture removeAccount(android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.widget.ImageView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.ISub$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void access$9900(com.android.server.wifi.WifiStateMachine)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.ClosedCaptionWidget: void onAttachedToWindow()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.ActivityChooserModel$DataModelPackageMonitor: boolean onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM$SetDnsForwardersErrorState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: long getXtPersistBytes(long)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.ViewAnimator: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.uicc.SIMRecords: void setLocaleFromUsim()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.IWifiManager: void disconnect()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.view.accessibility.CaptioningManager: void notifyFontScaleChanged()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: void resumeRotationLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List getEnabledInputMethodsAndSubtypeListLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.accessibility.CaptioningManager: java.util.Locale getLocale()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.display.AutomaticBrightnessController: void handleLightSensorEvent(long,float)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.bluetooth.BluetoothA2dpSink: void close()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.print.IPrintManager: void stopPrinterStateTracking(android.print.PrinterId,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: void acquireMulticastLock(android.os.IBinder,java.lang.String)>": [
  "android.permission.CHANGE_WIFI_MULTICAST_STATE"
 ], 
 "<android.view.WindowManagerPolicy: void beginLayoutLw(boolean,int,int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneBase: void acquireOwnershipOfImsPhone(com.android.internal.telephony.imsphone.ImsPhone)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.AbstractThreadedSyncAdapter$ISyncAdapterImpl: void startSync(android.content.ISyncContext,java.lang.String,android.accounts.Account,android.os.Bundle)>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.internal.view.menu.ActionMenuItemView: boolean performLongClick()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.ISub: int getSimStateForSubscriber(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.effect.effects.DuotoneEffect: void apply(int,int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.net.wifi.IWifiManager$Stub: boolean enableNetwork(int,boolean)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.RI: void getDeviceIdentity(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CallerInfoAsyncQuery: com.android.internal.telephony.CallerInfoAsyncQuery startQuery(int,android.content.Context,java.lang.String,com.android.internal.telephony.CallerInfoAsyncQuery$OnQueryCompleteListener,java.lang.Object)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.bluetooth.IBluetoothManager$Stub$Proxy: java.lang.String getName()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.filterpacks.videosink.MediaEncoderFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.tv.TvInputService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.content.MutableContextWrapper: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.widget.WaveView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.job.JobService: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.ChooseTypeAndAccountActivity: void onResume()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.server.net.NetworkStatsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.pm.IPackageManager$Stub: void freeStorage(long,android.content.IntentSender)>": [
  "android.permission.CLEAR_APP_CACHE"
 ], 
 "<android.media.AudioService$AudioHandler$2: boolean onError(android.media.MediaPlayer,int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.ViewSwitcher: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.power.PowerManagerService: void acquireWakeLockInternal(android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String,int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void powerPress(long,boolean,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.Context: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.Phone: com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.location.ILocationManager$Stub: void addTestProvider(java.lang.String,com.android.internal.location.ProviderProperties)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setCameraDisabled(android.content.ComponentName,boolean,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.util.IState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.tech.Ndef: android.nfc.NdefMessage getNdefMessage()>": [
  "android.permission.NFC"
 ], 
 "<android.filterpacks.performance.ThroughputFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getCrossProfileWidgetProviders(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ImsSMSDispatcher: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<android.content.IContentService$Stub$Proxy: int getIsSyncableAsUser(android.accounts.Account,java.lang.String,int)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void nvWriteItem(int,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.PasswordEntryKeyboardView: boolean onHoverEvent(android.view.MotionEvent)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.backup.BackupAgent: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.app.AlertActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.app.ExternalMediaFormatActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void queryCdmaRoamingPreference(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.LocalePicker: void updateLocale(java.util.Locale)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getLastDataCallFailCause(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.print.IPrintManager: void removePrintJobStateChangeListener(android.print.IPrintJobStateChangeListener,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.GlobalActions$LongPressAction: boolean onLongPress()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.provider.Telephony$Sms: android.net.Uri addMessageToUri(android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.RadioButton: void updateTextServicesLocaleLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.CoreSettingsObserver: void <init>(com.android.server.am.ActivityManagerService)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.INetworkPolicyManager$Stub: android.net.NetworkPolicy[] getNetworkPolicies()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.widget.AutoCompleteTextView: void updateTextServicesLocaleLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.RequestArcInitiationAction$1: void onSendCompleted(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.INfcAdapter$Stub: boolean enableNdefPush()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.filterpacks.videosrc.SurfaceTextureTarget: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.cardemulation.RegisteredAidCache: void onServicesUpdated(int,java.util.List)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.ims.ImsCall$ImsCallSessionListenerProxy: void callSessionHeld(com.android.ims.internal.ImsCallSession,com.android.ims.ImsCallProfile)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IMms$Stub$Proxy: void sendMessage(int,java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle,android.app.PendingIntent)>": [
  "android.permission.SEND_SMS"
 ], 
 "<com.android.server.notification.NextAlarmConditionProvider: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void pollStateDone()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.view.IWindowManager: void dismissKeyguard()>": [
  "android.permission.DISABLE_KEYGUARD"
 ], 
 "<android.content.SyncActivityTooManyDeletes: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.ActivityGroup: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.hdmi.DeviceDiscoveryAction: void handleSetOsdName(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.SepiaFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: boolean setDeviceOwner(java.lang.String,java.lang.String)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.server.BluetoothA2dpService: boolean resumeSink(android.bluetooth.BluetoothDevice)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.nfc.handover.HandoverDataParser: android.nfc.NdefRecord createBluetoothOobDataRecord()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.filterpacks.imageproc.SaturateFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.ILocationManager: void removeTestProvider(java.lang.String)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.nfc.cardemulation.PreferredServices: boolean unregisterForegroundService(int)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.net.NetworkStatsService: void updateIfaces()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.wifi.WifiServiceImpl: void addToBlacklist(java.lang.String)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.widget.TextView: void updateTextServicesLocaleLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.TextViewWithCircularIndicator: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.ActionMenuView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.RI: void supplyIccPukForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiStateMachine$ObtainingIpState: boolean processMessage(android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IIccPhoneBook: boolean updateAdnRecordsInEfByIndexForSubscriber(int,int,java.lang.String,java.lang.String,int,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void queryTTYMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void clearClearableFlagsLw()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.base.FrameSource: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.pm.Installer: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void invokeOemRilRequestRaw(byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IMms$Stub: void sendMessage(int,java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle,android.app.PendingIntent)>": [
  "android.permission.SEND_SMS"
 ], 
 "<android.widget.CheckedTextView: boolean performLongClick()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.AlarmManagerService: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterfw.core.FilterGraph: void closeFilters(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.job.JobServiceContext: boolean executeRunnableJob(com.android.server.job.controllers.JobStatus)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: void setSyncAutomaticallyAsUser(android.accounts.Account,java.lang.String,boolean,int)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.PhoneBase: void <init>(java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void cleanUpConnection(boolean,com.android.internal.telephony.dataconnection.ApnContext)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.display.DisplayManagerService: void handleDisplayDeviceRemovedLocked(com.android.server.display.DisplayDevice)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void setPreferredNetworkType(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.media.MediaSessionService$SessionManagerImpl$KeyEventWakeLockReceiver: void aquireWakeLockLocked()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.usage.UsageStatsService: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.webkit.WebView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.notification.NotificationListenerService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.ImageSlicer: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.telephony.SubscriptionManager: int setIconTint(int,int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.widget.RadioGroup: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService: boolean access$5300(com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.IApplicationToken$Stub$Proxy: boolean keyDispatchingTimedOut(java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: boolean switchUser(android.content.ComponentName,android.os.UserHandle)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.sip.SipPhone makeSipPhone(java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.media.MediaPlayer: void selectOrDeselectTrack(int,boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.notification.NotificationManagerService$3: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void setCdmaRoamingPreference(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: boolean removeCrossProfileWidgetProvider(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.ActivityView: void release()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$P2pNotSupportedState: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void lockNow()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.INetworkPolicyManager$Stub: boolean isNetworkMetered(android.net.NetworkState)>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.am.ActivityManagerService: boolean sendPendingBroadcastsLocked(com.android.server.am.ProcessRecord)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.beam.BeamReceiveService: void onCreate()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.app.Service: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.media.ClosedCaptionTrack: void show()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GsmConnection: void onRemoteDisconnect(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActiveServices$ServiceRestarter: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.provider.Settings$Secure: long getLongForUser(android.content.ContentResolver,java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiStateMachine$ObtainingIpState: void enter()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void setBandMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.InputMethodManagerService$MyPackageMonitor: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.IBackupAgent$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.cardemulation.DefaultRemovedActivity: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.widget.SlidingTab: void vibrate(long)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.DropBoxManagerService: long trimToFit()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.sip.SipAudioCall: void access$800(android.net.sip.SipAudioCall)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.location.LocationManager: void requestLocationUpdates(android.location.LocationRequest,android.location.LocationListener,android.os.Looper)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void queryAvailableBandMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.pm.PackageManagerService: void performBootDexOpt()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiStateMachine$TetheredState: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.util.Log$1: void onTerribleFailure(java.lang.String,android.util.Log$TerribleFailure,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.CheckBox: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.CrossProcessFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.commands.monkey.MonkeySourceNetworkViews: void setup()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.widget.RotarySelector: void vibrate(long)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.IBackupAgent$Stub: void doBackup(android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.accounts.IAccountManager$Stub: boolean addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setInitialAttachApn(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.uicc.IccCardProxy: void setExternalState(com.android.internal.telephony.IccCardConstants$State)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void setProperties()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.internal.telephony.ISub$Stub: int setDisplayName(java.lang.String,int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.am.CoreSettingsObserver: void beginObserveCoreSettings()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getImeiForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.RI: void getImsRegistrationState(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.base.ObjectSource: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.NewDeviceAction: void addDeviceInfo()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: void updateAppOpsState()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wm.WindowManagerService: boolean access$1100(com.android.server.wm.WindowManagerService)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.app.RestrictionsPinActivity: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.IAccountManager: void removeAccountAsUser(android.accounts.IAccountManagerResponse,android.accounts.Account,boolean,int)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<android.inputmethodservice.KeyboardView: boolean onTouchEvent(android.view.MotionEvent)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.MediaFocusControl: void dispatchMediaKeyEvent(android.view.KeyEvent,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker$1: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.PhoneWindow: void onConfigurationChanged(android.content.res.Configuration)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.numeric.SinWaveFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.HdmiCecFeatureAction: boolean start()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: boolean hasMatchedTetherApnSetting()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.location.ILocationManager$Stub: boolean addGpsStatusListener(android.location.IGpsStatusListener,java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.BluetoothManagerService: boolean isBluetoothPersistedStateOn()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.ImageView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getVoiceMailAlphaTag()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.policy.impl.PolicyControl: void reloadFromSetting(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean onDisconnect()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accounts.AccountManagerService$8: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.ImsSMSDispatcher: void <init>(com.android.internal.telephony.PhoneBase,com.android.internal.telephony.SmsUsageMonitor,com.android.internal.telephony.ImsSMSDispatcher)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.app.ShutdownActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.SubscriptionController: void broadcastDefaultVoiceSubIdChanged(int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.speech.tts.TtsEngines: java.lang.String getDefaultEngine()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void <init>(java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ISms: void sendData(java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager$7: void onSwipeFromBottom()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.text.format.DateUtils: java.util.Formatter formatDateRange(android.content.Context,java.util.Formatter,long,long,int,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneFactory: boolean isPromptEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.power.PowerManagerService: void access$3200(com.android.server.power.PowerManagerService,android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String,int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.ISms$Stub: java.util.List getAllMessagesFromIccEf(java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.nfc.snep.SnepServer$ServerThread: void run()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.nfc.cardemulation.RegisteredAidCache: void updateRoutingLocked()>": [
  "android.permission.VIBRATE"
 ], 
 "<android.nfc.tech.MifareClassic: void increment(int,int)>": [
  "android.permission.NFC"
 ], 
 "<android.print.IPrintManager: void startPrinterStateTracking(android.print.PrinterId,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo getParent()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.location.CountryDetectorBase: void setCountryListener(android.location.CountryListener)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.net.sip.SipAudioCall: void transferToNewSession()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.SystemService: void onStart()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.CLEAR_APP_CACHE", 
  "android.permission.READ_PROFILE", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.provider.CalendarContract$CalendarAlerts: long findNextAlarmTime(android.content.ContentResolver,long)>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordQuality(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.WebVttRenderingWidget: void manageChangeListener()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: boolean getCrossProfileCallerIdDisabledForUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.hardware.display.DisplayManagerInternal: void setDisplayProperties(int,boolean,float,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.policy.impl.RecentApplicationsBackground: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.media.MediaPlayer$4: void run()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.connectivity.Tethering$TetherInterfaceSM$InitialState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.content.SyncManager$ActiveSyncContext: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.am.ActivityStackSupervisor: void handleDisplayRemovedLocked(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone$2: void onECBMExited()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.base.FrameBranch: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.hardware.location.GeofenceHardwareService: void checkPermission(int,int,int)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.am.ActivityManagerService$19: void run()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.videosink.MediaEncoderFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.p2p.IWifiP2pManager: android.os.Messenger getP2pStateMachineMessenger()>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.gsm.GsmConnection: void <init>(android.content.Context,java.lang.String,com.android.internal.telephony.gsm.GsmCallTracker,com.android.internal.telephony.gsm.GsmCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.WindowManagerService: int getInitialDisplayDensity(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.Editor$HandleView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiConfigStore: int getMaxDhcpRetries()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void setProfileName(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.IUiAutomationConnection$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.content.SyncManager$8: void onServiceChanged(java.lang.Object,int,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SYNC_SETTINGS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.nfc.TechListChooserActivity: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.wifi.p2p.WifiP2pManager: android.net.wifi.p2p.WifiP2pManager$Channel initialize(android.content.Context,android.os.Looper,android.net.wifi.p2p.WifiP2pManager$ChannelListener)>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.media.ClosedCaptionWidget: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.RedEyeFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.usage.UserUsageStatsService: void dump(com.android.internal.util.IndentingPrintWriter)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.hardware.IConsumerIrService: int[] getCarrierFrequencies()>": [
  "android.permission.TRANSMIT_IR"
 ], 
 "<android.net.sip.SipManager: android.net.sip.SipSession getSessionFor(android.content.Intent)>": [
  "android.permission.USE_SIP"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.os.Bundle getApplicationRestrictions(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.IsimFileHandler: void getEFLinearRecordSize(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.inputmethodservice.ExtractButton: boolean access$1200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.NativeActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: boolean pingSupplicant()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.TextServicesManagerService: void getSpellCheckerService(java.lang.String,java.lang.String,com.android.internal.textservice.ITextServicesSessionListener,com.android.internal.textservice.ISpellCheckerSessionListener,android.os.Bundle)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.DefaultPhoneNotifier: void notifyDataConnection(com.android.internal.telephony.Phone,java.lang.String,java.lang.String,com.android.internal.telephony.PhoneConstants$DataState)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumLowerCase(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void notifySignalStrength()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.CertBlacklister$BlacklistObserver: void writeBlacklist()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.usb.UsbHostManager: void endUsbDeviceAdded()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.notification.DowntimeConditionProvider: void onEvaluateNextAlarm(android.app.AlarmManager$AlarmClockInfo,long,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.RI: void supplyIccPuk2ForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.AutoFixFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityManagerService$7: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.TextServicesManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.InboundSmsHandler: int addTrackerToRawTable(com.android.internal.telephony.InboundSmsTracker)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.accessibility.ScreenMagnifier: void handleOnRotationChanged(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.INfcTag$Stub: android.nfc.NdefMessage ndefRead(int)>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: boolean handleSetSystemAudioMode(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.BluetoothManagerService: void loadStoredNameAndAddress()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.ActivityManagerService: void startProfilesLocked()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.LocationManagerService: com.android.internal.location.ProviderProperties getProviderProperties(java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.nfc.NfcBackupAgent: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getIccCardStatus(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void dispose()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: void onQuitting()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.NetworkScoreService$ScorerChangedReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setLockTaskPackages(android.content.ComponentName,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine: void access$8900(com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine,boolean)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.LocationManagerService: void requestGeofence(android.location.LocationRequest,android.location.Geofence,android.app.PendingIntent,java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.notification.CountdownConditionProvider: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.WakeLockStateMachine$WaitingState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.provider.Settings$Bookmarks: android.net.Uri add(android.content.ContentResolver,android.content.Intent,java.lang.String,java.lang.String,char,int)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.location.ILocationManager: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_LOCATION_EXTRA_COMMANDS", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: java.lang.String getUserData(android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<com.android.server.wifi.WifiController$DefaultState: void enter()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.internal.telephony.SubscriptionController: int getSimStateForSubscriber(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.WebVttRenderingWidget: void <init>(android.content.Context,android.util.AttributeSet)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.Call: void hangupIfAlive()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.google.android.mms.util.PduCache: boolean put(android.net.Uri,com.google.android.mms.util.PduCacheEntry)>": [
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.wifi.WifiController: void readWifiReEnableDelay()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.TextSwitcher: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.cardemulation.CardEmulationManager: void onHostCardEmulationDeactivated()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.accounts.AccountManagerService: void getAuthToken(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle)>": [
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.server.trust.TrustManagerService: void access$1700(com.android.server.trust.TrustManagerService,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.usage.UsageStatsService: void onStartUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.SMSDispatcher$SettingsObserver: void <init>(android.os.Handler,java.util.concurrent.atomic.AtomicInteger,android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.updates.SmsShortCodesInstallReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.RuimRecords: void onReady()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.InboundSmsHandler: int dispatchMessageRadioSpecific(com.android.internal.telephony.SmsMessageBase)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.storage.DeviceStorageMonitorService: void sendFullNotification()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterfw.core.SyncRunner: void close()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.WindowStateAnimator: void setSurfaceBoundariesLocked(boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.am.ActiveServices: boolean attachApplicationLocked(com.android.server.am.ProcessRecord,java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.backup.FullBackupJob: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.accessibility.ScreenMagnifier$MagnificationController: void reset(boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.media.effect.effects.CrossProcessEffect: void release()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.SubtitleController: void doHide()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.hdmi.DeviceSelectAction: void addAndStartAction(com.android.server.hdmi.HdmiCecFeatureAction)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void setCdmaRoamingPreference(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.ILocationManager$Stub: void setTestProviderLocation(java.lang.String,android.location.Location)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<android.inputmethodservice.AbstractInputMethodService: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.media.ClosedCaptionWidget: void setVisible(boolean)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.base.RetargetFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.backup.PackageManagerBackupAgent: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.ims.internal.ImsCallSession$Listener: void callSessionHoldFailed(com.android.ims.internal.ImsCallSession,com.android.ims.ImsReasonInfo)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.ViewOverlay$OverlayViewGroup: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.filterpacks.imageproc.ResizeFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.RemoteViews$2: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.widget.VideoView$2: void onPrepared(android.media.MediaPlayer)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void sendUSSD(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.net.NetworkPolicyManagerService: void ensureActiveMobilePolicyLocked()>": [
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.net.wifi.IWifiManager: void initializeMulticastFiltering()>": [
  "android.permission.CHANGE_WIFI_MULTICAST_STATE"
 ], 
 "<android.provider.CallLog$Calls: java.lang.String getLastOutgoingCall(android.content.Context)>": [
  "android.permission.READ_CALL_LOG"
 ], 
 "<com.android.server.hdmi.SystemAudioActionFromTv: void startAudioStatusAction()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.os.IVibratorService$Stub: void vibrate(int,java.lang.String,long,int,android.os.IBinder)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.storage.DeviceStorageMonitorService: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.dreams.DreamManagerService: void access$2100(com.android.server.dreams.DreamManagerService,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: boolean getStorageEncryption(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void getOutgoingCallerIdDisplay(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void setKeyguardDisabledFeatures(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.InboundSmsHandler: java.lang.String toString()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accessibility.TouchExplorer$PerformLongPressDelayed: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.service.voice.VoiceInteractionService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,android.net.Uri,android.view.SurfaceHolder)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.dataconnection.DcSwitchStateMachine: java.lang.String getLogRecString(android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: void dispatchMediaKeyRepeatWithWakeLock(android.view.KeyEvent)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService: void readComponentNamesFromSettingLocked(java.lang.String,int,java.util.Set)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.LockSettingsService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.keyguard.KeyguardServiceDelegate: boolean isSecure()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.display.DisplayPowerController: void access$500(com.android.server.display.DisplayPowerController)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.inputmethodservice.KeyboardView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.location.ILocationManager$Stub: void clearTestProviderLocation(java.lang.String)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.BaseCommands: void setRadioCapability(com.android.internal.telephony.RadioCapability,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(android.content.Context,long)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneConnection: void acquireWakeLock()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.IWindowManager$Stub$Proxy: int getInitialDisplayDensity(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.Application: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.DhcpStateMachine$WaitBeforeStartState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterfw.core.AsyncRunner$AsyncRunnerTask: void onCancelled(android.filterfw.core.AsyncRunner$RunnerResult)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.cardemulation.AppChooserActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.app.ActivityManager: void killBackgroundProcesses(java.lang.String)>": [
  "android.permission.RESTART_PACKAGES", 
  "android.permission.KILL_BACKGROUND_PROCESSES"
 ], 
 "<com.android.ims.ImsManager: boolean isEnhanced4gLteModeSettingEnabledByUser(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.NfcAdapter$1: void onPaused(android.app.Activity)>": [
  "android.permission.NFC"
 ], 
 "<android.bluetooth.BluetoothHealth: void close()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.filterfw.core.AsyncRunner$AsyncRunnerTask: void onPostExecute(android.filterfw.core.AsyncRunner$RunnerResult)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ISms$Stub: int getPreferredSmsSubscription()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: com.android.server.hdmi.HdmiCecLocalDevice create(com.android.server.hdmi.HdmiControlService,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.wallpaper.WallpaperService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.PhoneBase: void notifyDataConnection(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.RI: void supplyIccPin2ForApp(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.ims.ImsManager: void setUiTTYMode(android.content.Context,int,int,android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void onSetDependencyMet(java.lang.String,boolean)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ISub$Stub$Proxy: int getAllSubInfoCount()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.location.GpsLocationProvider: void setRequest(com.android.internal.location.ProviderRequest,android.os.WorkSource)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.Service: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IIccPhoneBook: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS"
 ], 
 "<com.android.internal.telephony.ISms: java.util.List getAllMessagesFromIccEf(java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.server.VibratorService: void access$200(com.android.server.VibratorService)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.app.ReceiverRestrictedContext: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void enableLocationUpdates()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.net.NetworkPolicyManagerService: void performSnooze(android.net.NetworkTemplate,int)>": [
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.commands.uiautomator.EventsCommand: void run(java.lang.String[])>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.uicc.SIMFileHandler: void loadEFLinearFixedAll(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getIccSerialNumber()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.RI: void acknowledgeIncomingGsmSmsWithPdu(boolean,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.DelayedMessageBuffer: void processMessagesForDevice(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.Chronometer: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.Session: int addToDisplayWithoutInputChannel(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.SYSTEM_ALERT_WINDOW", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.CellBroadcastHandler: boolean handleSmsMessage(android.os.Message)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.commands.dpm.Dpm: void runSetProfileOwner()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.ResizeFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.notification.DowntimeConditionProvider: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void getPreferredNetworkType(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.sip.SipAudioCall: void close(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.IActivityContainer$Stub$Proxy: void release()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.Connection dialThreeWay(java.lang.String)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.sip.SipSessionGroup$SipSessionImpl$1: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.LocationManagerService: void switchUser(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.IWindowManager$Stub$Proxy: void exitKeyguardSecurely(android.view.IOnKeyguardExitResult)>": [
  "android.permission.DISABLE_KEYGUARD"
 ], 
 "<android.net.wifi.IWifiManager$Stub: android.net.wifi.WifiConfiguration getWifiApConfiguration()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.app.ContextImpl$ApplicationContentResolver: void startSync(android.net.Uri,android.os.Bundle)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.net.INetworkPolicyManager$Stub$Proxy: android.net.NetworkQuotaInfo getNetworkQuotaInfo(android.net.NetworkState)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<com.android.server.wm.WindowStateAnimator: boolean commitFinishDrawingLocked(long)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.provider.Telephony$Sms$Intents: android.telephony.SmsMessage[] getMessagesFromIntent(android.content.Intent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.RI: void requestShutdown(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void fetchRssiLinkSpeedAndFrequencyNative()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.media.MediaSessionService$SettingsObserver: void <init>(com.android.server.media.MediaSessionService,com.android.server.media.MediaSessionService$1)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.widget.PasswordEntryKeyboardView: void showPreview(int)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.NfcService$NfcServiceHandler: boolean llcpActivated(com.android.nfc.DeviceHost$NfcDepEndpoint)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.UiModeManagerService: void onStart()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.print.PrintManager: android.print.PrintJobInfo getPrintJobInfo(android.print.PrintJobId)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.UiccSmsController: boolean updateMessageOnIccEf(java.lang.String,int,int,byte[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.SEND_SMS", 
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<java.net.UR: java.io.InputStream openStream()>": [
  "android.permission.INTERNET"
 ], 
 "<android.nfc.cardemulation.HostApduService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.IAccountManager: void invalidateAuthToken(java.lang.String,java.lang.String)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<android.filterpacks.base.CallbackFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.sip.ISipService$Stub$Proxy: void open3(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.USE_SIP"
 ], 
 "<com.android.server.MountServiceIdler: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager: void <init>(com.android.internal.telephony.PhoneBase)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.service.wallpaper.WallpaperSettingsActivity: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.uicc.RuimRecords: void setMsisdnNumber(java.lang.String,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: int addOrUpdateNetwork(android.net.wifi.WifiConfiguration)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.internal.view.RotationPolicy: boolean isRotationLockToggleVisible(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void onDataSetupCompleteError(android.os.AsyncResult)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevicePlayback: boolean handleRoutingInformation(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.IContentService$Stub$Proxy: android.content.SyncStatusInfo getSyncStatusAsUser(android.accounts.Account,java.lang.String,android.content.ComponentName,int)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.server.sip.SipWakeLock: void acquire(long)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.dataconnection.DcController: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void powerOffRadioSafely(com.android.internal.telephony.dataconnection.DcTrackerBase)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GsmSMSDispatcher: void sendRawPdu(com.android.internal.telephony.SMSDispatcher$SmsTracker)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SMS"
 ], 
 "<android.net.sip.SipAudioCall: void access$1000(android.net.sip.SipAudioCall,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.LockPatternUtils: boolean isLockPatternEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.INfcTag$Stub$Proxy: int formatNdef(int,byte[])>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendRawPdu(com.android.internal.telephony.SMSDispatcher$SmsTracker)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SMS"
 ], 
 "<android.media.Ringtone: void play()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: boolean resetPassword(java.lang.String,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.commands.monkey.MonkeyEventSource: com.android.commands.monkey.MonkeyEvent getNextEvent()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask$EngineThread: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.widget.multiwaveview.GlowPadView: boolean trySwitchToFirstTouchState(float,float)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.provider.Settings$Global: float getFloat(android.content.ContentResolver,java.lang.String,float)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.telephony.TelephonyManager: java.lang.String getGroupIdLevel1(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.notification.NextAlarmConditionProvider$1: void onEvaluate(android.app.AlarmManager$AlarmClockInfo,long,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.power.PowerManagerService$LocalService: void setUserActivityTimeoutOverrideFromWindowManager(long)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.service.trust.TrustAgentService: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IccSmsInterfaceManager: boolean enableCellBroadcast(int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void completeConnection(com.android.internal.telephony.dataconnection.ApnContext)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.SMSDispatcher: void sendSubmitPdu(com.android.internal.telephony.SMSDispatcher$SmsTracker)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void queryCdmaRoamingPreference(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.MultiAutoCompleteTextView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.trust.TrustManagerService: void onBootPhase(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.IContentService$Stub$Proxy: int getIsSyncable(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.app.StatusBarManager: void collapsePanels()>": [
  "android.permission.EXPAND_STATUS_BAR"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void access$19500(com.android.server.wifi.WifiStateMachine,int)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void getEnhancedVoicePrivacy(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getCrossProfileCallerIdDisabledForUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.fingerprint.FingerprintManager: boolean enrolledAndEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ISub$Stub$Proxy: int setDisplayNumber(java.lang.String,int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.filterpacks.imageproc.SharpenFilter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void invokeOemRilRequestStrings(java.lang.String[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.INfcCardEmulation: boolean isDefaultServiceForCategory(int,android.content.ComponentName,java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void handleSrvccStateChanged(int[])>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiController: void access$100(com.android.server.wifi.WifiController)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.telephony.SubscriptionManager: int getActiveSubscriptionInfoCount()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.InputMethodManagerService: com.android.internal.view.InputBindResult startInputLocked(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void <init>(android.content.Context,java.lang.String,com.android.server.wifi.WifiTrafficPoller)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.service.fingerprint.FingerprintUtils: void addFingerprintIdForUser(int,android.content.ContentResolver,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.HotplugDetectionAction: void mayChangeRoutingPath(int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmCallTracker: void hangupAllConnections(com.android.internal.telephony.gsm.GsmCall)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void invokeOemRilRequestRaw(byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.NfcApplication: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.BatteryService$8: void run()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.AccountManager$13: void startTask()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.media.AsyncPlayer: void access$500(android.media.AsyncPlayer)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.Chronometer: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.CalendarViewLegacyDelegate$WeekView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.twilight.TwilightService$LocationHandler: void retrieveLocation()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine: java.lang.String toString()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.location.GpsNavigationMessageListenerTransport: boolean registerWithServer()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void invokeOemRilRequestRaw(byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.uicc.SIMFileHandler: void loadEFTransparent(int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.tv.TvInputInfo$TvInputSettings: boolean access$000(android.content.Context,java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.TintFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.handover.HandoverServer$ConnectionThread: void run()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.nfc.NfcService$TagService: int formatNdef(int,byte[])>": [
  "android.permission.NFC"
 ], 
 "<android.filterpacks.imageproc.AutoFixFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getCDMASubscription(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo getCallerInfo(android.content.Context,java.lang.String)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.net.wifi.WifiManager: boolean isDeviceToApRttSupported()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.widget.TextClock: void access$200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.net.NetworkPolicyManagerService: void access$100(com.android.server.net.NetworkPolicyManagerService)>": [
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.app.admin.IDevicePolicyManager: void setPasswordMinimumLowerCase(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.print.PrintJob: android.print.PrintJobInfo getInfo()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowManagerService: void addTask(int,int,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.SupplicantStateTracker$CompletedState: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.videosrc.MediaSource: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.notification.NotificationManagerService$NotificationListeners: void onBootPhaseAppsCanStart()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.RuimRecords: void handleRuimRefresh(com.android.internal.telephony.uicc.IccRefreshResponse)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager$SettingsObserver: void onChange(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.WiredAccessoryManager: void access$200(com.android.server.WiredAccessoryManager)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.display.DisplayManagerService: void onStartUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.ResizeFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.nfc.cardemulation.CardEmulation: java.util.List getAidsForService(android.content.ComponentName,java.lang.String)>": [
  "android.permission.VIBRATE", 
  "android.permission.NFC"
 ], 
 "<android.nfc.cardemulation.HostApduService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.app.PlatLogoActivity$2$1: boolean onLongClick(android.view.View)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.SystemService: void onSwitchUser(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.NetworkScoreService: boolean updateScores(android.net.ScoredNetwork[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.ISyncAdapter$Stub: void initialize(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS", 
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.media.MediaFocusControl: void sendSimulatedMediaButtonEvent(android.view.KeyEvent,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.ActivityManagerNative: android.content.Intent registerReceiver(android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.media.IAudioService$Stub$Proxy: void setSpeakerphoneOn(boolean)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<android.media.tv.TvView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.content.ContentResolver: int getIsSyncable(android.accounts.Account,java.lang.String)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.nfc.tech.NdefFormatable: void connect()>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.AlarmManagerService: void onSwitchUser(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: com.android.internal.telephony.cdma.CdmaInboundSmsHandler makeInboundSmsHandler(android.content.Context,com.android.internal.telephony.SmsStorageMonitor,com.android.internal.telephony.PhoneBase,com.android.internal.telephony.cdma.CdmaSMSDispatcher)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.ToGrayFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.uicc.IccFileHandler: void loadEFTransparent(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.view.IWindowManager: void enableScreenIfNeeded()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.accounts.IAccountManager$Stub: void getAuthToken(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle)>": [
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevice: boolean handleActiveSource(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accessibility.AccessibilityInputFilter: void access$100(com.android.server.accessibility.AccessibilityInputFilter,long)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: boolean onSignalStrengthResult(android.os.AsyncResult,boolean)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.SIMFileHandler: void updateEFTransparent(int,byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.TtmlRenderingWidget: void <init>(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.updates.ConfigUpdateInstallReceiver: java.security.cert.X509Certificate getCert(android.content.ContentResolver)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.TextClock: void <init>(android.content.Context,android.util.AttributeSet,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accounts.AccountManagerService$7: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.am.ActivityStackSupervisor: void scheduleIdleLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.content.ContentService: int getIsSyncableAsUser(android.accounts.Account,java.lang.String,int)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<android.net.INetworkStatsService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.filterpacks.imageproc.ColorTemperatureFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.filterpacks.base.InputStreamSource: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.AsyncPlayer: void access$200(android.media.AsyncPlayer,android.media.AsyncPlayer$Command)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.accounts.AccountManagerService: void checkManageAccountsPermission()>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService: boolean readTouchExplorationEnabledSettingLocked(com.android.server.accessibility.AccessibilityManagerService$UserState)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: android.telephony.CellLocation getCellLocation()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.ImageStitcher: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.GrainFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.wifi.WifiWatchdogStateMachine$NotConnectedState: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.RECEIVE_WAP_PUSH", 
  "android.permission.WRITE_SMS", 
  "android.permission.ACCESS_WIFI_STATE", 
  "android.permission.RECEIVE_MMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: int getInitialMaxRetry()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IccProvider: boolean updateIccRecordInEf(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>": [
  "android.permission.WRITE_CONTACTS"
 ], 
 "<com.android.internal.telephony.ServiceStateTracker: boolean processPendingRadioPowerOffAfterDataOff()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.display.DisplayManagerService: void requestGlobalDisplayStateInternal(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.content.IContentService$Stub: void removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.server.wifi.WifiStateMachine: void access$7100(com.android.server.wifi.WifiStateMachine)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.sip.ISipService$Stub: void setRegistrationListener(java.lang.String,android.net.sip.ISipSessionListener)>": [
  "android.permission.USE_SIP"
 ], 
 "<android.media.AudioService: void setMode(int,android.os.IBinder)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.BLUETOOTH"
 ], 
 "<android.widget.TextClock$1: void onChange(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.NativeActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.filterpacks.imageproc.ToPackedGrayFilter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.power.ShutdownThread: void rebootOrShutdown(boolean,java.lang.String)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevicePlayback: void onAddressAllocated(int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.UiccPhoneBookController: boolean updateAdnRecordsInEfByIndexForSubscriber(int,int,java.lang.String,java.lang.String,int,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneBase: void setPropertiesByCarrier()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.backup.FullBackupAgent: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingRfcommOn(int)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.dreams.DreamManagerService: void access$2000(com.android.server.dreams.DreamManagerService,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.NfcService: void sendMockNdefTag(android.nfc.NdefMessage)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: boolean getCameraDisabled(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneBase: void updatePhoneObject(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.server.InputMethodManagerService: boolean needsToShowImeSwitchOngoingNotification()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.IContentService: java.util.List getCurrentSyncsAsUser(int)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<android.media.effect.effects.ColorTemperatureEffect: void release()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.provider.ContactsContract$SyncState: android.content.ContentProviderOperation newSetOperation(android.accounts.Account,byte[])>": [
  "android.permission.WRITE_CONTACTS"
 ], 
 "<com.android.server.accessibility.AccessibilityInputFilter: void onInputEvent(android.view.InputEvent,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.view.ViewStub: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.IAudioService$Stub: void setMicrophoneMute(boolean,java.lang.String)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS"
 ], 
 "<com.android.internal.telephony.UiccSmsController: void sendMultipartTextForSubscriber(int,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>": [
  "android.permission.SEND_SMS", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SMS"
 ], 
 "<android.telephony.TelephonyManager: java.lang.String getGroupIdLevel1()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.view.WindowManagerPolicy: boolean isKeyguardSecure()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.notification.DowntimeConditionProvider: void onSubscribe(android.net.Uri)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.location.GpsLocationProvider: void access$1900(com.android.server.location.GpsLocationProvider,int,int,java.lang.Object)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.Presentation$1: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: boolean setRoamingOverride(java.util.List,java.util.List,java.util.List,java.util.List)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.internal.telephony.uicc.AdnRecordLoader: void loadAllFromEF(int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IMms: boolean updateStoredMessageStatus(java.lang.String,android.net.Uri,android.content.ContentValues)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.wm.WindowManagerService: void onDisplayRemoved(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.handover.BluetoothPeripheralHandover: boolean getProfileProxys()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.nfc.beam.BeamReceiveService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.print.IPrintManager$Stub$Proxy: void removePrintJobStateChangeListener(android.print.IPrintJobStateChangeListener,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.RI: void setMute(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager: int getMaximumFailedPasswordsForWipe(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void setActiveAdmin(android.content.ComponentName,boolean,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accounts.AccountManagerService: void updateCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothSocket createRfcommSocketToServiceRecord(java.util.UUID)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.view.ContextThemeWrapper: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void notifySignalStrength()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.service.media.MediaBrowserService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.print.PrintManager: java.util.List getInstalledPrintServices()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevice: boolean handleRecordTvScreen(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IMms: boolean archiveStoredConversation(java.lang.String,long,boolean)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: int enableSystemAppWithIntent(android.content.ComponentName,android.content.Intent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.Call: void hangup()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.IContentService$Stub$Proxy: boolean isSyncPendingAsUser(android.accounts.Account,java.lang.String,android.content.ComponentName,int)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<com.android.server.wm.WindowManagerService: void showCircularMask(boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.notification.RankingHelper: void <init>(android.content.Context,android.os.Handler,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List getEnabledInputMethodSubtypeListLocked(android.content.Context,android.view.inputmethod.InputMethodInfo,boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getDeviceIdentity(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.InboundSmsHandler$CarrierSmsFilter: void onServiceReady(android.service.carrier.ICarrierMessagingService)>": [
  "android.permission.RECEIVE_SMS", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.content.ContentService: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.server.content.SyncManager: void scheduleSyncOperation(com.android.server.content.SyncOperation)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.textservice.ITextServicesManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.ListActivity: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: int getPasswordMinimumLowerCase(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.RotateFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.provider.CalendarContract$Attendees: android.database.Cursor query(android.content.ContentResolver,long,java.lang.String[])>": [
  "android.permission.READ_CALENDAR"
 ], 
 "<android.telephony.SubscriptionManager: int setDisplayName(java.lang.String,int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceCategoryProgramHandler: boolean handleServiceCategoryProgramData(com.android.internal.telephony.cdma.SmsMessage)>": [
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.hardware.location.IGeofenceHardware$Stub$Proxy: boolean pauseGeofence(int,int)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService: void temporaryEnableAccessibilityStateUntilKeyguardRemoved(android.content.ComponentName,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.cardemulation.HostApduService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.widget.WaveView: void onDraw(android.graphics.Canvas)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void onSetPolicyDataEnabled(boolean)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.hardware.IConsumerIrService: void transmit(java.lang.String,int,int[])>": [
  "android.permission.TRANSMIT_IR"
 ], 
 "<com.android.server.connectivity.Tethering: void access$900(com.android.server.connectivity.Tethering)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.display.DisplayPowerState$PhotonicModulator: void requestDisplayState(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.accessibility.ScreenMagnifier: void clear()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.policy.impl.PhoneWindowManager: int interceptKeyBeforeQueueing(android.view.KeyEvent,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.LocationManagerService: com.android.server.LocationManagerService$Receiver checkListenerOrIntentLocked(android.location.ILocationListener,android.app.PendingIntent,int,int,java.lang.String,android.os.WorkSource,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.net.wifi.IWifiManager: boolean acquireWifiLock(android.os.IBinder,int,java.lang.String,android.os.WorkSource)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.speech.tts.TextToSpeechService$AudioSpeechItemV1: int getSpeechRate()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.DownloadManager: long addCompletedDownload(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,long,boolean,boolean)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void getSmscAddress(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.SyncActivityTooManyDeletes: void startSyncReallyDelete()>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.server.location.GeofenceManager: void sendIntent(android.app.PendingIntent,android.content.Intent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: void disableEphemeralNetwork(java.lang.String)>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<com.android.server.MountServiceIdler: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.nfc.INfcTag$Stub$Proxy: void resetTimeouts()>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setTTYMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.SmsUsageMonitor$SettingsObserverHandler: void <init>(android.content.Context,java.util.concurrent.atomic.AtomicBoolean)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.RI: void processResponse(android.os.Parcel)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.DeviceDiscoveryAction: void startPhysicalAddressStage()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.notification.DowntimeConditionProvider: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.media.effect.effects.RedEyeEffect: void apply(int,int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.net.wifi.p2p.IWifiP2pManager$Stub$Proxy: android.os.Messenger getMessenger()>": [
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.filterpacks.videosink.MediaEncoderFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.WindowManagerService: void startFreezingDisplayLocked(boolean,int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.DateTimeView: void setTime(long)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.IccCardProxy: void updateQuietMode()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture addAccountAsUser(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone$1: void run()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.SepiaFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.ILocationManager: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.os.UserHandle createAndInitializeUser(android.content.ComponentName,java.lang.String,java.lang.String,android.content.ComponentName,android.os.Bundle)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.AudioService: void clearAllScoClients(int,boolean)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.BLUETOOTH"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: int getPasswordMinimumNonLetter(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getIccSerialNumber()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.nfc.INfcTag: int setTimeout(int,int)>": [
  "android.permission.NFC"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordHistoryLength(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.TelephonyRegistry: void checkOnSubscriptionsChangedListenerPermission()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.wifi.WifiScanningServiceImpl$WifiScanningStateMachine$DefaultState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.job.JobSchedulerService$JobSchedulerStub: boolean canPersistJobs(int,int)>": [
  "android.permission.RECEIVE_BOOT_COMPLETED"
 ], 
 "<com.android.internal.telephony.gsm.GsmMmiCode: void onQueryCfComplete(android.os.AsyncResult)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.app.ExternalMediaFormatActivity: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.widget.SlidingTab: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GsmInboundSmsHandler: void onUpdatePhoneObject(com.android.internal.telephony.PhoneBase)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: boolean getAutoTimeZone()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.IAccountManager$Stub: void clearPassword(android.accounts.Account)>": [
  "android.permission.MANAGE_ACCOUNTS"
 ], 
 "<android.net.sip.ISipService$Stub: boolean isOpened(java.lang.String)>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void <init>(com.android.internal.telephony.gsm.GSMPhone)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.filterpacks.imageproc.FillLightFilter: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String[] getIsimPcscf()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void setRestrictionsProvider(android.content.ComponentName,android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.media.MediaSessionService$SessionManagerImpl$KeyEventWakeLockReceiver: void onReceiveResult(int,android.os.Bundle)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.AccountManager: java.lang.String blockingGetAuthToken(android.accounts.Account,java.lang.String,boolean)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.nfc.handover.PeripheralHandoverService: void access$000(com.android.nfc.handover.PeripheralHandoverService,android.content.Intent)>": [
  "android.permission.BLUETOOTH", 
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.internal.telephony.ImsSMSDispatcher: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,android.net.Uri,java.lang.String)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.notification.NotificationManagerService$NotificationListeners: void <init>(com.android.server.notification.NotificationManagerService)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cat.CommandParamsFactory: boolean processPlayTone(com.android.internal.telephony.cat.CommandDetails,java.util.List)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.tv.TvInputInfo$TvInputSettings: java.lang.String access$100(android.content.Context,java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.os.IPowerManager$Stub: void releaseWakeLock(android.os.IBinder,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.beam.BeamTransferManager: void onScanCompleted(java.lang.String,android.net.Uri)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<android.app.admin.IDevicePolicyManager: java.util.List getPermittedAccessibilityServices(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.TextServicesManagerService: boolean calledFromValidUser()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.accessibility.ScreenMagnifier$ScreenStateObserver: void access$2900(com.android.server.accessibility.ScreenMagnifier$ScreenStateObserver,java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.UsimFileHandler: void loadEFTransparent(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiStateMachine$ConnectModeState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.accessibility.AccessibilityInputFilter: void onMotionEvent(android.view.MotionEvent,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.NumberPicker$CustomEditText: void access$200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.tech.IsoDep: void close()>": [
  "android.permission.NFC"
 ], 
 "<com.android.server.content.SyncManager: void increaseBackoffSetting(com.android.server.content.SyncOperation)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.IWindowManager$Stub$Proxy: void setAppVisibility(android.os.IBinder,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.telephony.TelephonyManager: java.lang.String getIccSimChallengeResponse(int,int,java.lang.String)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.dataconnection.DataConnection: void dumpToLog()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.updates.SmsShortCodesInstallReceiver: java.security.cert.X509Certificate getCert(android.content.ContentResolver)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.content.SyncManager$SyncHandler: void runSyncFinishedOrCanceledLocked(android.content.SyncResult,com.android.server.content.SyncManager$ActiveSyncContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.app.admin.IDevicePolicyManager: void enforceCanManageCaCerts(android.content.ComponentName)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.RadioButton: void access$200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wm.WindowStateAnimator: boolean performShowLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.provider.ContactsContract$Contacts: android.net.Uri getLookupUri(long,java.lang.String)>": [
  "android.permission.WRITE_CONTACTS", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.server.trust.TrustManagerService$3: boolean onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.UiAutomation: java.util.List getWindows()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.notification.NextAlarmTracker: java.lang.String formatAlarm(android.app.AlarmManager$AlarmClockInfo)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.WebVttTrack: void hide()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.hardware.location.GeofenceHardwareService: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void updateImsPhone()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.accounts.AccountManagerService$2: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setAndBroadcastNetworkSetTime(long)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void getDataCallList(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.notification.NotificationManagerService$NotificationListeners: void <init>(android.content.Context,android.os.Handler,java.lang.Object,com.android.server.notification.ManagedServices$UserProfiles)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.widget.AutoCompleteTextView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.beam.BeamSendService: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.IPhoneSubInfo$Stub: java.lang.String getVoiceMailNumber()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.Phone: void setTTYMode(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.IApplicationToken: boolean keyDispatchingTimedOut(java.lang.String)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.WifiStateMachine$SoftApStartedState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.nfc.NfcService$EnableDisableTask: boolean enableInternal()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.server.connectivity.Tethering$TetherMasterSM: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.location.ILocationManager$Stub: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.server.pm.LauncherAppsService: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.uicc.RuimFileHandler: void updateEFTransparent(int,byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.handover.PeripheralHandoverService: void onBluetoothPeripheralHandoverComplete(boolean)>": [
  "android.permission.BLUETOOTH_ADMIN"
 ], 
 "<com.android.server.am.ActivityStackSupervisor: void acquireLaunchWakelock()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.ActivityStackSupervisor: void scheduleIdleTimeoutLocked(com.android.server.am.ActivityRecord)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.PhoneBase: void setVoiceMessageWaiting(int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.ContrastFilter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.widget.CheckBox: boolean access$1200(android.widget.TextView)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IntRangeManager: boolean updateRanges()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void startDtmf(char)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.LocationManagerService: void clearTestProviderLocation(java.lang.String)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.nfc.snep.SnepServer: boolean handleRequest(com.android.nfc.snep.SnepMessenger,com.android.nfc.snep.SnepServer$Callback)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void enableSystemApp(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void setRadioPower(boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GsmInboundSmsHandler: int dispatchMessage(com.android.internal.telephony.SmsMessageBase)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SMS", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void wipeData(int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.LomoishFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.WifiWatchdogStateMachine$DefaultState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.nfc.ConfirmConnectToWifiNetworkActivity: void clearWallpaper()>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.server.location.GpsLocationProvider: void reportGeofenceRemoveStatus(int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.IccCard: void setIccLockEnabled(boolean,java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.print.PrintManagerService$PrintManagerImpl$2: void onSomePackagesChanged()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.ConfirmConnectToWifiNetworkActivity: void doConnect(android.net.wifi.WifiManager)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.notification.DowntimeConditionProvider$3: void onZenModeChanged()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.location.ComprehensiveCountryDetector: void access$200(com.android.server.location.ComprehensiveCountryDetector)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.accessibility.ScreenMagnifier$MagnificationController: void setScale(float,float,float,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.updates.IntentFirewallInstallReceiver: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.AudioService$VolumeStreamState: void <init>(android.media.AudioService,java.lang.String,int,android.media.AudioService$1)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.display.DisplayManagerService: void access$1300(com.android.server.display.DisplayManagerService,com.android.server.display.DisplayDevice)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiSettingsStore: void handleWifiScanAlwaysAvailableToggled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.base.GLTextureTarget: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.InboundSmsHandler$DeliveringState: boolean processMessage(android.os.Message)>": [
  "android.permission.RECEIVE_WAP_PUSH", 
  "android.permission.WRITE_SMS", 
  "android.permission.RECEIVE_MMS", 
  "android.permission.WAKE_LOCK", 
  "android.permission.RECEIVE_SMS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.READ_SMS"
 ], 
 "<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: long getPollInterval()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void pollState()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<com.android.server.input.InputManagerService: android.view.KeyEvent dispatchUnhandledKey(com.android.server.input.InputWindowHandle,android.view.KeyEvent,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.ImsSMSDispatcher: void sendMultipartText(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,android.net.Uri,java.lang.String)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<android.widget.AutoCompleteTextView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.policy.impl.GlobalActions: void addUsersToMenu(java.util.ArrayList)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.provider.Settings$Global: long getLong(android.content.ContentResolver,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.videosrc.MediaSource: void process(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accessibility.AccessibilityManagerService: boolean readEnabledAccessibilityServicesLocked(com.android.server.accessibility.AccessibilityManagerService$UserState)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.power.ShutdownThread: void beginShutdownSequence(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.VIBRATE", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.WifiAutoJoinController: void newHalScanResults()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.NativeActivity: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void disableSingleLocationUpdate()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.backup.FullBackupAgent: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.widget.CompoundButton: boolean shouldSpeakPasswordsForAccessibility()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void <init>(com.android.internal.telephony.PhoneBase)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wm.InputMonitor: android.view.KeyEvent dispatchUnhandledKey(com.android.server.input.InputWindowHandle,android.view.KeyEvent,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void queryCdmaRoamingPreference(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.sip.SipService: void access$1700(com.android.server.sip.SipService,android.net.NetworkInfo)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.uicc.UiccCard: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.uicc.IccCardStatus,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.ILocationManager$Stub$Proxy: void requestLocationUpdates(android.location.LocationRequest,android.location.ILocationListener,android.app.PendingIntent,java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void setMute(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.SRTTrack: void show()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.net.IEthernetManager$Stub$Proxy: void addListener(android.net.IEthernetServiceListener)>": [
  "android.permission.ACCESS_NETWORK_STATE"
 ], 
 "<android.filterpacks.text.StringLogger: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accounts.AccountManagerService: android.accounts.Account[] getAccountsAsUser(java.lang.String,int)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.uicc.IccCardProxy: void supplyNetworkDepersonalization(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: boolean isLockTaskPermitted(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.appwidget.AppWidgetService: void onStartUser(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.carrier.CarrierMessagingService: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<java.net.UR: java.lang.Object getContent()>": [
  "android.permission.INTERNET"
 ], 
 "<android.accounts.ChooseAccountActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.SmsUsageMonitor: void <init>(android.content.Context)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void setUserRestriction(android.content.ComponentName,java.lang.String,boolean)>": [
  "android.permission.MODIFY_AUDIO_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccount(android.accounts.Account,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.internal.telephony.UiccSmsController: void sendStoredMultipartText(int,java.lang.String,android.net.Uri,java.lang.String,java.util.List,java.util.List)>": [
  "android.permission.SEND_SMS", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SMS"
 ], 
 "<android.accounts.AccountManager: android.accounts.Account[] getAccountsByType(java.lang.String)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.os.IVibratorService$Stub$Proxy: void cancelVibrate(android.os.IBinder)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: void invalidateAuthToken(java.lang.String,java.lang.String)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.server.dreams.DreamManagerService: void access$1900(com.android.server.dreams.DreamManagerService,android.os.IBinder)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.view.IWindowManager$Stub: void getBaseDisplaySize(int,android.graphics.Point)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.ims.internal.IImsEcbmListener$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.accounts.AccountManagerService$10: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.InboundSmsHandler$IdleState: void exit()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.ImageSlicer: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.media.tv.TvInputInfo: boolean isHidden(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.tts.TextToSpeech: int access$1700(android.speech.tts.TextToSpeech)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhoneBase: void getEnhancedVoicePrivacy(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.filterpacks.imageproc.NegativeFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.server.connectivity.Tethering$TetherInterfaceSM$TetheredState: void enter()>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.RI: void getPreferredVoicePrivacy(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.SyncActivityTooManyDeletes: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.net.DhcpStateMachine$WaitBeforeRenewalState: void exit()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.P2pEventManager: void onP2pInRange()>": [
  "android.permission.VIBRATE"
 ], 
 "<android.net.wifi.IWifiManager$Stub: boolean removeNetwork(int)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.location.ILocationManager$Stub$Proxy: android.location.Location getLastLocation(android.location.LocationRequest,java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.widget.SearchView$SearchAutoComplete: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.content.ContentResolver: boolean isSyncPendingAsUser(android.accounts.Account,java.lang.String,int)>": [
  "android.permission.READ_SYNC_STATS"
 ], 
 "<android.content.IIntentReceiver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.media.effect.effects.ColorTemperatureEffect: void apply(int,int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void onEnableApn(int,int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.widget.LockPatternUtils: void saveLockPassword(java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.text.ToUpperCase: void performOpen(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.text.format.DateFormat: java.lang.String getTimeFormatString(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.ToRGBAFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.app.admin.IDevicePolicyManager: void setPasswordMinimumUpperCase(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.provider.Browser: void deleteHistoryTimeFrame(android.content.ContentResolver,long,long)>": [
  "com.android.browser.permission.WRITE_HISTORY_BOOKMARKS", 
  "com.android.browser.permission.READ_HISTORY_BOOKMARKS"
 ], 
 "<com.android.server.wifi.WifiAutoJoinController: int newSupplicantResults(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void setVoiceMessageWaiting(int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.media.MediaSessionService$SessionManagerImpl: int verifySessionsRequest(android.content.ComponentName,int,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.text.method.TextKeyListener: void access$200(android.text.method.TextKeyListener,android.content.ContentResolver)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void acknowledgeLastIncomingCdmaSms(boolean,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.connectivity.PacManager: java.lang.String get(android.net.Uri)>": [
  "android.permission.INTERNET"
 ], 
 "<com.android.server.twilight.TwilightService$2: void onReceive(android.content.Context,android.content.Intent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.InboundSmsHandler: void acknowledgeLastIncomingSms(boolean,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.inputmethodservice.ExtractEditText: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.base.NullFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: android.net.DhcpInfo getDhcpInfo()>": [
  "android.permission.ACCESS_WIFI_STATE"
 ], 
 "<android.filterpacks.imageproc.TintFilter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CDMALTEPhone: void nvResetConfig(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.accounts.AccountManager: android.accounts.Account[] getAccounts()>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.os.PowerManagerInternal: void setDozeOverrideFromDreamManager(int,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.PhoneBase: void getNetworkSelectionMode(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.AliasActivity: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wifi.SupplicantStateTracker$DormantState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.location.GpsLocationProvider: void updateLowPowerMode()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void setCellInfoListRate(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: void changeArcFeatureEnabled(boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.telephony.SubscriptionManager: android.telephony.SubscriptionInfo getActiveSubscriptionInfo(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.internal.telephony.RI: void queryCdmaRoamingPreference(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.inputmethodservice.ExtractButton: boolean shouldSpeakPasswordsForAccessibility()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.INfcTag$Stub$Proxy: android.nfc.TransceiveResult transceive(int,byte[],boolean)>": [
  "android.permission.NFC"
 ], 
 "<android.print.IPrintManager$Stub$Proxy: java.util.List getEnabledPrintServices(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.MediaRecorder: void setAudioSource(int)>": [
  "android.permission.RECORD_AUDIO"
 ], 
 "<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: boolean packageHasActiveAdmins(java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.text.StringLogger: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.media.AudioService$AudioHandler: void access$6000(android.media.AudioService$AudioHandler,android.media.MediaPlayer)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$GroupCreatingState: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.commands.ime.Ime: void run(java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterfw.core.AsyncRunner$AsyncRunnerTask: java.lang.Object doInBackground(java.lang.Object[])>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.telephony.RI: void getDataCallList(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.trust.TrustManagerService: void <init>(android.content.Context)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void onDisconnectDcRetrying(int,android.os.AsyncResult)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.media.AudioService: void <init>(android.content.Context)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.nfc.NfcAdapter: void disableForegroundDispatch(android.app.Activity)>": [
  "android.permission.NFC"
 ], 
 "<android.media.SubtitleController: void access$200(android.media.SubtitleController,android.media.SubtitleTrack)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void getPreferredNetworkType(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.location.LocationManager: void addProximityAlert(double,double,float,long,android.app.PendingIntent)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.location.LocationManager: void clearTestProviderStatus(java.lang.String)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.internal.telephony.ISub: int getDefaultVoiceSubId()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.TextServicesManagerService$TextServicesMonitor: void onPackageModified(java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.media.MediaSessionService: void access$1300(com.android.server.media.MediaSessionService)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.IBackupAgent$Stub$Proxy: void doFullBackup(android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.WifiService: void onSwitchUser(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.net.wifi.IWifiManager$Stub: boolean releaseWifiLock(android.os.IBinder)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.TextProgressBar: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.textservice.ITextServicesManager: void setCurrentSpellCheckerSubtype(java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.MediaPlayer: void addTimedTextSource(java.lang.String,java.lang.String)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks: void onSwipeFromRight()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.content.ContentResolver: void setSyncAutomaticallyAsUser(android.accounts.Account,java.lang.String,boolean,int)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.server.media.MediaSessionService$SettingsObserver: void <init>(com.android.server.media.MediaSessionService)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.CommandsInterface: void switchWaitingOrHoldingAndActive(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$DefaultState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.content.ContentResolver: void startSync(android.net.Uri,android.os.Bundle)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<com.android.internal.telephony.dataconnection.DctController$2: void onChange(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.IWindowSession: int addToDisplayWithoutInputChannel(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.SYSTEM_ALERT_WINDOW", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.hdmi.RequestArcInitiationAction: boolean processCommand(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.content.IContentService$Stub$Proxy: boolean getMasterSyncAutomaticallyAsUser(int)>": [
  "android.permission.READ_SYNC_SETTINGS"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void clearPackagePersistentPreferredActivities(android.content.ComponentName,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void setActivePasswordState(int,int,int,int,int,int,int,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDevicePlayback: void onHotplug(int,boolean)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.LocationManagerService: int getCallerAllowedResolutionLevel()>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String getSelectedInputMethod()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.test.RenamingDelegatingContext: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.power.PowerManagerService: void setTemporaryScreenBrightnessSettingOverrideInternal(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.view.accessibility.CaptioningManager: void notifyEnabledChanged()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.WiredAccessoryManager: void systemReady()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void access$000(com.android.internal.telephony.cdma.CdmaServiceStateTracker)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.PhoneBase: int getSubId()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.RI: void <init>(android.content.Context,int,int,java.lang.Integer)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.MountServiceIdler: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.ISms$Stub: void sendText(java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.accessibility.TouchExplorer$DoubleTapDetector: void onMotionEvent(android.view.MotionEvent,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: boolean handleActiveSource(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.LocationManagerService: void clearTestProviderEnabled(java.lang.String)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<com.android.internal.telephony.cat.CatService: com.android.internal.telephony.cat.AppInterface getInstance()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.base.FrameFetch: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.RequestArcInitiationAction: void disableArcTransmission()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void revertToNitzTimeZone()>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.SET_TIME_ZONE"
 ], 
 "<android.hardware.location.GeofenceHardwareService: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.provider.Settings$Secure: int getIntForUser(android.content.ContentResolver,java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.hardware.input.InputManager$InputDeviceVibrator: void vibrate(long[],int,android.media.AudioAttributes)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.os.IVibratorService: void vibratePattern(int,java.lang.String,long[],int,int,android.os.IBinder)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.app.TabActivity: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.am.ActivityManagerService: boolean startUser(int,boolean)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.server.dreams.DreamManagerService: android.content.ComponentName getDozeComponent(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.MediaFocusControl: void onReevaluateRemoteControlDisplays()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.ims.ImsCall$Listener: void onCallStartFailed(com.android.ims.ImsCall,com.android.ims.ImsReasonInfo)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.app.backup.BackupAgentHelper: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.gsm.GsmSMSDispatcher: void sendMultipartText(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,android.net.Uri,java.lang.String)>": [
  "android.permission.WRITE_SMS"
 ], 
 "<com.google.android.mms.pdu.PduPersister: void updateHeaders(android.net.Uri,com.google.android.mms.pdu.SendReq)>": [
  "android.permission.READ_SMS"
 ], 
 "<com.android.internal.app.ResolverActivity: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void onResetDone(android.os.AsyncResult)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.widget.DateTimeView: void updateTextServicesLocaleLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.wifi.IWifiManager$Stub$Proxy: boolean removeNetwork(int)>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<android.widget.RadioButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.text.ToUpperCase: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean onSignalStrengthResult(android.os.AsyncResult,boolean)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.ITelephonyRegistry$Stub: void notifyDataConnection(int,boolean,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.NetworkCapabilities,int,boolean)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.NfcAdapter: void setP2pModes(int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.service.voice.VoiceInteractionService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.content.IContentService: void cancelRequest(android.content.SyncRequest)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.app.IActivityManager: void updatePersistentConfiguration(android.content.res.Configuration)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: boolean setInternalDataEnabled(boolean)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.speech.tts.TextToSpeechService$1: int speak(android.os.IBinder,java.lang.CharSequence,int,android.os.Bundle,java.lang.String)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.AccountManager$2: void doWork()>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.gsm.GsmSMSDispatcher: void <init>(com.android.internal.telephony.PhoneBase,com.android.internal.telephony.SmsUsageMonitor,com.android.internal.telephony.ImsSMSDispatcher)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: boolean onTrySetupData(java.lang.String)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.telecom.InCallService: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.lights.LightsService: void onSwitchUser(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordQuality(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: boolean handleRecordTvScreen(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.InputMethodManagerService: void <init>(android.content.Context,com.android.server.wm.WindowManagerService)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.IActivityManager: void moveTaskBackwards(int)>": [
  "android.permission.REORDER_TASKS"
 ], 
 "<android.nfc.NfcAdapter: void setNdefPushMessage(android.nfc.NdefMessage,android.app.Activity,int)>": [
  "android.permission.NFC"
 ], 
 "<android.media.SubtitleController: void doShow()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.nfc.tech.MifareClassic: byte[] transceive(byte[],boolean)>": [
  "android.permission.NFC"
 ], 
 "<com.android.internal.telephony.gsm.GsmSMSDispatcher: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.WRITE_SMS"
 ], 
 "<android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask: java.lang.Integer doInBackground(java.lang.Void[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.net.sip.SipManager: android.net.sip.SipProfile[] getListOfProfiles()>": [
  "android.permission.USE_SIP"
 ], 
 "<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: java.util.List getAdnRecordsInEf(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS"
 ], 
 "<android.bluetooth.BluetoothAvrcpController: void finalize()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.service.wallpaper.WallpaperSettingsActivity: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.UiccSmsController: void sendDataForSubscriber(int,java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>": [
  "android.permission.SEND_SMS", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SMS"
 ], 
 "<com.android.server.location.FlpHardwareProvider: void onGeofencePause(int,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTrackerBase: void completeConnection(com.android.internal.telephony.dataconnection.ApnContext)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void reportSuccessfulPasswordAttempt(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.display.AutomaticBrightnessController: void access$200(com.android.server.display.AutomaticBrightnessController,long,float)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.accounts.AccountManager$AmsTask: void doWork()>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<android.filterpacks.imageproc.RedEyeFilter: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.media.AudioService$ScoClient: void binderDied()>": [
  "android.permission.READ_PROFILE", 
  "android.permission.BLUETOOTH"
 ], 
 "<android.app.ActivityManagerNative: void killAllBackgroundProcesses()>": [
  "android.permission.KILL_BACKGROUND_PROCESSES"
 ], 
 "<com.android.internal.telephony.cdma.CDMAPhone: void invokeOemRilRequestRaw(byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.telephony.TelephonyManager: java.lang.String getDeviceSoftwareVersion()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.updates.CarrierProvisioningUrlsInstallReceiver: java.security.cert.X509Certificate getCert(android.content.ContentResolver)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.NfcRootActivity: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.pm.PackageManagerService: boolean setApplicationHiddenSettingAsUser(java.lang.String,boolean,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.location.LocationBlacklist: void reloadBlacklistLocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.location.ILocationManager$Stub$Proxy: void requestGeofence(android.location.LocationRequest,android.location.Geofence,android.app.PendingIntent,java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.net.wifi.WifiManager: boolean startScan()>": [
  "android.permission.CHANGE_WIFI_STATE"
 ], 
 "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: android.content.ComponentName getCurRecognizer(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void nvWriteCdmaPrl(byte[],android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.RI: void sendEnvelope(java.lang.String,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.InputMethodManagerService: boolean switchToLastInputMethod(android.os.IBinder)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin getActiveAdminForCallerLocked(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<android.widget.ImageButton: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.hardware.location.GeofenceHardwareService: void removeStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.app.ResolverActivity: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.accounts.IAccountManager$Stub$Proxy: void hasFeatures(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String[])>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.print.IPrintManager$Stub$Proxy: java.util.List getInstalledPrintServices(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: boolean handleRoutingInformation(com.android.server.hdmi.HdmiCecMessage)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: boolean setupData(com.android.internal.telephony.dataconnection.ApnContext,int)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.SeekBar: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.location.ILocationManager$Stub: void setTestProviderEnabled(java.lang.String,boolean)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.ACCESS_MOCK_LOCATION"
 ], 
 "<android.app.admin.IDevicePolicyManager: void setPasswordMinimumSymbols(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.nfc.cardemulation.RegisteredServicesCache: void invalidateCache(int)>": [
  "android.permission.VIBRATE", 
  "android.permission.READ_PROFILE", 
  "android.permission.NFC"
 ], 
 "<com.android.internal.widget.LockPatternUtils: byte[] passwordToHash(java.lang.String,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.am.ActivityManagerService$24: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.service.notification.ConditionProviderService: void setWallpaper(java.io.InputStream)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.telephony.dataconnection.DcTracker: void onDataSetupCompleteError(android.os.AsyncResult)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.ConsumerIrService: void transmit(java.lang.String,int,int[])>": [
  "android.permission.TRANSMIT_IR"
 ], 
 "<android.location.LocationManager: android.location.LocationProvider getProvider(java.lang.String)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.nfc.INfcAdapter$Stub: void addNfcUnlockHandler(android.nfc.INfcUnlockHandler,int[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.squareup.okhttp.internal.http.DelegatingHttpsURLConnection: void connect()>": [
  "android.permission.INTERNET"
 ], 
 "<android.accounts.AccountManager: void setPassword(android.accounts.Account,java.lang.String)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<android.nfc.tech.NfcV: byte[] transceive(byte[])>": [
  "android.permission.NFC"
 ], 
 "<android.app.ActivityGroup: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.sip.SipPhone: void nvReadItem(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.accounts.AccountManagerService$4: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>": [
  "android.permission.GET_ACCOUNTS"
 ], 
 "<com.android.internal.telephony.ISub$Stub$Proxy: int getDefaultSubId()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.widget.RemoteViewsService: void setWallpaper(android.graphics.Bitmap)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<com.android.internal.content.PackageMonitor: void onPackageRemoved(java.lang.String,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GsmServiceStateTracker: void onRestrictedStateChanged(android.os.AsyncResult)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void enableEnhancedVoicePrivacy(boolean,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.nfc.ForegroundUtils: void onForegroundActivitiesChanged(int,int,boolean)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneBase: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.wifi.WifiScanningServiceImpl$WifiScanningStateMachine$PausedState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.view.IWindowManager$Stub: void prepareAppTransition(int,boolean)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.NsdService$NsdStateMachine: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.ims.ImsManager: boolean isNonTtyOrTtyOnVolteEnabled(android.content.Context)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.devicepolicy.DevicePolicyManagerService: void updateUserSetupComplete()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.UiccSmsController: boolean enableCellBroadcastRangeForSubscriber(int,int,int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE", 
  "android.permission.RECEIVE_SMS"
 ], 
 "<android.filterpacks.imageproc.ImageStitcher: void performProcess(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<com.android.internal.widget.LockPatternUtils: boolean isLockPatternEnabled(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.InputMethodManagerService: boolean chooseNewDefaultIMELocked()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.IccPhoneBookInterfaceManager: java.util.List getAdnRecordsInEf(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_CONTACTS"
 ], 
 "<com.android.internal.telephony.PhoneSubInfoController: java.lang.String getGroupIdLevel1ForSubscriber(int)>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<com.android.server.LocationManagerService$Receiver: boolean callProviderEnabledLocked(java.lang.String,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.MediaPlayer$2: int addTrack()>": [
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: boolean getAutoTimeZone()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.BeamShareActivity: void parseShareIntentAndFinish(android.content.Intent)>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: void startDtmf(char)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.display.DisplayPowerController: void access$400(com.android.server.display.DisplayPowerController)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.MountService: void copyLocaleFromMountService()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.am.ActivityStackSupervisor: void handleLaunchTaskBehindCompleteLocked(com.android.server.am.ActivityRecord)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.hardware.IConsumerIrService$Stub: int[] getCarrierFrequencies()>": [
  "android.permission.TRANSMIT_IR"
 ], 
 "<android.media.effect.effects.BlackWhiteEffect: void release()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.widget.PasswordEntryKeyboardView: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.content.ContentService: void setSyncAutomaticallyAsUser(android.accounts.Account,java.lang.String,boolean,int)>": [
  "android.permission.WRITE_SYNC_SETTINGS"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void setPasswordQuality(android.content.ComponentName,int,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void access$900(com.android.internal.telephony.imsphone.ImsPhoneCallTracker,com.android.ims.ImsCall,com.android.internal.telephony.Call$State,int)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.test.IsolatedContext$MockAccountManager: java.lang.String getPassword(android.accounts.Account)>": [
  "android.permission.AUTHENTICATE_ACCOUNTS"
 ], 
 "<android.widget.RemoteViewsAdapter$RemoteViewsFrameLayout: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.backup.BackupManagerService: void prepareOperationTimeout(int,long,com.android.server.backup.BackupManagerService$BackupRestoreTask)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setPowerStateToDesired()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.internal.telephony.imsphone.ImsPhone: void queryCdmaRoamingPreference(android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.inputmethodservice.ExtractEditText: void playSoundEffect(int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.nfc.INfcAdapter: void invokeBeamInternal(android.nfc.BeamShareData)>": [
  "android.permission.VIBRATE"
 ], 
 "<android.filterpacks.imageproc.DrawRectFilter: void close(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.text.method.TextKeyListener$SettingsObserver: void onChange(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.hardware.display.DisplayManagerInternal: void setDisplayInfoOverrideFromWindowManager(int,android.view.DisplayInfo)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.internal.telephony.test.SimulatedCommands: void <init>()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.backup.SystemBackupAgent: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wm.WindowManagerService: void readForcedDisplaySizeAndDensityLocked(com.android.server.wm.DisplayContent)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.power.PowerManagerService: void setTemporaryScreenAutoBrightnessAdjustmentSettingOverrideInternal(float)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.accounts.IAccountManager: void getAuthToken(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle)>": [
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.server.pm.PackageManagerService$AsecInstallArgs: boolean checkFreeStorage(com.android.internal.app.IMediaContainerService)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterfw.core.Filter: void performTearDown(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.usb.UsbService: void <init>(android.content.Context)>": [
  "android.permission.BROADCAST_STICKY", 
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.wifi.p2p.WifiP2pServiceImpl$P2pStateMachine$UserAuthorizingInviteRequestState: boolean processMessage(android.os.Message)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.nfc.INfcAdapter$Stub$Proxy: boolean disableNdefPush()>": [
  "android.permission.BLUETOOTH"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: void setCameraDisabled(android.content.ComponentName,boolean,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.media.effect.effects.BackDropperEffect: void release()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.wm.WindowAnimator$1: void run()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<android.app.ExpandableListActivity: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.connectivity.Tethering$TetherInterfaceSM$StartingState: void exit()>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY"
 ], 
 "<android.hardware.location.IGeofenceHardware$Stub: boolean addCircularFence(int,android.hardware.location.GeofenceHardwareRequestParcelable,android.hardware.location.IGeofenceHardwareCallback)>": [
  "android.permission.ACCESS_FINE_LOCATION", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<android.filterpacks.imageproc.CropFilter: void open(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.RECORD_AUDIO", 
  "android.permission.CAMERA"
 ], 
 "<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask$1: void run(android.accounts.AccountManagerFuture)>": [
  "android.permission.MANAGE_ACCOUNTS", 
  "android.permission.AUTHENTICATE_ACCOUNTS", 
  "android.permission.GET_ACCOUNTS", 
  "android.permission.USE_CREDENTIALS"
 ], 
 "<com.android.server.LocationManagerService: void handleLocationChanged(android.location.Location,boolean)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.CropRectFilter: void performClose(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<android.bluetooth.BluetoothHealth: void <init>(android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener)>": [
  "android.permission.BLUETOOTH"
 ], 
 "<com.android.internal.telephony.UiccPhoneBookController: int[] getAdnRecordsSizeForSubscriber(int,int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.LocationManagerService$Receiver: void decrementPendingBroadcastsLocked()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ISub$Stub$Proxy: java.util.List getAllSubInfoList()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.view.textservice.TextServicesManager: boolean isSpellCheckerEnabled()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.DockObserver: void setActualDockStateLocked(int)>": [
  "android.permission.WAKE_LOCK", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.server.hdmi.DelayedMessageBuffer: void processAllMessages()>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.commands.wm.Wm: void run(java.lang.String[])>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.KILL_BACKGROUND_PROCESSES", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.RESTART_PACKAGES", 
  "android.permission.GET_ACCOUNTS"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub: long getPasswordExpiration(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.internal.widget.LockPatternUtils: void setBiometricWeakLivelinessEnabled(boolean)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.app.IWallpaperManager$Stub: android.os.ParcelFileDescriptor setWallpaper(java.lang.String)>": [
  "android.permission.SET_WALLPAPER"
 ], 
 "<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getMaximumFailedPasswordsForWipe(android.content.ComponentName,int)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.BatteryService: void onSwitchUser(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.PhoneProxy: void setCdmaSubscription(int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.hdmi.HdmiCecLocalDeviceTv: void <init>(com.android.server.hdmi.HdmiControlService)>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.nfc.DeviceHost$DeviceHostListener: void onRemoteFieldDeactivated()>": [
  "android.permission.VIBRATE"
 ], 
 "<com.android.internal.telephony.gsm.GSMPhone: boolean updateCurrentCarrierInProvider()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<android.filterpacks.imageproc.DrawOverlayFilter: void transferInputFrames(android.filterfw.core.FilterContext)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.internal.telephony.ISub$Stub: int clearSubInfo()>": [
  "android.permission.READ_PHONE_STATE"
 ], 
 "<android.service.carrier.CarrierMessagingService: void sendStickyBroadcast(android.content.Intent)>": [
  "android.permission.BROADCAST_STICKY"
 ], 
 "<com.android.server.wm.WindowManagerService: void enableScreenIfNeededLocked()>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.commands.monkey.Monkey: void main(java.lang.String[])>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ], 
 "<com.android.commands.ime.Ime: void runList()>": [
  "android.permission.READ_PROFILE"
 ], 
 "<com.android.server.voiceinteraction.VoiceInteractionManagerService: void onBootPhase(int)>": [
  "android.permission.READ_PROFILE", 
  "android.permission.WRITE_SETTINGS", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.ACCESS_COARSE_LOCATION"
 ], 
 "<com.android.internal.telephony.test.SimulatedCommands: void setUiccSubscription(int,int,int,int,android.os.Message)>": [
  "android.permission.WAKE_LOCK"
 ], 
 "<com.android.server.am.CompatModePackages: void setFrontActivityScreenCompatModeLocked(int)>": [
  "android.permission.SEND_SMS", 
  "android.permission.RECEIVE_BOOT_COMPLETED", 
  "android.permission.ACCESS_COARSE_LOCATION", 
  "android.permission.WAKE_LOCK", 
  "android.permission.CHANGE_WIFI_STATE", 
  "android.permission.READ_PHONE_STATE", 
  "android.permission.BROADCAST_STICKY", 
  "android.permission.WRITE_SETTINGS"
 ]
}
UNIQUE_IDENTIFIER;<android.telephony.PhoneNumberUtils: byte[] numberToCalledPartyBCD(java.lang.String)>
UNIQUE_IDENTIFIER;<android.telephony.PhoneNumberUtils: java.lang.String getNumberFromIntent(android.content.Intent,android.content.Context)>
UNIQUE_IDENTIFIER;<android.telephony.PhoneNumberUtils: java.lang.String getStrippedReversed(java.lang.String)>
UNIQUE_IDENTIFIER;<android.telephony.PhoneNumberUtils: java.lang.String getUsernameFromUriNumber(java.lang.String)>
UNIQUE_IDENTIFIER;<android.telephony.TelephonyManager: java.lang.String getCompleteVoiceMailNumber()>
UNIQUE_IDENTIFIER;<android.telephony.TelephonyManager: java.lang.String getDeviceId()>
UNIQUE_IDENTIFIER;<android.telephony.TelephonyManager: java.lang.String getDeviceSoftwareVersion()>
UNIQUE_IDENTIFIER;<android.telephony.TelephonyManager: java.lang.String getIsimDomain()>
UNIQUE_IDENTIFIER;<android.telephony.TelephonyManager: java.lang.String getIsimImpi()>
UNIQUE_IDENTIFIER;<android.telephony.TelephonyManager: java.lang.String getLine1AlphaTag()>
UNIQUE_IDENTIFIER;<android.telephony.TelephonyManager: java.lang.String getLine1Number()>
UNIQUE_IDENTIFIER;<android.telephony.TelephonyManager: java.lang.String getMsisdn()>
UNIQUE_IDENTIFIER;<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>
UNIQUE_IDENTIFIER;<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>
UNIQUE_IDENTIFIER;<android.telephony.TelephonyManager: java.lang.String getVoiceMailAlphaTag()>
UNIQUE_IDENTIFIER;<android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber()>
SMS_MMS;<android.provider.Telephony$Mms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[])>
SMS_MMS;<android.provider.Telephony$Mms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],java.lang.String,java.lang.String)>
SMS_MMS;<android.provider.Telephony$Sms$Intents: android.telephony.SmsMessage[] getMessagesFromIntent(android.content.Intent)>
SMS_MMS;<android.provider.Telephony$Sms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[])>
SMS_MMS;<android.provider.Telephony$Sms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],java.lang.String,java.lang.String)>
SMS_MMS;<android.telephony.SmsMessage: byte[] getPdu()>
SMS_MMS;<android.telephony.SmsMessage: byte[] getUserData()>
SMS_MMS;<android.telephony.SmsMessage: int getIndexOnIcc()>
SMS_MMS;<android.telephony.SmsMessage: int getIndexOnSim()>
SMS_MMS;<android.telephony.SmsMessage: int getProtocolIdentifier()>
SMS_MMS;<android.telephony.SmsMessage: int getStatus()>
SMS_MMS;<android.telephony.SmsMessage: int getStatusOnIcc()>
SMS_MMS;<android.telephony.SmsMessage: int getStatusOnSim()>
SMS_MMS;<android.telephony.SmsMessage: int getTPLayerLengthForPDU(java.lang.String)>
SMS_MMS;<android.telephony.SmsMessage: java.lang.String getDisplayMessageBody()>
SMS_MMS;<android.telephony.SmsMessage: java.lang.String getDisplayOriginatingAddress()>
SMS_MMS;<android.telephony.SmsMessage: java.lang.String getEmailBody()>
SMS_MMS;<android.telephony.SmsMessage: java.lang.String getEmailFrom()>
SMS_MMS;<android.telephony.SmsMessage: java.lang.String getMessageBody()>
SMS_MMS;<android.telephony.SmsMessage: java.lang.String getOriginatingAddress()>
SMS_MMS;<android.telephony.SmsMessage: java.lang.String getPseudoSubject()>
SMS_MMS;<android.telephony.SmsMessage: java.lang.String getServiceCenterAddress()>
SMS_MMS;<android.telephony.SmsMessage: long getTimestampMillis()>
SMS_MMS;<android.telephony.SmsManager: java.util.ArrayList getAllMessagesFromIcc()>
LOCATION_INFORMATION;<android.location.Address: double getLatitude()>
LOCATION_INFORMATION;<android.location.Address: double getLongitude()>
LOCATION_INFORMATION;<android.location.Address: java.lang.String getAddressLine(int)>
LOCATION_INFORMATION;<android.location.Address: java.lang.String getAdminArea()>
LOCATION_INFORMATION;<android.location.Address: java.lang.String getCountryCode()>
LOCATION_INFORMATION;<android.location.Address: java.lang.String getCountryName()>
LOCATION_INFORMATION;<android.location.Address: java.lang.String getFeatureName()>
LOCATION_INFORMATION;<android.location.Address: java.lang.String getLocality()>
LOCATION_INFORMATION;<android.location.Address: java.lang.String getPhone()>
LOCATION_INFORMATION;<android.location.Address: java.lang.String getPostalCode()>
LOCATION_INFORMATION;<android.location.Address: java.lang.String getPremises()>
LOCATION_INFORMATION;<android.location.Address: java.lang.String getSubAdminArea()>
LOCATION_INFORMATION;<android.location.Address: java.lang.String getSubLocality()>
LOCATION_INFORMATION;<android.location.Address: java.lang.String getSubThoroughfare()>
LOCATION_INFORMATION;<android.location.Address: java.lang.String getThoroughfare()>
LOCATION_INFORMATION;<android.location.Address: java.lang.String getUrl()>
LOCATION_INFORMATION;<android.location.Address: java.util.Locale getLocale()>
LOCATION_INFORMATION;<android.location.Location: android.os.Bundle getExtras()>
LOCATION_INFORMATION;<android.location.Location: double getAltitude()>
LOCATION_INFORMATION;<android.location.Location: double getLatitude()>
LOCATION_INFORMATION;<android.location.Location: double getLongitude()>
LOCATION_INFORMATION;<android.location.Location: float getBearing()>
LOCATION_INFORMATION;<android.location.Location: float getSpeed()>
LOCATION_INFORMATION;<android.location.Location: java.lang.String getProvider()>
LOCATION_INFORMATION;<android.location.Location: long getTime()>
LOCATION_INFORMATION;<android.location.LocationManager: android.location.GpsStatus getGpsStatus(android.location.GpsStatus)>
LOCATION_INFORMATION;<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>
LOCATION_INFORMATION;<android.location.LocationManager: android.location.LocationProvider getProvider(java.lang.String)>
LOCATION_INFORMATION;<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>
LOCATION_INFORMATION;<android.location.LocationManager: java.util.List getAllProviders()>
LOCATION_INFORMATION;<android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()>
LOCATION_INFORMATION;<android.telephony.cdma.CdmaCellLocation: int getBaseStationId()>
LOCATION_INFORMATION;<android.telephony.cdma.CdmaCellLocation: int getBaseStationLatitude()>
LOCATION_INFORMATION;<android.telephony.cdma.CdmaCellLocation: int getBaseStationLongitude()>
LOCATION_INFORMATION;<android.telephony.cdma.CdmaCellLocation: int getNetworkId()>
LOCATION_INFORMATION;<android.telephony.cdma.CdmaCellLocation: int getSystemId()>
LOCATION_INFORMATION;<android.telephony.gsm.GsmCellLocation: int getCid()>
LOCATION_INFORMATION;<android.telephony.gsm.GsmCellLocation: int getLac()>
LOCATION_INFORMATION;<android.telephony.gsm.GsmCellLocation: int getPsc()>
IMAGE;<android.media.ExifInterface: boolean getLatLong(float[])>
IMAGE;<android.media.ExifInterface: byte[] getThumbnail()>
FILE_INFORMATION;<android.app.ActivityManagerProxy: android.os.ParcelFileDescriptor openContentUri(android.net.Uri)>
CONTACT_INFORMATION;<android.provider.Contacts$ContactMethods: java.lang.CharSequence getDisplayLabel(android.content.Context,int,int,java.lang.CharSequence)>
CONTACT_INFORMATION;<android.provider.Contacts$Organizations: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence)>
CONTACT_INFORMATION;<android.provider.Contacts$People: android.database.Cursor queryGroups(android.content.ContentResolver,long)>
CONTACT_INFORMATION;<android.provider.Contacts$People: android.net.Uri addToGroup(android.content.ContentResolver,long,java.lang.String)>
CONTACT_INFORMATION;<android.provider.Contacts$People: long tryGetMyContactsGroupId(android.content.ContentResolver)>
CONTACT_INFORMATION;<android.provider.Contacts$Phones: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence)>
CONTACT_INFORMATION;<android.provider.Contacts$Phones: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence,java.lang.CharSequence[])>
CONTACT_INFORMATION;<android.provider.Contacts$Settings: java.lang.String getSetting(android.content.ContentResolver,java.lang.String,java.lang.String)>
CONTACT_INFORMATION;<android.provider.ContactsContract$CommonDataKinds$Phone: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence)>
CONTACT_INFORMATION;<android.provider.ContactsContract$CommonDataKinds$Phone: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence,java.lang.CharSequence[])>
CONTACT_INFORMATION;<android.provider.ContactsContract$Contacts: android.net.Uri getLookupUri(android.content.ContentResolver,android.net.Uri)>
CONTACT_INFORMATION;<android.provider.ContactsContract$Contacts: android.net.Uri getLookupUri(long,java.lang.String)>
CONTACT_INFORMATION;<android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)>
CONTACT_INFORMATION;<android.provider.ContactsContract$Contacts: java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri,boolean)>
CONTACT_INFORMATION;<android.provider.ContactsContract$Data: android.net.Uri getContactLookupUri(android.content.ContentResolver,android.net.Uri)>
CONTACT_INFORMATION;<android.provider.ContactsContract$Groups$EntityIteratorImpl: android.content.Entity getEntityAndIncrementCursor(android.database.Cursor)>
CONTACT_INFORMATION;<android.provider.ContactsContract$ProfileSyncState: android.util.Pair getWithUri(android.content.ContentProviderClient,android.accounts.Account)>
CONTACT_INFORMATION;<android.provider.ContactsContract$ProfileSyncState: byte[] get(android.content.ContentProviderClient,android.accounts.Account)>
CONTACT_INFORMATION;<android.provider.ContactsContract$RawContacts$EntityIteratorImpl: android.content.Entity getEntityAndIncrementCursor(android.database.Cursor)>
CONTACT_INFORMATION;<android.provider.ContactsContract$RawContacts: android.net.Uri getContactLookupUri(android.content.ContentResolver,android.net.Uri)>
CONTACT_INFORMATION;<android.provider.ContactsContract$SyncState: android.util.Pair getWithUri(android.content.ContentProviderClient,android.accounts.Account)>
CONTACT_INFORMATION;<android.provider.ContactsContract$SyncState: byte[] get(android.content.ContentProviderClient,android.accounts.Account)>
ACCOUNT_INFORMATION;<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>
ACCOUNT_INFORMATION;<android.accounts.AccountManager: android.accounts.Account[] getAccounts()>
ACCOUNT_INFORMATION;<android.accounts.AccountManager: android.accounts.Account[] getAccountsByType(java.lang.String)>
ACCOUNT_INFORMATION;<android.accounts.IAccountManager$Stub$Proxy: android.accounts.Account[] getAccounts(java.lang.String)>
ACCOUNT_INFORMATION;<android.accounts.IAccountManager$Stub$Proxy: java.lang.String getPassword(android.accounts.Account)>
ACCOUNT_INFORMATION;<android.accounts.IAccountManager$Stub$Proxy: java.lang.String getUserData(android.accounts.Account,java.lang.String)>
BROWSER_INFORMATION;<android.provider.Browser: android.database.Cursor getAllVisitedUrls(android.content.ContentResolver)>
BROWSER_INFORMATION;<android.provider.Browser: java.lang.String[] getVisitedHistory(android.content.ContentResolver)>
BROWSER_INFORMATION;<android.webkit.BrowserFrame: android.webkit.CallbackProxy getCallbackProxy()>
BROWSER_INFORMATION;<android.webkit.BrowserFrame: java.lang.String getUserAgentString()>
NETWORK_INFORMATION;<android.net.ConnectivityManager: android.net.LinkProperties getActiveLinkProperties()>
NETWORK_INFORMATION;<android.net.ConnectivityManager: android.net.LinkProperties getLinkProperties(int)>
NETWORK_INFORMATION;<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
NETWORK_INFORMATION;<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfoForUid(int)>
NETWORK_INFORMATION;<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
NETWORK_INFORMATION;<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>
NETWORK_INFORMATION;<android.net.ConnectivityManager: android.net.NetworkQuotaInfo getActiveNetworkQuotaInfo()>
NETWORK_INFORMATION;<android.net.ConnectivityManager: android.net.ProxyProperties getGlobalProxy()>
NETWORK_INFORMATION;<android.net.ConnectivityManager: android.net.ProxyProperties getProxy()>
NETWORK_INFORMATION;<android.net.ConnectivityManager: java.lang.String getNetworkTypeName(int)>
NETWORK_INFORMATION;<android.net.LinkProperties: android.net.ProxyProperties getHttpProxy()>
NETWORK_INFORMATION;<android.net.LinkProperties: java.lang.String getInterfaceName()>
NETWORK_INFORMATION;<android.net.LinkProperties: java.util.Collection getAddresses()>
NETWORK_INFORMATION;<android.net.LinkProperties: java.util.Collection getDnses()>
NETWORK_INFORMATION;<android.net.LinkProperties: java.util.Collection getLinkAddresses()>
NETWORK_INFORMATION;<android.net.LinkProperties: java.util.Collection getRoutes()>
NETWORK_INFORMATION;<android.net.LocalServerSocket: android.net.LocalSocketAddress getLocalSocketAddress()>
NETWORK_INFORMATION;<android.net.LocalServerSocket: java.io.FileDescriptor getFileDescriptor()>
NETWORK_INFORMATION_NOSENS;<android.net.TrafficStats: int getThreadStatsTag()>
NETWORK_INFORMATION_NOSENS;<android.net.TrafficStats: long getMobileRxBytes()>
NETWORK_INFORMATION_NOSENS;<android.net.TrafficStats: long getMobileRxPackets()>
NETWORK_INFORMATION_NOSENS;<android.net.TrafficStats: long getMobileTxBytes()>
NETWORK_INFORMATION_NOSENS;<android.net.TrafficStats: long getMobileTxPackets()>
NETWORK_INFORMATION_NOSENS;<android.net.TrafficStats: long getRxBytes(java.lang.String)>
NETWORK_INFORMATION_NOSENS;<android.net.TrafficStats: long getRxPackets(java.lang.String)>
NETWORK_INFORMATION_NOSENS;<android.net.TrafficStats: long getTotalRxBytes()>
NETWORK_INFORMATION_NOSENS;<android.net.TrafficStats: long getTotalRxPackets()>
NETWORK_INFORMATION_NOSENS;<android.net.TrafficStats: long getTotalTxBytes()>
NETWORK_INFORMATION_NOSENS;<android.net.TrafficStats: long getTotalTxPackets()>
NETWORK_INFORMATION_NOSENS;<android.net.TrafficStats: long getTxBytes(java.lang.String)>
NETWORK_INFORMATION_NOSENS;<android.net.TrafficStats: long getTxPackets(java.lang.String)>
NETWORK_INFORMATION_NOSENS;<android.net.wifi.WifiInfo: boolean getHiddenSSID()>
NETWORK_INFORMATION;<android.net.wifi.WifiInfo: int getIpAddress()>
NETWORK_INFORMATION;<android.net.wifi.WifiInfo: int getLinkSpeed()>
NETWORK_INFORMATION;<android.net.wifi.WifiInfo: int getNetworkId()>
NETWORK_INFORMATION;<android.net.wifi.WifiInfo: int getRssi()>
NETWORK_INFORMATION;<android.net.wifi.WifiInfo: java.lang.String getBSSID()>
NETWORK_INFORMATION;<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>
NETWORK_INFORMATION;<android.net.wifi.WifiInfo: java.lang.String getSSID()>
NETWORK_INFORMATION;<android.net.wifi.WifiManager: android.net.DhcpInfo getDhcpInfo()>
NETWORK_INFORMATION;<android.net.wifi.WifiManager: android.net.wifi.WifiConfiguration getWifiApConfiguration()>
NETWORK_INFORMATION;<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>
NETWORK_INFORMATION;<android.net.wifi.WifiManager: int getFrequencyBand()>
NETWORK_INFORMATION;<android.net.wifi.WifiManager: int getWifiApState()>
NETWORK_INFORMATION;<android.net.wifi.WifiManager: int getWifiState()>
NETWORK_INFORMATION;<android.net.wifi.WifiManager: java.lang.String getConfigFile()>
NETWORK_INFORMATION;<android.net.wifi.WifiManager: java.util.List getConfiguredNetworks()>
NETWORK_INFORMATION;<android.net.wifi.WifiManager: java.util.List getScanResults()>
NETWORK_INFORMATION;<android.telephony.NeighboringCellInfo: int getCid()>
NETWORK_INFORMATION;<android.telephony.NeighboringCellInfo: int getLac()>
NETWORK_INFORMATION;<android.telephony.NeighboringCellInfo: int getNetworkType()>
NETWORK_INFORMATION;<android.telephony.NeighboringCellInfo: int getPsc()>
NETWORK_INFORMATION;<android.telephony.NeighboringCellInfo: int getRssi()>
NETWORK_INFORMATION;<android.telephony.NeighboringCellInfo: java.lang.String toString()>
NETWORK_INFORMATION;<android.telephony.ServiceState: java.lang.String getOperatorAlphaLong()>
NETWORK_INFORMATION;<android.telephony.ServiceState: java.lang.String getOperatorAlphaShort()>
NETWORK_INFORMATION;<android.telephony.ServiceState: java.lang.String getOperatorNumeric()>
NETWORK_INFORMATION;<android.telephony.ServiceState: java.lang.String toString()>
NETWORK_INFORMATION;<android.telephony.TelephonyManager: int getCallState()>
NETWORK_INFORMATION;<android.telephony.TelephonyManager: int getCdmaEriIconIndex()>
NETWORK_INFORMATION;<android.telephony.TelephonyManager: int getCdmaEriIconMode()>
NETWORK_INFORMATION;<android.telephony.TelephonyManager: int getCurrentPhoneType()>
NETWORK_INFORMATION;<android.telephony.TelephonyManager: int getDataActivity()>
NETWORK_INFORMATION;<android.telephony.TelephonyManager: int getDataState()>
NETWORK_INFORMATION;<android.telephony.TelephonyManager: int getLteOnCdmaMode()>
NETWORK_INFORMATION;<android.telephony.TelephonyManager: int getNetworkClass(int)>
NETWORK_INFORMATION;<android.telephony.TelephonyManager: int getNetworkType()>
NETWORK_INFORMATION;<android.telephony.TelephonyManager: int getPhoneType()>
NETWORK_INFORMATION;<android.telephony.TelephonyManager: int getSimState()>
NETWORK_INFORMATION;<android.telephony.TelephonyManager: int getVoiceMessageCount()>
NETWORK_INFORMATION;<android.telephony.TelephonyManager: java.lang.String getCdmaEriText()>
NETWORK_INFORMATION;<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso()>
NETWORK_INFORMATION;<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>
NETWORK_INFORMATION;<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>
NETWORK_INFORMATION;<android.telephony.TelephonyManager: java.lang.String getNetworkTypeName()>
NETWORK_INFORMATION;<android.telephony.TelephonyManager: java.lang.String getNetworkTypeName(int)>
NETWORK_INFORMATION;<android.telephony.TelephonyManager: java.lang.String getSimCountryIso()>
NETWORK_INFORMATION;<android.telephony.TelephonyManager: java.lang.String getSimOperator()>
NETWORK_INFORMATION;<android.telephony.TelephonyManager: java.lang.String getSimOperatorName()>
NETWORK_INFORMATION;<android.telephony.TelephonyManager: java.lang.String[] getIsimImpu()>
NETWORK_INFORMATION;<android.telephony.TelephonyManager: java.util.List getNeighboringCellInfo()>
PACKAGE;<android.content.pm.PackageManager: java.util.List getInstalledApplications(int)>
PACKAGE;<android.content.pm.PackageManager: java.util.List getInstalledPackages(int)>
PACKAGE;<android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>
PACKAGE;<android.content.pm.PackageManager: java.util.List queryContentProviders(java.lang.String,int,int)>
PACKAGE;<android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>
PACKAGE;<android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>
AUDIO;<android.media.AudioRecord: int read(byte[],int,int)>
AUDIO;<android.media.AudioRecord: int read(java.nio.ByteBuffer,int)>
AUDIO;<android.media.AudioRecord: int read(short[],int,int)>
SENSITIVE_UNCATEGORIZED;<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>
SENSITIVE_UNCATEGORIZED;<java.io.FileOutputStream: java.nio.channels.FileChannel  getChannel()>
SENSITIVE_UNCATEGORIZED;<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>
SENSITIVE_UNCATEGORIZED;<android.content.ContentResolver: java.io.InputStream openInputStream(Uri)>
SENSITIVE_UNCATEGORIZED;<android.accounts.Account: java.lang.String toString()>
SENSITIVE_UNCATEGORIZED;<android.hardware.SensorManager: float getAltitude(float,float)>
SENSITIVE_UNCATEGORIZED;<android.hardware.SensorManager: float getInclination(float[])>
SENSITIVE_UNCATEGORIZED;<android.hardware.SensorManager: float[] getOrientation(float[],float[])>
SENSITIVE_UNCATEGORIZED;<android.hardware.usb.UsbDevice: int getDeviceId()>
SENSITIVE_UNCATEGORIZED;<android.webkit.CookieManager: java.lang.String getCookie(android.net.WebAddress)>
SENSITIVE_UNCATEGORIZED;<android.webkit.CookieManager: java.lang.String getCookie(java.lang.String)>
SENSITIVE_UNCATEGORIZED;<android.webkit.CookieManager: java.lang.String getCookie(java.lang.String,boolean)>
FILE;<java.io.File: void <init>(java.net.URI)>
FILE;<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>
FILE;<android.os.FileUtils: java.lang.String readTextFile(java.io.File,int,java.lang.String)>
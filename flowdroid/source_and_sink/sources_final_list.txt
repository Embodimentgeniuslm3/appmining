<android.telephony.PhoneNumberUtils: byte[] numberToCalledPartyBCD(java.lang.String)>
<android.telephony.PhoneNumberUtils: java.lang.String getNumberFromIntent(android.content.Intent,android.content.Context)>
<android.telephony.PhoneNumberUtils: java.lang.String getStrippedReversed(java.lang.String)>
<android.telephony.PhoneNumberUtils: java.lang.String getUsernameFromUriNumber(java.lang.String)>
<android.telephony.TelephonyManager: java.lang.String getCompleteVoiceMailNumber()>
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>
<android.telephony.TelephonyManager: java.lang.String getDeviceSoftwareVersion()>
<android.telephony.TelephonyManager: java.lang.String getIsimDomain()>
<android.telephony.TelephonyManager: java.lang.String getIsimImpi()>
<android.telephony.TelephonyManager: java.lang.String getLine1AlphaTag()>
<android.telephony.TelephonyManager: java.lang.String getLine1Number()>
<android.telephony.TelephonyManager: java.lang.String getMsisdn()>
<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>
<android.telephony.TelephonyManager: java.lang.String getVoiceMailAlphaTag()>
<android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber()>
<android.provider.Telephony$Mms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[])>
<android.provider.Telephony$Mms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],java.lang.String,java.lang.String)>
<android.provider.Telephony$Sms$Intents: android.telephony.SmsMessage[] getMessagesFromIntent(android.content.Intent)>
<android.provider.Telephony$Sms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[])>
<android.provider.Telephony$Sms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],java.lang.String,java.lang.String)>
<android.telephony.SmsMessage: byte[] getPdu()>
<android.telephony.SmsMessage: byte[] getUserData()>
<android.telephony.SmsMessage: int getIndexOnIcc()>
<android.telephony.SmsMessage: int getIndexOnSim()>
<android.telephony.SmsMessage: int getProtocolIdentifier()>
<android.telephony.SmsMessage: int getStatus()>
<android.telephony.SmsMessage: int getStatusOnIcc()>
<android.telephony.SmsMessage: int getStatusOnSim()>
<android.telephony.SmsMessage: int getTPLayerLengthForPDU(java.lang.String)>
<android.telephony.SmsMessage: java.lang.String getDisplayMessageBody()>
<android.telephony.SmsMessage: java.lang.String getDisplayOriginatingAddress()>
<android.telephony.SmsMessage: java.lang.String getEmailBody()>
<android.telephony.SmsMessage: java.lang.String getEmailFrom()>
<android.telephony.SmsMessage: java.lang.String getMessageBody()>
<android.telephony.SmsMessage: java.lang.String getOriginatingAddress()>
<android.telephony.SmsMessage: java.lang.String getPseudoSubject()>
<android.telephony.SmsMessage: java.lang.String getServiceCenterAddress()>
<android.telephony.SmsMessage: long getTimestampMillis()>
<android.telephony.SmsManager: java.util.ArrayList getAllMessagesFromIcc()>
<android.location.Address: double getLatitude()>
<android.location.Address: double getLongitude()>
<android.location.Address: java.lang.String getAddressLine(int)>
<android.location.Address: java.lang.String getAdminArea()>
<android.location.Address: java.lang.String getCountryCode()>
<android.location.Address: java.lang.String getCountryName()>
<android.location.Address: java.lang.String getFeatureName()>
<android.location.Address: java.lang.String getLocality()>
<android.location.Address: java.lang.String getPhone()>
<android.location.Address: java.lang.String getPostalCode()>
<android.location.Address: java.lang.String getPremises()>
<android.location.Address: java.lang.String getSubAdminArea()>
<android.location.Address: java.lang.String getSubLocality()>
<android.location.Address: java.lang.String getSubThoroughfare()>
<android.location.Address: java.lang.String getThoroughfare()>
<android.location.Address: java.lang.String getUrl()>
<android.location.Address: java.util.Locale getLocale()>
<android.location.Location: android.os.Bundle getExtras()>
<android.location.Location: double getAltitude()>
<android.location.Location: double getLatitude()>
<android.location.Location: double getLongitude()>
<android.location.Location: float getBearing()>
<android.location.Location: float getSpeed()>
<android.location.Location: java.lang.String getProvider()>
<android.location.Location: long getTime()>
<android.location.LocationManager: android.location.GpsStatus getGpsStatus(android.location.GpsStatus)>
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>
<android.location.LocationManager: android.location.LocationProvider getProvider(java.lang.String)>
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>
<android.location.LocationManager: java.util.List getAllProviders()>
<android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()>
<android.telephony.cdma.CdmaCellLocation: int getBaseStationId()>
<android.telephony.cdma.CdmaCellLocation: int getBaseStationLatitude()>
<android.telephony.cdma.CdmaCellLocation: int getBaseStationLongitude()>
<android.telephony.cdma.CdmaCellLocation: int getNetworkId()>
<android.telephony.cdma.CdmaCellLocation: int getSystemId()>
<android.telephony.gsm.GsmCellLocation: int getCid()>
<android.telephony.gsm.GsmCellLocation: int getLac()>
<android.telephony.gsm.GsmCellLocation: int getPsc()>
<android.media.ExifInterface: boolean getLatLong(float[])>
<android.media.ExifInterface: byte[] getThumbnail()>
<android.app.ActivityManagerProxy: android.os.ParcelFileDescriptor openContentUri(android.net.Uri)>
<android.provider.Contacts$ContactMethods: java.lang.CharSequence getDisplayLabel(android.content.Context,int,int,java.lang.CharSequence)>
<android.provider.Contacts$Organizations: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence)>
<android.provider.Contacts$People: android.database.Cursor queryGroups(android.content.ContentResolver,long)>
<android.provider.Contacts$People: android.net.Uri addToGroup(android.content.ContentResolver,long,java.lang.String)>
<android.provider.Contacts$People: long tryGetMyContactsGroupId(android.content.ContentResolver)>
<android.provider.Contacts$Phones: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence)>
<android.provider.Contacts$Phones: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence,java.lang.CharSequence[])>
<android.provider.Contacts$Settings: java.lang.String getSetting(android.content.ContentResolver,java.lang.String,java.lang.String)>
<android.provider.ContactsContract$CommonDataKinds$Phone: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence)>
<android.provider.ContactsContract$CommonDataKinds$Phone: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence,java.lang.CharSequence[])>
<android.provider.ContactsContract$Contacts: android.net.Uri getLookupUri(android.content.ContentResolver,android.net.Uri)>
<android.provider.ContactsContract$Contacts: android.net.Uri getLookupUri(long,java.lang.String)>
<android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)>
<android.provider.ContactsContract$Contacts: java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri,boolean)>
<android.provider.ContactsContract$Data: android.net.Uri getContactLookupUri(android.content.ContentResolver,android.net.Uri)>
<android.provider.ContactsContract$Groups$EntityIteratorImpl: android.content.Entity getEntityAndIncrementCursor(android.database.Cursor)>
<android.provider.ContactsContract$ProfileSyncState: android.util.Pair getWithUri(android.content.ContentProviderClient,android.accounts.Account)>
<android.provider.ContactsContract$ProfileSyncState: byte[] get(android.content.ContentProviderClient,android.accounts.Account)>
<android.provider.ContactsContract$RawContacts$EntityIteratorImpl: android.content.Entity getEntityAndIncrementCursor(android.database.Cursor)>
<android.provider.ContactsContract$RawContacts: android.net.Uri getContactLookupUri(android.content.ContentResolver,android.net.Uri)>
<android.provider.ContactsContract$SyncState: android.util.Pair getWithUri(android.content.ContentProviderClient,android.accounts.Account)>
<android.provider.ContactsContract$SyncState: byte[] get(android.content.ContentProviderClient,android.accounts.Account)>
<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>
<android.accounts.AccountManager: android.accounts.Account[] getAccounts()>
<android.accounts.AccountManager: android.accounts.Account[] getAccountsByType(java.lang.String)>
<android.accounts.IAccountManager$Stub$Proxy: android.accounts.Account[] getAccounts(java.lang.String)>
<android.accounts.IAccountManager$Stub$Proxy: java.lang.String getPassword(android.accounts.Account)>
<android.accounts.IAccountManager$Stub$Proxy: java.lang.String getUserData(android.accounts.Account,java.lang.String)>
<android.provider.Browser: android.database.Cursor getAllVisitedUrls(android.content.ContentResolver)>
<android.provider.Browser: java.lang.String[] getVisitedHistory(android.content.ContentResolver)>
<android.webkit.BrowserFrame: android.webkit.CallbackProxy getCallbackProxy()>
<android.webkit.BrowserFrame: java.lang.String getUserAgentString()>
<android.net.ConnectivityManager: android.net.LinkProperties getActiveLinkProperties()>
<android.net.ConnectivityManager: android.net.LinkProperties getLinkProperties(int)>
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfoForUid(int)>
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>
<android.net.ConnectivityManager: android.net.NetworkQuotaInfo getActiveNetworkQuotaInfo()>
<android.net.ConnectivityManager: android.net.ProxyProperties getGlobalProxy()>
<android.net.ConnectivityManager: android.net.ProxyProperties getProxy()>
<android.net.ConnectivityManager: java.lang.String getNetworkTypeName(int)>
<android.net.LinkProperties: android.net.ProxyProperties getHttpProxy()>
<android.net.LinkProperties: java.lang.String getInterfaceName()>
<android.net.LinkProperties: java.util.Collection getAddresses()>
<android.net.LinkProperties: java.util.Collection getDnses()>
<android.net.LinkProperties: java.util.Collection getLinkAddresses()>
<android.net.LinkProperties: java.util.Collection getRoutes()>
<android.net.LocalServerSocket: android.net.LocalSocketAddress getLocalSocketAddress()>
<android.net.LocalServerSocket: java.io.FileDescriptor getFileDescriptor()>
<android.net.TrafficStats: int getThreadStatsTag()>
<android.net.TrafficStats: long getMobileRxBytes()>
<android.net.TrafficStats: long getMobileRxPackets()>
<android.net.TrafficStats: long getMobileTxBytes()>
<android.net.TrafficStats: long getMobileTxPackets()>
<android.net.TrafficStats: long getRxBytes(java.lang.String)>
<android.net.TrafficStats: long getRxPackets(java.lang.String)>
<android.net.TrafficStats: long getTotalRxBytes()>
<android.net.TrafficStats: long getTotalRxPackets()>
<android.net.TrafficStats: long getTotalTxBytes()>
<android.net.TrafficStats: long getTotalTxPackets()>
<android.net.TrafficStats: long getTxBytes(java.lang.String)>
<android.net.TrafficStats: long getTxPackets(java.lang.String)>
<android.net.wifi.WifiInfo: boolean getHiddenSSID()>
<android.net.wifi.WifiInfo: int getIpAddress()>
<android.net.wifi.WifiInfo: int getLinkSpeed()>
<android.net.wifi.WifiInfo: int getNetworkId()>
<android.net.wifi.WifiInfo: int getRssi()>
<android.net.wifi.WifiInfo: java.lang.String getBSSID()>
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>
<android.net.wifi.WifiInfo: java.lang.String getSSID()>
<android.net.wifi.WifiManager: android.net.DhcpInfo getDhcpInfo()>
<android.net.wifi.WifiManager: android.net.wifi.WifiConfiguration getWifiApConfiguration()>
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>
<android.net.wifi.WifiManager: int getFrequencyBand()>
<android.net.wifi.WifiManager: int getWifiApState()>
<android.net.wifi.WifiManager: int getWifiState()>
<android.net.wifi.WifiManager: java.lang.String getConfigFile()>
<android.net.wifi.WifiManager: java.util.List getConfiguredNetworks()>
<android.net.wifi.WifiManager: java.util.List getScanResults()>
<android.telephony.NeighboringCellInfo: int getCid()>
<android.telephony.NeighboringCellInfo: int getLac()>
<android.telephony.NeighboringCellInfo: int getNetworkType()>
<android.telephony.NeighboringCellInfo: int getPsc()>
<android.telephony.NeighboringCellInfo: int getRssi()>
<android.telephony.NeighboringCellInfo: java.lang.String toString()>
<android.telephony.ServiceState: java.lang.String getOperatorAlphaLong()>
<android.telephony.ServiceState: java.lang.String getOperatorAlphaShort()>
<android.telephony.ServiceState: java.lang.String getOperatorNumeric()>
<android.telephony.ServiceState: java.lang.String toString()>
<android.telephony.TelephonyManager: int getCallState()>
<android.telephony.TelephonyManager: int getCdmaEriIconIndex()>
<android.telephony.TelephonyManager: int getCdmaEriIconMode()>
<android.telephony.TelephonyManager: int getCurrentPhoneType()>
<android.telephony.TelephonyManager: int getDataActivity()>
<android.telephony.TelephonyManager: int getDataState()>
<android.telephony.TelephonyManager: int getLteOnCdmaMode()>
<android.telephony.TelephonyManager: int getNetworkClass(int)>
<android.telephony.TelephonyManager: int getNetworkType()>
<android.telephony.TelephonyManager: int getPhoneType()>
<android.telephony.TelephonyManager: int getSimState()>
<android.telephony.TelephonyManager: int getVoiceMessageCount()>
<android.telephony.TelephonyManager: java.lang.String getCdmaEriText()>
<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso()>
<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>
<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>
<android.telephony.TelephonyManager: java.lang.String getNetworkTypeName()>
<android.telephony.TelephonyManager: java.lang.String getNetworkTypeName(int)>
<android.telephony.TelephonyManager: java.lang.String getSimCountryIso()>
<android.telephony.TelephonyManager: java.lang.String getSimOperator()>
<android.telephony.TelephonyManager: java.lang.String getSimOperatorName()>
<android.telephony.TelephonyManager: java.lang.String[] getIsimImpu()>
<android.telephony.TelephonyManager: java.util.List getNeighboringCellInfo()>
<android.content.pm.PackageManager: java.util.List getInstalledApplications(int)>
<android.content.pm.PackageManager: java.util.List getInstalledPackages(int)>
<android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>
<android.content.pm.PackageManager: java.util.List queryContentProviders(java.lang.String,int,int)>
<android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>
<android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>
<android.media.AudioRecord: int read(byte[],int,int)>
<android.media.AudioRecord: int read(java.nio.ByteBuffer,int)>
<android.media.AudioRecord: int read(short[],int,int)>
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>
<java.io.FileOutputStream: java.nio.channels.FileChannel  getChannel()>
<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>
<android.content.ContentResolver: java.io.InputStream openInputStream(Uri)>
<android.accounts.Account: java.lang.String toString()>
<android.hardware.SensorManager: float getAltitude(float,float)>
<android.hardware.SensorManager: float getInclination(float[])>
<android.hardware.SensorManager: float[] getOrientation(float[],float[])>
<android.hardware.usb.UsbDevice: int getDeviceId()>
<android.webkit.CookieManager: java.lang.String getCookie(android.net.WebAddress)>
<android.webkit.CookieManager: java.lang.String getCookie(java.lang.String)>
<android.webkit.CookieManager: java.lang.String getCookie(java.lang.String,boolean)>
<java.io.File: void <init>(java.net.URI)>
<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>
<android.os.FileUtils: java.lang.String readTextFile(java.io.File,int,java.lang.String)>

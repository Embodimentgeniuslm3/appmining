SMS_MMS,<android.telephony.SmsManager: void sendDataMessage(java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent)>
SMS_MMS,<android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
LOG,<android.util.Log: int d(java.lang.String,java.lang.String)>
LOG,<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>
LOG,<android.util.Log: int e(java.lang.String,java.lang.String)>
LOG,<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
LOG,<android.util.Log: int i(java.lang.String,java.lang.String)>
LOG,<android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>
LOG,<android.util.Log: int println(int,java.lang.String,java.lang.String)>
LOG,<android.util.Log: int v(java.lang.String,java.lang.String)>
LOG,<android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>
LOG,<android.util.Log: int w(java.lang.String,java.lang.String)>
LOG,<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
LOG,<android.util.Log: int w(java.lang.String,java.lang.Throwable)>
LOG,<android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>
LOG,<android.util.Slog: int d(java.lang.String,java.lang.String)>
LOG,<android.util.Slog: int d(java.lang.String,java.lang.String,java.lang.Throwable)>
LOG,<android.util.Slog: int e(java.lang.String,java.lang.String)>
LOG,<android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
LOG,<android.util.Slog: int i(java.lang.String,java.lang.String)>
LOG,<android.util.Slog: int i(java.lang.String,java.lang.String,java.lang.Throwable)>
LOG,<android.util.Slog: int println(int,java.lang.String,java.lang.String)>
LOG,<android.util.Slog: int v(java.lang.String,java.lang.String)>
LOG,<android.util.Slog: int v(java.lang.String,java.lang.String,java.lang.Throwable)>
LOG,<android.util.Slog: int w(java.lang.String,java.lang.String)>
LOG,<android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
LOG,<android.util.Slog: int w(java.lang.String,java.lang.Throwable)>
ACCOUNT_SETTINGS,<android.accounts.AccountManager: boolean addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle)>
ACCOUNT_SETTINGS,<android.accounts.IAccountManager$Stub$Proxy: boolean addAccount(android.accounts.Account,java.lang.String,android.os.Bundle)>
ACCOUNT_SETTINGS,<android.accounts.IAccountManager$Stub$Proxy: void addAcount(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle)>
FILE,<android.content.ContentProviderProxy: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>
FILE,<android.os.FileUtils: boolean copyToFile(java.io.InputStream,java.io.File)>
FILE,<android.os.FileUtils: java.lang.String readTextFile(java.io.File,int,java.lang.String)>
FILE,<android.os.FileUtils: void stringToFile(java.lang.String,java.lang.String)>
FILE,<java.io.FileOutputStream: void write(byte[],int,int)>
FILE,<java.io.FileOutputStream: void write(int)>
FILE,<java.io.RandomAccessFile: void write(byte[],int,int)>
FILE,<java.lang.ProcessManager: java.lang.Process exec(java.lang.String[],java.lang.String[],java.io.File,boolean)>
NETWORK,<android.net.ConnectivityManager: void setGlobalProxy(android.net.ProxyProperties)>
NETWORK,<android.net.http.Headers: void setAcceptRanges(java.lang.String)>
NETWORK,<android.net.http.Headers: void setCacheControl(java.lang.String)>
NETWORK,<android.net.http.Headers: void setContentDisposition(java.lang.String)>
NETWORK,<android.net.http.Headers: void setContentEncoding(java.lang.String)>
NETWORK,<android.net.http.Headers: void setContentType(java.lang.String)>
NETWORK,<android.net.http.Headers: void setEtag(java.lang.String)>
NETWORK,<android.net.http.Headers: void setExpires(java.lang.String)>
NETWORK,<android.net.http.Headers: void setLastModified(java.lang.String)>
NETWORK,<android.net.http.Headers: void setLocation(java.lang.String)>
NETWORK,<android.net.http.Headers: void setProxyAuthenticate(java.lang.String)>
NETWORK,<android.net.http.Headers: void setWwwAuthenticate(java.lang.String)>
NETWORK,<android.net.http.Headers: void setXPermittedCrossDomainPolicies(java.lang.String)>
NETWORK,<android.net.LocalSocketImpl$SocketOutputStream: void write(byte[])>
NETWORK,<android.net.http.HttpsConnection: android.net.http.AndroidHttpClientConnection openConnection(android.net.http.Request)>
NETWORK,<android.net.http.RequestQueue: void queueRequest(android.net.http.Request,boolean)>
NETWORK,<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>
NETWORK,<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>
NETWORK,<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>
NETWORK,<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>
NETWORK,<java.net.URL: java.io.InputStream openStream()>
NETWORK,<java.net.URL: java.net.URLConnection openConnection()>
FILE,<android.app.ContextImpl: FileOutputStream .openFileOutput(java.lang.String,int)>
FILE,<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>
FILE,<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>
NETWORK,<android.webkit.CookieManager: void setCookie(java.lang.String,java.lang.String)>
FILE,<java.io.FilterOutputStream: void write(byte[],int,int)>
FILE,<java.io.FilterOutputStream: void write(int)>